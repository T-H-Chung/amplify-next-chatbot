<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d6" for="edge" attr.name="source_id" attr.type="string" />
  <key id="d5" for="edge" attr.name="description" attr.type="string" />
  <key id="d4" for="edge" attr.name="weight" attr.type="double" />
  <key id="d3" for="node" attr.name="entity_type" attr.type="string" />
  <key id="d2" for="node" attr.name="source_id" attr.type="string" />
  <key id="d1" for="node" attr.name="description" attr.type="string" />
  <key id="d0" for="node" attr.name="type" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="NEXT.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, providing features like hot module reloading and optimized production builds.
Next.js is a popular React framework used for building web applications, providing features like server-side rendering and static site generation.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework for building server-side rendered applications and static websites, allowing developers to create optimized production builds and manage application routing.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and developer experience.
Next.js is a React framework for building server-rendered applications and static websites, optimized for performance and developer experience.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, supporting modern JavaScript features and TypeScript out of the box.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a popular React framework that enables developers to build server-rendered applications and static websites with ease, featuring a large community and extensive documentation.
Next.js is a React framework that enables developers to build server-side rendered and statically generated applications with ease, utilizing features like routing, data fetching, and caching.
Next.js is a React framework that enables developers to build server-side rendered and statically generated applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with features like Fast Refresh for live reloading and error resilience.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, focusing on performance and accessibility.
Next.js is a popular React framework used for building server-rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework for building server-side rendered applications and static websites.
Next.js is a popular React framework for building server-side rendered applications and static websites, known for its performance and developer experience.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a React framework that allows for server-side rendering and static site generation, and it includes configuration options in next.config.js.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a popular React framework used for building web applications, which includes features like redirects and routing configurations.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and static web applications with ease, providing features like routing and API handling.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.

Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework for building server-side rendered applications and static websites, enabling developers to create optimized web applications with features like automatic code splitting and server-side rendering.
Next.js is a React framework that enables developers to build server-side rendered and static web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, enabling seamless navigation and state management across pages.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework for building server-side rendered applications and static websites, developed by Vercel.
Next.js is a React framework for building server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, developed by Vercel.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework used for building web applications, known for its image optimization capabilities and server-side rendering features.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and developer experience enhancements.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and static web applications with ease.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework used for building server-side rendered applications and static websites, now upgraded to version 11 with various new features and improvements.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a popular React framework used for building server-side rendered applications and static websites, providing features like automatic code splitting, optimized performance, and easy deployment.
Next.js is a popular React framework for building web applications, known for its server-side rendering and static site generation capabilities.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, improving performance and user experience.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, enhancing performance and user experience.
Next.js is a React framework for building server-side rendered applications and static websites, enabling developers to create optimized web applications with ease.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.

Next.js is a React framework that enables developers to build static websites and server-rendered applications with features like static exports and dynamic routing.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and flexibility in deploying applications across multiple zones.
Next.js is a React framework for building server-side rendered applications and static websites, optimized for performance and user experience.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its ease of use and performance.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework for building server-side rendered applications and static websites, providing features like error handling and routing.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, including built-in CSS support using PostCSS.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for React applications, including support for MDX content.
Next.js is a React framework that enables developers to build server-rendered applications and static websites with ease, providing features like AMP support and MDX integration.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that provides a TypeScript-first development experience for building applications, with built-in support for TypeScript and automatic configuration of necessary settings.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications with ease, focusing on performance and user experience.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications, and it supports OpenTelemetry instrumentation.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and static web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, providing built-in support for Sass and image optimization.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with optimized image handling and performance features.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, providing built-in optimizations for performance and user experience.
Next.js is a React framework that enables developers to build server-rendered applications with ease, supporting features like CSS-in-JS and CSS Modules.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework for building server-rendered applications and static websites using Node.js and React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, enhancing performance and SEO.
Next.js is a React framework that enables developers to build static and server-rendered applications with ease, focusing on performance and user experience.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, including locale handling features.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with internationalization support.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.

Next.js is a React framework for building server-side rendered applications and APIs, providing a set of tools for developers to create web applications efficiently.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework for building server-side rendered applications and static websites, enabling developers to create dynamic web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build flexible, full-stack web applications with features like routing, rendering, and data fetching.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a popular React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework that enables developers to build server-side rendered and static web applications with ease, providing features like API routes and a powerful CLI.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework for building server-rendered applications and static websites, known for its performance and flexibility.
Next.js is a popular React framework used for building web applications, known for its routing and server-side rendering capabilities.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a popular React framework used for building server-side rendered applications and static websites, providing features like routing, API handling, and configuration options for developers.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a framework that allows developers to build server-rendered React applications with features like headers and caching.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and flexibility in web development.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and flexibility.
Next.js is a popular React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a popular React framework for building server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its ease of use and performance.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered React applications with ease, providing features like routing and API handling.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
A popular React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework for building server-rendered applications and static websites using JavaScript and TypeScript.
Next.js is a React framework for building web applications, providing features like server-side rendering and static site generation.
Next.js is a React framework for building web applications, known for its server-side rendering and static site generation capabilities.
Next.js is a React framework for building web applications, known for its performance and ease of use.
Next.js is a React framework for building web applications, known for its performance and ease of use.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and static web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building user interfaces, particularly for server-rendered applications and static websites.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static website generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for React applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, improving performance and user experience.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, enhancing performance and SEO capabilities.
Next.js is a React framework that enables server-side rendering and static site generation for React applications, enhancing performance and SEO.
Next.js is a React framework that enables developers to build single-page applications with features like automatic code splitting, server-side rendering, and optimized image handling.
Next.js is a React framework that enables developers to build server-rendered applications and static websites, and it is the main subject of the migration tutorial.
Next.js is a React framework that enables server-side rendering and static site generation for React applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a popular React framework used for building server-side rendered applications and static websites.
Next.js is a popular React framework used for building web applications, known for its server-side rendering and static site generation capabilities.
Next.js is a React framework that enables developers to build static and server-rendered applications with features like static exports and multi-zone support.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications.
Next.js is a React framework for building server-rendered applications and static websites, enabling developers to create optimized web applications with features like server components and static rendering.

Next.js is a React framework that enables developers to build server-rendered applications and static websites using React. It supports features like static site generation, server-side rendering, and API routes.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework for building server-side rendered applications and static websites, providing features like routing, API routes, and debugging support.
Next.js is a React framework for building server-side rendered applications and static websites, providing various features for developers to enhance their applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a popular React framework used for building web applications, supporting both static and server-rendered content.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, providing an integrated ESLint experience out of the box.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with built-in support for environment variables.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, providing features like API routes and environment variable management.
Next.js is a React framework that enables developers to build server-side rendered and statically generated applications with ease, providing built-in support for TypeScript and various features for optimizing performance.
Next.js is a React framework that enables developers to build server-rendered applications with ease, providing features like routing, data fetching, and type safety.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated applications with ease.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, with built-in support for performance metrics.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with built-in support for performance metrics and analytics.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications with ease, focusing on performance and user experience.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance optimization features.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance optimization features.
Next.js is a React framework that enables developers to build server-rendered applications and static websites, providing features like server-side rendering and static site generation.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build optimized web applications with features like server-side rendering and static site generation.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with built-in optimizations for performance and user experience.
Next.js is a React framework for building server-side rendered applications and static websites, known for its performance and ease of use.
Next.js is a React framework that enables developers to build server-rendered applications with features like caching, styling, and performance optimization.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, optimizing performance through caching mechanisms.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-rendered applications with ease, providing features like routing, data fetching, and API integration.
Next.js is a React framework that enables server-side rendering and static site generation for React applications.
Next.js is a React framework that enables developers to build server-rendered applications and optimize static parts of their components.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered and statically generated web applications with ease.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build hybrid web applications with both server-side and client-side rendering capabilities.
Next.js is a React framework that enables developers to build server-rendered applications with features like server actions and data fetching.
Next.js is a React framework that enables server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, providing features like data fetching and caching.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework for building server-rendered applications and static websites, enabling data fetching and routing capabilities.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, providing features like middleware and route handling.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building web applications, providing features like routing, server-side rendering, and API routes.

Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-side rendered applications and static websites, known for its dynamic routing capabilities.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease, providing features like routing, colocation, and project organization strategies.
Next.js is a React framework for building server-side rendered applications and static websites, providing features like routing and API handling.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, enhancing performance and user experience.
Next.js is a React framework for building server-side rendered applications and static websites, known for its routing and error handling capabilities.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework that enables developers to build server-rendered applications with features like routing, code splitting, and prefetching.
Next.js is a React framework that enables developers to build server-rendered applications and static websites using React.
Next.js is a React framework for building user interfaces, particularly for web applications, utilizing a file-system based router and server-side rendering capabilities.
Next.js is a React framework that enables developers to build server-rendered applications with routing capabilities and special file conventions for UI development.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications with ease.
Next.js is a React framework for building full-stack web applications, providing features like routing, rendering, and data fetching.
Next.js is a framework for building interactive, dynamic, and fast React applications, offering features like routing, rendering, data fetching, and optimizations.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static website generation for web applications.
Next.js is a popular React framework used for building server-rendered applications and static websites.
Next.js is a modern JavaScript framework for building server-rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications, enhancing performance and SEO.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and static web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.

Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.

Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites, often used in conjunction with Amplify Data for backend integration.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites, enhancing the performance and user experience of web applications.
Next.js is a React framework that enables server-side rendering and generating static websites for React-based web applications.

Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables developers to build server-side rendered applications and static websites.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static website generation for React-based web applications.
Next.js is a React framework that enables server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for React applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables server-side rendering and static site generation for React applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-rendered applications and static websites.
Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,00f6f02bfd7f7bcf6fa53ab912dcb6dc,01379aeac4a4cce03362928b2dfe7c39,016bf1f47e649cd8112b488d5c847dcc,016d827d48ddcc5775cc4ae54a479429,02d5f971b1d69adbfdf2a0cfc42447f7,03726602b8c47d68bb675c6e306f6484,03986c3b8388e42d1b82f4db5232270e,03988816c99b05a5845a71e1da91994c,03acdd28901db5ff52a4bdbf34d9d0d5,03d87ab96921db9c36cf9cc05fe0b7a7,03f7555dc3d6cacee4fb80d112de29dd,0425ac334d3d5bd221bd8a5bcee35ed9,04edddc24da6789de5ee2349698f4056,077fbb77da60b5f069a4cf5fd5e33e9b,07e97df1a8257492f53460b3979b0e3c,08316a3a770ad75c98250e17ce7ddf51,08a1975a88b44b2b7444141367047ba8,0a447cfbac33fa416ddcd2ffd57d0335,0a535ba637862aaba58115b1f3e1a96b,0aae21b170363fb93fdbbb65d9c7576b,0b10d085541dc5564e998254b8588822,0bfaadafcf31828f19e4b2657565944a,0cc40988714324257eaa1d03994f3e39,0ccacdcadf2d9be6252ed6ee84696d1b,0cdf0d09b72c24c28afa3a7823b5507d,0d8e33ad02583991ccfe5560b2787274,0dc4f8c1cc6105e325f2d84d2083a4c0,0dfb84288d523f687fe010cdbeb5603e,0e3c564b3dd53e829befef4d6241c23e,0ec7a9a4173bab4434075d5564d2a4c2,0ef0d7dfd239c67d2b08d6be68926b78,0fec562f1c16117484e5946f3f2df826,102262d1b2a41d767a543121d96412c6,10386033375aedc4b4d87fd57d246c1b,11e614f4c015c7f8295c0c49ac211a89,13036fcc04ff7a3a3d82cc055061ee52,1487c7dd4403a73c173d49bf2f73e2d8,15e19e9603c0108a515ce63026694481,16332d9a8715d2cac034c2aa3c4f12f6,170893bac86ced48a278abde4d144710,173e80ccbe8ecd833c055f4cd3e75ee6,179a1a7e8e9c1777096b12c6bb6ff93c,18f541d57ea407041cdaa1be5bf593d9,1a9f90261d97f4e9455bb0fa22f4ee9c,1b140f417545903391f0e28ef4baf7c2,1b3c3a93e182b501d03ffb0b41273e30,1d629a9403a987213102a9bfd769f290,1d855e055624fb34345331017d371137,1d939f19e04dfaa8df3664a2cd4db1f1,1e3e9559f0cf793e96c48297529ec161,1e914b4d28a0e4ccc7e1e87c2504a6f5,1ef9b6a9263edfd718636bcbc29f4a72,20652ea1750ad5513b326c308672d886,20660998cc2c85257c6b7502427f85d3,2089dc10de2cb83a2c70a5f87b8d2dc2,21183997adb6288a64caa86bfd107612,21bbed2998c7a9b202d76d56c78cb512,223233d7a3658c1a7836573abacf9175,2238ba4c005a726e011e67cd17d3a576,2299dbfce715caaaef2102de232e50aa,234c5cf6d90b5c8b7d3583a3300a4752,243626df7b8124420b4844165c42f9b9,249a768c4964d383be47267af810ece7,24cc1d3b813f206f9d57e59cc3b4d1ee,24e08d5dea64dab91a3ce772d91b0e8f,29423d52dd581b926bd5f6be5dac2f66,2c3e23b7d2b5c3c6c258760c75956b4c,2d13fb0b0bfe03d14a0f41e4d7920e31,2d1db23990399e0c3a7fe2300114d685,2d826219271d5b48e83835028c04e88b,2e0b7ff508cb8313a540ecc1a356120e,2e44942744c40cf6e169212e822438d5,2e4837fd908fed547d3170725336a52e,2e537c711e153c043f8d08b926e4ba86,2f2dde2368e46aa812e2a39e32b3505d,2f935bf8dd94b80e38c90109f4e620a3,2faaabdabafa263524b931c68674e9cd,322dba5659c945a3d1a5389a738aee99,32ab448d1972668cba4e2c467ff116a8,33239b71158a6566c2b82b6a30b68e82,33e451e77f5bd710301d6408bbd2825d,3486aab51f1c22b4f23003db40986564,3615d6509a88bbb31eac0bc56f78c2f6,3678e68072101ac922b838851eaa8465,3728034c20ff061a6f5bcaadac49b04e,381ec0f23fc914011f1ec53f51485442,3871391b5e9d42efc3d1226580d587a0,391895fc365f2f2512a45ea503fbfa86,3a82472230692a8c3ac8444f7738b625,3a87ecd12d97d86a3bbb406e93d2c8d2,3a9b26a380534d4aa1f17290c51aea24,3b86536c72cd33dea29dc82250012d80,3bade0d5baadc8c11b8cf85372738fdd,3c09a802c38a10e785a119f2ba114c73,3cf51b17316c47851ab9a8bb2fddfbc3,3d5a944087b6833d97ac18648a394224,3da6822267f4aca1b29b1233660a9282,3fb45c793f55da9bb4eda5392e25aafe,407c79602db9cac967822f4d34fa94d2,40b01d3865b7f98f3123b0d905e2e01d,4132dfa96e84fb89d3908b0e9dea6a62,4248e6bed3ca383db55da9c5251a47ee,439d5be2d39a5b9cedb135d149974680,4443464e7a2cb4bcbbf667881fecb236,444fc385d67c401653f1a2c133ba95e6,44eb58960277cd9fc903de7625623163,453d5bb282fe98f4e12856552a025f0f,455e168c432979d018ea3d145e2547b5,459eadcad7d141c2129458137d7d41d9,45d1b0474e5a4ef2a69bdf70528aedb4,45fc1e950172cd0fb4a7f0162afae421,4647f3f9cf6eaae5dadd71a1dc2e58ae,46d1b39ace8164bdecd2be4eab0a1fc3,478ca906eeeb1b1356949c55e289c4d3,4a5b866ffddc7fba2346c94f6c037019,4a99c636fb9adfcf5771118fe58ce017,4baf287e38f64339e2ce2ed9f18befe3,4c49dc5beda0203ac9ac135243ec127e,4ccaaec02cfc4169e423aaf4ce28263f,4ce3b8264c29bdceda24edfe6f9bda41,4d99e596a43a5b336e12425953d3a120,4da3554b7826cf4b6dd608127da53568,4dfb13dff74e4dc45c19d4d71fe1a443,4e07cca41acd33806d13242f5e21f621,4f1b35d4044fdc993b02fcfb2db35bd6,514671e4a7b4b0d7573852d3d380eefd,5214aa930e0680c0e176373359966818,52bf7bb5a492d2cb5b2f5f06d6507a81,52f67911efe49d48e703ba654f23728e,53559278a11544ca19ad7864a7c3319c,5372e12cf32e25741c25f62d7e23221e,53995557ff9014f83cedfd38268f5f7a,564b1122ed77a335ef83dd856be6b406,56ab21d16e9b86cd9d551ec941e65b04,5791705a1f965d3a768f111e7fdcade1,57aa8258500bb7c522d2a394931d9248,58b4ec0bb9e980cc17fe0b3178671c95,59f479f2a59b233e2c0b4bfcfce952a8,5afd0d2ef8220eea43b9a4e3736e7bee,5c179d6063f8fca2e1ae95779d7f3ffc,5dced807ee929bcba98d82ba0000fe33,5e1697c043b2eb0208b7ae196db74f56,5e8e906cb9a58f6e52be1a99d31da8cf,5eccc9b6c90fe181c8a1389dcb99435b,5ef33e2acd1009a637bf4b8ab41d49a1,5f12ce576f28b7467649832a292ad632,60041d4c2667ea62ef90a73e1138bae6,6160e6925dba648999d09c55006ab046,62cbc95f20c7b902a0c2e3e9af7dd83c,63bae3a149e50b7452962f7bdd8724ea,6450bdd7941ff60e85c4d4acc9a73b25,64c02a535c1519ef24ded4a2a368f2be,65ef73f546115ac23146d87cce61b9c8,66669d057195f54843266efcffb93a3b,66c478df0b5dc48b45a6c5e00867576d,66fea93bb642287d13f3a25b8b3e0083,69ac19d7db15ae11c7884ce391807330,69b8cbe6ad275c39fc40832d62145181,6a27b514d5ea49bd1a6dd159d44aaf87,6b625fce8c9b4b0f729aa3cdc85d284d,6bb5264a8b72d26916099f27337032fe,6c6960c6073b7fc858222c11aed49665,6c6ccd5699a21bd365fb1e2dc13bd5da,6d2eda5548d1401141ba1fcc7bcbbdba,6e870d62774508940749246fdee4d7b7,6ebc8c74b9b797357659151a46693a88,6f23aef3387d9221b1a88bdfa6874ba3,6fa25577febe4c193fec7e398e287d7c,7040175c91fe86a908046a9b485b0410,717947e9b123f15f49c748bb45aec68d,729c604ddd30e8eb3491209028c25dde,72e1433a8550144aaf1d1fd8f3cb3774,735b59f53ffba96602dace4169c285ed,743d216d66ffda2efe23e0e9a8d0f0cf,7481573bcc2c3c6d105c0bf358bec2e6,77371d3904d4e5b3fca92caaa7329a5c,77bf22c1fcd1e61ff866f696397b3a69,7849b1ca8bbfc8c3240def9d244f008d,78b4dd6ed52242dca68aec48915841fe,7925e036e2025ccae5e0f72fe8f556ac,7a1bd3f71b0a9aadbba7495339a8b723,7ad571c896064ee6e36a4acd93898e88,7b0e16fa06f15b959c34b3d3401845e8,7b388f79ffb6d5d09b2f36b2618f109d,7b6d1725bb07f6076bb8010d535ae342,7b971bc32d696dda8aea178d02a73fea,7bc622b9dda4deed82c3382772daca19,7bf88bf4f2097fabdb3b57f7074def08,7cd464b0f42ff05e87fa7e149d7e2997,7cf992845bf79c5ec4ae2614617a79f4,7de6e744f7ef4ab90e5a1db6bfad49c3,7e52aca588d432140f210661ae169677,7e9fce61758916e4d2b7de2f2f4d1704,7ebeb57bb18774254a901eafc1cb096f,80a786416360b0f3873c10b0b635c67b,81518acc3db43af0161d599284ff910e,815b3c1f78ab2336e7e5bdae07b49d2b,816401f1962be5373b03365c403e3a92,82c6ef4d52bb277665ade9f274822be3,839413fc3a58298ee6809914ff2ed3f7,83cffab512363b08e89e0b35424b489c,84837300711040f4e7b736cdd8fce7d2,84b5c29553feb2883a2e93ffbac5b791,86965ee0055fe16d855a4f0e993b9d85,8735729cb47a3e421748c05ffb31502f,876a936d41a4189fd50277eeb02bfdf7,89def9941cbf0a381e1e4a28a703e201,89e3b86d249ae10742dcef7c4e2d582d,8a317609f77f5ace7ebd5473071b9693,8b55191578f60b2d2fac3ae2f4d05b2e,8c8075430684b38bdd1c6ce9fc9f7205,91a237014868fc106c5edbdc4ad2b520,92bcd3df485df362e04da4f60878ff3b,936f58e9a3d0c41d6fd88ca7b6e0a119,93cb0a5e111f219ec555f33bcd068d05,9435f5063dc16afb92c8c68706b77d2b,95c2ea5a0f820f012ba0ea521843d34d,960cd708b2617651d0d7b1a22712d9fa,96fde1ac5a19b66e5f6c4fce318a1b02,9726f4ae30b11539c429ff41c8326d46,981566c16bf11e1256e74208c2869349,98961c89bf003488bbe6223bc946b205,98b8f4a199a3050f92608604cd0974b2,99aea11e8e00a31189977a03ce528a10,99d758fe4e77c64e3d6461268ba8b6d4,9b92d19ee6176284aa500c2d4bcd28a4,9bc82a2671446cca168796fea771ecad,9bd0a80f4c931386ae8f2fb0226f92cd,9c75ee4a07cd172f143b2b09451d333c,9da317a323ff76913285228d8243413e,9f6dc0f379759d79c664c445c0051202,a046fdf9fbebaa56c0d37da25e453974,a05256700be9b39d3c9098982e0fa5d4,a054cee32c59ce9d304bb1f8716fbb7c,a09305795b4f611b12ba570f6fc845a9,a0a19960cdaef7a85c598591f06454da,a0ed25040eb1637a5c82493764f822ac,a19a92a20fca1ccc164ea11570a4b26a,a332c6db30f7b29cd4dcb1117bd6eab3,a39499341fdd66534be31b2131784b51,a3d633e1c801de300a4724738b7290c3,a3dae9be9408e57ff26350383026033f,a45591637d0b47a7bce4ac92c8eb5ea6,a4afb71ec5010173b514ca4604c40002,a50f51132c97b3887f2b21ed846fa020,a525cbfc03ba1b986f30ce2280067dda,a5566406ae5db585eb3829f4a25e7025,a5e50f469dd57f00c706f3dcd5894c37,a651cbb3e4a31fb9c592893b86f2d855,a67099d1f0ea66a70c07e9595443231a,a8b53f4a9be046988ebd8eae20825df3,a8c0873902ebe92185a879561056ce61,a9a858ea7abac3fe79fa759ea8171597,a9c779cfa21a679f557dbbc90283565f,aaea03d7a1385785fae028f24c52f8a5,ab49838f472483f11a1afbcaff84ad1e,ab869c819df53e1e9e3adebf6a4234a2,abfaa2f8370cae9120fe1eaf629cda39,ace34d6baa071fb6d6db3dcaaf3da1dc,ad18f1240db75ed731ff9f7ec075320e,adb5bec4b54e83924618cafc99d40e24,aed1999377a9138038f56696b28a18c4,af00e01481cac23e3b67c635215254ab,afa4163fc1d3fab31d1294afed0bcc86,affc1268c54094ecde29441589759673,b02497cb2bc6f667d39aa316235e09d5,b0a7c0b65015814bd16809b55a84c5cc,b0ea8bc9e77f37505a6e3b25a48b4dbb,b134d3f66855ad9639688a0ef9bc8d25,b1787ce5e713d63d1f4f1203762380a3,b3759902cd429c22cd4896b10b00848d,b394b4eeaf1a9df4b16937daeed33e3a,b3ba0d2a5daf3ce8f284099dd931ef14,b453ff9e225c4008acb26b7c1bf321dd,b45c653df41952b7c0b22c7926afe5f7,b48fe8c8f5e2835de49d9a46578cbf9d,b61989d8657d5b33a55c584f46e7d436,b64f76a17fdc1ede6338de69e7d7bce4,b6b4173819c0a759fcd3146179f8f534,b6c19fc60714c90b16c67bd7df9573f9,b6f71d64cf5764914e58142430b460e6,ba53cb824bd4e5b80d861ee299c10f92,bab5eb78712e4c073d8280b72cd3de79,bb9110629910b21a122e4dbd23ba9236,bc34912ac16bc1504d04e9019f0c8cb9,bc4893f2f489d14f0975fa64ffca1df8,bcb8bed3236fce81cd5b966a435370ba,bcd2d66297bc7f44d44a249af2225403,bd13629205b4661186b2631023139a53,bd1557f5f20d5d232df2cbf55be7cb8d,bf545f52d7ba0c458692304a2c0ca7e4,bf926fe785180e6ba0afb391db266523,c05ef5dba44db89bf8b7415f5e2ad7fc,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,c143d279740f3e9c59920d2a6720240e,c157c439271dbeeebb69b81254b288af,c1845aec41d031b5a72f6f472ab4a5f2,c1f63acba6f9a58b56bd71c409dcd343,c22dbf534c525258e8788bff5c1c5e66,c38e2432510adf26b03148bb29ed9dda,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c4efc37a62b19ea7ba04b6eccea112c5,c5461cfa4259c43255132d8f916b1764,c55d8ff0ea71716df1fdfba115d52035,c6c993134aa9ac5f833c8bf4d26c0dbd,c8d58fd330c4f217c52b50590414e517,ca20f99a0d6214b86e1868fcc2725709,ca4cf87ea29b0d3f9a148fa9aeabce4b,cb4791e4249947cbab8022435c79aa13,cb9405c9d1ffc30f045effa85b1e9e09,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,cc73438c54108f8ee25c9221d62bafca,ccacadee21d69e15eb428a9a9d8de65f,ccae232c83746c7020e2c1ff92d50349,ccf507e98d23ff18f3ca206f0a8f29a2,ce32447561606063e2fc6439cb2f9989,ce540af7d610dfd65c29afa83f46b65e,cf17a04fd1ade3fe98ee4b50654b493e,d0b7431b1eedf2a5660218e7e399d8ab,d0c06a113103b401eb977025a69f0cee,d0da48d43a184db7d07729aa6047ca3d,d1675bdf7576ae8e63e95f4105fcb693,d1d62ecebefc7d4d3ed8c06e50adc45c,d405678be18c78d7d78d7a6521a58a56,d479485461737c6760b5fb421f0541ea,d4880ef934642aac0f85ca34038b847d,d5597c0b98fb6d7afb8e40f53a3b0be7,d5671c2494c6418a266da35fff705101,d5c8e583b99d40e21e52e5d76498cb0d,d7f9d6d81c47c8666bdbe05c89629447,d8317c2b832a421e629375219f74e12f,d96d8ae7162e4a76bff1216bb9a8e47a,d96f8e049ce9a691971e1a92b5b556af,daf474d256367130307c452111474f61,db459e8194ba2f087761e7727b876b9d,db79d898afcf0c4fadf71858f0b3e795,db7dfb25749de8f86ac15552fec549ec,dc07058d355dcb6432e4280af3eba3d0,dc10462a75be57d14f05bf6a26ba9731,dc74aa0cbe86d8235a59d0f6809f6184,dcf0763f48070d41b43f528c6ac2928a,dcf475d04bc2e922a55271ba1bff9465,ddf9997eb4ecd67204ea6df04b23cc07,de5d774b63da599b2e72cb96a3e61337,de818dec85e98671fc18154ccd8eaf7d,dea59f788f9645dcf527f4f5f4f12ae7,deac651e6b6d2334bf79cf4c59d8ba7c,df84fd0c2737b715a0714932e9cfa24e,e1b487c3c6375629c06ea480fd8dc53b,e2066c317993455c32b6ebbfabfb5497,e36d6ba428fb6e6b41847dce90fde4cc,e3c6466a080dbad6e05f99bda0212547,e50d0654e953ff5fe60c725be1dea551,e5dd9b12a829becf46c92a1a02044920,e5f2d84dedb3e3e056a2a9003aeaa38e,e6b2d6730ad42ef426b9678bb99c756c,e871ceb5e34368061b569a8df8c57c33,e8d59516a524ae342a9c7507d5bac243,e90648c68d5bac977f4df1b052ea3636,e99cfa8c07448d7a84d08d3a5ba6dc7a,ea73c6964570e6f8578712d657ef12d4,eb0ab8a0b2738dcfb761cbfe242d18c4,ebeae91fd404de4ca5981ecf5cc74074,ebecafe0b9c1dfc514b9df4c48e6eb30,ecc794f2647ea18dc504fd09133f90c8,edbe56d6713ddfcd3f28202ddbe49c7f,ef6fa1b3e61aee8ae358b362e18f319d,efa0be72e5e017f56fa9efbf06af7e7c,f0814c1eeb2105aa085a8917000972a0,f0a75595032bbb539a5844dc72a00955,f0c17549b011af117faf3f7556948996,f0df8a5e739e43b9c43840817e1bd7d1,f0f0cb94424540a288feb59004d219e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f1523e8a9fafd09d83cab1c6c14f3955,f180dd367ecf063eddddd218ef6dbc1e,f29e8a7f61e2c8934f86db0f78127d28,f307707abfeb56b5061ee3f77f2b7cb5,f33afd1ad915755b5724c85e5bdb3c98,f4599158722218aadb2ccd78fa2745ad,f4e17ed362ae0155d86b249ad8a6653b,f4fd4edd5d94e2931678672f66729691,f5ab02ebcf782ede1b25fdb016628a44,f5bfba3eb957f9e621d0b55561a5f466,f638e8457654aac7a4dfb0263d5f8275,f6d8eccbee25757d0c8ea4d7bcec5598,f85230e3fc997d23be219ba313c72951,f98c0fd002ba589c06bf3b605fe3f189,fa4079c109c67561ad52ce2f338d0fa0,fa740e66ec54695622178b0c41a679a4,fa9521f2ab68816b7c013c9aaaa353bd,fbb05e41116fc030ff4f57b77c6ebd29,fc0b23383bad27c21e52b0c819eb7874,fc0ba612fedfd66b2e97651149105594,fc52bbb050ae304015ed1c6202d9c35b,fca72cef7aaa748346e02aa5f929c2c1,fe0d633beeec623b33fe67087fc20b5c,febb4f969f596319fd061f8b7238dfa9,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="CLI">
      <data key="d0">EVENT</data>
      <data key="d1">The CLI (Command Line Interface) for Next.js allows users to interact with the framework through terminal commands for development, building, and starting applications.
The CLI (Command Line Interface) for Next.js allows users to develop, build, and start their applications through terminal commands.
The Command Line Interface (CLI) for Next.js allows users to develop, build, and start applications through terminal commands.
The Next.js CLI is a command-line interface that allows developers to interact with the Next.js framework for various tasks such as development, building, and starting applications.
The CLI (Command Line Interface) for Next.js allows developers to interact with the framework through terminal commands for development, building, and starting applications.
The Command Line Interface (CLI) for Next.js allows developers to run commands for development, building, and starting applications.
The Next.js CLI is an event that allows developers to interact with the Next.js framework through command-line commands for development, building, and starting applications.
The Command Line Interface (CLI) for Next.js provides tools for running the development server, building applications, and managing various project configurations.
The Next.js CLI is a command-line interface that allows users to develop, build, and start their Next.js applications.
The Command Line Interface (CLI) tools provided by Next.js allow developers to create applications and manage their development environment efficiently.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,3cf51b17316c47851ab9a8bb2fddfbc3,46d1b39ace8164bdecd2be4eab0a1fc3,5f12ce576f28b7467649832a292ad632,77371d3904d4e5b3fca92caaa7329a5c,816401f1962be5373b03365c403e3a92,9726f4ae30b11539c429ff41c8326d46,ad18f1240db75ed731ff9f7ec075320e,ce32447561606063e2fc6439cb2f9989,e6b2d6730ad42ef426b9678bb99c756c</data>
    </node>
    <node id="NPM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NPM is a package manager for JavaScript that is used to install Next.js and its dependencies.
npm is a package manager for JavaScript, used to manage dependencies in Node.js applications, including those built with Next.js.
NPM (Node Package Manager) is a package manager for JavaScript, allowing developers to install and manage packages for Node.js applications.
npm is a package manager for JavaScript, used to manage dependencies in Node.js applications.
npm is a package manager for JavaScript, used to manage dependencies in Node.js applications.
NPM is a package manager for JavaScript that is used to install and manage packages for Node.js applications, including Next.js.
npm is a package manager for JavaScript, used to install and manage packages for Node.js applications.
NPM is a package manager for JavaScript, used to manage dependencies in Node.js applications.
NPM is a package manager for JavaScript, allowing developers to share and reuse code.
npm is a package manager for JavaScript, used to manage dependencies in Node.js applications.
NPM (Node Package Manager) is a package manager for JavaScript, used to install and manage packages for Node.js applications, including Next.js.
NPM (Node Package Manager) is a package manager for JavaScript that allows developers to install and manage packages for Node.js applications.
npm is a package manager for JavaScript that allows developers to install and manage dependencies for their projects.
NPM (Node Package Manager) is a package manager for JavaScript that allows developers to install and manage dependencies for their projects.
NPM is a package manager for JavaScript that allows developers to install and manage packages, including those needed for Next.js applications.
npm is a package manager for JavaScript, allowing developers to install and manage packages for their projects.
NPM (Node Package Manager) is a package manager for JavaScript, used to install and manage packages like Next.js and its dependencies.
NPM is a package manager for JavaScript that allows developers to install and manage packages for their applications.
NPM is a package manager for JavaScript that is commonly used to manage dependencies in Next.js applications.
NPM is a package manager for JavaScript, allowing developers to install and manage packages for Node.js applications.
npm is a package manager for JavaScript that allows developers to install and manage packages for their projects.
NPM is a package manager for JavaScript that allows developers to install and manage packages for their projects.
NPM is a package manager for JavaScript, allowing developers to install and manage packages for their projects.
NPM (Node Package Manager) is a package manager for JavaScript, used to install and manage dependencies for Node.js applications.
NPM (Node Package Manager) is a package manager for JavaScript, allowing developers to install and manage dependencies for their Node.js applications.
NPM (Node Package Manager) is a package manager for JavaScript, allowing developers to install and manage packages for Node.js applications.
npm is a package manager for JavaScript, allowing developers to install and manage libraries and dependencies for their applications.

Node Package Manager (NPM) is a package manager for JavaScript, allowing developers to share and reuse code modules.
NPM is a package manager for JavaScript, used to manage dependencies in Node.js applications.
NPM (Node Package Manager) is a package manager for JavaScript that allows developers to install and manage dependencies for their applications.
NPM is a package manager for JavaScript that is used to manage dependencies in web applications.
NPM is a package manager for JavaScript, allowing developers to share and reuse code, and manage dependencies in their projects.
NPM (Node Package Manager) is a package manager for the JavaScript programming language, used to manage dependencies in projects.
NPM is a package manager for JavaScript, allowing developers to install and manage libraries and dependencies for their applications.
NPM is a package manager for JavaScript, which is used to install libraries such as the Amazon Translate SDK for integration into applications.
NPM (Node Package Manager) is a package manager for JavaScript that allows developers to install libraries and tools, including the Amazon Polly SDK.
NPM is a package manager for JavaScript, allowing developers to install and manage packages for Node.js applications.
npm is a package manager for JavaScript, allowing developers to share and reuse code.
NPM (Node Package Manager) is a package manager for JavaScript that allows developers to install and manage libraries and dependencies for their projects.


NPM is a package manager for JavaScript, used to install the @aws-amplify/ui-react package in the Amplify UI setup.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,0ef0d7dfd239c67d2b08d6be68926b78,13036fcc04ff7a3a3d82cc055061ee52,148529b8881659161220567b7aef9513,21fafbece16fa47f1f530df2b5f0817b,280c36ab0ae3dc66fffd099a273b96ab,361aaf651685ae2e9407ab27dc8138b3,391895fc365f2f2512a45ea503fbfa86,3c34af088a28c5276b514cfdf986b3d6,3cdd6c81baa65bbde6eabfc399eb25b6,45d1b0474e5a4ef2a69bdf70528aedb4,46d1b39ace8164bdecd2be4eab0a1fc3,4d25b33f699aef8a075e8858bf0ad630,56488edd7cf127c0da3442fbce7f97db,58b2fdfd363cfa9a202cc5a6c3b3d77e,5afd0d2ef8220eea43b9a4e3736e7bee,5f12ce576f28b7467649832a292ad632,60041d4c2667ea62ef90a73e1138bae6,6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,7b388f79ffb6d5d09b2f36b2618f109d,816401f1962be5373b03365c403e3a92,818fcb4044a83bd6eead8a24e57319ad,856c945b28eacce9c83378e56652fee3,94a4bc63d08f1f8dd8fa4630608aee68,95c2ea5a0f820f012ba0ea521843d34d,9da317a323ff76913285228d8243413e,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,b0a7c0b65015814bd16809b55a84c5cc,b453ff9e225c4008acb26b7c1bf321dd,b45c653df41952b7c0b22c7926afe5f7,b48fe8c8f5e2835de49d9a46578cbf9d,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,ce32447561606063e2fc6439cb2f9989,e1b74f93a071f3a34a553359c4fa7b1b,e63f52e89ed09d5d6307bfccfa46aec9,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f180dd367ecf063eddddd218ef6dbc1e,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="HOT MODULE RELOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Hot Module Reloading is a feature in Next.js that allows developers to see changes in real-time without refreshing the entire page during development.</data>
      <data key="d2">5f12ce576f28b7467649832a292ad632</data>
    </node>
    <node id="PRODUCTION BUILD">
      <data key="d0">EVENT</data>
      <data key="d1">A production build in Next.js is an optimized version of the application created for deployment, ensuring better performance and reduced file sizes.
A production build is an optimized version of an application that is ready for deployment, ensuring better performance and reduced file sizes.
A production build in Next.js refers to the process of compiling and optimizing the application for deployment, ensuring that it runs efficiently in a live environment.
A Production Build is the final version of an application that is optimized for deployment, ensuring that all TypeScript errors are resolved before going live.</data>
      <data key="d2">4d99e596a43a5b336e12425953d3a120,5f12ce576f28b7467649832a292ad632,735b59f53ffba96602dace4169c285ed,b02497cb2bc6f667d39aa316235e09d5</data>
    </node>
    <node id="ESLINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, which can be run as part of the Next.js development process.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in conjunction with Next.js.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, which can be integrated into Next.js projects.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used to ensure code quality in Next.js applications.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, which can be integrated into Next.js applications for code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used to enforce coding standards and improve code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in conjunction with Next.js projects.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, used in Next.js projects.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used to enforce coding standards.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in conjunction with Next.js for code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in conjunction with Next.js for maintaining code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.

ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often integrated into Next.js projects for code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in Next.js applications for maintaining code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
eslint is a tool integrated into Next.js for identifying and reporting on patterns found in ECMAScript/JavaScript code, helping to maintain code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used in conjunction with Next.js to ensure code quality.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, often used to enforce coding standards.
ESLint is a tool that helps catch accessibility issues early in the development process using the built-in eslint-plugin-jsx-a11y plugin.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, which is integrated into Next.js for linting purposes.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code.
ESLint is a static code analysis tool for identifying problematic patterns in JavaScript code, integrated by default in Next.js projects.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,016bf1f47e649cd8112b488d5c847dcc,03986c3b8388e42d1b82f4db5232270e,04edddc24da6789de5ee2349698f4056,21bbed2998c7a9b202d76d56c78cb512,223233d7a3658c1a7836573abacf9175,2f935bf8dd94b80e38c90109f4e620a3,2faaabdabafa263524b931c68674e9cd,391895fc365f2f2512a45ea503fbfa86,3cf51b17316c47851ab9a8bb2fddfbc3,4baf287e38f64339e2ce2ed9f18befe3,564b1122ed77a335ef83dd856be6b406,5f12ce576f28b7467649832a292ad632,7481573bcc2c3c6d105c0bf358bec2e6,77371d3904d4e5b3fca92caaa7329a5c,815b3c1f78ab2336e7e5bdae07b49d2b,816401f1962be5373b03365c403e3a92,83cffab512363b08e89e0b35424b489c,8b55191578f60b2d2fac3ae2f4d05b2e,a8b53f4a9be046988ebd8eae20825df3,aaea03d7a1385785fae028f24c52f8a5,b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,cc73438c54108f8ee25c9221d62bafca,ce32447561606063e2fc6439cb2f9989,d1675bdf7576ae8e63e95f4105fcb693,e6b2d6730ad42ef426b9678bb99c756c,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="DEBUG">
      <data key="d0">EVENT</data>
      <data key="d1">Debugging in Next.js involves using various options to enable verbose output and profiling to identify issues during development and production builds.
Debugging is the process of identifying and resolving issues in the Next.js application, often enabled with specific command-line options.
Debugging is a process that enables more verbose output during the build process, helping developers identify issues.
Debugging is the process of identifying and removing errors from computer software or hardware, often involving verbose output for troubleshooting.</data>
      <data key="d2">5f12ce576f28b7467649832a292ad632,b02497cb2bc6f667d39aa316235e09d5,bf545f52d7ba0c458692304a2c0ca7e4,e6b2d6730ad42ef426b9678bb99c756c</data>
    </node>
    <node id="HTTPS">
      <data key="d0">EVENT</data>
      <data key="d1">HTTPS is a secure version of HTTP that can be enabled in Next.js for secure communication over the internet during application deployment.
HTTPS is a protocol for secure communication over a computer network, often used in web applications, including those built with Next.js.
HTTPS is an extension of HTTP that uses encryption for secure communication over a computer network.
HTTPS is a secure communication protocol used for secure data transmission over the internet, often utilized during development for webhooks and authentication.
HTTPS is a secure version of HTTP used for secure communication over a computer network, which can be configured in Next.js applications for development purposes.
HTTPS is a secure version of HTTP, used for secure communication over a computer network.
HTTPS is a protocol for secure communication over a computer network, widely used on the internet.

HTTPS is a secure version of HTTP that can be used during development in Next.js to create a secure environment on localhost.
HTTPS is a protocol for secure communication over a computer network, widely used on the Internet.
HTTPS is a secure version of HTTP, used for secure communication over a computer network, often implemented in web applications including those built with Next.js.
HTTPS is a protocol for secure communication over a computer network, widely used on the Internet to protect the integrity and confidentiality of data between the user's computer and the site.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,15e19e9603c0108a515ce63026694481,1a9f90261d97f4e9455bb0fa22f4ee9c,5f12ce576f28b7467649832a292ad632,6f23aef3387d9221b1a88bdfa6874ba3,a8b53f4a9be046988ebd8eae20825df3,ad18f1240db75ed731ff9f7ec075320e,b02497cb2bc6f667d39aa316235e09d5,e6b2d6730ad42ef426b9678bb99c756c,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="APPLICATION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An application in the context of Next.js refers to the web application being developed using the Next.js framework.
The application refers to the web application being built and run using Next.js.



The application is the software built using Amplify that allows users to manage their todos and interact with the backend.
The application refers to the fullstack app built using AWS Amplify and Next.js, which allows users to manage to-do items.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,374f53811273c5cffe3558d227a0e4ec,5f12ce576f28b7467649832a292ad632,715bdaaae1cb7470e0e54efac993beb5,a0a19960cdaef7a85c598591f06454da,bf545f52d7ba0c458692304a2c0ca7e4,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="DARWIN">
      <data key="d0">GEO</data>
      <data key="d1">Darwin is the operating system kernel used by macOS, providing the core services for the operating system.
Darwin is the operating system platform mentioned in the system information output.
Darwin is the operating system platform mentioned in the system information output for Next.js.
Darwin is the operating system platform mentioned in the context of the Next.js environment.
Darwin is the operating system kernel used by macOS, which is mentioned in the context of the operating system platform.
Darwin is the operating system upon which macOS is based, known for its Unix-like architecture.
Darwin is the operating system platform mentioned in the system details for Next.js.
Darwin is the operating system upon which macOS is based, providing the core set of components for the operating system.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="VERCEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js applications.
Vercel is the platform that automatically configures HTTPS for Next.js applications when deployed.
Vercel is the company behind Next.js, providing hosting and deployment solutions for Next.js applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing automatic HTTPS configuration for applications.
Vercel is the company behind Next.js, providing hosting and deployment services for Next.js applications.
Vercel is a platform for frontend frameworks and static sites, known for its design guide used in creating diagrams.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a platform for frontend frameworks and static sites, built to integrate with Next.js.
Vercel is the company behind Next.js, providing hosting and deployment solutions for applications built with the framework.
Vercel is the company behind Next.js, providing deployment and hosting services for applications built with the framework.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing hosting and deployment services.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing automatic configuration for global CDN.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs.
Vercel is a company that provides a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs.
Vercel is the company that develops and maintains Next.js, providing hosting and deployment services for web applications.

Vercel is the company that develops Next.js and provides a platform for frontend frameworks and static sites.
Vercel is a cloud platform for static sites and serverless functions that integrates seamlessly with Next.js for deployment.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a cloud platform for static sites and Serverless Functions that integrates with Next.js for deployment and hosting.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing seamless deployment and hosting solutions.
Vercel is the company that creates and maintains Next.js, providing managed infrastructure and a developer experience platform for Next.js applications.
Vercel is a company that provides deployment and hosting solutions for Next.js applications, ensuring assets and functions remain available to older clients after new versions are deployed.
Vercel is a platform for deploying Next.js applications and managing environment variables in project settings.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs, and it supports OpenTelemetry for observability.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing hosting and performance optimization.
Vercel is a cloud platform for static sites and Serverless Functions that is optimized for Next.js applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.

Vercel is the company behind Next.js, providing hosting and deployment solutions for Next.js applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing seamless deployment and hosting solutions.
Vercel is the company behind Next.js, providing hosting and deployment solutions for applications built with the framework.
Vercel is a cloud platform for static sites and Serverless Functions that is optimized for Next.js applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing automatic deployments and optimizations.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, providing automatic configuration for deployments.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems.
Vercel is the company behind Next.js, providing hosting and deployment services for applications built with the framework.
Vercel is the deployment platform that supports Next.js applications and provides serverless functions and edge computing capabilities.
Vercel is a cloud platform for static sites and Serverless Functions that fits well with Next.js applications, providing hosting and deployment services.
Vercel is the platform that hosts Next.js applications, allowing for easy deployment and scaling of web applications.
Vercel is a platform for deploying Next.js applications, providing managed infrastructure and a developer experience platform.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js, allowing for easy deployment and management of applications.
Vercel is a cloud platform for static sites and Serverless Functions that fits perfectly with Next.js.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs.
Vercel is a platform that provides hosting and serverless functions for web applications, including support for OpenTelemetry and performance metrics reporting.
Vercel is the company that provides a managed service for Next.js, allowing automatic collection and visualization of performance metrics.
Vercel is the company behind Next.js, providing deployment and hosting solutions for web applications.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs.
Vercel is a platform for frontend frameworks and static sites, built to integrate with headless content management systems and APIs, and it automatically handles server actions in Next.js applications.
Vercel is the company behind Next.js, providing hosting and deployment services for applications built with the framework.

Vercel is a platform that provides tools for frontend developers, including Edge Config for fast data retrieval and hosting services for web applications.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,0dc4f8c1cc6105e325f2d84d2083a4c0,113e44bf79d1dd5dbde02354435765e3,15e19e9603c0108a515ce63026694481,1a9f90261d97f4e9455bb0fa22f4ee9c,20652ea1750ad5513b326c308672d886,2faaabdabafa263524b931c68674e9cd,3486aab51f1c22b4f23003db40986564,3bade0d5baadc8c11b8cf85372738fdd,40b01d3865b7f98f3123b0d905e2e01d,4248e6bed3ca383db55da9c5251a47ee,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4d99e596a43a5b336e12425953d3a120,53559278a11544ca19ad7864a7c3319c,57aa8258500bb7c522d2a394931d9248,5e1697c043b2eb0208b7ae196db74f56,5f794e811d0f825d9e561f1210793eb7,64c02a535c1519ef24ded4a2a368f2be,6e870d62774508940749246fdee4d7b7,6f23aef3387d9221b1a88bdfa6874ba3,77371d3904d4e5b3fca92caaa7329a5c,7b388f79ffb6d5d09b2f36b2618f109d,7b6d1725bb07f6076bb8010d535ae342,7cf992845bf79c5ec4ae2614617a79f4,83cffab512363b08e89e0b35424b489c,84b5c29553feb2883a2e93ffbac5b791,86965ee0055fe16d855a4f0e993b9d85,8735729cb47a3e421748c05ffb31502f,981566c16bf11e1256e74208c2869349,9b92d19ee6176284aa500c2d4bcd28a4,9bc82a2671446cca168796fea771ecad,a30c1b22a2bba568f986171e6685170b,a39499341fdd66534be31b2131784b51,a3dae9be9408e57ff26350383026033f,aaea03d7a1385785fae028f24c52f8a5,ad18f1240db75ed731ff9f7ec075320e,af00e01481cac23e3b67c635215254ab,ba06ed84686152cb5106e54e4887fa28,bb9110629910b21a122e4dbd23ba9236,cb4791e4249947cbab8022435c79aa13,d96f8e049ce9a691971e1a92b5b556af,ddf9997eb4ecd67204ea6df04b23cc07,e1b487c3c6375629c06ea480fd8dc53b,e5dd9b12a829becf46c92a1a02044920,e6b2d6730ad42ef426b9678bb99c756c,e90648c68d5bac977f4df1b052ea3636,ebeae91fd404de4ca5981ecf5cc74074,ebecafe0b9c1dfc514b9df4c48e6eb30,f0f0cb94424540a288feb59004d219e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f4599158722218aadb2ccd78fa2745ad,f4fd4edd5d94e2931678672f66729691,fbb05e41116fc030ff4f57b77c6ebd29,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="SAMUEL NAMARA">
      <data key="d0">PERSON</data>
      <data key="d1">Samuel Namara is a fictional character mentioned in the context of being a hostage, but not directly relevant to the provided text.
Samuel Namara is a businessman from Aurelia who was held hostage in Tiruzia's Alhamia Prison.
Samuel Namara is a businessman from Aurelia who was held hostage in Tiruzia's Alhamia Prison.
Samuel Namara is a businessman from Aurelia who was held hostage in Alhamia Prison.
Samuel Namara is a businessman from Aurelia who was held hostage in Tiruzia's Alhamia Prison.
Samuel Namara is a fictional character mentioned in the context of a hostage situation, representing individuals involved in such events.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,7d1946ff469243c820fe74fd26b68cbd,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a,f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="ALHAMIA PRISON">
      <data key="d0">GEO</data>
      <data key="d1">Alhamia Prison is a fictional location mentioned in the context of being a prison, but not directly relevant to the provided text.
Alhamia Prison is a prison located in Tiruzia where hostages were held.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is located in Tiruzia and is where hostages were detained.
Alhamia Prison is located in Tiruzia and was where Samuel Namara was held.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is a facility in Tiruzia where individuals may be held, mentioned in the context of hostages.
Alhamia Prison is mentioned as a location where individuals may be held, but it is not directly referenced in the provided text.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is located in Tiruzia and was where Samuel Namara was held.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is a prison located in Tiruzia, known for holding various prisoners.
Alhamia Prison is a facility mentioned in the context of holding individuals, though not directly related to the provided text.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.
Alhamia Prison is a prison located in Tiruzia, where hostages were held.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,0ef0d7dfd239c67d2b08d6be68926b78,45fc1e950172cd0fb4a7f0162afae421,4a99c636fb9adfcf5771118fe58ce017,4da3554b7826cf4b6dd608127da53568,4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,5ef33e2acd1009a637bf4b8ab41d49a1,66669d057195f54843266efcffb93a3b,7cf992845bf79c5ec4ae2614617a79f4,a19a92a20fca1ccc164ea11570a4b26a,bcb8bed3236fce81cd5b966a435370ba,bd13629205b4661186b2631023139a53,c1845aec41d031b5a72f6f472ab4a5f2,e99cfa8c07448d7a84d08d3a5ba6dc7a,f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="NODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications, often utilized in Next.js projects.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing for server-side execution of JavaScript code.
Node is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2,b817095066fd625d69ee8fbf3cb0804d,f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="YARN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Yarn is a package manager that doubles down on speed and reliability, often used as an alternative to npm in JavaScript projects.
Yarn is a package manager that doubles down as project manager, used for managing JavaScript dependencies.
Yarn is a package manager that doubles down as project manager, used for managing JavaScript dependencies.
Yarn is a package manager that doubles down as project manager, used for managing JavaScript dependencies.
Yarn is a package manager that doubles down as project manager, used for managing JavaScript dependencies.
Yarn is a package manager that doubles down as project manager, providing fast and reliable dependency management.
Yarn is a package manager that doubles down as a project manager, used for managing JavaScript dependencies.
Yarn is a package manager that doubles down on speed and reliability, often used as an alternative to NPM for managing JavaScript packages.
Yarn is a package manager that doubles down as project manager, providing a fast and reliable way to manage JavaScript dependencies.
Yarn is a package manager that doubles down as project manager, allowing developers to manage dependencies in JavaScript projects.
Yarn is a package manager that doubles down as project manager, often used as an alternative to NPM for managing JavaScript packages.
Yarn is a package manager that doubles down on speed and reliability, allowing developers to manage project dependencies efficiently.
Yarn is a package manager that doubles down as project manager, allowing developers to manage dependencies in JavaScript projects.
Yarn is a package manager that doubles down as project manager, providing a fast and reliable way to manage JavaScript dependencies.
Yarn is a package manager for JavaScript that aims to be faster and more secure than NPM, providing an alternative for managing project dependencies.
Yarn is a package manager for JavaScript that aims to be faster and more secure than NPM.
Yarn is a package manager that doubles down as a project manager, allowing developers to manage dependencies in JavaScript projects.
Yarn is a package manager that doubles down on speed and reliability, often used as an alternative to NPM for managing JavaScript dependencies.
Yarn is a package manager for JavaScript that aims to be faster and more reliable than NPM.
Yarn is a package manager that can be used as an alternative to NPM for managing JavaScript packages, including those for Amplify UI.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,21fafbece16fa47f1f530df2b5f0817b,391895fc365f2f2512a45ea503fbfa86,45d1b0474e5a4ef2a69bdf70528aedb4,4d25b33f699aef8a075e8858bf0ad630,5afd0d2ef8220eea43b9a4e3736e7bee,60041d4c2667ea62ef90a73e1138bae6,818fcb4044a83bd6eead8a24e57319ad,94a4bc63d08f1f8dd8fa4630608aee68,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,b0a7c0b65015814bd16809b55a84c5cc,b453ff9e225c4008acb26b7c1bf321dd,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f180dd367ecf063eddddd218ef6dbc1e,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="PNPM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">pnpm is a fast, disk space-efficient package manager for JavaScript, used in projects including those built with Next.js.
pnpm is a fast, disk space-efficient package manager for JavaScript.
pnpm is a fast, disk space-efficient package manager for JavaScript.
pnpm is a fast, disk space-efficient package manager for JavaScript.
PNPM is a fast, disk space-efficient package manager for JavaScript.
PNPM is a fast, disk space-efficient package manager for JavaScript.
pnpm is a fast, disk space-efficient package manager for JavaScript.
PNPM is a fast, disk space-efficient package manager for JavaScript, used to manage dependencies in Node.js applications.
pnpm is a fast, disk space-efficient package manager for JavaScript that helps manage project dependencies.
PNPM is a fast, disk space-efficient package manager for JavaScript, used to manage dependencies in projects like Next.js.
PNPM is a fast, disk space-efficient package manager that uses symlinks to save space and speed up installations.
PNPM is a fast, disk space-efficient package manager for JavaScript that uses symlinks to save space.
PNPM is a fast, disk space-efficient package manager for JavaScript that uses symlinks to save space.
PNPM is a fast, disk space-efficient package manager for JavaScript, designed to optimize the installation of dependencies.
PNPM is a fast, disk space-efficient package manager for JavaScript that uses symlinks to save space.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,21fafbece16fa47f1f530df2b5f0817b,391895fc365f2f2512a45ea503fbfa86,45d1b0474e5a4ef2a69bdf70528aedb4,5afd0d2ef8220eea43b9a4e3736e7bee,60041d4c2667ea62ef90a73e1138bae6,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,b0a7c0b65015814bd16809b55a84c5cc,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f180dd367ecf063eddddd218ef6dbc1e,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="TERMINAL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Terminal is a command-line interface application in macOS that allows users to interact with the operating system using text-based commands.
Terminal is a command-line interface used to interact with the operating system and execute commands.
Terminal is a command-line interface used to execute commands and run scripts in a development environment.
Terminal commands are used to execute various tasks in a command-line interface, including migrations and transformations in Next.js.

Terminal refers to the command line interface used to execute commands in the operating system.
Terminal is a command-line interface used to execute commands and display output in a text-based format.
Terminal refers to a command-line interface used to interact with the operating system, often used for executing commands and scripts.
Terminal commands are used to upgrade Next.js and its dependencies, including React and Webpack.

Terminal is a command-line interface used to interact with the operating system, allowing users to execute commands and scripts.

The Terminal is a command-line interface used to execute commands, including pulling environment variables in Vercel.
Terminal is a command-line interface used to execute commands and run scripts in a computing environment.
The Terminal is a command-line interface used to execute commands, such as installing packages like Sass for use in Next.js applications.
Terminal refers to the command line interface used to interact with the operating system and execute commands.
Terminal refers to the command line interface used to execute commands for installing dependencies and running the Next.js application.
Terminal is a command-line interface used to execute commands in a computer's operating system.
Terminal refers to the command line interface used to install dependencies and run commands in the project.
Terminal is a command-line interface used to run commands such as 'yarn lint' for executing ESLint in a Next.js application.
Terminal is a command-line interface used to execute commands and run scripts in a computing environment.
The terminal is a command-line interface used to execute commands and run scripts in a development environment.
Terminal refers to the command-line interface used for executing commands, such as installing packages or running scripts in a development environment.
Terminal is a command-line interface used to execute commands and run scripts in a development environment.
Terminal commands are used in the command line interface to execute various operations related to AWS Amplify and other services.
A command-line interface used to interact with the operating system and execute commands.
A command-line interface where users can execute commands to interact with the operating system and software applications.
Terminal refers to the command line interface used for executing commands related to the deployment and management of applications.
The terminal is a command-line interface used to interact with the operating system and execute commands.
The Terminal is a command-line interface used to interact with the operating system and execute commands.
Terminal is a command-line interface used to run commands and manage software installations in a project.
Terminal is a command-line interface used to interact with the operating system, allowing users to execute commands and scripts.
Terminal refers to a command line interface where developers can execute commands to manage their applications and dependencies.
The terminal is the command-line interface where developers can run commands to interact with Amplify and view logs.
The Terminal is a command-line interface used to execute commands and run scripts, often utilized for installing libraries and managing software projects.
The terminal is a command-line interface used to run commands for deploying resources and managing the application environment.
The Terminal is a command-line interface used to execute commands for managing projects, including those related to AWS Amplify.
The terminal is a command-line interface used to interact with the operating system and execute commands, including those for AWS services.
The terminal is a command-line interface used to interact with the operating system and execute commands.
The terminal is a command-line interface used by developers to execute commands and manage their applications.
The terminal is a command-line interface used to execute commands and run scripts in the development environment.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,0b10d085541dc5564e998254b8588822,119c44bcb05c001f48d12d86b105f1bf,11e614f4c015c7f8295c0c49ac211a89,21fafbece16fa47f1f530df2b5f0817b,2599c1b415576410d2f9b23f4299c4cb,2e0b7ff508cb8313a540ecc1a356120e,2f935bf8dd94b80e38c90109f4e620a3,374f53811273c5cffe3558d227a0e4ec,3a87ecd12d97d86a3bbb406e93d2c8d2,3cdd6c81baa65bbde6eabfc399eb25b6,453d5bb282fe98f4e12856552a025f0f,5e1697c043b2eb0208b7ae196db74f56,60041d4c2667ea62ef90a73e1138bae6,6450bdd7941ff60e85c4d4acc9a73b25,69b8cbe6ad275c39fc40832d62145181,6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,7481573bcc2c3c6d105c0bf358bec2e6,7b388f79ffb6d5d09b2f36b2618f109d,9bfb7d7a715bed7eec92b32f7a175bf5,a09305795b4f611b12ba570f6fc845a9,a8b53f4a9be046988ebd8eae20825df3,aed1999377a9138038f56696b28a18c4,b02497cb2bc6f667d39aa316235e09d5,b6c19fc60714c90b16c67bd7df9573f9,bab5eb78712e4c073d8280b72cd3de79,bc34912ac16bc1504d04e9019f0c8cb9,c143d279740f3e9c59920d2a6720240e,c1f63acba6f9a58b56bd71c409dcd343,ce540af7d610dfd65c29afa83f46b65e,db7dfb25749de8f86ac15552fec549ec,e1b74f93a071f3a34a553359c4fa7b1b,e9de6f22467dd06036280d1c89b6d407,efa0be72e5e017f56fa9efbf06af7e7c,f0814c1eeb2105aa085a8917000972a0,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951,fc0b23383bad27c21e52b0c819eb7874,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="NEXT LINT">
      <data key="d0">EVENT</data>
      <data key="d1">Next lint is a command in Next.js that runs ESLint for all files in specified directories, helping developers identify and fix code issues.
Next lint is a command used to run ESLint on Next.js applications to ensure code quality.</data>
      <data key="d2">4baf287e38f64339e2ce2ed9f18befe3,f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="NEXT TELEMETRY">
      <data key="d0">EVENT</data>
      <data key="d1">Next telemetry is a feature in Next.js that collects anonymous usage data to improve the framework, with user participation being optional.</data>
      <data key="d2">f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="PROXY">
      <data key="d0">EVENT</data>
      <data key="d1">Proxy refers to an intermediary server that forwards requests from clients to other servers, relevant in the context of deploying Next.js applications.
Proxy is a built-in JavaScript object that is used to define custom behavior for fundamental operations.
Proxy represents an object that is used to define custom behavior for fundamental operations like property lookup and function invocation.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3,f119ecc0390ca4c3c02719ebd18faf59</data>
    </node>
    <node id="DARWIN KERNEL">
      <data key="d0" />
      <data key="d1">
The Darwin Kernel is the core of the macOS operating system, providing the basic services for the operating system.</data>
      <data key="d2">f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="AWS ELB/ALB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS ELB/ALB refers to Amazon Web Services Elastic Load Balancer/Application Load Balancer, which helps distribute incoming application traffic across multiple targets.
AWS Elastic Load Balancer (ELB) and Application Load Balancer (ALB) are services that distribute incoming application traffic across multiple targets, such as EC2 instances.
AWS ELB/ALB refers to Amazon Web Services' Elastic Load Balancer/Application Load Balancer, which can be used to deploy Next.js applications behind a proxy.
AWS Elastic Load Balancer (ELB) and Application Load Balancer (ALB) are services that distribute incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, and IP addresses, which can be used with Next.js applications.</data>
      <data key="d2">46d1b39ace8164bdecd2be4eab0a1fc3,6f23aef3387d9221b1a88bdfa6874ba3,77371d3904d4e5b3fca92caaa7329a5c,e6b2d6730ad42ef426b9678bb99c756c</data>
    </node>
    <node id="NODE.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, which is used to run Next.js applications on the server side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side, often used with Next.js.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to execute JavaScript server-side, which is essential for running Next.js applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, but its native APIs are restricted in the Edge Runtime.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to execute JavaScript server-side.
Node.js is a JavaScript runtime that Next.js requires, with version requirements updated in version 13.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to execute JavaScript server-side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side.
Node.js is a JavaScript runtime that allows for server-side scripting, but certain features of Next.js require a Node.js server to function.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used to run server-side applications, including those built with Next.js.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine that allows developers to run JavaScript on the server side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine that allows developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side, often used in conjunction with Next.js.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications, including those using Next.js.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, enabling server-side scripting and building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, required for running Next.js applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.

Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used to execute server-side code.

Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building server-side applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to execute JavaScript code server-side.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, required for running Next.js applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine that allows developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, used for building scalable network applications, often utilized in AWS Lambda functions.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,016bf1f47e649cd8112b488d5c847dcc,0425ac334d3d5bd221bd8a5bcee35ed9,077fbb77da60b5f069a4cf5fd5e33e9b,0aae21b170363fb93fdbbb65d9c7576b,1950a5e06a03170ed4dc66a00668ea47,1a9f90261d97f4e9455bb0fa22f4ee9c,234c5cf6d90b5c8b7d3583a3300a4752,23f821c071cb4c4cf183f5aac596db35,45d1b0474e5a4ef2a69bdf70528aedb4,46d1b39ace8164bdecd2be4eab0a1fc3,564b1122ed77a335ef83dd856be6b406,5791705a1f965d3a768f111e7fdcade1,6a27b514d5ea49bd1a6dd159d44aaf87,6f23aef3387d9221b1a88bdfa6874ba3,77371d3904d4e5b3fca92caaa7329a5c,7b6d1725bb07f6076bb8010d535ae342,83cffab512363b08e89e0b35424b489c,856c945b28eacce9c83378e56652fee3,8b55191578f60b2d2fac3ae2f4d05b2e,99aea11e8e00a31189977a03ce528a10,9c75ee4a07cd172f143b2b09451d333c,a0ed25040eb1637a5c82493764f822ac,a8b53f4a9be046988ebd8eae20825df3,aaea03d7a1385785fae028f24c52f8a5,ad18f1240db75ed731ff9f7ec075320e,adb5bec4b54e83924618cafc99d40e24,b02497cb2bc6f667d39aa316235e09d5,b1787ce5e713d63d1f4f1203762380a3,b48fe8c8f5e2835de49d9a46578cbf9d,ba53cb824bd4e5b80d861ee299c10f92,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,cc73438c54108f8ee25c9221d62bafca,ce32447561606063e2fc6439cb2f9989,ce540af7d610dfd65c29afa83f46b65e,d5671c2494c6418a266da35fff705101,db7dfb25749de8f86ac15552fec549ec,e6b2d6730ad42ef426b9678bb99c756c,e871ceb5e34368061b569a8df8c57c33,ea73c6964570e6f8578712d657ef12d4,f142ef31412a3248fc837262ecf35ddb,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="PROXY ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">Proxy error occurs when a downstream proxy attempts to reuse a connection that has already been terminated by Node.js, leading to failed requests.</data>
      <data key="d2">46d1b39ace8164bdecd2be4eab0a1fc3</data>
    </node>
    <node id="PRODUCTION MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Production mode is a state in which Next.js applications are optimized for performance and ready for deployment after being built.
Production mode is a state in which the application is optimized for deployment and performance.
Production mode is a configuration for running applications that optimizes performance and resource usage, typically used after building the application with Next.js.
Production mode is a state in which the application is optimized for deployment and performance, as indicated by the 'next start' command.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,46d1b39ace8164bdecd2be4eab0a1fc3,77371d3904d4e5b3fca92caaa7329a5c,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="DEVELOPMENT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Development mode is a state in which Next.js applications are run with features like Hot Module Reloading for easier development.
Development mode is a configuration for running applications that allows for features like Hot Module Reloading and error reporting, used during the development of Next.js applications.</data>
      <data key="d2">46d1b39ace8164bdecd2be4eab0a1fc3,77371d3904d4e5b3fca92caaa7329a5c</data>
    </node>
    <node id="TURBOPACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Turbopack is a new bundler for JavaScript applications that can be used with Next.js to improve build performance.
Turbopack is a new Rust-based bundler for JavaScript applications, designed to be faster than existing tools.
Turbopack is a new Rust-based bundler that is designed to be a successor to Webpack, providing faster builds and better performance for JavaScript applications.
Turbopack is a new bundler for JavaScript applications that is designed to be faster than Webpack, and it can be used in development mode with Next.js.
Turbopack is an incremental bundler optimized for JavaScript and TypeScript, integrated into Next.js for faster local development.

Turbopack is an experimental bundler for Next.js that aims to improve build performance and module resolution.
Turbopack is a tool that can be configured through next.config.js to modify module resolution and manage dependencies in Next.js applications.
Turbopack is a new bundler for JavaScript applications that aims to improve local development performance, particularly for Next.js applications.
Turbopack is a new bundler for JavaScript applications, designed to be faster and more efficient than existing tools, particularly in development environments.
Turbopack is a new Rust-based bundler for JavaScript applications, designed to be faster than Webpack.
Turbopack is an experimental bundler for Next.js that enhances development mode performance.
Turbopack is an experimental bundler for Next.js that allows for faster builds and module resolution, designed to work seamlessly with Next.js applications.
Turbopack is a new bundler introduced by Vercel that aims to improve local development performance for Next.js applications.
Turbopack is a new bundler for JavaScript applications, designed to be faster than existing tools.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0,0e3c564b3dd53e829befef4d6241c23e,453d5bb282fe98f4e12856552a025f0f,46d1b39ace8164bdecd2be4eab0a1fc3,6160e6925dba648999d09c55006ab046,717947e9b123f15f49c748bb45aec68d,77371d3904d4e5b3fca92caaa7329a5c,7de6e744f7ef4ab90e5a1db6bfad49c3,816401f1962be5373b03365c403e3a92,9726f4ae30b11539c429ff41c8326d46,981566c16bf11e1256e74208c2869349,99aea11e8e00a31189977a03ce528a10,b6b4173819c0a759fcd3146179f8f534,ce32447561606063e2fc6439cb2f9989,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="KEEP-ALIVE TIMEOUT">
      <data key="d0" />
      <data key="d1">
Keep-alive timeout is a setting that determines how long a connection should remain open before being closed, important for performance in web applications.</data>
      <data key="d2">1a9f90261d97f4e9455bb0fa22f4ee9c,46d1b39ace8164bdecd2be4eab0a1fc3</data>
    </node>
    <node id="GITHUB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to host and review code, manage projects, and build software together, often used for Next.js projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, where developers can contribute to the Next.js codebase and engage in discussions.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to work on projects together and host their code.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to host and review code, manage projects, and build software together.
GitHub is a platform for version control and collaboration, allowing developers to host and review code, manage projects, and build software together.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects, including those built with Next.js.
GitHub is a platform for version control and collaboration, allowing developers to host and review code, manage projects, and build software together.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to manage and store their code.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to store and manage their code repositories.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.
GitHub is a platform for version control and collaboration, allowing developers to store and manage their code repositories.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects.
GitHub is a platform for version control and collaboration, allowing developers to work together on projects from anywhere.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,0cc40988714324257eaa1d03994f3e39,119c44bcb05c001f48d12d86b105f1bf,18256f324d7f8fc0edac5bbf717bf76d,243626df7b8124420b4844165c42f9b9,2599c1b415576410d2f9b23f4299c4cb,2e0b7ff508cb8313a540ecc1a356120e,361aaf651685ae2e9407ab27dc8138b3,57aa8258500bb7c522d2a394931d9248,66fea93bb642287d13f3a25b8b3e0083,7b388f79ffb6d5d09b2f36b2618f109d,7cf992845bf79c5ec4ae2614617a79f4,816401f1962be5373b03365c403e3a92,8735729cb47a3e421748c05ffb31502f,9726f4ae30b11539c429ff41c8326d46,981566c16bf11e1256e74208c2869349,995b90fa5ccd54a921a730cc91487965,a8b53f4a9be046988ebd8eae20825df3,a9a858ea7abac3fe79fa759ea8171597,b02497cb2bc6f667d39aa316235e09d5,b45c653df41952b7c0b22c7926afe5f7,ce32447561606063e2fc6439cb2f9989,d26ffe8f4908cd05e7882cd4223c3490,db7dfb25749de8f86ac15552fec549ec,e1b487c3c6375629c06ea480fd8dc53b,f142ef31412a3248fc837262ecf35ddb,fc0b23383bad27c21e52b0c819eb7874,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="PORT">
      <data key="d0">EVENT</data>
      <data key="d1">Port is a communication endpoint used by applications to listen for incoming connections.
Port refers to the network port number on which the Next.js application will run, defaulting to 3000.
Port refers to the communication endpoint for applications, which can be configured in Next.js for development and production environments.
The PORT environment variable specifies the port on which the Next.js application will run during development, defaulting to 3000.
The PORT environment variable is used to set the port on which the Next.js application runs.
Port is a communication endpoint, but in this context, it is left empty, indicating the default port for the protocol is used.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,0cdf0d09b72c24c28afa3a7823b5507d,6f23aef3387d9221b1a88bdfa6874ba3,a8b53f4a9be046988ebd8eae20825df3,ab49838f472483f11a1afbcaff84ad1e,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="NEXT.LINT">
      <data key="d0">EVENT</data>
      <data key="d1">The next lint command runs ESLint for all files in specified directories, providing a guided setup for linting JavaScript code.</data>
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="NEXT.TELEMETRY">
      <data key="d0">EVENT</data>
      <data key="d1">The next telemetry command collects anonymous usage data about Next.js, allowing users to opt-in or opt-out of data sharing.</data>
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="DEFAULT PORT">
      <data key="d0">EVENT</data>
      <data key="d1">The default port for Next.js applications during development is 3000, which can be changed using command-line options.</data>
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="HTTPS FLAG">
      <data key="d0">EVENT</data>
      <data key="d1">The --experimental-https flag allows Next.js to generate a self-signed certificate for secure local development.</data>
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="COMMAND-LINE OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Various command-line options are available for configuring Next.js applications, including help commands and specific flags for functionality.</data>
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="NEXT.INFO">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">a8b53f4a9be046988ebd8eae20825df3</data>
    </node>
    <node id="HMR">
      <data key="d0">EVENT</data>
      <data key="d1">Hot Module Reloading (HMR) is a feature in Next.js that allows developers to see changes in real-time without refreshing the entire page.
Hot Module Reloading (HMR) is a feature that allows modules to be updated at runtime without the need for a full refresh.
Hot Module Replacement (HMR) is a feature that allows modules to be updated at runtime without a full refresh, enhancing the development experience.</data>
      <data key="d2">8c16e2baedacd39ce0384eac61e5ee79,ad18f1240db75ed731ff9f7ec075320e,e6b2d6730ad42ef426b9678bb99c756c</data>
    </node>
    <node id="PRODUCTION">
      <data key="d0">EVENT</data>
      <data key="d1">The production environment is where the Next.js application is deployed for end-users, optimized for performance and security.
Production refers to the environment where the application is deployed and accessed by users, as opposed to the development environment.</data>
      <data key="d2">a9a858ea7abac3fe79fa759ea8171597,e6b2d6730ad42ef426b9678bb99c756c</data>
    </node>
    <node id="REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React is a JavaScript library for building user interfaces, maintained by Facebook.
React is a JavaScript library for building user interfaces, which Next.js builds upon.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js.
React is a JavaScript library for building user interfaces, particularly single-page applications where data can change without reloading the page.
React is a JavaScript library for building user interfaces, which is the foundation of Next.js applications.
React is a JavaScript library for building user interfaces, allowing developers to create reusable UI components.

React is a JavaScript library for building user interfaces, often used in conjunction with Next.js.
React is a JavaScript library for building user interfaces, allowing developers to create single-page applications with a component-based architecture.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js.
React is a JavaScript library for building user interfaces, which is now upgraded to version 17 as part of the Next.js upgrade process.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook, and is often used in conjunction with Next.js for developing web applications.
React is a JavaScript library for building user interfaces, which is a dependency for Next.js applications.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for developing web applications.
React is a JavaScript library for building user interfaces, particularly single-page applications, and is the foundation for Next.js applications.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.

React is a JavaScript library for building user interfaces, particularly single-page applications, allowing developers to create reusable UI components.
React is a JavaScript library for building user interfaces, which is the foundation upon which Next.js is built.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, which Next.js is built upon, enabling developers to create dynamic web applications.
React is a JavaScript library for building user interfaces, maintained by Facebook, and is the foundation for frameworks like Next.js.
React is a JavaScript library for building user interfaces, which is a core dependency for Next.js applications.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for developing web applications.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for developing web applications.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, allowing developers to create single-page applications with a component-based architecture.

React is a JavaScript library for building user interfaces, often used in conjunction with Next.js.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, particularly for single-page applications where you can create reusable UI components.
React is a JavaScript library for building user interfaces, particularly for single-page applications where data can change without reloading the page.
React is a JavaScript library for building user interfaces, particularly for single-page applications, allowing for efficient rendering and state management.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for developing web applications.
React is a JavaScript library for building user interfaces, allowing developers to create reusable UI components and manage application state.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for creating dynamic web applications.
React is a JavaScript library for building user interfaces, which is utilized by Next.js for rendering components.
React is a JavaScript library for building user interfaces, often used in conjunction with Next.js for creating web applications.

React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, used for creating the component structure in the application
React is a JavaScript library for building user interfaces, which Next.js is built upon.
React is a JavaScript library for building user interfaces, which is utilized by Next.js for component-based architecture.
React is a JavaScript library for building user interfaces, which Next.js utilizes for its components.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, allowing developers to create single-page applications with a component-based architecture.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for web applications.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for front-end development.
React is a JavaScript library for building user interfaces, commonly used in web applications, including those built with Amplify.
React is a JavaScript library for building user interfaces, often used in web development to create interactive components.
React is a JavaScript library for building user interfaces, often used in conjunction with Amplify for creating web applications.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, which Amplify UI is built upon.

React is a JavaScript library for building user interfaces, often used in conjunction with Amplify UI.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, used in the development of the App and Storage Manager components.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, particularly for single-page applications.
React is a JavaScript library for building user interfaces, which is used in the development of the App.
React is a JavaScript library for building user interfaces, used in the development of the MapView and its components.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, particularly for single-page applications where a responsive and dynamic user experience is required.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, often used in conjunction with Amplify UI.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, which is used by Amplify UI components.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify.
React is a JavaScript library for building user interfaces, used to create the SelectField component.
React is a JavaScript library for building user interfaces, allowing developers to create reusable UI components like SliderField.
React is a JavaScript library for building user interfaces, which Amplify UI is built upon, allowing developers to create interactive UIs.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, used in the implementation of the DropZone component.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, often used in conjunction with AWS Amplify for developing web applications.
React is a JavaScript library for building user interfaces, often used in conjunction with frameworks like Next.js.
React is a JavaScript library for building user interfaces, which is utilized by Amplify UI components.

React is a JavaScript library for building user interfaces, often used in conjunction with Amplify UI components.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, allowing developers to create single-page applications with a component-based architecture.
React is a JavaScript library for building user interfaces, which is used in conjunction with Amplify UI.
React is a JavaScript library for building user interfaces, maintained by Facebook and a community of individual developers and companies.
React is a JavaScript library for building user interfaces, often used in conjunction with Amplify UI.
React is a JavaScript library for building user interfaces, particularly single-page applications where you can create reusable UI components.</data>
      <data key="d2">016bf1f47e649cd8112b488d5c847dcc,03e3453a6652ab6e0dd2abb24a0199b1,0425ac334d3d5bd221bd8a5bcee35ed9,05d21cc14ac859e5fc2002038fa7f6f7,06fd00c0023b38a04bba794fae7ed356,07e97df1a8257492f53460b3979b0e3c,0a535ba637862aaba58115b1f3e1a96b,0bfaadafcf31828f19e4b2657565944a,0d99e36510e5c37bedf99c81e8533dd1,0dc4f8c1cc6105e325f2d84d2083a4c0,0f0c3a1733d9928c7207a0931e147afe,12c9fa6332d9cd62a8cbe8be18fd540e,155e5b639ff1fbe14e9b7c7375cf5e03,170893bac86ced48a278abde4d144710,1a2c25b18b52cc9adff7a263b890a3b5,1a7480fec8557ce9c8b1f2d342f6ec9b,1ceae74b49c1b621d815e85b8ca49988,1d0207e2e11503628d08eefd24849d93,1e3e9559f0cf793e96c48297529ec161,20652ea1750ad5513b326c308672d886,20660998cc2c85257c6b7502427f85d3,21ba26eef933ca84de0597d8f7c58f7e,234c5cf6d90b5c8b7d3583a3300a4752,2f2dde2368e46aa812e2a39e32b3505d,32ab448d1972668cba4e2c467ff116a8,33239b71158a6566c2b82b6a30b68e82,374f53811273c5cffe3558d227a0e4ec,391895fc365f2f2512a45ea503fbfa86,393aa2365a84cbbbeaa882f89f100b89,3a9b26a380534d4aa1f17290c51aea24,453096a495a2eae0cd2491664604b080,453d5bb282fe98f4e12856552a025f0f,45bc04c1106dd47dcfb887084a04fd7b,478ca906eeeb1b1356949c55e289c4d3,480e2412619ad09a750dc16a3f8ceab3,4c20122de1ca69ecf45662867d268049,4d25b33f699aef8a075e8858bf0ad630,4e07cca41acd33806d13242f5e21f621,514671e4a7b4b0d7573852d3d380eefd,52f67911efe49d48e703ba654f23728e,56488edd7cf127c0da3442fbce7f97db,56553341236a20419cc336c60c2bed04,5aa64e0729b8afd73930cdaf5ff7a8aa,60041d4c2667ea62ef90a73e1138bae6,60d9151920f9b881f34c958c0c5d770b,6634963e5bc3eae8755d15393e4c9b71,66c478df0b5dc48b45a6c5e00867576d,66fea93bb642287d13f3a25b8b3e0083,69ac19d7db15ae11c7884ce391807330,6bb5264a8b72d26916099f27337032fe,6e82a6e0427e12aef8dafce9907f3835,6f492ac78ca89b7028399a30a24b9dc6,6f6e767a35b75e1c7658fbbddd94a842,715bdaaae1cb7470e0e54efac993beb5,717f3b1fb6a6ce86c291aca158771f33,729c604ddd30e8eb3491209028c25dde,7562010f59ffaae90af6b15498cde84b,7668a790c01b22add1e76afc928004db,7de6e744f7ef4ab90e5a1db6bfad49c3,876a936d41a4189fd50277eeb02bfdf7,93e4ae7768c14468bccb3caa2eb8fb2b,964a73cbdb955691a9e116071187750f,98b8f4a199a3050f92608604cd0974b2,a09305795b4f611b12ba570f6fc845a9,a0ed25040eb1637a5c82493764f822ac,a525cbfc03ba1b986f30ce2280067dda,a8cc34c06c7b64595006afc28abc0ae2,a9a858ea7abac3fe79fa759ea8171597,ab49838f472483f11a1afbcaff84ad1e,aca6ad21122c65a602020d055257d45c,b48f64ddd27370c0d0a93447e796c6b3,b4caad819b3245d1c7c01c198437baa1,b61989d8657d5b33a55c584f46e7d436,bab5eb78712e4c073d8280b72cd3de79,bc34912ac16bc1504d04e9019f0c8cb9,bd1557f5f20d5d232df2cbf55be7cb8d,bf545f52d7ba0c458692304a2c0ca7e4,c55d8ff0ea71716df1fdfba115d52035,c6c993134aa9ac5f833c8bf4d26c0dbd,c760e7dac2a9e84cc56dd76bcd9dd97c,ca20f99a0d6214b86e1868fcc2725709,cc73438c54108f8ee25c9221d62bafca,ccacadee21d69e15eb428a9a9d8de65f,ce540af7d610dfd65c29afa83f46b65e,d26ffe8f4908cd05e7882cd4223c3490,d405678be18c78d7d78d7a6521a58a56,d700fb2336ddc0a563736b65003c9d4f,d8317c2b832a421e629375219f74e12f,d8d35bb9ab00c5657d67d2362a6bbd10,daf474d256367130307c452111474f61,dcf475d04bc2e922a55271ba1bff9465,deac651e6b6d2334bf79cf4c59d8ba7c,e28baad4e7d7ca8e43254a705cbf687f,e33823d803dfc43e2ab84d0208782223,e685aa3f2fe14219814513a176eea47f,e9839e578f896e0d269ce78abd50bae3,eb94ca06f4734af403132b3cde36904b,ed2556eb80070ec113486cef81f33019,f0a75595032bbb539a5844dc72a00955,f33afd1ad915755b5724c85e5bdb3c98,f60714d5063669648e44d7d6036396c3,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="REACT-DOM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">react-dom is a package that provides DOM-specific methods for React.
react-dom is a package that provides DOM-specific methods for React.
React-DOM is a package that provides DOM-specific methods that can be used at the top level of a web app, allowing React to interact with the DOM.
React-DOM is a package that provides DOM-specific methods for React, essential for rendering React components in web applications.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,ab49838f472483f11a1afbcaff84ad1e,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="TYPESCRIPT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TypeScript is a strict syntactical superset of JavaScript that adds optional static typing.
TypeScript is a superset of JavaScript that adds static typing, with specific file extensions for its code.
TypeScript is a strict syntactical superset of JavaScript that adds optional static typing.
TypeScript is a superset of JavaScript that adds static typing, enabling developers to catch errors early and improve code quality.

TypeScript is a programming language that builds on JavaScript by adding static type definitions, enhancing code quality and maintainability.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and is used in the Next.js application.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, recommended for use with Next.js for better type inference and syntax features.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications for type safety.
TypeScript is a programming language that adds static typing to JavaScript, and its integration in Next.js affects production builds.
TypeScript is a programming language developed by Microsoft that is a superset of JavaScript, adding static types.
TypeScript is a programming language developed by Microsoft that is a superset of JavaScript, adding static types.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, enhancing code quality and maintainability.
TypeScript is a programming language that is a superset of JavaScript, adding static types to the language.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and other features to enhance development.
TypeScript is a programming language that builds on JavaScript by adding static type definitions.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, enhancing code quality and maintainability.
TypeScript is a superset of JavaScript that adds static types, often used in conjunction with React and Next.js for type safety.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in projects involving Next.js and React.
TypeScript is a superset of JavaScript that adds static types, enhancing the development experience and code quality.
TypeScript is a superset of JavaScript that adds static types, enhancing the development experience in React applications.

TypeScript is a programming language developed by Microsoft that adds static typing to JavaScript, enhancing the development experience and enabling better tooling support.
TypeScript is a programming language developed by Microsoft that adds static typing to JavaScript, enhancing the development experience and reducing runtime errors.
TypeScript is a superset of JavaScript that adds static types, enabling developers to catch errors early and improve code quality in large applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications.



TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications for better code quality.


TypeScript is a programming language that builds on JavaScript by adding static type definitions, commonly used in AWS CDK applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, making it easier to write and maintain large applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, enhancing code quality and maintainability.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and other features for building robust applications.
</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,0dc4f8c1cc6105e325f2d84d2083a4c0,0e3c564b3dd53e829befef4d6241c23e,20652ea1750ad5513b326c308672d886,21bbed2998c7a9b202d76d56c78cb512,2e44942744c40cf6e169212e822438d5,2f2dde2368e46aa812e2a39e32b3505d,391895fc365f2f2512a45ea503fbfa86,3b86536c72cd33dea29dc82250012d80,4dfb13dff74e4dc45c19d4d71fe1a443,4e07cca41acd33806d13242f5e21f621,514671e4a7b4b0d7573852d3d380eefd,5f794e811d0f825d9e561f1210793eb7,64c02a535c1519ef24ded4a2a368f2be,6741df7802dff57e070b002915d9590a,6f6e767a35b75e1c7658fbbddd94a842,72e1433a8550144aaf1d1fd8f3cb3774,735b59f53ffba96602dace4169c285ed,816401f1962be5373b03365c403e3a92,82c6ef4d52bb277665ade9f274822be3,89def9941cbf0a381e1e4a28a703e201,8b55191578f60b2d2fac3ae2f4d05b2e,936f58e9a3d0c41d6fd88ca7b6e0a119,95c2ea5a0f820f012ba0ea521843d34d,a50f51132c97b3887f2b21ed846fa020,ab49838f472483f11a1afbcaff84ad1e,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,c1845aec41d031b5a72f6f472ab4a5f2,c5461cfa4259c43255132d8f916b1764,d0da48d43a184db7d07729aa6047ca3d,d5597c0b98fb6d7afb8e40f53a3b0be7,d5671c2494c6418a266da35fff705101,db7dfb25749de8f86ac15552fec549ec,dea59f788f9645dcf527f4f5f4f12ae7,e3c6466a080dbad6e05f99bda0212547,ebf2bae9a2cdf5d2e3134ed7001d0238,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="LINTING">
      <data key="d0">EVENT</data>
      <data key="d1">Linting is the process of checking the code for errors and enforcing coding standards using ESLint in Next.js applications.</data>
      <data key="d2">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="TELEMETRY">
      <data key="d0">EVENT</data>
      <data key="d1">Telemetry refers to the anonymous data collection about the usage of Next.js, which can be enabled or disabled by users.
Telemetry in Next.js refers to the collection of anonymous usage data to improve the framework and user experience.
Telemetry in Next.js refers to the collection of anonymous usage data to improve the framework.</data>
      <data key="d2">6f23aef3387d9221b1a88bdfa6874ba3,bf545f52d7ba0c458692304a2c0ca7e4,f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Options refer to the various command-line flags and parameters that can be used with Next.js commands to modify their behavior.
Options refer to the various command-line parameters that can be used to modify the behavior of Next.js commands.
options is an object in Next.js that specifies properties for cache behavior, such as tags and revalidation time.
Options in Next.js are various settings that can be configured to control the behavior of pages and components.
OPTIONS is an HTTP method supported by Next.js that describes the communication options for the target resource.
Options is a selectable choice within a disabled RadioGroupField in AWS Amplify UI.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc,2fa22e032f66ea7c5422792329c30589,4ce3b8264c29bdceda24edfe6f9bda41,a332c6db30f7b29cd4dcb1117bd6eab3,bf545f52d7ba0c458692304a2c0ca7e4,edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="SYSTEM INFORMATION">
      <data key="d0">EVENT</data>
      <data key="d1">System information includes details about the operating system and environment in which the Next.js application is running.</data>
      <data key="d2">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="APPLICATION DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The application directory is the location on the file system where the Next.js application resides.</data>
      <data key="d2">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="HOSTNAME">
      <data key="d0">EVENT</data>
      <data key="d1">Hostname refers to the network address that the Next.js application will bind to, defaulting to 0.0.0.0.
Hostname is the domain name of a server, in this case, 's3.amazonaws.com' is used for accessing resources on Amazon S3.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="KEEPALIVETIMEOUT">
      <data key="d0">EVENT</data>
      <data key="d1">KeepAliveTimeout is a setting that specifies how long to wait before closing inactive connections in the Next.js application.</data>
      <data key="d2">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="BUILD COMMAND">
      <data key="d0" />
      <data key="d1">
Build command refers to the process of compiling and preparing an application for production deployment.</data>
      <data key="d2">bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </node>
    <node id="INSTRUMENTATION.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Instrumentation.js is a file used in Next.js to integrate observability tools for tracking performance and debugging issues in production.
The instrumentation.js file is used to integrate observability tools into a Next.js application for tracking performance and debugging issues.</data>
      <data key="d2">6f23aef3387d9221b1a88bdfa6874ba3,a5566406ae5db585eb3829f4a25e7025</data>
    </node>
    <node id="API REFERENCE">
      <data key="d0">EVENT</data>
      <data key="d1">The API Reference for Next.js provides documentation on various features and functionalities of the framework, including instrumentation.
API Reference provides documentation on the functions and components available in Next.js, guiding developers on their usage.
The API Reference provides detailed documentation on the components and features available in Next.js.
The API Reference in Next.js provides documentation on the various APIs available for use within the framework, including network and encoding APIs.)&lt;|COMPLETE|&gt;
API Reference provides detailed documentation on the functions and features available in Next.js, guiding developers on how to use them effectively.
API Reference is a documentation that provides details about the available APIs, their parameters, and usage in Next.js.</data>
      <data key="d2">59f479f2a59b233e2c0b4bfcfce952a8,6b625fce8c9b4b0f729aa3cdc85d284d,6f23aef3387d9221b1a88bdfa6874ba3,80a786416360b0f3873c10b0b635c67b,a39499341fdd66534be31b2131784b51,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="LOCALHOST">
      <data key="d0" />
      <data key="d1">
Localhost refers to the local server environment where applications are tested, typically accessed via the URL http://localhost:3000.
Localhost refers to the local computer that is running the server, typically used in development environments.

Localhost refers to the local computer that a program is running on, often used for testing web applications.

Localhost refers to the local computer that is running the application, often used for development purposes.
Localhost refers to the local computer that a program is running on, often used for testing and development purposes.
Localhost refers to the local computer that a user is working on, often used for testing applications.</data>
      <data key="d2">162dda357807004bc0720c9422f45783,2599c1b415576410d2f9b23f4299c4cb,3cdd6c81baa65bbde6eabfc399eb25b6,45d1b0474e5a4ef2a69bdf70528aedb4,6f23aef3387d9221b1a88bdfa6874ba3,81518acc3db43af0161d599284ff910e,b45c653df41952b7c0b22c7926afe5f7,d5671c2494c6418a266da35fff705101,f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="DYNAMIC BUNDLE">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Bundle is an example event in the context of Next.js where multiple components are loaded dynamically.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="CODMODS">
      <data key="d0">EVENT</data>
      <data key="d1">Codemods are programmatic transformations that help upgrade codebases in Next.js when APIs are updated or deprecated.
Codemods are transformations that help upgrade codebases when features are deprecated in frameworks like Next.js.
Codemods are transformations that run on your codebase programmatically to apply changes when a feature is deprecated.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f,7a1bd3f71b0a9aadbba7495339a8b723,efa0be72e5e017f56fa9efbf06af7e7c</data>
    </node>
    <node id="HELLO1">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hello1 is a component that can be dynamically imported in a Next.js application.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="HELLO2">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hello2 is a component that can be dynamically imported in a Next.js application.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="REACT.SERVER.COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Server Components is a feature of React that allows components to be rendered on the server, improving performance and user experience.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="SERVER-RENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">Server-rendering is a technique where the server generates the HTML for a page before sending it to the client, enhancing load times and SEO.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="DYNAMIC">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic refers to the ability to load components or modules at runtime rather than at build time, allowing for more flexible applications.
Dynamic refers to content that is generated on-the-fly, often in response to user interactions or server requests.
Dynamic is a property in the staleTimes configuration that corresponds to the time period for caching when the page is neither statically generated nor fully prefetched.
Dynamic refers to the capability of Next.js to render pages dynamically based on the data or parameters provided at request time.</data>
      <data key="d2">234c5cf6d90b5c8b7d3583a3300a4752,453d5bb282fe98f4e12856552a025f0f,bc34912ac16bc1504d04e9019f0c8cb9,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="DYNAMIC-RESUME">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic-resume is a specific type of dynamic loading that allows for resuming the loading of components in Next.js applications.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="VERSION HISTORY">
      <data key="d0">EVENT</data>
      <data key="d1">Version History is a record of changes and updates made to the Next.js framework over time.
Version history refers to the record of changes and updates made to a software application, including new features and bug fixes.
Version history documents the changes made to the Next.js framework across different versions.
Version History documents the changes made to the Next.js framework across different versions.
The Version History section documents changes and updates made to the Next.js framework, detailing new features and fixes across different versions.
Version History documents the changes and updates made to Next.js, providing insights into new features and improvements over time.

Version History is a record of changes made to the Next.js framework, detailing updates and modifications in various versions.
Version History documents the changes and updates made to the Next.js framework over time, providing insights into its development and feature enhancements.
Version history refers to the record of changes made to a software or document, detailing updates and modifications over time.
Version History documents the changes made in different versions of the software, specifically version 13.0.0 in this context.
Version history documents the changes made to Next.js, including new features and updates in various versions.
Version History documents the changes and updates made to Next.js over time.
Version History documents the changes and updates made to Next.js over time, including new features and deprecations.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,1487c7dd4403a73c173d49bf2f73e2d8,2238ba4c005a726e011e67cd17d3a576,2e4837fd908fed547d3170725336a52e,3c09a802c38a10e785a119f2ba114c73,453d5bb282fe98f4e12856552a025f0f,4ce3b8264c29bdceda24edfe6f9bda41,4da3554b7826cf4b6dd608127da53568,52bf7bb5a492d2cb5b2f5f06d6507a81,6b625fce8c9b4b0f729aa3cdc85d284d,77bf22c1fcd1e61ff866f696397b3a69,7e9fce61758916e4d2b7de2f2f4d1704,84837300711040f4e7b736cdd8fce7d2,d5c8e583b99d40e21e52e5d76498cb0d</data>
    </node>
    <node id="IMPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Import is a statement in JavaScript that allows the inclusion of modules or components into a file for use.
Import is a JavaScript statement used to include modules or components in a file.
Importing is the process of including external modules or styles into a JavaScript file in Next.js.
Importing in programming refers to the process of including external files or libraries into a codebase to utilize their functionalities.
Import statements are used in JavaScript to include modules or components from other files or libraries into the current file.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8,453d5bb282fe98f4e12856552a025f0f,6bb5264a8b72d26916099f27337032fe,82c6ef4d52bb277665ade9f274822be3,efa0be72e5e017f56fa9efbf06af7e7c</data>
    </node>
    <node id="PROJECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A project refers to a specific application or codebase being developed using Next.js.</data>
      <data key="d2">453d5bb282fe98f4e12856552a025f0f</data>
    </node>
    <node id="ERROR">
      <data key="d0" />
      <data key="d1">
Error is a built-in JavaScript object that represents an error when trying to execute a statement or accessing a property.
Error refers to an event that occurs when an image fails to load, triggering a callback function to handle the failure.
Error is a state that indicates a problem occurred during form submission or data processing.
Error represents an error when trying to execute a statement or accessing a property in programming contexts.
Error is an event that occurs when there is an unexpected runtime error in the application, prompting fallback UI to be displayed.
An error in the context of Next.js refers to issues that occur during the execution of the application, which can be tracked using the instrumentation feature.
Error is a callback function that is invoked if the image fails to load, allowing for error handling in the Next.js Image component.
An error is an unexpected issue that occurs during the execution of a program, which can be caught and handled to prevent crashes.
An error in the context of this document refers to a problem that occurs during the execution of a program, which can be handled in the GlobalError component.
An error object that contains information about issues encountered during geofence operations.
An error in AWS Amplify indicates a problem that occurred during data operations, such as unauthorized access or failed requests.
Error refers to the styling and design elements used in Amplify's components to indicate error messages.
A type of message indicating an error that has occurred within the Amplify system.
Error states indicate that a UI component has encountered a problem, often displayed with visual cues.
An error event occurs when there is a failure in the file upload process, prompting error handling procedures.
Error is an event that occurs when there is a failure in the account deletion process, triggering the onError callback.
An error is an event that occurs when the Face Liveness Detector encounters an issue during its operation, requiring user intervention or retry.
Error is an event that represents any error returned from the service API call during the authentication process.

An error is an event that occurs when the application encounters an issue, which can be handled by the onError callback in the Face Liveness Detector.</data>
      <data key="d2">0540b18a392d2ccc8d9b4915eed9acfe,22aa4f927a16210ebb8804ace28ec79a,35f3b0ff8ac0afd0bab73f2b8a1595ce,37ea4ea73ecb3370ad928dc71b30f77f,4132dfa96e84fb89d3908b0e9dea6a62,453d5bb282fe98f4e12856552a025f0f,45bc04c1106dd47dcfb887084a04fd7b,4a5b866ffddc7fba2346c94f6c037019,4c49dc5beda0203ac9ac135243ec127e,530b644b2b2dcf37b1cde4a8c015083a,5c7c1b8a3cde0fc5a186b912ceba73bb,5dced807ee929bcba98d82ba0000fe33,793ee29fd3ae616dbc82df13c1d4f39b,7ebeb57bb18774254a901eafc1cb096f,95c47d77c6b1c1b930bbbff2c9d1facf,a046fdf9fbebaa56c0d37da25e453974,a0a19960cdaef7a85c598591f06454da,a0ed25040eb1637a5c82493764f822ac,b1787ce5e713d63d1f4f1203762380a3,c1a6031416f64c80a84765d33eb17be4,c7af2749681510be539a408772ae1755</data>
    </node>
    <node id="IMAGE COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Image Component in Next.js is used for optimized image loading and rendering in web applications.
The Image Component in Next.js is used for optimizing images in web applications, providing various props for configuration.
The Image Component is a feature in Next.js that allows developers to optimize images for performance and accessibility.
The Image component in Next.js is used for optimizing images and provides various properties for image loading and rendering.
The Image component in Next.js is a feature that optimizes image loading and rendering for better performance and user experience.
The Image component in Next.js is used for automatic image optimization and layout stability in web applications.
The Image component in Next.js is used for optimized image rendering, providing automatic image optimization features.
The Image component in Next.js is designed to optimize image loading and performance, providing features like lazy loading and automatic resizing.
The Image component in Next.js enhances the HTML &lt;img&gt; element by providing features for automatic image optimization, including size optimization and visual stability.
The Image Component in Next.js is an event that optimizes images for performance by lazy loading and automatically resizing images based on device size.
The Image Component is a feature of Next.js that allows for optimized image rendering with various properties and configurations.
The Image component in Next.js is used for optimizing images automatically when building applications.
The Image component in Next.js is used for optimized image rendering, providing automatic image optimization and layout stability.
The Image Component in Next.js is designed to optimize images for better performance and accessibility, with improvements introduced in version 12 and made default in version 13.
Image Component is a feature that optimizes images, prevents layout shift, and serves them in modern formats like WebP or AVIF.
The Image component in Next.js is used for automatic image optimization, enhancing performance and user experience on websites.
The Image Component in Next.js optimizes images for performance by lazy loading and automatically resizing images based on device size.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,0e3c564b3dd53e829befef4d6241c23e,18f541d57ea407041cdaa1be5bf593d9,24e08d5dea64dab91a3ce772d91b0e8f,3486aab51f1c22b4f23003db40986564,4c49dc5beda0203ac9ac135243ec127e,5ef33e2acd1009a637bf4b8ab41d49a1,66669d057195f54843266efcffb93a3b,7bf88bf4f2097fabdb3b57f7074def08,80a786416360b0f3873c10b0b635c67b,9da317a323ff76913285228d8243413e,a09305795b4f611b12ba570f6fc845a9,aaea03d7a1385785fae028f24c52f8a5,ab869c819df53e1e9e3adebf6a4234a2,c1845aec41d031b5a72f6f472ab4a5f2,ca4cf87ea29b0d3f9a148fa9aeabce4b,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="LINK COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Link Component in Next.js is used for client-side navigation between pages in a Next.js application.
The Link component in Next.js is used for client-side navigation between routes, enhancing user experience by enabling prefetching and smooth transitions.
The Link Component in Next.js simplifies navigation by automatically rendering an anchor tag, enhancing usability and performance in version 13.
The &lt;Link&gt; component in Next.js is used to create links between pages and automatically prefetches routes for better performance.
The Link component in Next.js is used for client-side navigation between pages, enhancing user experience by avoiding full page reloads.
The Link component in AWS Amplify UI for React is used for navigation, rendering an anchor element by default.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6,a09305795b4f611b12ba570f6fc845a9,a0a19960cdaef7a85c598591f06454da,a50f51132c97b3887f2b21ed846fa020,c55d8ff0ea71716df1fdfba115d52035,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="CREATE REACT APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Create React App is a tool that sets up a new React project with a good default configuration.
Create React App is a tool for creating single-page React applications with a focus on client-side rendering.
Create React App is a tool for creating single-page React applications with a default configuration, which can be migrated to Next.js for better performance.
Create React App is a tool for creating single-page React applications with a modern build setup.
Create React App is a tool for setting up a new React project with a default configuration, allowing developers to start building applications quickly.

Create React App is a tool that sets up a new React project with a sensible default configuration.
</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,64488fb4232e09664566b2ee3c00394a,7a1bd3f71b0a9aadbba7495339a8b723,a09305795b4f611b12ba570f6fc845a9,a67099d1f0ea66a70c07e9595443231a,b453ff9e225c4008acb26b7c1bf321dd,f0a75595032bbb539a5844dc72a00955,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="NEXT/FUTURE/IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">next/future/image is a component in Next.js that was used for image rendering before being replaced by next/image in version 13.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="MIGRATE TO THE NEW IMAGE COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A process in Next.js to transition from using next/legacy/image to the new next/image component, involving changes to props and styles.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="REMOVE &lt;A&gt; TAGS FROM LINK COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">A transformation process in Next.js to simplify Link components by removing &lt;a&gt; tags or adding legacyBehavior for compatibility.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="ADD REACT IMPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">A process in Next.js to ensure that all components import React to support the new JSX transform.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="TRANSFORM ANONYMOUS COMPONENTS INTO NAMED COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">A transformation in Next.js to convert anonymous components into named components for better compatibility with Fast Refresh.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="TRANSFORM AMP HOC INTO PAGE CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">A process in Next.js to convert the withAmp higher-order component into page configuration settings.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="USE WITHROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">A transformation in Next.js to replace deprecated url property usage with the withRouter higher-order component for routing.</data>
      <data key="d2">a09305795b4f611b12ba570f6fc845a9</data>
    </node>
    <node id="NEXT/LEGACY/IMAGE">
      <data key="d0" />
      <data key="d1">


The next/legacy/image component is a version of the image component that maintains the behavior of previous versions of Next.js.</data>
      <data key="d2">564b1122ed77a335ef83dd856be6b406,a09305795b4f611b12ba570f6fc845a9,ca4cf87ea29b0d3f9a148fa9aeabce4b,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="CI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Continuous Integration (CI) is a software development practice where code changes are automatically tested and merged into a shared repository.
Continuous Integration (CI) is a development practice where developers frequently integrate their code changes into a shared repository, which is then automatically tested.
Continuous Integration (CI) is a development practice where developers integrate code into a shared repository frequently, leading to automated testing and deployment.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274,0ef0d7dfd239c67d2b08d6be68926b78,b45c653df41952b7c0b22c7926afe5f7</data>
    </node>
    <node id="WEBPACK 5">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Webpack 5 is a module bundler that compiles JavaScript applications and is the default for Next.js applications.
Webpack 5 is a module bundler that is now the default for all Next.js applications, enhancing the build process and performance.
Webpack 5 is a module bundler for JavaScript applications, which is now the default for all Next.js applications.
</data>
      <data key="d2">016bf1f47e649cd8112b488d5c847dcc,0d8e33ad02583991ccfe5560b2787274,ab49838f472483f11a1afbcaff84ad1e,bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="APP CONTAINER">
      <data key="d0">EVENT</data>
      <data key="d1">The App Container is a component in Next.js that was deprecated in version 9.0.4, which previously handled scrolling to hashes in custom App components.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274</data>
    </node>
    <node id="CUSTOM APP">
      <data key="d0">EVENT</data>
      <data key="d1">The Custom App in Next.js allows developers to customize the default App component for their applications.The Custom App is a feature in Next.js that allows developers to override the default App component to control the page initialization.
</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e,0d8e33ad02583991ccfe5560b2787274</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="CONTAINER">
      <data key="d0">EVENT</data>
      <data key="d1">The Container component was used in Next.js prior to version 9.0.4 to wrap the custom App component.
Container is a component that wraps the StorageManager, providing a layout for file management.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274,ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="APP CONTAINER DEPRECATED">
      <data key="d0">EVENT</data>
      <data key="d1">The App Container Deprecated error occurs when the &lt;Container&gt; component is used in a custom App component after it has been deprecated in Next.js version 9.0.4.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274</data>
    </node>
    <node id="WEBPACK 5 ADOPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Webpack 5 Adoption refers to the transition of Next.js to using Webpack 5 as the default for compilation, which includes various improvements and features.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274</data>
    </node>
    <node id="NEXT CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Next Config is a configuration file in Next.js that allows developers to customize the behavior of their Next.js application.
next.config.js is a configuration file for Next.js applications where various settings, including ESLint directories, can be defined.</data>
      <data key="d2">0d8e33ad02583991ccfe5560b2787274,7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="NO CACHE DETECTED">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0d8e33ad02583991ccfe5560b2787274</data>
    </node>
    <node id="WEBPACK">
      <data key="d0" />
      <data key="d1">
Webpack is a module bundler for JavaScript applications, allowing developers to bundle their JavaScript files and manage dependencies.
Webpack is a module bundler for JavaScript applications, allowing developers to bundle and optimize their code for production.
Webpack is a module bundler for JavaScript applications that compiles JavaScript modules and assets into a single file or multiple files for deployment.
Webpack is a module bundler for JavaScript applications, allowing developers to bundle their code and assets for deployment.
Webpack is a module bundler for JavaScript applications that compiles and bundles JavaScript files for usage in a browser.
Webpack is a module bundler for JavaScript applications that compiles and bundles JavaScript files for usage in a browser.
Webpack is a static module bundler for modern JavaScript applications, allowing developers to bundle their JavaScript applications and manage dependencies.</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,64488fb4232e09664566b2ee3c00394a,7849b1ca8bbfc8c3240def9d244f008d,9726f4ae30b11539c429ff41c8326d46,99aea11e8e00a31189977a03ce528a10,ce32447561606063e2fc6439cb2f9989,d5597c0b98fb6d7afb8e40f53a3b0be7,f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="OPERATING SYSTEM">
      <data key="d0">EVENT</data>
      <data key="d1">The operating system is the software that supports a computer's basic functions, such as scheduling tasks and controlling peripherals.</data>
      <data key="d2">f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="COMMAND-LINE INTERFACE">
      <data key="d0">EVENT</data>
      <data key="d1">A command-line interface is a means of interacting with a computer program where the user issues commands in the form of successive lines of text.</data>
      <data key="d2">f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="PACKAGE VERSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Package versions refer to the specific versions of software packages used in a project, which can affect compatibility and functionality.</data>
      <data key="d2">f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="CONFIGURATION FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A configuration file is used to set parameters and initial settings for a program, allowing customization of its behavior.
The configuration file in a Next.js project, such as next.config.mjs, holds various settings and options for the application.
A configuration file is used to set options for Next.js and TypeScript projects.
A configuration file is used to set options and parameters for an application, such as the next.config.mjs file for Next.js.</data>
      <data key="d2">95c2ea5a0f820f012ba0ea521843d34d,a67099d1f0ea66a70c07e9595443231a,d8317c2b832a421e629375219f74e12f,f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="SELF-SIGNED CERTIFICATE">
      <data key="d0">EVENT</data>
      <data key="d1">A self-signed certificate is a certificate that is signed by the person creating it rather than a trusted certificate authority, often used for testing purposes.</data>
      <data key="d2">f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="LOAD-BALANCER">
      <data key="d0">EVENT</data>
      <data key="d1">A load-balancer is a device that distributes network or application traffic across a number of servers to ensure reliability and performance.</data>
      <data key="d2">f142ef31412a3248fc837262ecf35ddb</data>
    </node>
    <node id="ALHAMBRA">
      <data key="d0">GEO</data>
      <data key="d1">Alhambra is a city in California, but it is not directly mentioned in the text; it serves as a placeholder for geographical context.</data>
      <data key="d2">77371d3904d4e5b3fca92caaa7329a5c</data>
    </node>
    <node id="CERTIFICATES">
      <data key="d0">EVENT</data>
      <data key="d1">Certificates are digital documents used to prove the ownership of a public key, which is essential for establishing secure HTTPS connections in web applications.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">77371d3904d4e5b3fca92caaa7329a5c</data>
    </node>
    <node id="BUILD MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Build mode refers to the process of compiling the application for production, which is necessary before starting the application.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc</data>
    </node>
    <node id="COMMAND LINE INTERFACE">
      <data key="d0">EVENT</data>
      <data key="d1">The command line interface is a text-based interface used to interact with the operating system and execute commands related to Next.js.</data>
      <data key="d2">00f6f02bfd7f7bcf6fa53ab912dcb6dc</data>
    </node>
    <node id="PAGE FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A page file in Next.js is a JavaScript file that defines a route in the application, typically located in the pages directory.</data>
      <data key="d2">ad18f1240db75ed731ff9f7ec075320e</data>
    </node>
    <node id="CONFLICTING FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A conflicting file occurs when a public file and a page file share the same path, which is not supported in Next.js.</data>
      <data key="d2">ad18f1240db75ed731ff9f7ec075320e</data>
    </node>
    <node id="PUBLIC FILE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ad18f1240db75ed731ff9f7ec075320e</data>
    </node>
    <node id="HTTPS CERTIFICATE AUTHORITY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A certificate authority that issues digital certificates for secure communications over HTTPS.</data>
      <data key="d2">b02497cb2bc6f667d39aa316235e09d5</data>
    </node>
    <node id="ARM64">
      <data key="d0">GEO</data>
      <data key="d1">ARM64 is a 64-bit instruction set architecture used in modern computing devices, including smartphones and tablets.
ARM64 is a 64-bit architecture used in modern computing devices, providing improved performance and efficiency.</data>
      <data key="d2">b02497cb2bc6f667d39aa316235e09d5,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="BUILD OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Build options refer to the various configurations and parameters that can be set when compiling an application, affecting its performance and behavior.</data>
      <data key="d2">b02497cb2bc6f667d39aa316235e09d5</data>
    </node>
    <node id="START COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">The start command is used to launch an application in production mode after it has been built, ensuring it runs correctly in a live environment.
Start command refers to the command used to run the application in production mode after it has been built.</data>
      <data key="d2">b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </node>
    <node id="INFO COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">The info command provides detailed information about the current system and application environment, useful for debugging and reporting issues.
Info command refers to the command that prints relevant details about the current system and application setup.</data>
      <data key="d2">b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </node>
    <node id="POLYFILL.IO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Polyfill.io is a service that allows developers to include polyfills for web features based on the user's browser capabilities.</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="HEAD COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Head component in Next.js is used to manage the document head for a page, allowing for dynamic changes to the head elements like title and meta tags.</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="DOCUMENT HEAD">
      <data key="d0">EVENT</data>
      <data key="d1">The Document Head is the section of an HTML document that contains meta-information about the document, such as its title and links to stylesheets.</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="PAGE TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">The title of a page that should be defined at the page-level using the next/head component in Next.js.</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="DUPLICATE POLYFILLS">
      <data key="d0">EVENT</data>
      <data key="d1">A situation where polyfills are included multiple times, which can negatively impact page loading performance in Next.js applications.</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="SUPPORTED BROWSERS AND FEATURES">
      <data key="d0">EVENT</data>
      <data key="d1">A resource that lists the browsers and features supported by Next.js, helping developers understand which polyfills may be necessary.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </node>
    <node id="URL">
      <data key="d0">EVENT</data>
      <data key="d1">The URL is a deprecated property in Next.js that was previously injected into every Page component, which is now being phased out for better predictability and explicitness.
URL is a standard for specifying addresses on the internet, used in web development.
URL is a uniform resource locator that specifies the address of a resource on the internet, used in routing and redirects.
URL represents an object providing static methods used for creating object URLs.
The URL is a web address that points to a specific resource on the internet, in this case, the documentation for Next.js rewrites.
A URL is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.
An object that represents a URL and provides methods to manipulate it, often used in conjunction with redirects in web applications.
URL (Uniform Resource Locator) is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it.
URL refers to the web address generated for each product in the sitemap, which directs users to specific product pages.
A URL (Uniform Resource Locator) is the address used to access resources on the internet, often modified by form submissions to include query parameters.

The URL is a web address that leads to the documentation for the Default Theme in Amplify UI for React.</data>
      <data key="d2">16332d9a8715d2cac034c2aa3c4f12f6,18256f324d7f8fc0edac5bbf717bf76d,22aa4f927a16210ebb8804ace28ec79a,63bae3a149e50b7452962f7bdd8724ea,a8c0873902ebe92185a879561056ce61,b1787ce5e713d63d1f4f1203762380a3,b6f71d64cf5764914e58142430b460e6,c05ef5dba44db89bf8b7415f5e2ad7fc,c22dbf534c525258e8788bff5c1c5e66,d0b7431b1eedf2a5660218e7e399d8ab,ddf9997eb4ecd67204ea6df04b23cc07,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="REACT DEV TOOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Dev Tools is a browser extension that allows developers to inspect React component hierarchies in the virtual DOM.</data>
      <data key="d2">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </node>
    <node id="PAGES/_DOCUMENT.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/_document.js file in Next.js is used to customize the HTML document structure for the application.
The pages/_document.js file is a special file in Next.js used to customize the default Document component for the application.
The pages/_document.js file in a Next.js application is used to customize the HTML document structure, including adding preconnect links.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9,b64f76a17fdc1ede6338de69e7d7bce4,c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </node>
    <node id="PAGES/_APP.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/_app.js file in Next.js is used to initialize pages and can be used to add global styles or layout components.
The pages/_app.js file in a Next.js application is used to initialize pages and can include global styles and scripts.
The pages/_app.js file is a custom application file in Next.js where global components like Google Analytics can be included for tracking across all routes.
The _app.js file in Next.js is used to initialize pages and can include global styles and configurations for the application.
The _app.js file in Next.js is used to initialize pages and can be used to import global styles for the application.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9,3a82472230692a8c3ac8444f7738b625,7e52aca588d432140f210661ae169677,c05ef5dba44db89bf8b7415f5e2ad7fc,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="SCRIPT COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Script component in Next.js is used to load third-party scripts efficiently in a React application.
The Script component in Next.js is used to load external scripts in a way that optimizes performance and tracking.
The Script Component in Next.js is used to optimize the loading of external scripts in web applications.
The Script component in Next.js is used to manage the loading and execution of JavaScript files in a React application.
The Script Component in Next.js is used to optimize the loading of external scripts in web applications.
The Script Component in Next.js is used to manage third-party scripts and optimize their loading behavior in applications.
Script Component is a tool that optimizes third-party scripts, deferring them to prevent blocking the main thread.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9,77bf22c1fcd1e61ff866f696397b3a69,7e52aca588d432140f210661ae169677,aaea03d7a1385785fae028f24c52f8a5,c05ef5dba44db89bf8b7415f5e2ad7fc,cc73438c54108f8ee25c9221d62bafca,d5c8e583b99d40e21e52e5d76498cb0d</data>
    </node>
    <node id="STYLED-JSX">
      <data key="d0">EVENT</data>
      <data key="d1">Styled-jsx is a library for scoped CSS in Next.js applications, which should not be used in the pages/_document.js file.
Styled-jsx is a library that provides support for scoped CSS in Next.js applications, allowing for component-level styling.
Styled-JSX is a library for writing scoped CSS in JSX, allowing for component-level styling in React applications.</data>
      <data key="d2">3a82472230692a8c3ac8444f7738b625,c05ef5dba44db89bf8b7415f5e2ad7fc,d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="THIRD-PARTY SCRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">Third-party scripts are external JavaScript files that can be loaded into a web application to add functionality or features.</data>
      <data key="d2">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </node>
    <node id="HTML CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">HTML content refers to the markup language used to create web pages, which is relevant in the context of Next.js documentation.
HTML Content refers to the markup language used to create web pages, which includes elements like headings, paragraphs, links, and more.
HTML content refers to the markup language used to create web pages, which can be rendered by browsers to display information to users.
HTML Content refers to the markup language used to structure web pages, which is relevant in the context of Next.js applications.
HTML Content refers to the markup language used to create web pages, which is rendered by browsers to display information to users.
HTML content refers to the structured content written in Hypertext Markup Language, which is used to create web pages and applications.
HTML Content refers to the structured content that is displayed on web pages, including text, images, and links.
HTML Content refers to the structure and elements that make up the web pages in Next.js applications.
HTML Content refers to the structure and elements that are rendered in the Next.js application, including text and components.
HTML Content refers to the structured content that is rendered in a web page, including elements like headings, paragraphs, and links.</data>
      <data key="d2">16332d9a8715d2cac034c2aa3c4f12f6,4443464e7a2cb4bcbbf667881fecb236,4ce3b8264c29bdceda24edfe6f9bda41,6e82a6e0427e12aef8dafce9907f3835,b6b4173819c0a759fcd3146179f8f534,b6c19fc60714c90b16c67bd7df9573f9,c05ef5dba44db89bf8b7415f5e2ad7fc,ce540af7d610dfd65c29afa83f46b65e,d96d8ae7162e4a76bff1216bb9a8e47a,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="CODES">
      <data key="d0">EVENT</data>
      <data key="d1">Codes refer to the programming scripts or transformations that can be applied to modify or enhance the functionality of a web application.</data>
      <data key="d2">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </node>
    <node id="BROWSERS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </node>
    <node id="MYDOCUMENT">
      <data key="d0">EVENT</data>
      <data key="d1">MyDocument is a custom Document component in Next.js that allows for the customization of the HTML document structure.
MyDocument is a custom document component in a Next.js application that handles server-side rendering and initial props for the document context.</data>
      <data key="d2">c4efc37a62b19ea7ba04b6eccea112c5,ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="DOCUMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Document is a component in Next.js that is used to customize the default HTML document structure for a Next.js application.
Document is a base class in Next.js that allows customization of the HTML document structure.
</data>
      <data key="d2">0f0c3a1733d9928c7207a0931e147afe,c4efc37a62b19ea7ba04b6eccea112c5,ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Image is a component in Next.js that provides automatic image optimization for better performance.
Image is a component in Next.js that optimizes images for faster loading and better performance, requiring the basePath to be set for serving images correctly.
Image is a React component used in Next.js for displaying images with various properties and optimizations.
An event that occurs when an image is loaded or fails to load in a web application.
Image is a component in Next.js used for optimizing images in web applications.
The &lt;Image&gt; component in Next.js is used for optimized image loading and rendering, improving performance and user experience in web applications.
The Image component is a React component used for rendering images with various properties to optimize loading and performance.
The Image component in Next.js is used for optimizing images in web applications.
Image is a component in Next.js that optimizes images for performance, automatically serving the appropriate size and format based on the user's device.
The Image component in Next.js is used to optimize images for performance and responsiveness in web applications.
The Image component in Next.js is used for optimizing images and includes various properties for loading and error handling.


Image refers to the visual representation associated with a song, typically used as cover art.
The Image component is used to display images within the Storage Manager, allowing users to preview uploaded files.
The Image component in AWS Amplify UI is used to display images within applications, allowing for visual content integration.
Image is a component used to display images in the Autocomplete options, enhancing visual representation.
The Image primitive in Amplify UI is used to display responsive images in user interfaces.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,20f099859bc84200865a67d0cbf4c8bb,2238ba4c005a726e011e67cd17d3a576,24e08d5dea64dab91a3ce772d91b0e8f,4132dfa96e84fb89d3908b0e9dea6a62,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4e07cca41acd33806d13242f5e21f621,7b971bc32d696dda8aea178d02a73fea,868b364b65a596f02a214b12ca0cbb6a,8eb965e4d19780deabbcf7d96ed2a45f,9da317a323ff76913285228d8243413e,ccacadee21d69e15eb428a9a9d8de65f,d8d35bb9ab00c5657d67d2362a6bbd10,d9a272b23f1d5cf3e9a9c6a2c79923b8,e3c4629b893f38a9c103147f3ea608f3,ecc794f2647ea18dc504fd09133f90c8,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="LINK">
      <data key="d0">EVENT</data>
      <data key="d1">Link is a component in Next.js that enables client-side navigation between pages without full-page refreshes.
Link is a component used in the code examples to navigate between pages in a web application.
Link is a component in Next.js used for client-side navigation between pages, automatically applying the basePath when linking to other pages.
Link is a React component in Next.js that extends the HTML &lt;a&gt; element for client-side navigation between routes.
Link is a component in Next.js that allows for client-side navigation between pages in a React application.


Link is a component in Next.js that enables client-side navigation between pages in a React application.

Link is a React component provided by Next.js for client-side route transitions between pages.

Link is a component in Next.js that allows for client-side navigation between pages without a full page reload.
Link is a component in Next.js used for client-side navigation between pages in a React application.
Link is a component in Next.js that enables client-side navigation between pages in a Next.js application.

Link is a component in Next.js that enables client-side navigation between pages in a React application.
The Link Component in Next.js is built on native &lt;a&gt; tags and prefetches pages in the background for faster and smoother page transitions.
A link is a navigational element that allows users to move from one page to another within the application.
Link is a built-in component in Next.js that provides prefetching and client-side navigation between routes.
The Link component is a navigational element that allows users to access different parts of a website or application.
Links in Amplify UI are customizable and themeable elements used for navigation, rendering an anchor tag by default.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,0d45ae64c949dd150906ccaed4b6b5c2,3c09a802c38a10e785a119f2ba114c73,4443464e7a2cb4bcbbf667881fecb236,45fc1e950172cd0fb4a7f0162afae421,4647f3f9cf6eaae5dadd71a1dc2e58ae,5f794e811d0f825d9e561f1210793eb7,62cbc95f20c7b902a0c2e3e9af7dd83c,66c478df0b5dc48b45a6c5e00867576d,735b59f53ffba96602dace4169c285ed,77bf22c1fcd1e61ff866f696397b3a69,7cd464b0f42ff05e87fa7e149d7e2997,7ebeb57bb18774254a901eafc1cb096f,88cf0bb9f01e55013ddfc8434b5c4f40,99d758fe4e77c64e3d6461268ba8b6d4,d4880ef934642aac0f85ca34038b847d,d5c8e583b99d40e21e52e5d76498cb0d,dc10462a75be57d14f05bf6a26ba9731,e3c4629b893f38a9c103147f3ea608f3,ecc794f2647ea18dc504fd09133f90c8,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="HEAD">
      <data key="d0">EVENT</data>
      <data key="d1">Head is a component in Next.js that allows for the modification of the document head, such as adding meta tags and links.
The Head component in Next.js is used to manage the document head, allowing developers to set metadata and links for their pages.
The &lt;Head&gt; component in Next.js is used to append elements to the head of the page, allowing for dynamic management of metadata and other head elements.
Head is a component in Next.js used for managing the document head, including meta tags and links.
The Head component in Next.js is used to manage HTML elements in the head section of a webpage, such as title and meta tags.
Head is a component in Next.js used to manage the document head, allowing for dynamic updates to the page's metadata and scripts.
Head is a component in Next.js used to manage the document head, allowing for the inclusion of scripts and metadata.
HEAD is a section of an HTML document that contains meta-information about the document, such as title and links to stylesheets.
Head is a component in Next.js used to modify the document head, allowing for the inclusion of metadata and links to stylesheets.
HEAD is an HTTP method supported by Next.js that retrieves the headers for a resource without the body.
The &lt;head&gt; element in HTML contains meta-information about the document, such as its title and links to stylesheets.</data>
      <data key="d2">173e80ccbe8ecd833c055f4cd3e75ee6,2238ba4c005a726e011e67cd17d3a576,514671e4a7b4b0d7573852d3d380eefd,7de6e744f7ef4ab90e5a1db6bfad49c3,8023a6acc1593be80b1d65bbe4d5fb3e,84837300711040f4e7b736cdd8fce7d2,a332c6db30f7b29cd4dcb1117bd6eab3,ab49838f472483f11a1afbcaff84ad1e,b64f76a17fdc1ede6338de69e7d7bce4,c4efc37a62b19ea7ba04b6eccea112c5,ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="FONT">
      <data key="d0">EVENT</data>
      <data key="d1">Font refers to the typeface used in the application, which can be customized and optimized in Next.js applications.
Font refers to the typography styles and sizes used in Amplify's components for user interface design.
FONT refers to the various font settings in Amplify UI, including primary, secondary, and interactive font styles.</data>
      <data key="d2">1a2c25b18b52cc9adff7a263b890a3b5,37ea4ea73ecb3370ad928dc71b30f77f,ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="OPTIMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Optimization refers to the process of improving the performance of images and fonts in a Next.js application.</data>
      <data key="d2">ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="PAGES">
      <data key="d0" />
      <data key="d1">


Pages refer to the individual components or routes in a Next.js application that can be rendered and navigated to by users.
Pages in Next.js refer to the components that are rendered for different routes in the application.
</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,08316a3a770ad75c98250e17ce7ddf51,1b3c3a93e182b501d03ffb0b41273e30,7bc622b9dda4deed82c3382772daca19,7de6e744f7ef4ab90e5a1db6bfad49c3,ecc794f2647ea18dc504fd09133f90c8</data>
    </node>
    <node id="CSS MODULES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CSS Modules are a way to include styles scoped specifically to components in Next.js applications.
CSS Modules are a feature in Next.js that allows for modular and scoped CSS, preventing style conflicts in applications.

CSS Modules are a way to scope CSS locally in Next.js, preventing class name collisions across components.
CSS Modules is a styling approach in Next.js that allows for locally scoped CSS classes to avoid naming conflicts.
CSS Modules are a feature in Next.js that allows for modular and scoped CSS, preventing style conflicts in web applications.
CSS Modules are a way to write CSS that is scoped locally to the component, preventing style conflicts in larger applications.
CSS Modules are a way to scope CSS by automatically creating unique class names, preventing style collisions.
CSS Modules allow for locally scoped CSS classes to avoid naming conflicts and improve maintainability.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,3a82472230692a8c3ac8444f7738b625,455e168c432979d018ea3d145e2547b5,a19a92a20fca1ccc164ea11570a4b26a,a9a858ea7abac3fe79fa759ea8171597,b64f76a17fdc1ede6338de69e7d7bce4,d405678be18c78d7d78d7a6521a58a56,d8317c2b832a421e629375219f74e12f,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="STYLES.CSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The styles.css file is a root stylesheet in Next.js that can include other stylesheets using @import.
styles.css is a stylesheet file used to define the styles for the components in Amplify UI.
Styles.css is a stylesheet used to define the visual presentation of HTML elements in web applications, particularly for the AWS Amplify UI components.
styles.css is a stylesheet file where custom styles for Amplify UI components can be defined.
styles.css is a stylesheet that contains CSS rules for styling components, including radio buttons and their states in Amplify UI.
A stylesheet that defines the visual presentation of HTML elements, including the PhoneNumberField and its components.
styles.css is a stylesheet used to define custom styles for components in the AWS Amplify UI for React.
styles.css is a stylesheet used to define custom styles for components in the Amplify UI library.
styles.css is a stylesheet used to apply global styles to components in AWS Amplify UI React.
Styles.css is a stylesheet used to define the visual appearance of components in the application, including the Link component.
styles.css is a stylesheet that contains global and local styling rules for the Link component and other UI elements in Amplify UI.
Styles.css is a stylesheet where developers can define custom styles for components in Amplify UI, including overrides for default styles.
styles.css is a stylesheet used to define custom styles for components in Amplify UI applications.

Styles.css is a stylesheet used to style components from the @aws-amplify/ui-react-geo library.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478,4c20122de1ca69ecf45662867d268049,52fc958abba47a16871f909ed3cc2d5a,6264f18714899ee18445e9c4535f5ff2,6f492ac78ca89b7028399a30a24b9dc6,6f822244ad945944fb292c514cfddc13,85d9171dd6e70ffdb5803e227ecacbc4,88cf0bb9f01e55013ddfc8434b5c4f40,a81c0d0aaddd7802d779f9b4e516b6a4,b64f76a17fdc1ede6338de69e7d7bce4,c6562553adf4b52a1a6eec1a462e147f,c7af2749681510be539a408772ae1755,e3c4629b893f38a9c103147f3ea608f3,e6f9ca43dfb29c7478264e5ebadfca37,e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="SCRIPTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Scripts in Next.js can be managed using the next/script component to control loading strategies for better performance.
The Script Component in Next.js allows developers to control the loading and execution of third-party scripts, enhancing application performance.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="NO HEAD ELEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">An error message indicating that a &lt;head&gt; element should not be used in Next.js applications, as it can cause unexpected behavior.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="NO DUPLICATE HEAD">
      <data key="d0">EVENT</data>
      <data key="d1">An error message warning against using multiple instances of the &lt;Head&gt; component in pages/_document.js to prevent unexpected behavior.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="NO DOCUMENT IMPORT IN PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">An error message indicating that next/document should not be imported outside of pages/_document.js to avoid issues.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="NO CSS TAGS">
      <data key="d0">EVENT</data>
      <data key="d1">An error message indicating that manual stylesheet tags should be avoided in Next.js applications to ensure proper CSS resource loading.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="NO BEFORE INTERACTIVE SCRIPT OUTSIDE DOCUMENT">
      <data key="d0">EVENT</data>
      <data key="d1">An error message indicating that the next/script component's beforeInteractive strategy should only be used within app/layout.jsx or pages/_document.js.</data>
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="NO HEAD IMPORT IN DOCUMENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </node>
    <node id="APP ROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">The App Router is a feature in Next.js that allows for routing and handling of application pages and components.
The App Router is a feature in Next.js that allows for routing in applications built with the framework.
The App Router is a feature in Next.js that allows for incremental adoption of new routing capabilities.
The App Router is a feature in Next.js that allows for routing in applications built with the framework.
The App Router is a new feature introduced in Next.js 13 that allows for incremental adoption and migration from the pages directory to the app directory.
The App Router is a feature in Next.js that allows for routing and layout management in applications, particularly during migration from the pages directory.
The App Router is a feature in Next.js that allows for improved routing capabilities within applications, enhancing user navigation and experience.

The App Router is a feature introduced in Next.js version 13 that supports shared layouts, nested routing, and error handling.
The App Router is a feature in Next.js that allows developers to use React's latest features for routing in their applications.
The App Router is a newer routing system in Next.js that supports React's latest features, such as Server Components and Streaming.
The App Router is a newer routing system in Next.js that supports React's latest features, including Server Components and Streaming.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,11e614f4c015c7f8295c0c49ac211a89,20652ea1750ad5513b326c308672d886,20660998cc2c85257c6b7502427f85d3,2d826219271d5b48e83835028c04e88b,45fc1e950172cd0fb4a7f0162afae421,514671e4a7b4b0d7573852d3d380eefd,6ebc8c74b9b797357659151a46693a88,8b55191578f60b2d2fac3ae2f4d05b2e,95c2ea5a0f820f012ba0ea521843d34d,c157c439271dbeeebb69b81254b288af,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="PAGES ROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">The Pages Router is a feature in Next.js that manages routing for pages in a traditional file-based manner.
The Pages Router is a feature in Next.js that manages routing for pages in applications.
Pages Router is a routing mechanism in Next.js that maps files to routes, allowing for easy navigation within applications.
The Pages Router is a feature in Next.js that allows for file-based routing, enabling developers to create routes based on the file structure.
The Pages Router is the traditional routing system in Next.js, which is being migrated to the App Router for better performance and features.
The Pages Router is an alternative routing system in Next.js that allows developers to define routes based on the file structure in the pages directory.
The Pages Router is the original routing system in Next.js that allows for server-rendered React applications.
The Pages Router is the original routing system in Next.js, allowing for server-rendered React applications and is still supported for older applications.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,20652ea1750ad5513b326c308672d886,20660998cc2c85257c6b7502427f85d3,2d826219271d5b48e83835028c04e88b,514671e4a7b4b0d7573852d3d380eefd,8b55191578f60b2d2fac3ae2f4d05b2e,b6b4173819c0a759fcd3146179f8f534,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="SCRIPT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A script is a piece of code that can be executed in a web application, often used for adding functionality or interactivity.
The next/script component is used in Next.js to manage the loading of external scripts, optimizing performance and ensuring proper execution order.
A script is a piece of code that is executed in the browser, often used for adding functionality to web pages.
Script is a component in Next.js that allows for the inclusion of third-party scripts in applications.
A script is a piece of code that can be executed in a web application, often used to enhance functionality or performance.
A script is a piece of code that can be executed in a web browser, often used to enhance web pages with dynamic content.
A script is a piece of code that can be executed in a web application, often used to add interactivity or functionality.</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3,45fc1e950172cd0fb4a7f0162afae421,5e8e906cb9a58f6e52be1a99d31da8cf,80a786416360b0f3873c10b0b635c67b,c1f63acba6f9a58b56bd71c409dcd343,cf17a04fd1ade3fe98ee4b50654b493e,e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="SERVER-SIDE">
      <data key="d0">EVENT</data>
      <data key="d1">Server-side refers to operations that are performed by the server rather than the client, often involving data fetching and rendering.
Server-side refers to operations that are performed by the server in a client-server architecture, often involving data processing and storage before sending responses to clients.
</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3,98961c89bf003488bbe6223bc946b205,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="CLIENT COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A client component in React is a component that runs in the browser and can manage its own state and lifecycle.
Client Components in Next.js are components that run on the client side, allowing for interactivity and dynamic behavior in web applications.
Client components in Next.js are components that run on the client side, allowing for interactivity and state management.
Client Components in Next.js are components that are rendered on the client side, allowing for dynamic interactions without server-side rendering.
Client Component is a type of component in Next.js that runs on the client side, allowing for interactive features and dynamic content.
A Client Component in Next.js is a component that is rendered on the client side, allowing for dynamic interactions without server-side rendering.
Client Components are components in Next.js that run on the client side, allowing for interactive features and dynamic content.
Client components are React components that are rendered on the client side, allowing for interactivity and dynamic behavior in the application.
Client Components in Next.js are components that run on the client side, allowing for interactivity and dynamic behavior in applications.
Client Components are a type of component in Next.js that are rendered on the client side, allowing for interactive features and state management.
A component that allows users to submit data and redirect them based on that data in a web application.
Client Component is a directive used in Next.js for managing client-side rendering and routing behavior.
Client components in Next.js are components that run on the client side, allowing for interactive features and state management.
Client Component is a React component that can access the current pathname and re-render during client-side navigation in Next.js.
Client Components are React components that are rendered on the client side, allowing for interactivity and dynamic behavior in applications.
Client Components in Next.js are components that are rendered on the client side, allowing for dynamic interactions and state management.
Client Components are components in Next.js that are rendered on the client side, allowing for interactive features and user engagement in applications.
A Client Component is a React component that can manage state and effects, and is prerendered on the server during the initial page load.
Client Components are React components that are rendered on the client side, allowing for interactivity and dynamic content.
Client Components are React components that run in the browser, allowing for interactivity and dynamic updates after the initial render.
Client Components are React components that are rendered on the client side, allowing for interactivity and state management.
Client Component refers to a React component that can utilize client-only features like useState and useEffect.
Client Component is a type of component in React that runs on the client side, allowing for interactivity and state management.
Client Components are parts of a Next.js application that run on the client side and can invoke Server Actions.
Client components in Next.js are components that are rendered on the client side, allowing for interactivity and state management within the browser.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,0e3c564b3dd53e829befef4d6241c23e,1487c7dd4403a73c173d49bf2f73e2d8,1d855e055624fb34345331017d371137,20660998cc2c85257c6b7502427f85d3,234c5cf6d90b5c8b7d3583a3300a4752,2f2dde2368e46aa812e2a39e32b3505d,39e13e59ba48563c8ec1c8c813746dac,3fb45c793f55da9bb4eda5392e25aafe,4ce3b8264c29bdceda24edfe6f9bda41,6ebc8c74b9b797357659151a46693a88,8023a6acc1593be80b1d65bbe4d5fb3e,80a786416360b0f3873c10b0b635c67b,8a317609f77f5ace7ebd5473071b9693,91a237014868fc106c5edbdc4ad2b520,98b8f4a199a3050f92608604cd0974b2,9f6dc0f379759d79c664c445c0051202,a046fdf9fbebaa56c0d37da25e453974,a5566406ae5db585eb3829f4a25e7025,ab869c819df53e1e9e3adebf6a4234a2,b134d3f66855ad9639688a0ef9bc8d25,b6f71d64cf5764914e58142430b460e6,bd1557f5f20d5d232df2cbf55be7cb8d,c1845aec41d031b5a72f6f472ab4a5f2,d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="SERVER COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A server component in React is a component that runs on the server and can fetch data before sending it to the client.
Server Components in Next.js are components that run on the server side, enabling server-side rendering and data fetching before sending HTML to the client.
Server components in Next.js are components that are rendered on the server, allowing for better performance and SEO.
Server components are parts of a web application that run on the server side, allowing for server-side rendering and data fetching before sending the response to the client.)&lt;|COMPLETE|&gt;
Server Components are components in Next.js that run on the server side, allowing for data fetching and rendering before sending to the client.
Server components are React components that are rendered on the server side, providing a way to fetch data and render HTML before sending it to the client.
Server Components are components in Next.js that run on the server, providing data and rendering content before it reaches the client.
Server Components are components in Next.js that are rendered on the server side, optimizing performance and initial load times.
Server components in Next.js are components that run on the server, enabling server-side rendering and data fetching.
Server Components are React components that are rendered on the server, providing static content to the client.)Relationships:("relationship"
Server components in Next.js are components that are rendered on the server, allowing for improved performance and SEO by sending pre-rendered HTML to the client.
Server Components in Next.js are components that are rendered on the server, providing a way to fetch data and render HTML before sending it to the client.
A Server Component is a React component that is rendered on the server by default and can fetch data directly within its function.

Server Components are a feature in React that allows components to be rendered on the server, optimizing the delivery of content to the client.
Server Components are a feature in React that allows developers to render components on the server, improving performance and reducing client-side JavaScript.
Server Component is a type of component in React that runs on the server side, primarily for rendering static content and data fetching.
Server Components are parts of a Next.js application that run on the server side and can define Server Actions.
Server components in Next.js are components that are rendered on the server, allowing for data fetching and improved performance before sending HTML to the client.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,0e3c564b3dd53e829befef4d6241c23e,1487c7dd4403a73c173d49bf2f73e2d8,1d855e055624fb34345331017d371137,20660998cc2c85257c6b7502427f85d3,234c5cf6d90b5c8b7d3583a3300a4752,2f2dde2368e46aa812e2a39e32b3505d,39e13e59ba48563c8ec1c8c813746dac,455e168c432979d018ea3d145e2547b5,5ef33e2acd1009a637bf4b8ab41d49a1,8023a6acc1593be80b1d65bbe4d5fb3e,80a786416360b0f3873c10b0b635c67b,8a317609f77f5ace7ebd5473071b9693,91a237014868fc106c5edbdc4ad2b520,98b8f4a199a3050f92608604cd0974b2,9bd0a80f4c931386ae8f2fb0226f92cd,a046fdf9fbebaa56c0d37da25e453974,b134d3f66855ad9639688a0ef9bc8d25,bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="CONTEXT PROVIDER">
      <data key="d0">EVENT</data>
      <data key="d1">A Context Provider in React is a component that allows for sharing values between components without having to pass props down manually at every level.</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3</data>
    </node>
    <node id="USE HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The use hook in React is a built-in function that allows functional components to manage state and side effects.</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3</data>
    </node>
    <node id="ASYNC CLIENT COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">An async client component is a client-side component that is defined as an asynchronous function, which is not supported in React.</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3</data>
    </node>
    <node id="DATA FETCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Data fetching is the process of retrieving data from a server or API, often used in web applications to display dynamic content.
Data fetching is an event in Next.js where data is retrieved from an external source to render a page.
Data fetching refers to the process of retrieving data from a server, which can be done on the client-side or server-side in Next.js applications.

Data fetching in Next.js refers to the methods used to retrieve data for pages, which can be combined with Static Generation or Server-side Rendering.
</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826,20660998cc2c85257c6b7502427f85d3,66fea93bb642287d13f3a25b8b3e0083,69ac19d7db15ae11c7884ce391807330,a9a858ea7abac3fe79fa759ea8171597,c8d58fd330c4f217c52b50590414e517</data>
    </node>
    <node id="PROMISE">
      <data key="d0">EVENT</data>
      <data key="d1">A promise is an object in JavaScript that represents the eventual completion (or failure) of an asynchronous operation and its resulting value.
Promise is a JavaScript object that represents the eventual completion (or failure) of an asynchronous operation, and its resulting value.
Promise represents the eventual completion or failure of an asynchronous operation, and its resulting value.
A Promise is an object that represents the eventual completion or failure of an asynchronous operation, used in data fetching
A promise in JavaScript represents the eventual completion (or failure) of an asynchronous operation and its resulting value, commonly used in API requests in AWS Amplify.</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,0540b18a392d2ccc8d9b4915eed9acfe,20660998cc2c85257c6b7502427f85d3,22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="FETCH API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Fetch API is a modern interface that allows for making network requests similar to XMLHttpRequest, but with a more powerful and flexible feature set.
The Fetch API is a modern interface that allows you to make HTTP requests in JavaScript, providing a more powerful and flexible feature set than the older XMLHttpRequest.
The Fetch API is a modern interface that allows you to make network requests similar to XMLHttpRequest. It is used to fetch resources across the network in an asynchronous manner.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,0bfaadafcf31828f19e4b2657565944a,20660998cc2c85257c6b7502427f85d3</data>
    </node>
    <node id="SCRIPT OPTIMIZATION">
      <data key="d0" />
      <data key="d1">
Script Optimization refers to the techniques and strategies used to improve the loading and execution of scripts in web applications, particularly in Next.js.</data>
      <data key="d2">20660998cc2c85257c6b7502427f85d3,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="GOOGLE ANALYTICS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Analytics is a web analytics service offered by Google that tracks and reports website traffic, providing insights into user behavior and engagement.
Google Analytics is a web analytics service that tracks and reports website traffic, providing insights into user behavior and engagement.
Google Analytics is a web analytics service that tracks and reports website traffic, providing insights into user behavior and engagement.
Google Analytics is a web analytics service that tracks and reports website traffic, allowing users to analyze data and improve their online presence.
Google Analytics is a web analytics service that tracks and reports website traffic, providing insights into user behavior.
Google Analytics is a web analytics service that tracks and reports website traffic, providing insights into user interactions and behaviors on web pages.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee,5372e12cf32e25741c25f62d7e23221e,5e8e906cb9a58f6e52be1a99d31da8cf,86965ee0055fe16d855a4f0e993b9d85,91a237014868fc106c5edbdc4ad2b520,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="BROWSERSLIST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Browserslist is a tool that allows developers to specify which browsers their project supports, enabling better compatibility and performance across different web environments.
Browserslist is a tool that allows developers to specify which browsers their project should support, influencing the output of tools like Autoprefixer.
Browserslist is a tool that allows developers to specify which browsers their project should support, influencing the build process.</data>
      <data key="d2">5e8e906cb9a58f6e52be1a99d31da8cf,64488fb4232e09664566b2ee3c00394a,9c75ee4a07cd172f143b2b09451d333c</data>
    </node>
    <node id="PACKAGE.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">package.json is a file used in Node.js projects to manage project dependencies, scripts, and metadata, including Browserslist configuration.
package.json is a file used in Node.js projects to manage project dependencies, scripts, and metadata.
The package.json file is used to manage project dependencies and scripts in JavaScript projects, including Next.js applications.
The package.json file is a configuration file for Node.js projects that includes metadata about the project and its dependencies, as well as scripts for running the application.
package.json is a file used in Node.js projects to manage dependencies, scripts, and project metadata.

package.json is a file used in Node.js projects to manage project dependencies, scripts, and metadata.
The package.json file is a configuration file for Node.js projects that includes metadata about the project and its dependencies, including scripts for testing.

package.json is a file that contains metadata about a Node.js project, including scripts, dependencies, and project configuration.
The package.json file is a configuration file for Node.js projects that includes metadata about the project and its dependencies.
package.json is a file used in Node.js projects to manage project dependencies and scripts, including those for running a Next.js application.
package.json is a file that contains metadata about the project and its dependencies, including scripts and package versions.
The package.json file is a configuration file for Node.js projects that includes metadata about the project and its dependencies.
The package.json file is a configuration file for Node.js projects that contains metadata about the project and its dependencies.
Package.json is a file that contains metadata about a project and its dependencies, including scripts for running tests.
package.json is a file that contains metadata about the project and its dependencies, including scripts for running tests with Cypress.
Package.json is a file used in Node.js projects to manage project dependencies, scripts, and metadata about the project.
Package.json is a file used in Node.js projects to manage dependencies, scripts, and project metadata.
Package.json is a file that contains metadata about the project and its dependencies, used in Node.js applications.
package.json is a file used in Node.js projects to manage project dependencies and scripts.
package.json is a file that contains metadata about the project and its dependencies, including scripts for running the application.
package.json is a file used in Node.js applications to manage project dependencies and scripts, including the configuration for ESLint in Next.js.
package.json is a file that contains metadata about a Node.js project, including dependencies and scripts.
Package.json is a file that contains metadata about the project and its dependencies, including scripts for running the application.
Package.json is a file that contains metadata about a Node.js project, including dependencies, scripts, and project configuration, commonly used in AWS Amplify projects.
Package.json is a file that contains metadata about the project and its dependencies, used in Node.js applications.
package.json is a file used in Node.js projects to manage dependencies and scripts for the project.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,077fbb77da60b5f069a4cf5fd5e33e9b,0dc4f8c1cc6105e325f2d84d2083a4c0,0e3c564b3dd53e829befef4d6241c23e,0ef0d7dfd239c67d2b08d6be68926b78,11e614f4c015c7f8295c0c49ac211a89,280c36ab0ae3dc66fffd099a273b96ab,2f935bf8dd94b80e38c90109f4e620a3,444fc385d67c401653f1a2c133ba95e6,45d1b0474e5a4ef2a69bdf70528aedb4,53559278a11544ca19ad7864a7c3319c,5e8e906cb9a58f6e52be1a99d31da8cf,66c478df0b5dc48b45a6c5e00867576d,6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,8b55191578f60b2d2fac3ae2f4d05b2e,9c75ee4a07cd172f143b2b09451d333c,9da317a323ff76913285228d8243413e,ab869c819df53e1e9e3adebf6a4234a2,b0a7c0b65015814bd16809b55a84c5cc,b48fe8c8f5e2835de49d9a46578cbf9d,b6b4173819c0a759fcd3146179f8f534,c143d279740f3e9c59920d2a6720240e,c1845aec41d031b5a72f6f472ab4a5f2,ce540af7d610dfd65c29afa83f46b65e,f33afd1ad915755b5724c85e5bdb3c98,fa740e66ec54695622178b0c41a679a4,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="@NEXT/THIRD-PARTIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@next/third-parties is a library that provides components and utilities to improve the performance and developer experience of loading popular third-party libraries in Next.js applications.</data>
      <data key="d2">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="EDGE">
      <data key="d0">GEO</data>
      <data key="d1">Edge is a web browser developed by Microsoft, which is also supported by Next.js, providing users with a modern browsing experience.</data>
      <data key="d2">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="FIREFOX">
      <data key="d0">GEO</data>
      <data key="d1">Firefox is an open-source web browser developed by Mozilla, recognized for its privacy features and customization options, and is supported by Next.js.
Firefox is a web browser developed by Mozilla, recognized for its open-source nature and user privacy features, with various versions addressing different issues.</data>
      <data key="d2">2238ba4c005a726e011e67cd17d3a576,5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="OPERA">
      <data key="d0">GEO</data>
      <data key="d1">Opera is a web browser known for its innovative features and user-friendly interface, and it is supported by Next.js applications.</data>
      <data key="d2">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="SAFARI">
      <data key="d0">GEO</data>
      <data key="d1">Safari is a web browser developed by Apple, primarily for macOS and iOS, and is included in the list of supported browsers for Next.js.
Safari is a web browser developed by Apple, known for its performance and integration with Apple devices, with specific versions having unique bugs and features.</data>
      <data key="d2">2238ba4c005a726e011e67cd17d3a576,5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="CHROME">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </node>
    <node id="VS CODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">VS Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, and version control.
VS Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, and version control.
Visual Studio Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, and version control.
Visual Studio Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, and version control.
Visual Studio Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, intelligent code completion, and version control.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b,243626df7b8124420b4844165c42f9b9,2d826219271d5b48e83835028c04e88b,45d1b0474e5a4ef2a69bdf70528aedb4,936f58e9a3d0c41d6fd88ca7b6e0a119</data>
    </node>
    <node id="COMMUNITY">
      <data key="d0">EVENT</data>
      <data key="d1">The Next.js community is a group of developers and contributors who collaborate to improve the Next.js documentation and framework.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9</data>
    </node>
    <node id="DOCUMENTATION">
      <data key="d0">EVENT</data>
      <data key="d1">The Next.js documentation provides guidelines and instructions for using and contributing to the Next.js framework.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9</data>
    </node>
    <node id="PRECONNECT">
      <data key="d0">EVENT</data>
      <data key="d1">Preconnect is a resource hint that allows browsers to set up early connections to important third-party origins.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9</data>
    </node>
    <node id="MDX">
      <data key="d0">EVENT</data>
      <data key="d1">MDX is a markdown format that allows embedding JSX components, used in the Next.js documentation.
MDX is a superset of Markdown that allows for the inclusion of JSX, enabling dynamic interactivity and the embedding of React components within Markdown files.
MDX is a markdown format that allows the use of JSX components within markdown files, enhancing the capabilities of markdown in web applications.
MDX is a markup language that allows the use of JSX components within markdown files, enabling dynamic content rendering in React applications.
MDX is a markdown format that allows the use of JSX components within markdown documents, enhancing the capabilities of traditional markdown.
MDX is a format that allows you to write JSX in Markdown documents, and is used in conjunction with Next.js for rendering content.
MDX is a format that allows you to write JSX in Markdown documents, enabling the use of React components within Markdown.
MDX is a superset of Markdown that allows the inclusion of JSX, enabling dynamic interactivity and the embedding of React components within markdown files.
MDX is a format that allows you to write JSX directly in markdown files, enabling dynamic interactivity and embedding React components.
MDX is a markdown format that allows you to use React components within markdown documents.
MDX is a markdown format that allows the use of JSX components within markdown documents.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,0dc4f8c1cc6105e325f2d84d2083a4c0,100c0297f81a6b39d0682205a4f6f668,11e614f4c015c7f8295c0c49ac211a89,243626df7b8124420b4844165c42f9b9,4e07cca41acd33806d13242f5e21f621,6bb5264a8b72d26916099f27337032fe,7de6e744f7ef4ab90e5a1db6bfad49c3,a4afb71ec5010173b514ca4604c40002,b48fe8c8f5e2835de49d9a46578cbf9d,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </node>
    <node id="GOOGLE FONTS">
      <data key="d0">EVENT</data>
      <data key="d1">Google Fonts is a service that provides access to a library of free and open-source fonts for web use, which can be optimized using preconnect in Next.js.

Google Fonts is a library of free licensed font families and APIs for conveniently using the fonts via CSS and Android.
Google Fonts is a library of free licensed font families and APIs for conveniently using web fonts.
Google Fonts is a library of free licensed font families and APIs for conveniently using the fonts via CSS and JavaScript.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9,2d13fb0b0bfe03d14a0f41e4d7920e31,7e52aca588d432140f210661ae169677,b6b4173819c0a759fcd3146179f8f534,f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="CONTRIBUTION GUIDE">
      <data key="d0">EVENT</data>
      <data key="d1">The Contribution Guide provides instructions for contributing to the Next.js documentation, encouraging community involvement.</data>
      <data key="d2">243626df7b8124420b4844165c42f9b9</data>
    </node>
    <node id="INLINE SCRIPT ID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">243626df7b8124420b4844165c42f9b9</data>
    </node>
    <node id="SHARED PAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Shared Pages in Next.js allow content to be reused across different pages to avoid duplication and maintain consistency.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="CODE BLOCKS">
      <data key="d0">EVENT</data>
      <data key="d1">Code Blocks are sections in documentation that provide examples of code that can be copied and pasted for use.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">Metadata refers to data that provides information about other data, such as the title and description of a page in documentation.

Metadata refers to the data that describes other data, such as the title and description of a page in Next.js.


Metadata in Next.js is used to manage SEO elements such as title and description for pages, enhancing the visibility and indexing of web applications.
Metadata refers to data that provides information about other data, often used for SEO and web shareability in web applications.
Metadata refers to additional information that can be added to files during the upload process, sent as custom HTTP headers.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b,5c7c1b8a3cde0fc5a186b912ceba73bb,6ebc8c74b9b797357659151a46693a88,8023a6acc1593be80b1d65bbe4d5fb3e,c1f63acba6f9a58b56bd71c409dcd343,ddf9997eb4ecd67204ea6df04b23cc07,dea59f788f9645dcf527f4f5f4f12ae7,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="REQUIRED FIELDS">
      <data key="d0">EVENT</data>
      <data key="d1">Required Fields are specific attributes that must be included in a metadata block for a page in Next.js documentation.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="OPTIONAL FIELDS">
      <data key="d0">EVENT</data>
      <data key="d1">Optional Fields are attributes that can be included in a metadata block but are not mandatory for a page in Next.js documentation.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="NAV TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">Nav Title is an optional field that overrides the page's title in the navigation of Next.js documentation.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="SOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">Source is an optional field that pulls content into a shared page in Next.js documentation.
The source is the original URL path that is being redirected from in a redirect configuration.
Source refers to the original URL path that is being matched for a rewrite in Next.js.

Source is an HTML element used to specify multiple media resources for elements like &lt;picture&gt; in Next.js.
Source refers to the original URL path that is being matched for redirection in Next.js.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b,3728034c20ff061a6f5bcaadac49b04e,743d216d66ffda2efe23e0e9a8d0f0cf,b3759902cd429c22cd4896b10b00848d,de5d774b63da599b2e72cb96a3e61337,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="RELATED">
      <data key="d0">EVENT</data>
      <data key="d1">Related is an optional field that lists related pages at the bottom of a document in Next.js documentation.</data>
      <data key="d2">2d826219271d5b48e83835028c04e88b</data>
    </node>
    <node id="JAVASCRIPT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JavaScript is a programming language commonly used for web development, with various file extensions for different types of code.
JavaScript is a programming language commonly used for web development, which Next.js is built upon.
JavaScript is a programming language that is commonly used in web development, including in Next.js applications.
JavaScript is a programming language that is used for building interactive web applications, including those built with Next.js.
JavaScript is a programming language that enables interactive web pages and is an essential part of web applications.
JavaScript is a high-level, dynamic programming language that is widely used for web development.
JavaScript is a programming language that enables interactive web pages and is an essential part of web applications.
JavaScript is a programming language that may be used in conjunction with TypeScript for web development on ACME's site.
JavaScript is a programming language that Acme uses for generating images and handling dynamic content.
JavaScript is a programming language that is commonly used for web development to create interactive effects within web browsers.
JavaScript is a programming language commonly used for web development, enabling interactive web pages and server-side applications.
JavaScript is a programming language that is commonly used for web development, including in Next.js applications.
JavaScript is a programming language commonly used for web development, enabling interactive web pages.
JavaScript is a programming language that enables interactive web pages and is an essential part of web applications.
JavaScript is a programming language that is commonly used in web development, including in frameworks like Next.js for building interactive web applications.
JavaScript is a programming language commonly used in web development to create interactive effects within web browsers.
JavaScript is a high-level, dynamic, untyped, and interpreted programming language, widely used for web development.
JavaScript is a high-level, dynamic programming language commonly used for web development.
JavaScript is a high-level, dynamic programming language that is widely used for web development.
JavaScript is a programming language that is commonly used for web development, including in frameworks like Next.js.
JavaScript is a programming language that enables interactive web pages and is a core technology of the World Wide Web, alongside HTML and CSS, mentioned in the context of the tutorial.
JavaScript is a programming language that enables interactive web pages and is an essential part of web applications.
JavaScript is a programming language commonly used for building interactive web applications and is compatible with Amplify Gen 2.
JavaScript is a programming language that enables interactive web pages and is referenced in the context of the RadioGroupField component.
JavaScript is a programming language commonly used in web development to create interactive effects within web browsers.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,0dc4f8c1cc6105e325f2d84d2083a4c0,21bbed2998c7a9b202d76d56c78cb512,3b86536c72cd33dea29dc82250012d80,4dfb13dff74e4dc45c19d4d71fe1a443,5f794e811d0f825d9e561f1210793eb7,60d9151920f9b881f34c958c0c5d770b,63ad6476d7970e4ee569325f59f21115,64c02a535c1519ef24ded4a2a368f2be,66fea93bb642287d13f3a25b8b3e0083,6741df7802dff57e070b002915d9590a,6edc6c7e13a23d971e48b75724b50d5f,72e1433a8550144aaf1d1fd8f3cb3774,7cf992845bf79c5ec4ae2614617a79f4,85fc82d441624fc7d477f417afcce94e,876a936d41a4189fd50277eeb02bfdf7,a50f51132c97b3887f2b21ed846fa020,a5566406ae5db585eb3829f4a25e7025,aee85ce10da1e12fe3e8ba84ec64e808,bf223ba92c40347202f7dcf0e841b2ed,c5461cfa4259c43255132d8f916b1764,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d0da48d43a184db7d07729aa6047ca3d,dea59f788f9645dcf527f4f5f4f12ae7,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="CODE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Code examples demonstrate how to implement features using JavaScript and TypeScript in documentation.
Code examples demonstrate how to implement various features and functionalities in AWS Amplify applications.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7,f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="TRANSFORM.TOOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Transform.tools is a tool that allows users to convert TypeScript snippets to JavaScript.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="NOTES">
      <data key="d0">EVENT</data>
      <data key="d1">Notes are used in documentation to provide additional information without distracting from the main content.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="DIAGRAMS">
      <data key="d0">EVENT</data>
      <data key="d1">Diagrams are visual representations created to explain complex concepts in documentation.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="HIGHLIGHT PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The highlight prop is used to specify which lines of code should be highlighted in code examples, enhancing focus on important parts.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="SINGLE LINE NOTE">
      <data key="d0">EVENT</data>
      <data key="d1">A single line note is a concise piece of information that provides additional context without overwhelming the main content.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="MULTI-LINE NOTES">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-line notes are used to convey several pieces of information in a structured format, ensuring clarity while providing additional context.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">Fields are components of the documentation structure that define various attributes and metadata for pages.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="PAGE TEMPLATES">
      <data key="d0">EVENT</data>
      <data key="d1">Page templates are predefined structures used to maintain consistency across documentation pages.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="API TABLES">
      <data key="d0">EVENT</data>
      <data key="d1">API tables provide an overview of available functions and methods, often including jump-to-section links for easier navigation.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="CONCEPTUAL PAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Conceptual pages explain features or concepts in detail, often containing examples and guidelines for users.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="REFERENCE PAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Reference pages focus on specific APIs, providing concise and technical information for developers.</data>
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="JSX">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5f794e811d0f825d9e561f1210793eb7</data>
    </node>
    <node id="MIDDLEWARE">
      <data key="d0">EVENT</data>
      <data key="d1">Middleware refers to the software that acts as a bridge between an operating system or database and applications, particularly in the context of Next.js.
Middleware in Next.js is a feature that allows developers to run code before a request is completed, enabling functionalities like redirects and rewrites.
Middleware is a function in Next.js that allows you to run code before a request is completed, enabling features like authentication and redirects.
Middleware in Next.js allows developers to run code before a request is completed, enabling functionalities like user agent detection.
Middleware in Next.js is used for authentication and other purposes that involve rewriting the user to a different page.
Middleware in Next.js is a function that runs before a request is completed, allowing for redirection and other processing based on request data.
Middleware in Next.js allows for custom logic to be executed before a request is completed, enhancing the application's routing capabilities.
A software layer that processes requests and responses in a web application, often used for authorization and session management checks.
Middleware in Next.js is a feature that allows developers to run code before a request is completed, often used for adding headers or modifying requests.
Middleware is a feature in Next.js that allows code to run before a request is completed, enabling modifications to the request or response.
Middleware is a software component that processes requests and responses in a web application, allowing for functionalities like routing and request handling.
Middleware in Next.js is a way to run code before a request is completed, allowing for tasks like authentication and setting headers.
Middleware in Next.js allows for modifying requests and responses, enabling advanced routing and handling of requests before they reach the application.
Middleware in Next.js is used to add custom routing rules and handle locale prefixes for web applications.
Middleware in Next.js is a feature that allows developers to run code before a request is completed, enabling functionalities like authentication and redirects.
Middleware in Next.js is a feature that allows developers to run code before a request is completed, often used for redirects and authentication.
Middleware in Next.js is a feature that allows developers to run code before a request is completed, enabling dynamic routing and data fetching.
Middleware in Next.js refers to functions that can run before a request is completed, allowing for custom logic to be applied to requests.
Middleware in Next.js allows for custom processing of requests before they reach the final handler.
Middleware in Next.js is a function that runs before a request is completed, allowing for custom server-side logic like authentication and logging.
Middleware in Next.js is a function that runs before a request is completed, allowing for request manipulation and response handling.
Middleware in Next.js is used for handling requests and responses, often for authentication or route rewriting.
A software component that acts as a bridge between an operating system or database and applications, often used for authorization checks.
Middleware is a software layer that processes requests and responses in an application, often used for authentication and session management.

Middleware is a feature in Next.js that allows code to run before a request is completed, enabling modifications to requests and responses.
Middleware is a software component that processes requests and responses in a web application, allowing for centralized control and management of route-specific functionalities.
Middleware in Next.js is a function that runs before a request is completed, allowing for request manipulation, response handling, and other operations.
Middleware in Next.js is a way to run code before a request is completed, allowing for tasks like authentication and response modification.
Middleware in Next.js is a way to run code before a request is completed, allowing for functionalities like redirection based on user locale.
Middleware in Next.js allows for running code before a request is completed, enabling conditional redirects based on user authentication or other criteria.
Middleware in web development refers to software that acts as a bridge between an operating system or database and applications, often used for processing requests and responses.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,100c0297f81a6b39d0682205a4f6f668,113e44bf79d1dd5dbde02354435765e3,1d629a9403a987213102a9bfd769f290,1d939f19e04dfaa8df3664a2cd4db1f1,2faaabdabafa263524b931c68674e9cd,3b86536c72cd33dea29dc82250012d80,3bade0d5baadc8c11b8cf85372738fdd,44eb58960277cd9fc903de7625623163,52bf7bb5a492d2cb5b2f5f06d6507a81,52f67911efe49d48e703ba654f23728e,59f479f2a59b233e2c0b4bfcfce952a8,715bdaaae1cb7470e0e54efac993beb5,7b6d1725bb07f6076bb8010d535ae342,839413fc3a58298ee6809914ff2ed3f7,84b5c29553feb2883a2e93ffbac5b791,9755f3d6b34a8ac25f409b1d0fe38854,99aea11e8e00a31189977a03ce528a10,9bd0a80f4c931386ae8f2fb0226f92cd,a30c1b22a2bba568f986171e6685170b,a332c6db30f7b29cd4dcb1117bd6eab3,a8c0873902ebe92185a879561056ce61,abfaa2f8370cae9120fe1eaf629cda39,acfd457359d2693c084c6ab2341189be,ba06ed84686152cb5106e54e4887fa28,ba53cb824bd4e5b80d861ee299c10f92,c8d58fd330c4f217c52b50590414e517,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d5c8e583b99d40e21e52e5d76498cb0d,db459e8194ba2f087761e7727b876b9d,dc10462a75be57d14f05bf6a26ba9731,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The API refers to the set of rules and protocols for building and interacting with software applications, specifically in the context of Next.js Middleware.
API refers to the Application Programming Interface that allows different software applications to communicate with each other, often used in web development to fetch data.
An API (Application Programming Interface) is a set of rules that allows different software entities to communicate with each other, often used in conjunction with Next.js for data fetching.
API (Application Programming Interface) is a set of rules and protocols for building and interacting with software applications.
An API (Application Programming Interface) allows different software applications to communicate with each other.
API refers to Application Programming Interface, a set of rules that allows different software entities to communicate with each other.
API (Application Programming Interface) is a set of rules and protocols for building and interacting with software applications, allowing different software systems to communicate with each other.
API refers to the application programming interface that allows the application to communicate with external services to fetch or send data.

An API (Application Programming Interface) allows different software applications to communicate with each other, and is a key feature in Next.js for building server-side functionality.

An API (Application Programming Interface) is a set of rules that allows different software entities to communicate with each other.
API (Application Programming Interface) is a set of rules that allows different software entities to communicate with each other.
API (Application Programming Interface) is a set of rules that allows different software entities to communicate with each other.
API (Application Programming Interface) is a set of rules and protocols for building and interacting with software applications, allowing different systems to communicate.
An API (Application Programming Interface) is a set of rules and protocols for building and interacting with software applications, allowing different systems to communicate.
API refers to the application programming interface that allows different software components to communicate with each other, enabling data exchange and functionality.
The API in AWS Amplify provides a set of tools and protocols for building and interacting with web services, enabling data operations and integrations.
API refers to the Application Programming Interface that allows communication between the frontend application and the backend services in AWS Amplify.
API (Application Programming Interface) is a category in AWS Amplify that enables developers to create and manage APIs for their applications.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,0540b18a392d2ccc8d9b4915eed9acfe,0a447cfbac33fa416ddcd2ffd57d0335,0bfaadafcf31828f19e4b2657565944a,2e0b7ff508cb8313a540ecc1a356120e,2faaabdabafa263524b931c68674e9cd,3678e68072101ac922b838851eaa8465,6741df7802dff57e070b002915d9590a,6980c90f0a7a58894d9518accd2ab5dd,6a2f21642257c922b2659f7bb932521a,72e1433a8550144aaf1d1fd8f3cb3774,7cf992845bf79c5ec4ae2614617a79f4,8735729cb47a3e421748c05ffb31502f,99aea11e8e00a31189977a03ce528a10,a8c0873902ebe92185a879561056ce61,db459e8194ba2f087761e7727b876b9d,ef896aab67cf49595a11632404eaa374,f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="CUSTOM MATCHER">
      <data key="d0">EVENT</data>
      <data key="d1">A custom matcher is a feature in Next.js Middleware that allows developers to define specific routes for Middleware execution using an exported config object.</data>
      <data key="d2">2faaabdabafa263524b931c68674e9cd</data>
    </node>
    <node id="NESTED MIDDLEWARE">
      <data key="d0">EVENT</data>
      <data key="d1">Nested Middleware refers to the previous structure of Middleware in Next.js where multiple Middleware functions could be invoked based on file paths.</data>
      <data key="d2">2faaabdabafa263524b931c68674e9cd</data>
    </node>
    <node id="ROOT MIDDLEWARE">
      <data key="d0">EVENT</data>
      <data key="d1">Root Middleware is the new structure in Next.js that allows for a single Middleware file to handle requests more efficiently.</data>
      <data key="d2">2faaabdabafa263524b931c68674e9cd</data>
    </node>
    <node id="LATEST RELEASE">
      <data key="d0">EVENT</data>
      <data key="d1">The latest release refers to the most recent version of Next.js that includes the new Middleware features and improvements.</data>
      <data key="d2">2faaabdabafa263524b931c68674e9cd</data>
    </node>
    <node id="MIGRATION">
      <data key="d0" />
      <data key="d1">
Migration refers to the process of moving an application from one framework or environment to another, such as from Create React App to Next.js.</data>
      <data key="d2">2faaabdabafa263524b931c68674e9cd,a67099d1f0ea66a70c07e9595443231a</data>
    </node>
    <node id="DASHBOARD">
      <data key="d0">EVENT</data>
      <data key="d1">The dashboard is a specific route in a Next.js application that can be matched by Middleware for custom logic.
A page that users are redirected to after logging in, often containing user-specific information and functionalities.
Dashboard is a route in Next.js that can be navigated to using the &lt;Link&gt; component.
The Dashboard is a route in Next.js that can have authenticated and visitor views, redirecting users based on their authentication status.
The Dashboard is a component in Next.js that displays a list of projects fetched from an API.
The dashboard is a user-specific area in the Next.js application that provides access to personalized content and features for logged-in users.
A protected route in the web application that displays user-specific data and requires authentication to access.
Dashboard is a page in the application that users can navigate to, often containing user-specific information and controls.
The dashboard is a user interface that provides an overview of key metrics and information, typically accessible after user authentication.
The dashboard is a user interface that displays various information and allows for interaction with the application.
Dashboard is a route in the application that users can navigate to, typically displaying key metrics and information.
Dashboard is a component in Next.js that provides a layout for displaying various UI elements and data.
Dashboard is a route in the application that users can navigate to, typically for viewing analytics or managing settings.
The Dashboard is a user interface component in Next.js applications that provides an overview of various metrics and functionalities.
Dashboard is a React component that displays a list of projects fetched from an API, rendered on the server and hydrated in the browser.
The dashboard event refers to the route in the application that displays user-specific information and controls, often requiring authentication.
A dashboard is a user interface that organizes and presents information in an easily readable format, often used in applications to display analytics and data.
The Dashboard event refers to the user interface that users are redirected to after successful signup or other actions in Next.js applications.
Dashboard is a route in Next.js that can be navigated to using the &lt;Link&gt; component or the useRouter hook.
The dashboard is a user interface that displays key information and metrics, often used in applications for monitoring and management.
The dashboard is a route segment in Next.js that can display analytics and other information in a user interface.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,0d45ae64c949dd150906ccaed4b6b5c2,170893bac86ced48a278abde4d144710,1b3c3a93e182b501d03ffb0b41273e30,1e914b4d28a0e4ccc7e1e87c2504a6f5,28003ee6fb44c56e3a5598cedee41343,33239b71158a6566c2b82b6a30b68e82,3bade0d5baadc8c11b8cf85372738fdd,3c09a802c38a10e785a119f2ba114c73,56ab21d16e9b86cd9d551ec941e65b04,77bf22c1fcd1e61ff866f696397b3a69,7ebeb57bb18774254a901eafc1cb096f,9755f3d6b34a8ac25f409b1d0fe38854,a046fdf9fbebaa56c0d37da25e453974,a8c0873902ebe92185a879561056ce61,abfaa2f8370cae9120fe1eaf629cda39,bb9110629910b21a122e4dbd23ba9236,cb4791e4249947cbab8022435c79aa13,d5c8e583b99d40e21e52e5d76498cb0d,dc10462a75be57d14f05bf6a26ba9731,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="ABOUT">
      <data key="d0">EVENT</data>
      <data key="d1">The about page is a specific route in a Next.js application that can be matched by Middleware for custom logic.
about/page.tsx is a TypeScript file that defines a component for rendering the About page in the Next.js application.
The About page component is a React component that renders the About page of a Next.js application, including a heading and a link back to the homepage.
The 'About' page is an event in the context of web navigation, where users can learn more about the application or organization.
The about event refers to the specific route in the application that provides information about the application or organization.</data>
      <data key="d2">62cbc95f20c7b902a0c2e3e9af7dd83c,abfaa2f8370cae9120fe1eaf629cda39,b45c653df41952b7c0b22c7926afe5f7,b6c19fc60714c90b16c67bd7df9573f9,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="REWRITE">
      <data key="d0">EVENT</data>
      <data key="d1">Rewriting is a feature in Next.js Middleware that allows developers to change the URL of a request before it is processed.
</data>
      <data key="d2">abfaa2f8370cae9120fe1eaf629cda39,b3759902cd429c22cd4896b10b00848d</data>
    </node>
    <node id="REDIRECT">
      <data key="d0">EVENT</data>
      <data key="d1">Redirecting is a feature in Next.js Middleware that allows developers to send users to a different URL based on certain conditions.
Redirect is an object in Next.js that allows redirecting to internal and external resources based on certain conditions.
Redirect is an action that sends a user to a different URL after a successful operation, such as form submission.)&lt;|COMPLETE|&gt;
Redirect is an event that occurs when a request is sent to a different URL, often used in web applications to guide users to the correct page.
The redirect function allows users to be redirected to another URL, indicating a temporary or permanent change in resource location.
A method used to navigate users to a different URL, preserving the request method in the process.
Redirect is an event that occurs after a mutation, navigating the user to a new resource in a Next.js application.
Redirect is an action that navigates the user to a different route after a specific operation, such as creating a post.
Redirect is a function in Next.js that allows for a temporary redirect to another URL, commonly used in server actions.
Redirect is an action that sends a user to a different URL, often used after form submissions or to guide users to specific pages.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,02d5f971b1d69adbfdf2a0cfc42447f7,1d939f19e04dfaa8df3664a2cd4db1f1,3c09a802c38a10e785a119f2ba114c73,4a5b866ffddc7fba2346c94f6c037019,7ad571c896064ee6e36a4acd93898e88,a0ed25040eb1637a5c82493764f822ac,abfaa2f8370cae9120fe1eaf629cda39,b6f71d64cf5764914e58142430b460e6,d4880ef934642aac0f85ca34038b847d</data>
    </node>
    <node id="AUTHORIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Authorization in the context of Middleware refers to the process of validating user credentials before allowing access to certain routes.
Authorization determines what routes and data a user can access based on their authenticated state.
The process of determining what resources a user can access and what actions they can perform within the web application based on their session data.
The authorization header is used to pass credentials for authentication in HTTP requests.
Authorization is the process of determining whether a user has permission to perform a specific action or access a resource.
Authorization is the process of determining whether a user has permission to perform a specific action in an application.
Authorization is the process of determining whether a user has permission to perform a specific action in an application.

Authorization refers to the process of determining whether a user has permission to access certain resources or perform specific actions within an application.
Authorization in AWS Amplify defines the rules and permissions for accessing and manipulating data within the application.
Authorization is the process of determining whether a user has permission to access a resource or perform an action within an application.
Authorization is the process of determining whether a user has permission to perform a specific action on a resource.
Authorization is the process of determining whether a user has permission to perform certain actions within the application.</data>
      <data key="d2">102262d1b2a41d767a543121d96412c6,2e537c711e153c043f8d08b926e4ba86,33e451e77f5bd710301d6408bbd2825d,3bedaf75477c620e5f8469d8d96cfae3,459eadcad7d141c2129458137d7d41d9,53559278a11544ca19ad7864a7c3319c,7040175c91fe86a908046a9b485b0410,8c8075430684b38bdd1c6ce9fc9f7205,92bcd3df485df362e04da4f60878ff3b,9755f3d6b34a8ac25f409b1d0fe38854,a525cbfc03ba1b986f30ce2280067dda,abfaa2f8370cae9120fe1eaf629cda39,f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="REQUEST">
      <data key="d0" />
      <data key="d1">
Request refers to the HTTP request made to the server, which can include various parameters and data sent by the client.
Request represents an HTTP request, encapsulating the request's method, URL, headers, and body.
A request is an event that occurs when a client sends a message to a server, typically to retrieve or send data.
A request is an action made by a client to a server to retrieve or send data, often involving HTTP methods like GET and POST.
A request is an incoming call to the server that can be modified by Middleware before being processed.
A request is an action initiated by a client to communicate with a server, often to retrieve or send data.
Request refers to the action of asking for data or resources from a server in web applications.
An object representing the HTTP request made to the server, containing information about the request such as headers and body.
Request refers to the incoming HTTP request object that contains information about the client's request to the server.
Request refers to the incoming HTTP request in Next.js Middleware, represented by an instance of NextRequest.
A request in Next.js is an HTTP request made to the server, which can be monitored for errors and performance metrics.


A request is an object that represents an HTTP request, which can be created within the function to interact with external APIs.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,19bb9589361b1370de913cae6e3e1fd8,1d629a9403a987213102a9bfd769f290,72e1433a8550144aaf1d1fd8f3cb3774,8aece6e31757222174fd611077ca4f6d,a0a19960cdaef7a85c598591f06454da,abfaa2f8370cae9120fe1eaf629cda39,b6f71d64cf5764914e58142430b460e6,ba06ed84686152cb5106e54e4887fa28,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,c219d208ec8254181cab570f210dac3f,c5461cfa4259c43255132d8f916b1764,d4880ef934642aac0f85ca34038b847d,db459e8194ba2f087761e7727b876b9d,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="NEXTREQUEST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NextRequest is a class from the Next.js framework used to handle HTTP requests in middleware functions.
NextRequest is an API provided by Next.js for handling incoming requests in middleware, allowing developers to access request headers and other properties.
NextRequest is an object representing the incoming request in Next.js middleware, allowing for manipulation of the request.
NextRequest is an extension of the Web Request API that provides additional convenience methods for handling requests in Next.js applications.

NextRequest is an API provided by Next.js that represents the incoming request, allowing developers to access request details and manipulate them.
NextRequest is an API in Next.js that represents the incoming HTTP request, providing methods to access headers, cookies, and other request data.
NextRequest is an object in Next.js that represents the incoming request to the middleware, providing access to request details.
NextRequest is an object provided by Next.js that represents the incoming request in server-side functions, allowing access to request data.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,113e44bf79d1dd5dbde02354435765e3,3b86536c72cd33dea29dc82250012d80,a30c1b22a2bba568f986171e6685170b,ba06ed84686152cb5106e54e4887fa28,ba53cb824bd4e5b80d861ee299c10f92,c219d208ec8254181cab570f210dac3f,dc74aa0cbe86d8235a59d0f6809f6184,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="NEXTRESPONSE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NextResponse is a class from the Next.js framework used to handle HTTP responses in middleware functions.
NextResponse is an extension of the Web Response API that provides additional convenience methods for handling HTTP responses in Next.js applications.


NextResponse is an object used in Next.js middleware to send responses back to the client.


NextResponse is a class used in Next.js Middleware to manipulate and send back HTTP responses, including redirects and setting headers.
NextResponse is an API provided by Next.js that allows developers to manipulate the response of a request, including redirection and rewriting.
NextResponse is an API in Next.js that allows developers to manage HTTP responses, including redirecting and rewriting URLs, setting headers, and managing cookies.
NextResponse is an object in Next.js that represents the response to be sent back to the client, allowing for response customization.
NextResponse is an object provided by Next.js that represents the outgoing response in server-side functions, allowing manipulation of the response data.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,113e44bf79d1dd5dbde02354435765e3,19bb9589361b1370de913cae6e3e1fd8,3b86536c72cd33dea29dc82250012d80,86965ee0055fe16d855a4f0e993b9d85,a30c1b22a2bba568f986171e6685170b,b6f71d64cf5764914e58142430b460e6,ba06ed84686152cb5106e54e4887fa28,ba53cb824bd4e5b80d861ee299c10f92,c219d208ec8254181cab570f210dac3f,dc74aa0cbe86d8235a59d0f6809f6184,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="USER AGENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">User Agent is a helper in Next.js that provides access to the user agent properties for requests.
User Agent is a helper function in Next.js that extends the Web Request API to interact with the user agent object from the request.</data>
      <data key="d2">ba06ed84686152cb5106e54e4887fa28,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </node>
    <node id="URLPATTERN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">URLPattern is a web standard API used in Next.js to accurately match URLs for middleware execution.</data>
      <data key="d2">ba06ed84686152cb5106e54e4887fa28</data>
    </node>
    <node id="EXAMPLE.COM">
      <data key="d0">GEO</data>
      <data key="d1">Example.com is a domain used in documentation and examples, often representing a placeholder for a real domain.
example.com is a domain used in examples to illustrate how to implement features in Next.js.

Example.com is a domain used in documentation and examples, often representing a placeholder for a real website.
Example.com is a domain often used as a placeholder in documentation and examples.
Example.com is a domain that handles locale routing for various languages including English, French, and Dutch.
Example.com is a placeholder domain often used in documentation and examples to illustrate how URLs work.
Example.com is a host that applies specific headers based on its domain for security and functionality purposes.
Example.com is a website that serves as a placeholder for demonstrating various web technologies and practices.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,717947e9b123f15f49c748bb45aec68d,7e9fce61758916e4d2b7de2f2f4d1704,839413fc3a58298ee6809914ff2ed3f7,85fc82d441624fc7d477f417afcce94e,b3759902cd429c22cd4896b10b00848d,ba06ed84686152cb5106e54e4887fa28,bd13629205b4661186b2631023139a53,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="NEXTJS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next.js is a React framework that enables functionality such as server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables server-side rendering and generating static websites for React-based web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework that enables server-side rendering and static site generation for web applications.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,19bb9589361b1370de913cae6e3e1fd8,393aa2365a84cbbbeaa882f89f100b89,8c16e2baedacd39ce0384eac61e5ee79,a30c1b22a2bba568f986171e6685170b,ba06ed84686152cb5106e54e4887fa28,c219d208ec8254181cab570f210dac3f</data>
    </node>
    <node id="RESPONSE">
      <data key="d0">EVENT</data>
      <data key="d1">Response refers to the HTTP response sent back to the client from the server, containing the requested data or status information.
Response represents an HTTP response, containing the status code, headers, and body of the response.
A response is an event that occurs when a server sends back data to a client after processing a request.
Response refers to the data sent back from an API after a request is made.
Response is the data returned from a server after a fetch request, which can include status and data payload.
A response is the output sent back to the client after processing a request, which can be modified by Middleware.
A response is the data sent back from the server to the client after processing a request.
Response refers to the data sent back to the client from the server after processing a request, which can include status codes and data.
Response is the data sent back from a server to a client after a request has been made.
Response refers to the outgoing HTTP response object that is sent back to the client after processing the request.
Response is an object representing the response to a request, typically used in web APIs to handle data returned from a server.
Response refers to the outgoing HTTP response in Next.js Middleware, manipulated using the NextResponse object.
A response in web development is the data sent back from the server to the client after processing a request.
A Response in web development is an object that represents the response to a request, containing data and status information.
A response is an HTTP message sent by a server back to a client, containing the result of the request.
A response is the data sent back from a server to a client after processing a request, often containing the requested information or status of the operation.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335,100c0297f81a6b39d0682205a4f6f668,19bb9589361b1370de913cae6e3e1fd8,1d629a9403a987213102a9bfd769f290,3b86536c72cd33dea29dc82250012d80,44eb58960277cd9fc903de7625623163,72e1433a8550144aaf1d1fd8f3cb3774,a0ed25040eb1637a5c82493764f822ac,a114c731efa8589ee311d40c0106c001,ba06ed84686152cb5106e54e4887fa28,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,c219d208ec8254181cab570f210dac3f,c5461cfa4259c43255132d8f916b1764,d4880ef934642aac0f85ca34038b847d,db459e8194ba2f087761e7727b876b9d,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="COOKIE">
      <data key="d0" />
      <data key="d1">
Cookie is a piece of data stored on the user's computer that can be used to determine if certain conditions are met for rewrites.
A small piece of data stored on the user's browser that is sent with each request to verify the session on the server.
Cookies are small pieces of data stored on the user's computer by the web browser while browsing a website, used for various purposes including session management.
Cookies are small pieces of data stored on the client side that are sent with requests and responses to maintain state and user preferences.
A cookie is a small piece of data stored on the user's computer by the web browser while browsing a website, used for maintaining state and preferences.
A cookie is a small piece of data stored on the user's computer by the web browser while browsing a website, used for session management and tracking.
Cookies are small pieces of data stored on the client-side that are sent to the server with HTTP requests, used for session management and tracking user behavior.</data>
      <data key="d2">113e44bf79d1dd5dbde02354435765e3,4da3554b7826cf4b6dd608127da53568,7cd464b0f42ff05e87fa7e149d7e2997,9755f3d6b34a8ac25f409b1d0fe38854,b3759902cd429c22cd4896b10b00848d,ba06ed84686152cb5106e54e4887fa28,db459e8194ba2f087761e7727b876b9d,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="GOOGLE FONT DISPLAY">
      <data key="d0">EVENT</data>
      <data key="d1">Google Font Display is a feature that enforces font-display behavior with Google Fonts, ensuring optimal loading strategies for fonts in web applications.</data>
      <data key="d2">b6b4173819c0a759fcd3146179f8f534</data>
    </node>
    <node id="RUST">
      <data key="d0">PERSON</data>
      <data key="d1">Rust is a programming language that Turbopack is written in, known for its performance and safety features.
Rust is a programming language that is known for its performance and safety, and is used to write the Next.js Compiler for efficient code transformation.
Rust is a programming language focused on safety and performance, used for building high-performance applications, including Lightning CSS.</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c,9726f4ae30b11539c429ff41c8326d46,b6b4173819c0a759fcd3146179f8f534</data>
    </node>
    <node id="CSS FONT-DISPLAY PROPERTY">
      <data key="d0">EVENT</data>
      <data key="d1">The CSS font-display property is used to control how a font is displayed while it is loading, affecting the rendering of text on web pages.</data>
      <data key="d2">b6b4173819c0a759fcd3146179f8f534</data>
    </node>
    <node id="API ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">API Route refers to a server-side function in Next.js that allows developers to create API endpoints for their applications.
API Route in Next.js allows developers to create serverless functions that can handle requests and responses, enabling backend functionality within a Next.js application.
An API route is a server-side endpoint that handles requests, such as user authentication in this context.
An API route is a server-side function that handles requests and responses in a web application.
API Routes in Next.js allow developers to create serverless functions that can handle requests and responses, enabling dynamic functionality in applications.
API Routes in Next.js allow you to create RESTful endpoints as part of your application, handling requests and responses.
API Routes in Next.js allow developers to create API endpoints as part of their application, enabling server-side logic and data handling.</data>
      <data key="d2">3bade0d5baadc8c11b8cf85372738fdd,53559278a11544ca19ad7864a7c3319c,a0ed25040eb1637a5c82493764f822ac,a114c731efa8589ee311d40c0106c001,b6b4173819c0a759fcd3146179f8f534,ccae232c83746c7020e2c1ff92d50349,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="DISCORD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Discord is a communication platform where the Next.js community can interact and discuss development topics.
Discord is a communication platform where the Next.js community can interact and discuss topics related to Next.js.
Discord is a communication platform where the Next.js community can interact and discuss topics related to the framework.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="REDDIT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Reddit is a social news aggregation and discussion website where users can share and discuss topics related to Next.js.
Reddit is a discussion platform where users can post questions and topics related to Next.js.
Reddit is a social news aggregation and discussion website where the Next.js community can discuss various topics.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="TWITTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Twitter is a social media platform where Next.js shares updates and engages with its community.
Twitter is a social media platform where users can post and interact with messages known as "tweets".
Twitter is a social media platform where the Next.js community can engage and share updates.
Twitter is a social media platform where the Next.js community can engage and share updates.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="YOUTUBE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">YouTube is a video-sharing platform where Vercel publishes videos related to Next.js development and tutorials.
YouTube is a video-sharing platform where users can upload, view, and share videos, and it is referenced in the context of a tutorial on Next.js migration.</data>
      <data key="d2">6ebc8c74b9b797357659151a46693a88,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="NEXTAUTH.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NextAuth.js is an authentication solution that supports the Next.js App Router for managing user sessions and authentication.
NextAuth.js is an authentication library for Next.js applications, providing a simple way to add authentication to web applications.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="CLERK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Clerk is an authentication service that integrates with Next.js to provide user management and authentication features.
Clerk is a service that offers user management and authentication solutions for web applications, focusing on user experience and security.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="STACK AUTH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Stack Auth is an authentication solution that can be used with Next.js for managing user sessions.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="LUCIA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Lucia is an authentication service that can be integrated with Next.js applications for user authentication.
Lucia is an authentication service that helps developers implement secure user authentication in their applications.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="AUTH0">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Auth0 is a popular authentication platform that provides secure authentication solutions for Next.js applications.
Auth0 is a platform that provides authentication and authorization services for applications, helping developers secure their applications easily.
Auth0 is an identity management platform that provides authentication and authorization services for applications.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,964a73cbdb955691a9e116071187750f,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="STYTCH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Stytch is an authentication platform that offers user authentication solutions compatible with Next.js.
Stytch is a developer-friendly authentication platform that offers various authentication methods to enhance user experience and security.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="KINDE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Kinde is an authentication service that can be used with Next.js for managing user authentication.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="WORKOS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WorkOS is a platform that provides authentication and user management solutions for applications built with Next.js.
WorkOS is a platform that provides tools for developers to add enterprise features like single sign-on and directory sync to their applications.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="NEXT.JS COMMUNITY">
      <data key="d0">EVENT</data>
      <data key="d1">The Next.js community is an active group of developers who contribute to the framework, share knowledge, and support each other in development efforts.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="AMP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AMP (Accelerated Mobile Pages) is a web component framework that aims to make web pages load faster on mobile devices, which is not currently supported in Next.js with Turbopack.
AMP (Accelerated Mobile Pages) is an open-source HTML framework that is designed to make web pages load faster on mobile devices.
AMP (Accelerated Mobile Pages) configuration has been changed in Next.js version 11, moving from a higher-order component to a page-level configuration object.
AMP (Accelerated Mobile Pages) is a web component framework that aims to make web pages load faster on mobile devices by optimizing the content delivery.
AMP (Accelerated Mobile Pages) is a web component framework that allows for the creation of fast-loading web pages.
AMP (Accelerated Mobile Pages) is a web component framework that aims to make web pages load faster on mobile devices, which can be configured in Next.js.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,173e80ccbe8ecd833c055f4cd3e75ee6,7de6e744f7ef4ab90e5a1db6bfad49c3,86965ee0055fe16d855a4f0e993b9d85,981566c16bf11e1256e74208c2869349,bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="YARN PNP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Yarn Plug'n'Play (PnP) is a package management feature that eliminates the need for a node_modules directory, which is not currently supported in Next.js with Turbopack.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="ICSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ICSS (Interoperable CSS) rules are a set of CSS rules that allow for better modularization and interoperability, which are not supported in Next.js with Turbopack.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="NEXT.TURBOPACK_TRACING">
      <data key="d0">EVENT</data>
      <data key="d1">NEXT_TURBOPACK_TRACING is an environment variable used to generate trace files for performance metrics and memory usage in Next.js applications using Turbopack.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="TRACE FILE">
      <data key="d0">EVENT</data>
      <data key="d1">Trace files are generated to help the Next.js team investigate and improve performance metrics and memory usage.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="NEXT.JS APP ROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">The Next.js App Router is a new model for building applications using React's latest features, including Server Components and Streaming with Suspense.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="SERVER COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Server Components are a feature of React that allows developers to build applications with server-side rendering capabilities, which are utilized in Next.js.
Server Components in Next.js allow for colocating data fetching within React components, reducing the amount of JavaScript sent to the client.
Server Components in Next.js allow for secure data fetching directly from the server, enhancing performance and security.
Server Components in Next.js are components that are rendered on the server side, optimizing the initial load performance by sending only the necessary HTML to the client.
Server Components are a feature in Next.js that allow developers to render components on the server side.
Server Components are a feature in Next.js that allows components to be rendered on the server, improving performance and SEO.

Server Components are a feature of React that allows components to be rendered on the server, improving performance and user experience in Next.js applications.
Server Components in Next.js are components that run on the server during the build process, allowing for static site generation.
Server Components are a feature of Next.js that allows components to be rendered on the server, reducing the amount of JavaScript sent to the client.
Server Components are a feature in Next.js that allow developers to build applications with server-rendered components, improving performance and user experience.
Server Components are a feature in React that allows for server-side rendering of components, enabling role-based access and conditional rendering based on user roles.


Server Components are React components that are rendered on the server side, providing a way to optimize performance by reducing the amount of JavaScript sent to the client.

Server Components are a feature in Next.js that allow developers to render components on the server, improving performance and user experience.
Server Components are a new experimental feature in React that allow developers to build components that render on the server instead of the client.
Server Components are a feature in Next.js that allow developers to build components that are rendered on the server, improving performance and user experience.
Server Components are UI components that are rendered on the server, allowing for optimized performance and caching.
Server Components are a feature in React that allows UI components to be rendered on the server, improving performance and security.
Server components in Next.js are components that are rendered on the server, allowing for improved performance and SEO.
Server Components in Next.js allow for automatic code splitting by route segments, improving performance by loading only necessary code.

</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51,2c3e23b7d2b5c3c6c258760c75956b4c,2d13fb0b0bfe03d14a0f41e4d7920e31,2e4837fd908fed547d3170725336a52e,3da6822267f4aca1b29b1233660a9282,5214aa930e0680c0e176373359966818,56ab21d16e9b86cd9d551ec941e65b04,69ac19d7db15ae11c7884ce391807330,6b625fce8c9b4b0f729aa3cdc85d284d,6ebc8c74b9b797357659151a46693a88,715bdaaae1cb7470e0e54efac993beb5,735b59f53ffba96602dace4169c285ed,7a1bd3f71b0a9aadbba7495339a8b723,7ad571c896064ee6e36a4acd93898e88,82c6ef4d52bb277665ade9f274822be3,981566c16bf11e1256e74208c2869349,ace34d6baa071fb6d6db3dcaaf3da1dc,adb5bec4b54e83924618cafc99d40e24,b0a7c0b65015814bd16809b55a84c5cc,c157c439271dbeeebb69b81254b288af,c55d8ff0ea71716df1fdfba115d52035,d405678be18c78d7d78d7a6521a58a56,dea59f788f9645dcf527f4f5f4f12ae7,deac651e6b6d2334bf79cf4c59d8ba7c,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="STREAMING WITH SUSPENSE">
      <data key="d0">EVENT</data>
      <data key="d1">Streaming with Suspense is a React feature that allows for loading components asynchronously, improving user experience in Next.js applications.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="PARALLEL ROUTES">
      <data key="d0">EVENT</data>
      <data key="d1">Parallel Routes is a feature in Next.js that allows rendering multiple pages in the same layout, enhancing the flexibility of application design.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="MULTI-TENANT APPS">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-tenant apps refer to a single Next.js application serving multiple tenants, which is a common architectural pattern in web development.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="CACHE INVALIDATION">
      <data key="d0">EVENT</data>
      <data key="d1">Cache invalidation refers to the process of clearing or updating cached data in Next.js to ensure that users receive the most current information.</data>
      <data key="d2">981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="NEXT.JS COMMERCE">
      <data key="d0">EVENT</data>
      <data key="d1">Next.js Commerce is an open-source example application built on Next.js that showcases e-commerce capabilities and best practices.
</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="PLATFORMS STARTER KIT">
      <data key="d0">EVENT</data>
      <data key="d1">The Platforms Starter Kit is an open-source example application built on Next.js that demonstrates how to build applications with the framework.
The Platforms Starter Kit is another open-source application built on Next.js, providing a foundational setup for building platform-based applications.</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c,981566c16bf11e1256e74208c2869349</data>
    </node>
    <node id="SWC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SWC is a Rust-based platform designed for fast developer tools, used for compilation, minification, and bundling in Next.js.
SWC is a Rust-based compiler used by Next.js for faster builds and minification.
SWC is a Rust-based platform for compiling JavaScript and TypeScript, providing faster builds and minification for web applications.
SWC is a Rust-based compiler used by Next.js to compile JavaScript and TypeScript, offering significant performance improvements over Babel.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3,60041d4c2667ea62ef90a73e1138bae6,6fa25577febe4c193fec7e398e287d7c,876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="JEST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Jest is a JavaScript testing framework that works seamlessly with Next.js for testing applications, providing features like auto-mocking and environment loading.
Jest is a JavaScript testing framework used for unit testing and snapshot testing, often in conjunction with React Testing Library.
Jest is a JavaScript testing framework designed to ensure correctness of any JavaScript codebase, often used in conjunction with Next.js for testing applications.

Jest is a JavaScript testing framework used for testing applications, including those built with Next.js.
Jest is a delightful JavaScript testing framework with a focus on simplicity, often used for testing React applications.
Jest is a testing framework used for unit testing and snapshot testing in JavaScript applications.
Jest is a JavaScript testing framework designed to ensure correctness of any JavaScript codebase, commonly used with React applications.
Jest is a JavaScript testing framework used for unit testing React components and applications.
Jest is a JavaScript testing framework maintained by Facebook, designed to ensure correctness of any JavaScript codebase, often used in conjunction with React applications.
Jest is a JavaScript testing framework designed to ensure correctness of any JavaScript codebase, often used for testing React applications.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39,0ef0d7dfd239c67d2b08d6be68926b78,407c79602db9cac967822f4d34fa94d2,444fc385d67c401653f1a2c133ba95e6,5e1697c043b2eb0208b7ae196db74f56,62cbc95f20c7b902a0c2e3e9af7dd83c,6fa25577febe4c193fec7e398e287d7c,936f58e9a3d0c41d6fd88ca7b6e0a119,a67099d1f0ea66a70c07e9595443231a,b0a7c0b65015814bd16809b55a84c5cc,f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="RELAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Relay is a JavaScript framework for building data-driven React applications, which can be integrated with Next.js for efficient data management.</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c</data>
    </node>
    <node id="ARCHITECTURE: NEXT.JS COMPILER">
      <data key="d0">EVENT</data>
      <data key="d1">The event refers to the architectural design and implementation of the Next.js Compiler, which enhances the performance of JavaScript code transformation and minification.</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c</data>
    </node>
    <node id="BABEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Babel is a JavaScript compiler that was previously used in Next.js for transforming JavaScript code before the introduction of the Next.js Compiler.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript, which can be integrated with Next.js for backward compatibility.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript, converting it into a backward-compatible version for older browsers.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript, and it was previously used by Next.js before the introduction of SWC.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript, converting it into a backward-compatible version for older browsers.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript features by transforming them into a version compatible with current browsers.
Babel is a JavaScript compiler that allows developers to use next-generation JavaScript, which is often integrated with Next.js for transpiling code.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39,391895fc365f2f2512a45ea503fbfa86,478ca906eeeb1b1356949c55e289c4d3,60041d4c2667ea62ef90a73e1138bae6,6fa25577febe4c193fec7e398e287d7c,876a936d41a4189fd50277eeb02bfdf7,9c75ee4a07cd172f143b2b09451d333c</data>
    </node>
    <node id="TERSER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Terser is a JavaScript minifier that was used in Next.js for minifying output bundles before the Next.js Compiler was implemented.</data>
      <data key="d2">6fa25577febe4c193fec7e398e287d7c</data>
    </node>
    <node id="FAST REFRESH">
      <data key="d0">EVENT</data>
      <data key="d1">Fast Refresh is a feature in Next.js that allows for instant feedback during development by preserving component state while editing.
Fast Refresh is a feature in Next.js that allows live reloading of the browser page while maintaining temporary client-side state when changes are made to files.
Fast Refresh is a feature in React that allows developers to see changes in their code immediately without losing the component state.
Fast Refresh is a feature in Next.js that allows developers to see changes in their application without losing the component state, enhancing the development experience.
Fast Refresh is a feature in Next.js that allows developers to see changes in their application instantly without losing the component state.
Fast Refresh is a feature in React that allows for instant feedback during development by preserving component state while editing.
Fast Refresh is a feature in Next.js that allows developers to see changes in their code reflected in the browser without losing component state.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,3cf51b17316c47851ab9a8bb2fddfbc3,478ca906eeeb1b1356949c55e289c4d3,6fa25577febe4c193fec7e398e287d7c,a9a858ea7abac3fe79fa759ea8171597,ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="MOBX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MobX is a state management library that can be used with React applications, including those built with Next.js.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="THEME UI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Theme UI is a library for building themeable user interfaces in React applications, which can be utilized in Next.js projects.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="CONSOLE">
      <data key="d0">EVENT</data>
      <data key="d1">Console refers to the built-in JavaScript object that provides access to the browser's debugging console, which can be manipulated in Next.js applications.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="REACT REMOVE PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">reactRemoveProperties is a compiler option in Next.js that allows the removal of specific properties from React components during the build process.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="REMOVE CONSOLE">
      <data key="d0">EVENT</data>
      <data key="d1">removeConsole is a compiler option in Next.js that enables the removal of console.* calls from the application code.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="LEGACY DECORATORS">
      <data key="d0">EVENT</data>
      <data key="d1">Legacy decorators are a feature in JavaScript that can be used with older versions of libraries like MobX, which Next.js supports for compatibility.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="EMOTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Emotion is a library for writing CSS styles with JavaScript, which can be integrated into Next.js applications.
Emotion is a library designed for writing CSS styles with JavaScript in React applications.
Emotion is a performant and flexible CSS-in-JS library designed for styling applications built with React.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,5aa64e0729b8afd73930cdaf5ff7a8aa,876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="SWC TRACE PROFILING">
      <data key="d0">EVENT</data>
      <data key="d1">SWC trace profiling is an experimental feature in Next.js that allows developers to generate performance traces for analysis.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="MODULE TRANSPILATION">
      <data key="d0">EVENT</data>
      <data key="d1">Module transpilation is a feature in Next.js that automatically transpiles and bundles dependencies from local packages or external dependencies.</data>
      <data key="d2">876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="OPTIMIZE PACKAGE IMPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Optimize package imports is a feature in Next.js that improves the efficiency of importing packages in applications.
Optimize Package Imports is a feature in Next.js that allows for the loading of only the modules that are actually used, improving performance.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,876a936d41a4189fd50277eeb02bfdf7</data>
    </node>
    <node id="NEXT.CONFIG.JS">
      <data key="d0" />
      <data key="d1">


next.config.js is a configuration file used in Next.js to customize various settings and behaviors of the application.
next.config.js is a configuration file in Next.js where developers can define various settings, including runtime configurations and redirects.
next.config.js is a configuration file used in Next.js to customize the behavior of the framework, including routing, redirects, and rewrites.
next.config.js is a configuration file for Next.js applications that allows developers to customize various settings, including rewrites and redirects.
next.config.js is a configuration file used in Next.js to customize various settings, including headers.


next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and options for their projects.
next.config.js is a configuration file used in Next.js applications to customize various settings such as asset prefix, base path, and server-side dependency bundling.

Next.config.js is a configuration file in a Next.js application where global settings, including image loader configurations, can be defined.

next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and behaviors of the framework.
next.config.js is a configuration file used in Next.js applications to define settings such as base paths and rewrites for routing.
next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and behaviors of the framework.
next.config.js is a configuration file used in Next.js applications to customize various settings, including plugins and optimizations.
next.config.js is a configuration file in Next.js applications where developers can customize various settings, including Sass options and image optimization settings.

next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and behaviors of the framework.


next.config.js is a configuration file used in Next.js applications to customize various settings and options.
next.config.js is a configuration file used in Next.js applications to define various settings, including rewrites, headers, and other routing behaviors.


A configuration file used in Next.js to set various options for the application.


next.config.js is a configuration file used in Next.js applications to customize various settings and behaviors of the framework.
next.config.js is a configuration file used in Next.js applications to customize various settings and behaviors of the framework.

next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and options for their projects.


next.config.js is a configuration file in Next.js that allows developers to customize the behavior of their application.
next.config.js is a configuration file for customizing the behavior of a Next.js application.
next.config.js is a configuration file for Next.js applications that allows developers to customize the behavior of the framework.
next.config.js is a configuration file in Next.js that allows developers to customize various settings and behaviors of their application.
next.config.js is a configuration file in Next.js applications where developers can set various options, including experimental features like Server Actions.
Next.config.js is a configuration file for Next.js applications that allows developers to customize various settings and behaviors of the framework.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056,077fbb77da60b5f069a4cf5fd5e33e9b,0b10d085541dc5564e998254b8588822,16332d9a8715d2cac034c2aa3c4f12f6,1a9f90261d97f4e9455bb0fa22f4ee9c,21183997adb6288a64caa86bfd107612,24e08d5dea64dab91a3ce772d91b0e8f,2d13fb0b0bfe03d14a0f41e4d7920e31,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4d99e596a43a5b336e12425953d3a120,5afd0d2ef8220eea43b9a4e3736e7bee,6160e6925dba648999d09c55006ab046,6c6960c6073b7fc858222c11aed49665,717947e9b123f15f49c748bb45aec68d,743d216d66ffda2efe23e0e9a8d0f0cf,7849b1ca8bbfc8c3240def9d244f008d,7e9fce61758916e4d2b7de2f2f4d1704,815b3c1f78ab2336e7e5bdae07b49d2b,83cffab512363b08e89e0b35424b489c,876a936d41a4189fd50277eeb02bfdf7,89def9941cbf0a381e1e4a28a703e201,8c16e2baedacd39ce0384eac61e5ee79,936f58e9a3d0c41d6fd88ca7b6e0a119,9726f4ae30b11539c429ff41c8326d46,a3dae9be9408e57ff26350383026033f,a9c779cfa21a679f557dbbc90283565f,ab49838f472483f11a1afbcaff84ad1e,ace34d6baa071fb6d6db3dcaaf3da1dc,affc1268c54094ecde29441589759673,b48fe8c8f5e2835de49d9a46578cbf9d,ba53cb824bd4e5b80d861ee299c10f92,bd13629205b4661186b2631023139a53,c8d58fd330c4f217c52b50590414e517,cb4791e4249947cbab8022435c79aa13,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d1675bdf7576ae8e63e95f4105fcb693,d5597c0b98fb6d7afb8e40f53a3b0be7,db79d898afcf0c4fadf71858f0b3e795,de5d774b63da599b2e72cb96a3e61337,e99cfa8c07448d7a84d08d3a5ba6dc7a,ebeae91fd404de4ca5981ecf5cc74074,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="ERROR BOUNDARIES">
      <data key="d0">EVENT</data>
      <data key="d1">Error boundaries are a React feature that allows components to catch JavaScript errors in their child component tree, preventing crashes and providing a fallback UI.
Error Boundaries are a feature in React and Next.js that catch JavaScript errors in their child components, allowing for graceful error handling and fallback UI.</data>
      <data key="d2">33239b71158a6566c2b82b6a30b68e82,478ca906eeeb1b1356949c55e289c4d3</data>
    </node>
    <node id="COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A component in React and Next.js is a reusable piece of UI that can manage its own state and lifecycle, allowing for modular development of user interfaces.
A component in React is a reusable piece of UI that can manage its own state and lifecycle.
A component is a reusable piece of code in web development that encapsulates functionality and UI elements, such as the Author and Next Image components.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3,5b4f484288a596801b79828ce9d0ba11,a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="FUNCTION COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">Function components are a simpler way to write components in React that only contain a render method and can use hooks for state and lifecycle features.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3</data>
    </node>
    <node id="HOOKS">
      <data key="d0">EVENT</data>
      <data key="d1">Hooks are functions that let developers use state and other React features in function components, enabling a more functional programming style in React applications.
Hooks are functions in React that let you use state and other React features without writing a class, commonly used in Next.js applications.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3,77bf22c1fcd1e61ff866f696397b3a69</data>
    </node>
    <node id="RUNTIME ERRORS">
      <data key="d0">EVENT</data>
      <data key="d1">Runtime errors occur during the execution of a program, which can lead to unexpected behavior or crashes in applications, and are handled by error boundaries in React.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3</data>
    </node>
    <node id="SYNTAX ERRORS">
      <data key="d0">EVENT</data>
      <data key="d1">Syntax errors are mistakes in the code that violate the rules of the programming language, preventing the code from being executed until corrected.</data>
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3</data>
    </node>
    <node id="MODULE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">478ca906eeeb1b1356949c55e289c4d3</data>
    </node>
    <node id="WEB AIM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WebAIM is an organization that provides resources and tools to help make web content accessible to people with disabilities.</data>
      <data key="d2">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </node>
    <node id="A11Y PROJECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The A11y Project is a community-driven effort to make web accessibility easier for developers and designers.</data>
      <data key="d2">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </node>
    <node id="WCAG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Web Content Accessibility Guidelines (WCAG) are a set of recommendations for making web content more accessible, primarily for people with disabilities.</data>
      <data key="d2">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </node>
    <node id="USEMEMO">
      <data key="d0">EVENT</data>
      <data key="d1">useMemo is a React Hook that allows developers to optimize performance by memoizing expensive calculations and returning cached results when dependencies have not changed.</data>
      <data key="d2">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </node>
    <node id="USECALLBACK">
      <data key="d0">EVENT</data>
      <data key="d1">useCallback is a React Hook that returns a memoized callback function, helping to optimize performance by preventing unnecessary re-creations of functions on re-renders.</data>
      <data key="d2">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </node>
    <node id="USEEFFECT">
      <data key="d0" />
      <data key="d1">
A React hook that allows side effects to be performed in functional components, such as data fetching or subscriptions, based on dependencies.
useEffect is a React Hook that allows you to perform side effects in function components, such as data fetching or subscriptions.

useEffect is a React Hook that allows you to perform side effects in function components, such as updating views when the component mounts or updates.
useEffect is a Hook in React that lets you perform side effects in function components, such as data fetching or subscriptions.</data>
      <data key="d2">0bfaadafcf31828f19e4b2657565944a,0fec562f1c16117484e5946f3f2df826,170893bac86ced48a278abde4d144710,223233d7a3658c1a7836573abacf9175,3cf51b17316c47851ab9a8bb2fddfbc3,4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="STATIC">
      <data key="d0">EVENT</data>
      <data key="d1">Static refers to content that is pre-rendered and does not change in response to user interactions.
Static is a property in the staleTimes configuration that corresponds to the time period for caching statically generated pages.
Static refers to the pre-rendering of pages in Next.js, allowing for faster load times and improved performance by serving pre-built HTML.</data>
      <data key="d2">234c5cf6d90b5c8b7d3583a3300a4752,bc34912ac16bc1504d04e9019f0c8cb9,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="LINT COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">Lint command refers to the command that runs ESLint to check for code quality and potential errors in JavaScript files.</data>
      <data key="d2">bc34912ac16bc1504d04e9019f0c8cb9</data>
    </node>
    <node id="GZIP">
      <data key="d0" />
      <data key="d1">
Gzip is a file format and a software application used for file compression and decompression, commonly used in web applications to reduce bandwidth usage.
Gzip is a file format and a software application used for file compression and decompression, commonly used in web applications to reduce bandwidth usage.</data>
      <data key="d2">4443464e7a2cb4bcbbf667881fecb236,83cffab512363b08e89e0b35424b489c,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </node>
    <node id="CREATE-NEXT-APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Create-next-app is a command line tool that allows users to quickly create a new Next.js application using a default template or an example from a public GitHub repository.
Create-next-app is a command that initializes a new Next.js project, now shipping with TypeScript by default.
create-next-app is a command-line interface (CLI) tool that allows users to create a new Next.js application using a default template or an example from a public GitHub repository.
Create Next App is a command-line tool that helps developers quickly set up a new Next.js project with a predefined template.
create-next-app is a command-line tool that sets up a new Next.js project with default configurations and dependencies, streamlining the development process.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,391895fc365f2f2512a45ea503fbfa86,936f58e9a3d0c41d6fd88ca7b6e0a119,99aea11e8e00a31189977a03ce528a10,b0a7c0b65015814bd16809b55a84c5cc</data>
      <data key="d3">ORGANIZATION</data>
    </node>
    <node id="ARCHITECTURE">
      <data key="d0">EVENT</data>
      <data key="d1">The architecture of Next.js describes how the framework operates under the hood, detailing its structure and components.
Architecture refers to the design and structure of the CPU, including various types such as amd64, arm, and mips.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,4a99c636fb9adfcf5771118fe58ce017</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="NODE_OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Node Options are command line arguments that can be passed to Next.js commands to modify their behavior, such as enabling debugging or setting environment variables.
NODE_OPTIONS is an environment variable used to set options for Node.js, including enabling debugging features for applications.
NODE_OPTIONS is an environment variable that allows users to set options for Node.js processes, such as enabling debugging features.
NODE_OPTIONS is an environment variable used in Node.js to set options for the Node.js runtime, such as enabling debugging.</data>
      <data key="d2">03acdd28901db5ff52a4bdbf34d9d0d5,0aae21b170363fb93fdbbb65d9c7576b,ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="EDGE RUNTIME">
      <data key="d0">EVENT</data>
      <data key="d1">The Edge Runtime is a feature of Next.js that allows for the execution of middleware and supports various APIs for handling network requests and responses.
Edge Runtime is a serverless execution environment for running JavaScript code at the edge of the network.
The Edge Runtime is a limited server runtime in Next.js used for Middleware, routing rules, and setting headers.
The Edge Runtime in Next.js is used for Middleware and supports various network and encoding APIs, enhancing the performance of web applications.
The Edge Runtime has restrictions including unsupported native Node.js APIs and certain disabled JavaScript features.
Edge runtime is a serverless execution environment that allows developers to run code closer to users for improved performance.
The Edge Runtime is a limited server environment used in Next.js for executing middleware and routing rules, providing faster response times for certain applications.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,234c5cf6d90b5c8b7d3583a3300a4752,5791705a1f965d3a768f111e7fdcade1,59f479f2a59b233e2c0b4bfcfce952a8,a0ed25040eb1637a5c82493764f822ac,b1787ce5e713d63d1f4f1203762380a3,c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="NETWORK APIS">
      <data key="d0">EVENT</data>
      <data key="d1">Network APIs are a set of APIs within the Edge Runtime that facilitate the handling of network requests, such as fetching resources and managing HTTP headers.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="CRYPTO APIS">
      <data key="d0">EVENT</data>
      <data key="d1">Crypto APIs provide access to cryptographic functionalities, including hashing, signing, and encryption within the Edge Runtime.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="WEB STANDARD APIS">
      <data key="d0">EVENT</data>
      <data key="d1">Web Standard APIs are a collection of APIs that provide fundamental functionalities for web development, such as handling arrays, dates, and console operations.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="FETCH">
      <data key="d0">EVENT</data>
      <data key="d1">Fetch is an API that allows web applications to make network requests similar to XMLHttpRequest, but with a more powerful and flexible feature set.
Fetch is a modern JavaScript API for making network requests, allowing developers to retrieve resources from the network.
Fetch is a web API that allows for making network requests similar to XMLHttpRequest, used to retrieve resources from a server.
Fetch is a method used in JavaScript to make network requests to retrieve data from APIs, commonly used in Next.js for data fetching in functions like getStaticProps.
Fetch is a method used in Next.js to retrieve data from an external API or resource.
Fetch is a JavaScript function used to make network requests to retrieve data from APIs.
The fetch event is a network request made to retrieve data from a specified URL, often used in web applications to obtain resources asynchronously.
Fetch is a method used to retrieve data from an API or server.
Fetch is a JavaScript function used to make network requests to retrieve resources from a server.
Fetch is a method used to make network requests to servers, often used in API calls to retrieve or send data.
Fetch is a web API that allows for making network requests to servers to retrieve or send data, commonly used in JavaScript applications for data fetching.
Fetch is a JavaScript API that allows web applications to make network requests to servers, enabling data retrieval and submission.
fetch is a web API used to make network requests to servers, often used to retrieve data in web applications.
Fetch is a web API that allows for making network requests to retrieve resources, such as product data in this context.
Fetch is a web API that allows for network requests to be made to servers, enabling data retrieval and interaction with resources over the internet.
Fetch is a JavaScript function used to make network requests to retrieve data from APIs or other resources.
fetch is a JavaScript function used to make network requests to retrieve data from a specified URL.
Fetch is a web API that allows for network requests to be made to retrieve resources from a server.

Fetch is a JavaScript function used to make network requests, commonly used in Next.js for data fetching.
Fetch is a modern web API for making network requests, allowing you to retrieve resources across the network.

Fetch is a web API used in Next.js to make network requests to retrieve data, which can be cached in the Data Cache.
Fetch is a web API used to make network requests to servers, commonly used in Next.js for data fetching in both server and client components.
</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b,0fec562f1c16117484e5946f3f2df826,20652ea1750ad5513b326c308672d886,234c5cf6d90b5c8b7d3583a3300a4752,28003ee6fb44c56e3a5598cedee41343,3c09a802c38a10e785a119f2ba114c73,56ab21d16e9b86cd9d551ec941e65b04,6b625fce8c9b4b0f729aa3cdc85d284d,8139e8b58a97f9e03ee08d82f3d2858a,86965ee0055fe16d855a4f0e993b9d85,8a317609f77f5ace7ebd5473071b9693,91a237014868fc106c5edbdc4ad2b520,98961c89bf003488bbe6223bc946b205,98b8f4a199a3050f92608604cd0974b2,a0ed25040eb1637a5c82493764f822ac,a114c731efa8589ee311d40c0106c001,af00e01481cac23e3b67c635215254ab,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,c55d8ff0ea71716df1fdfba115d52035,db6f031874217fc604efd6e2661bace2,dea59f788f9645dcf527f4f5f4f12ae7,e1b487c3c6375629c06ea480fd8dc53b,e2066c317993455c32b6ebbfabfb5497,e99cfa8c07448d7a84d08d3a5ba6dc7a,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="FETCHEVENT">
      <data key="d0">EVENT</data>
      <data key="d1">FetchEvent represents a fetch event that occurs when a resource is requested, allowing developers to intercept and handle requests.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="FILE">
      <data key="d0">EVENT</data>
      <data key="d1">File represents a file object in web applications, providing information about the file's attributes and contents.
File refers to the input data source that can be used for entity detection in the Predictions service.
A file is a digital document or data stored in the storage system that can be copied, moved, or deleted.
A file is a digital document that can be uploaded, downloaded, or manipulated within the AWS Amplify and S3 ecosystem.

File refers to a digital document or data that can be uploaded or managed within an application.
File refers to the digital files that users can upload through the StorageManager.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa,5f39324ac9e2fb1bb8b139c9b114f332,63bae3a149e50b7452962f7bdd8724ea,70363c8433b020965dc7ec11c063e460,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,d5db54aea339e57737c40468d9473a13,ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FORMDATA">
      <data key="d0">EVENT</data>
      <data key="d1">FormData is an API that allows you to easily construct a set of key/value pairs representing form fields and their values, which can be sent using fetch.
FormData is an interface that allows you to easily construct a set of key/value pairs representing form fields and their values.
An interface that provides a way to construct a set of key/value pairs representing form fields and their values.
FormData represents the data submitted by users in forms, which may trigger server actions.
FormData is an interface that allows for easy manipulation of form data in JavaScript, used in conjunction with Server Actions.
FormData is an object that holds the data submitted through the form, including customerId, amount, and status.
FormData is an interface that provides a way to easily construct a set of key/value pairs representing form fields and their values.
FormData is an interface that allows for the construction of a set of key/value pairs representing form fields and their values, typically used in conjunction with server actions.
FormData is an object that holds the data entered by users in a form, including fields like username, password, and attributes.</data>
      <data key="d2">1d939f19e04dfaa8df3664a2cd4db1f1,2f2dde2368e46aa812e2a39e32b3505d,407c79602db9cac967822f4d34fa94d2,4a5b866ffddc7fba2346c94f6c037019,9ac6b7bdb38f92b5b8fbd5762735c158,a0ed25040eb1637a5c82493764f822ac,b6f71d64cf5764914e58142430b460e6,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,cb861a02338e7cf7786d791829706a53</data>
    </node>
    <node id="HEADERS">
      <data key="d0">EVENT</data>
      <data key="d1">Headers represent HTTP headers associated with requests and responses, allowing developers to manipulate and access header information.
Headers are custom HTTP headers that can be set on the response to an incoming request in web applications.
Headers are custom HTTP headers set on the response to an incoming request in Next.js applications.
Headers are HTTP headers that can be set in the next.config.js file to control the behavior of requests and responses in a Next.js application.
Headers are key-value pairs sent in HTTP requests and responses, providing essential information about the request or response, such as content type and authorization.
Headers in Next.js allow developers to set custom HTTP headers on responses for incoming requests.

Headers are key-value pairs sent in HTTP requests and responses, which can be manipulated using NextResponse in Next.js applications.
The headers function is part of the Next.js framework, allowing developers to read HTTP incoming request headers from a Server Component.
Headers are key-value pairs sent in HTTP requests and responses, used to convey information about the request or response.
Headers are key-value pairs sent in HTTP requests and responses that provide essential information about the request or response.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,102262d1b2a41d767a543121d96412c6,113e44bf79d1dd5dbde02354435765e3,2d1db23990399e0c3a7fe2300114d685,72e1433a8550144aaf1d1fd8f3cb3774,743d216d66ffda2efe23e0e9a8d0f0cf,bd13629205b4661186b2631023139a53,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,c219d208ec8254181cab570f210dac3f,d1d62ecebefc7d4d3ed8c06e50adc45c,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="URLSEARCHPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">URLSearchParams is an API that provides utility methods to work with the query string of a URL, allowing for easy manipulation of URL parameters.
URLSearchParams is an interface that provides utility methods for working with the query string of a URL.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="WEBSOCKET">
      <data key="d0">EVENT</data>
      <data key="d1">WebSocket represents a persistent connection between a client and server, allowing for real-time communication over a single TCP connection.
WebSocket is a protocol for full-duplex communication channels over a single TCP connection, commonly used in real-time web applications.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa,d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="TEXTDECODER">
      <data key="d0">EVENT</data>
      <data key="d1">TextDecoder is an API that decodes a Uint8Array into a string, allowing for the conversion of binary data into text.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="TEXTENCODER">
      <data key="d0">EVENT</data>
      <data key="d1">TextEncoder is an API that encodes a string into a Uint8Array, enabling the conversion of text into binary data.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="READABLESTREAM">
      <data key="d0">EVENT</data>
      <data key="d1">ReadableStream represents a readable stream of data, allowing for the consumption of data in a streaming fashion.
ReadableStream is a JavaScript object that represents a source of data that can be read from, typically used for streaming data in web applications.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="WRITABLESTREAM">
      <data key="d0">EVENT</data>
      <data key="d1">WritableStream represents a writable stream of data, allowing for the writing of data in a streaming fashion.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="TRANSFORMSTREAM">
      <data key="d0">EVENT</data>
      <data key="d1">TransformStream represents a stream that can read and write data, allowing for the transformation of data as it is processed.</data>
      <data key="d2">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </node>
    <node id="BLOB">
      <data key="d0" />
      <data key="d1">

A Blob is a data type that represents a file-like object of immutable, raw data; it is used in the context of uploading files to S3.
Blob is a data type in SQL used to store large binary objects, typically up to 65,535 bytes.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,c12e1c591cd7bdbcdc7ba0c3cbc8aafa,e8bb64825eb8da944e09e46a90be853c,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="ASYNCLOCALSTORAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AsyncLocalStorage is a Next.js specific polyfill for managing asynchronous local storage.
AsyncLocalStorage is a Next.js specific polyfill for managing asynchronous local storage.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="ENVIRONMENT VARIABLES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Environment Variables are used in Next.js to manage configuration settings for both development and production environments.
Environment variables are used to configure applications, with Next.js requiring a specific prefix for client-side variables.
Environment variables are variables external to the application that can be used to configure settings and behavior in different environments.
Environment variables are dynamic values that can affect the way running processes will behave on a computer, often used in testing to configure settings.
Environment variables in Next.js are used to manage configuration settings and sensitive information in applications.
Environment Variables are key-value pairs used to configure applications, allowing different settings for development, production, and testing environments.
Environment Variables can be accessed using process.env in Next.js for both development and production builds.
Environment variables are dynamic values that can affect the behavior of running processes on a computer, used in Next.js for configuration.
Environment variables are dynamic values that can affect the way running processes will behave on a computer.
Environment variables are variables external to the application that can be used to configure settings and secrets in a project.
Environment variables are dynamic values that can affect the behavior of running processes on a computer, often used in software development to configure applications.
Environment variables are key-value pairs used to configure applications, allowing for dynamic configuration based on the environment in which the application is running.
Environment variables are dynamic values that can affect the behavior of running processes on a computer, particularly in the context of web applications like those built with Next.js.
Environment variables are key-value pairs used to manage configurable settings across different deployment environments in Amplify.
Environment Variables are dynamic values that can affect the way running processes will behave on a computer.
Environment variables are dynamic values that can affect the behavior of running processes on a computer, often used in cloud functions to configure settings.
Environment variables in Amplify are used to manage configuration settings for different deployment environments.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39,04edddc24da6789de5ee2349698f4056,0cd205bf5fe0ebe4aec3529e4d44191c,0e3c564b3dd53e829befef4d6241c23e,173e80ccbe8ecd833c055f4cd3e75ee6,22aa4f927a16210ebb8804ace28ec79a,5e1697c043b2eb0208b7ae196db74f56,6a27b514d5ea49bd1a6dd159d44aaf87,7cf992845bf79c5ec4ae2614617a79f4,8aece6e31757222174fd611077ca4f6d,8e6f8a08e3cdc9d85f1015001bcf93dc,9da317a323ff76913285228d8243413e,a054cee32c59ce9d304bb1f8716fbb7c,ab869c819df53e1e9e3adebf6a4234a2,adb5bec4b54e83924618cafc99d40e24,b1787ce5e713d63d1f4f1203762380a3,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </node>
    <node id="EVAL">
      <data key="d0">EVENT</data>
      <data key="d1">Eval is a JavaScript function that evaluates code represented as a string, but is restricted in the Edge Runtime.
eval is a JavaScript function that evaluates JavaScript code represented as a string, allowing for dynamic code execution.</data>
      <data key="d2">99aea11e8e00a31189977a03ce528a10,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="WEBASSEMBLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WebAssembly is a binary instruction format for a stack-based virtual machine, providing a way to run code on the web.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
      <data key="d3">ORGANIZATION</data>
    </node>
    <node id="MIDDLEWARE CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Middleware configuration in Next.js allows for dynamic code evaluation settings.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="DYNAMIC CODE EVALUATION">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic code evaluation refers to executing code that is generated at runtime, which is restricted in the Edge Runtime.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="FLOAT64ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Float64Array is a typed array in JavaScript that represents an array of 64-bit floating point numbers.
Float64Array represents a typed array of 64-bit floating point numbers in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="INT8ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Int8Array is a typed array in JavaScript that represents an array of 8-bit signed integers.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="INT16ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Int16Array is a typed array in JavaScript that represents an array of 16-bit signed integers.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="INT32ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Int32Array is a typed array in JavaScript that represents an array of 32-bit signed integers.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="UINT8ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Uint8Array is a typed array in JavaScript that represents an array of 8-bit unsigned integers.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="UINT8CLAMPEDARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Uint8ClampedArray is a typed array in JavaScript that represents an array of 8-bit unsigned integers clamped to 0-255.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="UINT32ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Uint32Array is a typed array in JavaScript that represents an array of 32-bit unsigned integers.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="REGEXP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">RegExp is a JavaScript object that represents a regular expression, allowing you to match combinations of characters.
RegExp represents a regular expression, allowing you to match combinations of characters.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="SET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Set is a JavaScript object that represents a collection of values, where each value may occur only once.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="MAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Map is a JavaScript object that represents a collection of key/value pairs, where each key may occur only once.

A map is a visual representation of an area that can be displayed in applications, showing various geographical features and locations.
A map is a visual representation of an area that can be displayed on a webpage using mapping libraries like MapLibre.
A map is a visual representation of an area, showing geographical features and locations, often used in conjunction with location services.
Map is a resource created in the geo stack that provides mapping capabilities for applications.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816,60d9151920f9b881f34c958c0c5d770b,6450bdd7941ff60e85c4d4acc9a73b25,a651cbb3e4a31fb9c592893b86f2d855,b1787ce5e713d63d1f4f1203762380a3,cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="JSON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JSON is a format for structuring data that is easy for humans to read and write, and easy for machines to parse and generate.

JSON provides functionality to convert JavaScript values to and from the JSON format.
JSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write and easy for machines to parse and generate.
JSON (JavaScript Object Notation) is a lightweight data interchange format that is easy for humans to read and write and easy for machines to parse and generate, commonly used for data storage and transmission.
JSON is a data type in SQL used to store JSON (JavaScript Object Notation) formatted data.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,84b5c29553feb2883a2e93ffbac5b791,b1787ce5e713d63d1f4f1203762380a3,c5461cfa4259c43255132d8f916b1764,ccf507e98d23ff18f3ca206f0a8f29a2,e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="MATH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Math is a built-in JavaScript object that provides access to mathematical functions and constants.
Math provides access to mathematical functions and constants in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="NUMBER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Number is a built-in JavaScript object that represents numeric values.
Number represents a numeric value in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="OBJECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Object is a built-in JavaScript object that is the base of all JavaScript objects.
Object refers to the data structure used to define individual header properties such as source and headers in Next.js.
Object represents the base of all JavaScript objects.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,743d216d66ffda2efe23e0e9a8d0f0cf,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="STRING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">String is a built-in JavaScript object that represents a sequence of characters.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="SYMBOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Symbol is a built-in JavaScript object that represents a unique and immutable data type used as the key of an object property.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="RANGEERROR">
      <data key="d0">EVENT</data>
      <data key="d1">RangeError is a built-in JavaScript object that represents an error when a value is not in the set or range of allowed values.
RangeError represents an error when a value is not in the set or range of allowed values.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="REFERENCEERROR">
      <data key="d0">EVENT</data>
      <data key="d1">ReferenceError is a built-in JavaScript object that represents an error when a non-existent variable is referenced.
ReferenceError represents an error when a non-existent variable is referenced.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="SYNTAXERROR">
      <data key="d0">EVENT</data>
      <data key="d1">SyntaxError is a built-in JavaScript object that represents an error when trying to interpret syntactically invalid code.
SyntaxError represents an error when trying to interpret syntactically invalid code.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="TYPEERROR">
      <data key="d0">EVENT</data>
      <data key="d1">TypeError is a built-in JavaScript object that represents an error when a value is not of the expected type.
TypeError represents an error when a value is not of the expected type.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="URIERROR">
      <data key="d0">EVENT</data>
      <data key="d1">URIError is a built-in JavaScript object that represents an error when a global URI handling function was used in a wrong way.
URIError represents an error when a global URI handling function is used in a wrong way.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="INFINITY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Infinity is a special numeric value in JavaScript that represents an infinite value.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="ISFINITE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">isFinite is a built-in JavaScript function that determines whether a value is a finite number.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="ISNAN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">isNaN is a built-in JavaScript function that determines whether a value is NaN or not.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="STRUCTUREDCLONE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">structuredClone is a built-in JavaScript function that creates a deep copy of a value.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="QUEUEMICROTASK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">queueMicrotask is a built-in JavaScript function that queues a microtask to be executed.
queueMicrotask queues a microtask to be executed in the next event loop iteration.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="SHAREDARRAYBUFFER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SharedArrayBuffer is a built-in JavaScript object that represents a generic, fixed-length raw binary data buffer.</data>
      <data key="d2">b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="FLOAT32ARRAY">
      <data key="d0" />
      <data key="d1">
Float32Array represents a typed array of 32-bit floating point numbers in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,b1787ce5e713d63d1f4f1203762380a3</data>
    </node>
    <node id="WEB VITALS">
      <data key="d0">EVENT</data>
      <data key="d1">Web Vitals are a set of metrics that help developers measure the performance of their web applications, focusing on user experience.
Web Vitals are a set of metrics that aim to capture the user experience of a web page, including performance indicators like TTFB, FCP, LCP, FID, and CLS.
Web Vitals are a set of metrics that measure the user experience of a web page, including performance indicators like Time to First Byte and Largest Contentful Paint.
Web Vitals are a set of metrics that help developers understand the performance of their web applications, focusing on user experience.
Web Vitals are metrics that measure the user experience of a web page, focusing on performance and responsiveness.
Web Vitals are a set of metrics that measure the user experience of a web page, including Time to First Byte, First Contentful Paint, Largest Contentful Paint, First Input Delay, Cumulative Layout Shift, and Interaction to Next Paint.</data>
      <data key="d2">1a9f90261d97f4e9455bb0fa22f4ee9c,3486aab51f1c22b4f23003db40986564,6e870d62774508940749246fdee4d7b7,7849b1ca8bbfc8c3240def9d244f008d,bb9110629910b21a122e4dbd23ba9236,fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="LIGHTNING CSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Lightning CSS is an experimental CSS bundler and minifier written in Rust, aimed at improving the performance of web applications.
Lightning CSS is a fast CSS bundler and minifier written in Rust, currently in experimental support within Next.js.</data>
      <data key="d2">7849b1ca8bbfc8c3240def9d244f008d,9726f4ae30b11539c429ff41c8326d46</data>
    </node>
    <node id="URL IMPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">URL Imports is an experimental feature in Next.js that allows importing modules directly from external servers.
URL Imports is a feature in Next.js that allows importing modules directly from URLs, enhancing flexibility in module management.
URL Imports is an experimental feature in Next.js that allows importing modules directly from external servers.</data>
      <data key="d2">717947e9b123f15f49c748bb45aec68d,7849b1ca8bbfc8c3240def9d244f008d,89def9941cbf0a381e1e4a28a703e201</data>
    </node>
    <node id="PERFORMANCEEVENTTIMING">
      <data key="d0">EVENT</data>
      <data key="d1">PerformanceEventTiming is a web performance metric that provides detailed timing information about events that occur during the loading of a web page.</data>
      <data key="d2">7849b1ca8bbfc8c3240def9d244f008d</data>
    </node>
    <node id="PERFORMANCENAVIGATIONTIMING">
      <data key="d0">EVENT</data>
      <data key="d1">PerformanceNavigationTiming is a web performance metric that provides timing information related to the navigation of a web page, including page load times.</data>
      <data key="d2">7849b1ca8bbfc8c3240def9d244f008d</data>
    </node>
    <node id="PERFORMANCERESOURCETIMING">
      <data key="d0">EVENT</data>
      <data key="d1">PerformanceResourceTiming is a web performance metric that provides timing information about the loading of resources on a web page, such as images and scripts.</data>
      <data key="d2">7849b1ca8bbfc8c3240def9d244f008d</data>
    </node>
    <node id="TYPECHECKING">
      <data key="d0">EVENT</data>
      <data key="d1">Typechecking is a process in Next.js that ensures TypeScript errors are handled during the build process.</data>
      <data key="d2">717947e9b123f15f49c748bb45aec68d</data>
    </node>
    <node id="LOCKFILE">
      <data key="d0">EVENT</data>
      <data key="d1">Lockfile is a mechanism in Next.js that tracks dependencies and ensures consistent builds by storing fetched assets.
Lockfile is a file created by Next.js to manage dependencies and ensure consistent builds, particularly when using URL imports.</data>
      <data key="d2">717947e9b123f15f49c748bb45aec68d,89def9941cbf0a381e1e4a28a703e201</data>
    </node>
    <node id="SKYPACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Skypack is a CDN that allows developers to import JavaScript modules directly into their applications.</data>
      <data key="d2">717947e9b123f15f49c748bb45aec68d</data>
    </node>
    <node id="CACHE-CONTROL">
      <data key="d0">EVENT</data>
      <data key="d1">Cache-Control is an HTTP header used to specify caching policies for web resources.
Cache-Control is an HTTP header used to specify caching policies for web resources in Next.js applications.
Cache-Control is a header used to specify directives for caching mechanisms in both requests and responses.
Cache-Control is an HTTP header used to specify directives for caching mechanisms in both requests and responses.
Cache-Control is a header used to specify caching policies for HTTP responses.
Cache-Control is an HTTP header used to specify caching policies for web resources, relevant in the context of Next.js for managing stale-while-revalidate periods.
Cache-Control is a header used to specify caching policies for HTTP responses, ensuring efficient resource management.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c,3678e68072101ac922b838851eaa8465,717947e9b123f15f49c748bb45aec68d,89def9941cbf0a381e1e4a28a703e201,bd13629205b4661186b2631023139a53,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="GIT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Git is a version control system used to track changes in source code during software development.
Git is a version control system used to manage code changes and collaborate on software development, relevant for managing the next.lock directory in Next.js.
Git is a version control system that allows developers to track changes in their code and collaborate with others.
Git is a version control system that allows developers to track changes in their code and collaborate on projects.
Git is a distributed version control system that allows developers to track changes in source code during software development.
Git is a version control system that allows developers to track changes in their code and collaborate on projects.
Git is a distributed version control system for tracking changes in source code during software development.
Git is a distributed version control system for tracking changes in source code during software development.
Git is a version control system used for tracking changes in source code during software development.
Git is a version control system used for tracking changes in source code during software development.
Git is a version control system that allows developers to track changes in source code during software development.</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52,148529b8881659161220567b7aef9513,22362693d17a745c23fe5e9a2beecbd9,3cdd6c81baa65bbde6eabfc399eb25b6,7040175c91fe86a908046a9b485b0410,717947e9b123f15f49c748bb45aec68d,81518acc3db43af0161d599284ff910e,856c945b28eacce9c83378e56652fee3,89def9941cbf0a381e1e4a28a703e201,d5671c2494c6418a266da35fff705101,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="MODULE ID STRATEGY">
      <data key="d0">EVENT</data>
      <data key="d1">Module ID strategy refers to the method used by Turbopack to assign IDs to modules, which can be either 'named' or 'deterministic'.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="TRANSPILEPACKAGES">
      <data key="d0">EVENT</data>
      <data key="d1">transpilePackages is a configuration option in Next.js that allows automatic transpilation and bundling of dependencies from local or external packages.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="TRAILINGSLASH">
      <data key="d0">EVENT</data>
      <data key="d1">trailingSlash is a configuration option in Next.js that controls the behavior of URLs with trailing slashes.
trailingSlash is a configuration option in Next.js that determines whether exported pages should have a trailing slash.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046,d1675bdf7576ae8e63e95f4105fcb693</data>
    </node>
    <node id="SERVEREXTERNALPACKAGES">
      <data key="d0">EVENT</data>
      <data key="d1">serverExternalPackages is a configuration option in Next.js that allows specific dependencies to be excluded from automatic bundling.
The serverExternalPackages option in Next.js allows specific packages to be opted out of automatic bundling.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046,cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="YAML-LOADER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">YAML-loader is a tool used to load YAML files in JavaScript applications, often used in conjunction with other loaders.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="STRING-REPLACE-LOADER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">String-replace-loader is a tool that allows for string replacement in files during the build process in JavaScript applications.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="RAW-LOADER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Raw-loader is a tool that allows you to import files as strings in JavaScript applications, useful for loading raw content.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="SASS-LOADER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sass-loader is a tool that compiles Sass/SCSS files into CSS in JavaScript applications.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="MODULE RESOLUTION">
      <data key="d0">EVENT</data>
      <data key="d1">Module resolution is the process of determining how module imports are resolved to their corresponding files in a JavaScript application.</data>
      <data key="d2">6160e6925dba648999d09c55006ab046</data>
    </node>
    <node id="LOADER">
      <data key="d0" />
      <data key="d1">
Loader is a function in Next.js that generates URLs for images, modifying the provided source to optimize image loading.
Loader is a prop in Next.js that allows for the configuration of image loading behavior in the Image component.
A loader is a configuration in Next.js that optimizes images by managing how they are loaded in the application.
Loader is a UI component that indicates that a process is ongoing, often used during data loading.
The Loader is a visual component in Amplify that indicates loading status during file operations.
The Loader is a UI component that indicates the progress of file uploads, providing feedback to users during the upload process.
Loader is a UI component that indicates loading status while data is being fetched in the application.
Loader is a component within the Amplify UI library that indicates loading states for buttons.
Loader is a component that provides a visual cue to the user that the system is processing or awaiting a result.
Loader is a component in AWS Amplify that indicates the loading state of an application, often used to enhance user experience during data fetching or processing.
Loaders in Amplify UI provide visual cues indicating that an action is processing or awaiting a result.
Loader is a UI component that indicates to users that a process is ongoing, often used during data fetching or processing.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,1ceae74b49c1b621d815e85b8ca49988,20f099859bc84200865a67d0cbf4c8bb,51eb03a68a36f040cb248c3d2430e43a,6160e6925dba648999d09c55006ab046,6534102a2bcab0d166b971b8fc0e8eb1,85d9171dd6e70ffdb5803e227ecacbc4,95c47d77c6b1c1b930bbbff2c9d1facf,9da317a323ff76913285228d8243413e,cb9405c9d1ffc30f045effa85b1e9e09,d5db54aea339e57737c40468d9473a13,e28baad4e7d7ca8e43254a705cbf687f,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="RUNTIME CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Runtime Config is a feature in Next.js that allows developers to define server-side and public runtime configurations for their applications.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="REDIRECTS">
      <data key="d0">EVENT</data>
      <data key="d1">Redirects in Next.js allow developers to redirect incoming request paths to different destination paths, enhancing routing capabilities.
Redirects are events in web applications that guide users from one URL to another based on specific conditions.
Redirects in Next.js reroute users to a new page and change the URL in the browser.
Redirects in Next.js are used to send users from one URL to another, often for maintaining SEO or updating site structure.
A feature in Next.js that allows redirection of incoming request paths to different destination paths.
Redirects in Next.js are rules that allow developers to redirect users from one URL to another based on specific conditions.
Redirects in Next.js are used to manage URL changes and can be configured in the next.config.js file.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612,3728034c20ff061a6f5bcaadac49b04e,6c6960c6073b7fc858222c11aed49665,7e9fce61758916e4d2b7de2f2f4d1704,8c16e2baedacd39ce0384eac61e5ee79,d5597c0b98fb6d7afb8e40f53a3b0be7,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="KEYV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Keyv is a simple key-value store with support for multiple backends, often used in Node.js applications for caching.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="LIBSQL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">libsql is a library that provides a SQL interface for various data storage solutions, commonly used in JavaScript applications.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="MDX-BUNDLER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">mdx-bundler is a tool for bundling MDX files, allowing developers to write JSX in Markdown documents.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="MONGODB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MongoDB is a NoSQL database that uses a document-oriented data model, widely used in modern web applications.
MongoDB is a NoSQL database that stores data in flexible, JSON-like documents.</data>
      <data key="d2">72e1433a8550144aaf1d1fd8f3cb3774,d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="MONGOOSE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Mongoose is an ODM (Object Data Modeling) library for MongoDB and Node.js, providing a schema-based solution to model application data.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="NEXT-MDX-REMOTE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">next-mdx-remote is a Next.js plugin that allows for remote MDX content to be rendered in applications.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="NEXT-SEO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">next-seo is a library for managing SEO in Next.js applications, simplifying the process of setting meta tags and other SEO-related configurations.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="NODE-CRON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">node-cron is a task scheduler for Node.js that allows developers to schedule jobs to run at specific intervals.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="NODE-PTY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">node-pty is a Node.js library that provides a pseudo-terminal interface, often used for terminal emulation in applications.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="NODE-WEB-AUDIO-API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">node-web-audio-api is a library that provides a Web Audio API implementation for Node.js, enabling audio processing capabilities.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="OSLO">
      <data key="d0">GEO</data>
      <data key="d1">Oslo is the capital city of Norway, known for its green spaces and museums.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="PG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">pg is a PostgreSQL client for Node.js, allowing applications to interact with PostgreSQL databases.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="PLAYWRIGHT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Playwright is a Node.js library for browser automation, enabling developers to write tests for web applications across different browsers.
Playwright is a testing framework that allows for automation of web browsers like Chromium, Firefox, and WebKit, enabling end-to-end testing for web applications.
Playwright is a testing framework that simulates user interactions in web applications across multiple browsers including Chromium, Firefox, and Webkit.
Playwright is a Node.js library for automating browsers, allowing developers to test web applications across different browsers.
Playwright is a testing framework that allows automation of web browsers like Chromium, Firefox, and WebKit for E2E testing.
Playwright is a Node.js library to automate the Chromium, Firefox, and WebKit browsers with a single API, used for testing web applications.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,7b0e16fa06f15b959c34b3d3401845e8,a67099d1f0ea66a70c07e9595443231a,b45c653df41952b7c0b22c7926afe5f7,d5597c0b98fb6d7afb8e40f53a3b0be7,f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="PLAYWRIGHT-CORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">playwright-core is the core library of Playwright, providing the essential functionalities for browser automation.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="POSTCSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PostCSS is a tool for transforming CSS with JavaScript plugins, allowing for advanced CSS processing.
PostCSS is a tool for transforming CSS with JavaScript plugins, often used in conjunction with Tailwind in Next.js projects.
PostCSS is a tool for transforming CSS with JavaScript plugins, allowing for features like autoprefixing and minification.
PostCSS is a tool for transforming CSS with JavaScript plugins, allowing developers to use modern CSS features and ensure compatibility with older browsers.
PostCSS is a tool for transforming CSS with JavaScript plugins, allowing developers to use modern CSS features and optimize their stylesheets.
PostCSS is a tool for transforming CSS with JavaScript plugins, used in Next.js for processing styles.
PostCSS is a tool for transforming CSS with JavaScript plugins, allowing for advanced CSS features and optimizations.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,ab869c819df53e1e9e3adebf6a4234a2,d405678be18c78d7d78d7a6521a58a56,d5597c0b98fb6d7afb8e40f53a3b0be7,d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="PRETTIER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Prettier is an opinionated code formatter for various programming languages, including JavaScript, ensuring consistent code style.
Prettier is an opinionated code formatter that supports many languages and integrates with ESLint.
Prettier is an opinionated code formatter that supports many languages and integrates with various editors.</data>
      <data key="d2">4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6,d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="PRISMA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Prisma is an ORM (Object Relational Mapping) tool for Node.js and TypeScript, simplifying database access and management.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="PUPPETEER-CORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">puppeteer-core is a lightweight version of Puppeteer, a Node.js library for controlling headless Chrome or Chromium.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="PUPPETEER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Puppeteer is a Node.js library that provides a high-level API to control headless Chrome or Chromium for web scraping and testing.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="RIMRAF">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">rimraf is a Node.js package that provides a deep deletion function for files and directories, similar to Unix's rm -rf.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="SHARP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sharp is a high-performance image processing library for Node.js, used for resizing and manipulating images.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="SHIKI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Shiki is a syntax highlighter for programming languages, often used in web applications to display code snippets.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="SQLITE3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">sqlite3 is a Node.js library that provides an interface for SQLite databases, allowing for lightweight data storage.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="TS-NODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ts-node is a TypeScript execution engine for Node.js, allowing developers to run TypeScript files directly without pre-compilation.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="TS-MORPH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ts-morph is a TypeScript library for programmatically manipulating TypeScript code and ASTs (Abstract Syntax Trees).</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="VSCODE-ONIGURUMA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">vscode-oniguruma is a library that provides regular expression support for Visual Studio Code, enhancing text processing capabilities.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="ZEROMQ">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ZeroMQ is a high-performance asynchronous messaging library, used for building scalable and distributed applications.</data>
      <data key="d2">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </node>
    <node id="WILDCARD PATH MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Wildcard path matching is a method used in routing to match multiple paths using a wildcard character, allowing for flexible URL handling.
Wildcard path matching allows for matching multiple paths using a wildcard character in Next.js routing.
Wildcard path matching is a feature in Next.js that allows developers to match dynamic routes using a wildcard character in the path.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e,743d216d66ffda2efe23e0e9a8d0f0cf,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="REGEX PATH MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Regex path matching is a technique that uses regular expressions to define complex URL patterns for routing in web applications.
Regex path matching allows for matching paths using regular expressions in Next.js routing.
Regex path matching is a feature in Next.js that enables developers to define routes using regular expressions for more complex matching scenarios.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e,743d216d66ffda2efe23e0e9a8d0f0cf,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="HEADER MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Header matching is a method used to apply redirects based on specific HTTP headers present in the request.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e</data>
    </node>
    <node id="COOKIE MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Cookie matching is a technique used to apply redirects based on the presence or value of cookies in the user's browser.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e</data>
    </node>
    <node id="QUERY MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Query matching is a method that applies redirects based on specific query parameters in the URL.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e</data>
    </node>
    <node id="DESTINATION">
      <data key="d0">EVENT</data>
      <data key="d1">The destination is the target URL path that users are redirected to in a redirect configuration.
Destination is the target URL path where the request will be redirected in Next.js.
Destination refers to the target URL path where users are redirected in Next.js.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e,b3759902cd429c22cd4896b10b00848d,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="PERMANENT">
      <data key="d0">EVENT</data>
      <data key="d1">Permanent indicates whether a redirect is a permanent move (HTTP status 301) or a temporary one (HTTP status 302).
Permanent is a flag in Next.js redirects indicating whether the redirect is a permanent (301) or temporary (302) redirect.</data>
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="PARAMETER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3728034c20ff061a6f5bcaadac49b04e</data>
    </node>
    <node id="REWRITES">
      <data key="d0">EVENT</data>
      <data key="d1">Rewrites in Next.js allow mapping an incoming request path to a different destination path without changing the URL shown to the user.
Rewrites in Next.js allow developers to map an incoming request path to a different destination path, enabling flexible routing strategies.
Rewrites in Next.js allow mapping an incoming request path to a different destination path, acting as a URL proxy.
Rewrites are a feature in Next.js that allow developers to map incoming request paths to different destination paths without changing the URL in the browser.
Rewrites in Next.js allow developers to map incoming requests to different destinations, enabling flexible routing configurations.
Rewrites are rules in Next.js that allow routing requests to the correct zone by mapping source paths to destination URLs.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,16332d9a8715d2cac034c2aa3c4f12f6,6c6960c6073b7fc858222c11aed49665,7e9fce61758916e4d2b7de2f2f4d1704,ebecafe0b9c1dfc514b9df4c48e6eb30,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="LOCALE">
      <data key="d0">PERSON</data>
      <data key="d1">Locale refers to the language and regional settings that can be configured in Next.js applications to support internationalization (i18n).
Locale is a configuration option in Next.js that determines whether the locale should be included when matching headers.
Locale refers to a set of parameters that defines the user's language, region, and any special variant preferences, often used in internationalization of applications.


Locale refers to a specific language and regional setting used in web applications to provide localized content to users.
Locale refers to the regional settings that determine the language and formatting of content displayed to users.</data>
      <data key="d2">56ab21d16e9b86cd9d551ec941e65b04,743d216d66ffda2efe23e0e9a8d0f0cf,7cd464b0f42ff05e87fa7e149d7e2997,7e9fce61758916e4d2b7de2f2f4d1704,839413fc3a58298ee6809914ff2ed3f7,a332c6db30f7b29cd4dcb1117bd6eab3,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="HTTP CLIENTS">
      <data key="d0">PERSON</data>
      <data key="d1">HTTP clients are software applications that send requests to web servers and receive responses, often used in the context of web development and API interactions.
Older HTTP clients that may require specific status codes for proper redirection handling.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612,7e9fce61758916e4d2b7de2f2f4d1704</data>
    </node>
    <node id="STATUS CODE">
      <data key="d0">EVENT</data>
      <data key="d1">Status codes are standardized codes returned by web servers to indicate the result of a client's request, such as success or error.
Status code is a three-digit number sent by the server to indicate the result of the client's request, such as success or error.
A code used in HTTP responses to indicate the result of a request, which can affect redirection behavior.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335,21183997adb6288a64caa86bfd107612,7e9fce61758916e4d2b7de2f2f4d1704</data>
    </node>
    <node id="PUBLIC DIRECTORY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The public directory in Next.js is where static files are stored and served directly to the client.</data>
      <data key="d2">6c6960c6073b7fc858222c11aed49665</data>
    </node>
    <node id="STATIC FILES">
      <data key="d0">EVENT</data>
      <data key="d1">Static files in Next.js are files that are served directly to the client without any processing, typically found in the public directory.</data>
      <data key="d2">6c6960c6073b7fc858222c11aed49665</data>
    </node>
    <node id="QUERY PARAMETERS">
      <data key="d0">EVENT</data>
      <data key="d1">Query parameters are used in URLs to pass additional data to the server, often utilized in routing and API calls in Next.js.</data>
      <data key="d2">6c6960c6073b7fc858222c11aed49665</data>
    </node>
    <node id="DYNAMIC ROUTES">
      <data key="d0" />
      <data key="d1">
Dynamic routes are routes in Next.js that can change based on the data or parameters provided, allowing for more flexible page rendering.
Dynamic routes in Next.js allow for the creation of pages based on data, enabling the generation of pages at runtime based on parameters.
Dynamic routes in Next.js allow for the creation of pages that can change based on the URL parameters, enabling more flexible navigation.
Dynamic routes in Next.js allow for the creation of pages based on data, which can be generated at build time using getStaticPaths.
Dynamic routes in Next.js allow for pages to be generated based on dynamic parameters, enhancing the flexibility of the application.
Dynamic Routes are a feature in Next.js that allows the creation of routes based on dynamic data, enabling flexible URL structures.
Dynamic Routes in Next.js allow for the creation of pages that can change based on the URL parameters.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,59f479f2a59b233e2c0b4bfcfce952a8,6c6960c6073b7fc858222c11aed49665,7cd464b0f42ff05e87fa7e149d7e2997,8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b,e871ceb5e34368061b569a8df8c57c33,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="ANOTHER PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Another page is a destination in the routing configuration for Next.js, indicating where users will be redirected.</data>
      <data key="d2">b3759902cd429c22cd4896b10b00848d</data>
    </node>
    <node id="BLOG">
      <data key="d0">EVENT</data>
      <data key="d1">Blog is a route in the Next.js application that can be redirected to an external site.

The Blog is a section of ACME's website where articles and updates are published regularly.</data>
      <data key="d2">85fc82d441624fc7d477f417afcce94e,b3759902cd429c22cd4896b10b00848d,cb4791e4249947cbab8022435c79aa13</data>
    </node>
    <node id="QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">Query refers to the parameters passed in the URL that can be used to match specific conditions for rewrites.
A query is a request for data or information from a database, often used in the context of APIs to retrieve specific data.
Query is a request operation in DynamoDB that retrieves multiple items from a table using the primary key.
A query is a request for data or information from a database or API, often specified in a structured format like GraphQL.
Query is an operation that retrieves data from the Customer model based on specified parameters.</data>
      <data key="d2">a3d633e1c801de300a4724738b7290c3,b3759902cd429c22cd4896b10b00848d,c3958c03e7b6908e78ca65d6563b3555,f307707abfeb56b5061ee3f77f2b7cb5,fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="HOST">
      <data key="d0">EVENT</data>
      <data key="d1">Host refers to the domain name of the server that is being accessed, which can be used in rewrite rules.</data>
      <data key="d2">b3759902cd429c22cd4896b10b00848d</data>
    </node>
    <node id="OUTPUT FILE TRACING">
      <data key="d0">EVENT</data>
      <data key="d1">Output File Tracing is a feature in Next.js that analyzes dependencies during the build process to optimize deployment size.
Output File Tracing is a feature in Next.js that analyzes the files needed for deploying a production version of an application, optimizing the deployment size by including only necessary files.
Output file tracing is a process in Next.js that determines which files are necessary for deployment.</data>
      <data key="d2">4d99e596a43a5b336e12425953d3a120,a3dae9be9408e57ff26350383026033f,f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="STANDALONE DEPLOYMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Standalone Deployment is a method in Next.js that allows for deploying applications without needing to install node_modules by copying only necessary files.
Standalone Deployment is a method in Next.js that allows applications to be deployed with only the necessary files, creating a self-contained folder for production use.</data>
      <data key="d2">4d99e596a43a5b336e12425953d3a120,f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="NODE_MODULES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Node_modules is a directory in Node.js projects that contains all the dependencies and packages required for the application to run.
Node_modules is a directory where npm packages are installed, often ignored in testing to prevent unnecessary processing.

Node_modules is a directory in a Node.js project that contains all the packages and dependencies required for the application.
Node_modules is a directory that contains all the packages and dependencies required for a Node.js project.
Node_modules is a directory where npm packages are installed, containing all the dependencies for a Node.js project.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39,64488fb4232e09664566b2ee3c00394a,a3dae9be9408e57ff26350383026033f,a9a858ea7abac3fe79fa759ea8171597,cf17a04fd1ade3fe98ee4b50654b493e,f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="DOCKER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Docker is a platform used for developing, shipping, and running applications in containers, often used in conjunction with Next.js for deployment.
Docker is a platform that allows developers to automate the deployment of applications inside lightweight containers.
Docker is a platform for developing, shipping, and running applications in containers, enabling consistent environments across development and production.
Docker is a platform that allows applications to be deployed in containers, supporting various hosting providers.
Docker is a platform that enables developers to automate the deployment of applications inside lightweight containers, which can run on any machine that has Docker installed.
Docker is a platform that enables developers to automate the deployment of applications inside lightweight containers, which can be used in conjunction with Next.js for consistent environments.</data>
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342,7cf992845bf79c5ec4ae2614617a79f4,a67099d1f0ea66a70c07e9595443231a,aaea03d7a1385785fae028f24c52f8a5,adb5bec4b54e83924618cafc99d40e24,f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="SERVERLESS TARGET">
      <data key="d0">EVENT</data>
      <data key="d1">Serverless Target was a deprecated deployment option in Next.js that allowed applications to be deployed in a serverless environment, which has been replaced by newer features.</data>
      <data key="d2">f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="MONOREPO">
      <data key="d0">GEO</data>
      <data key="d1">Monorepo is a software development strategy where multiple projects are stored in a single repository, which can affect how Next.js traces files during builds.

A monorepo is a software development strategy where code for many projects is stored in a single repository.
A monorepo is a software development strategy where code for many projects is stored in the same repository, affecting how Next.js traces files.
A monorepo is a software development strategy where multiple projects are stored in a single repository, facilitating code sharing and management across different zones in Next.js.
A monorepo is a software development strategy where code for many projects is stored in a single repository.
Monorepo is an event that describes a single repository containing multiple packages or components to simplify deployment processes.
Monorepo setup allows developers to manage multiple projects within a single repository, facilitating easier collaboration and code sharing.
A monorepo is a software development strategy where code for many projects is stored in the same repository.</data>
      <data key="d2">4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6,9bc82a2671446cca168796fea771ecad,a3dae9be9408e57ff26350383026033f,c143d279740f3e9c59920d2a6720240e,e1b74f93a071f3a34a553359c4fa7b1b,e63f52e89ed09d5d6307bfccfa46aec9,ebecafe0b9c1dfc514b9df4c48e6eb30,f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="API ALIAS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f0f0cb94424540a288feb59004d219e4</data>
    </node>
    <node id="HTTP KEEP-ALIVE">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP Keep-Alive is a feature that allows the same TCP connection to be used for multiple HTTP requests/responses, improving performance.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="SOURCE MAPS">
      <data key="d0">EVENT</data>
      <data key="d1">Source Maps are files that map from the transformed source to the original source, enabling better debugging of minified code.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Images in Next.js can be optimized using the built-in Image Optimization API or configured to use a custom loader for cloud providers.
Images in Next.js can be optimized using a cloud provider instead of the built-in Image Optimization API, allowing for better performance and loading times.
</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,dcf475d04bc2e922a55271ba1bff9465,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="LODASH-ES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Lodash-es is a modern JavaScript utility library delivering modularity, performance, and extras for working with arrays, numbers, objects, strings, etc.
Lodash-es is a modern JavaScript utility library delivering modularity, performance, and extras, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="RAMDA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Ramda is a functional programming library for JavaScript that makes it easy to create functional pipelines.
Ramda is a functional programming library for JavaScript, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="ANT DESIGN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Ant Design is a design system with a set of high-quality React components for building rich, interactive user interfaces.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="REACT-BOOTSTRAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React-Bootstrap is a popular front-end framework that combines Bootstrap with React, providing components that are easy to use and customize.
React-Bootstrap is a popular front-end framework for React, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="AHOOKS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Ahooks is a library of React Hooks that provides a set of useful hooks for managing state and side effects in React applications.
Ahooks is a library of React Hooks, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="HEADLESS UI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Headless UI is a set of completely unstyled, fully accessible UI components designed to integrate beautifully with Tailwind CSS.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="MUI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MUI (formerly Material-UI) is a popular React UI framework that implements Google's Material Design.
MUI (formerly Material-UI) is a popular React UI framework that implements Google's Material Design.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="REACT-USE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React-use is a collection of essential React Hooks that can be used to simplify common tasks in React applications.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="RECHARTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Recharts is a composable charting library built on React components, providing a simple way to create charts and visualizations.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="TABLER ICONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tabler Icons is a set of over 2000 free SVG icons for use in web applications, designed to be simple and easy to use.</data>
      <data key="d2">dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="DATE-FNS">
      <data key="d0" />
      <data key="d1">
Date-fns is a library for date manipulation in JavaScript, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </node>
    <node id="CLOUDFLARE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cloudflare is a company that provides content delivery network services, internet security, and distributed domain name server services.
Cloudflare is a web performance and security company that provides content delivery network services, DDoS mitigation, and internet security.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="CONTENTFUL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Contentful is a content management system that allows users to create, manage, and distribute content across various platforms.
Contentful is a content management system (CMS) that allows developers to create, manage, and distribute content across various platforms.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="FASTLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Fastly is a cloud platform that provides content delivery network services, allowing businesses to deliver content quickly and securely.
Fastly is a cloud platform that provides a content delivery network, video streaming, and cloud security services.
Fastly is a cloud platform that provides content delivery network (CDN) services to enhance the speed and performance of web applications.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="GUMLET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Gumlet is a service that optimizes images for web delivery, providing automatic format selection and resizing capabilities.
Gumlet is an image optimization and delivery service that helps websites load images faster.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="IMAGEENGINE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ImageEngine is a service that optimizes images for faster loading times and better performance on websites.
ImageEngine is a service that optimizes and delivers images for web applications, improving load times and performance.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="IMGIX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Imgix is a real-time image processing service that allows users to manipulate images on-the-fly for web applications.
Imgix is a cloud-based image optimization service that provides various loaders for image processing and delivery.
Imgix is an image processing service that provides real-time image manipulation and optimization.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="PIXELBIN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PixelBin is a cloud-based image management and optimization service that provides various transformations and delivery options.
PixelBin is a cloud-based image and video management platform that offers transformation and optimization features.
PixelBin is a service that provides image transformation and optimization solutions for web applications.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="SANITY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sanity is a platform for structured content that provides a real-time collaborative editing environment and a powerful API for content delivery.
Sanity is a platform that offers structured content management and image URL generation for developers.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </node>
    <node id="SIRV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sirv is an image hosting and optimization service that provides dynamic imaging capabilities for websites.
Sirv is a dynamic imaging service that allows for image optimization and delivery through various formats.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </node>
    <node id="SUPABASE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Supabase is an open-source backend-as-a-service platform that provides a suite of tools for building applications, including storage and image transformations.
Supabase is an open-source Firebase alternative that provides backend services including authentication, database, and storage for web applications.
Supabase is an open-source backend-as-a-service platform that provides storage and image transformation capabilities.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,7b0e16fa06f15b959c34b3d3401845e8,a9c779cfa21a679f557dbbc90283565f</data>
    </node>
    <node id="THUMBOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Thumbor is an open-source image service that allows for on-demand image processing and optimization.
Thumbor is an open-source image service that allows for on-demand image resizing and filtering.</data>
      <data key="d2">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </node>
    <node id="KEY">
      <data key="d0">EVENT</data>
      <data key="d1">Key refers to the name of the custom HTTP header being set in the headers array in Next.js.
The key is a unique identifier for each file being uploaded, used to track the status and metadata of the file.</data>
      <data key="d2">5c7c1b8a3cde0fc5a186b912ceba73bb,743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="VALUE">
      <data key="d0">EVENT</data>
      <data key="d1">Value refers to the value assigned to a custom HTTP header in the headers array in Next.js.
value is a property that defines the value of the SwitchField that will be submitted with the form as a name/value pair.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="BASEPATH">
      <data key="d0">EVENT</data>
      <data key="d1">BasePath is a configuration option in Next.js that determines whether the base path should be included when matching headers.
BasePath is a configuration option in Next.js that allows developers to specify a base path for their application routes.
basePath is a configuration option in Next.js that allows applications to be deployed under a sub-path of a domain, ensuring that all links and assets are correctly prefixed.
BasePath is a configuration option in Next.js that allows developers to specify a base path for all routes in the application.
BasePath is a configuration option in Next.js that allows developers to specify a base path for all routes in their application.
BasePath is a configuration option in Next.js that allows developers to specify a base path for their application, affecting how routes are structured.
BasePath is a configuration setting in Next.js that helps avoid conflicts with pages and static files in different zones by defining a unique path prefix for each zone.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,4647f3f9cf6eaae5dadd71a1dc2e58ae,56ab21d16e9b86cd9d551ec941e65b04,743d216d66ffda2efe23e0e9a8d0f0cf,bd13629205b4661186b2631023139a53,d1d62ecebefc7d4d3ed8c06e50adc45c,ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </node>
    <node id="HAS">
      <data key="d0">EVENT</data>
      <data key="d1">Has is an array of objects in Next.js that specifies conditions under which a header should be applied based on matching header, cookie, or query values.</data>
      <data key="d2">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="MISSING">
      <data key="d0">EVENT</data>
      <data key="d1">Missing is an array of objects in Next.js that specifies conditions under which a header should not be applied based on non-matching header, cookie, or query values.</data>
      <data key="d2">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="HTTP HEADERS">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP headers are key-value pairs sent in requests and responses that provide information about the request or response in web applications.
HTTP headers are used to pass additional information with HTTP requests or responses, influencing how the request is handled.</data>
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443,743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="ARRAY">
      <data key="d0">EVENT</data>
      <data key="d1">Array refers to the data structure used to hold multiple header objects in the headers configuration in Next.js.</data>
      <data key="d2">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </node>
    <node id="QUINTARA">
      <data key="d0">GEO</data>
      <data key="d1">Quintara is a fictional country mentioned in the context of a hostage exchange.
Quintara is a geographical location involved in negotiating a hostage exchange.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53</data>
    </node>
    <node id="AURELIA">
      <data key="d0">GEO</data>
      <data key="d1">Aurelia is a fictional country involved in the hostage exchange negotiation.
Aurelia is a geographical location that is seeking the release of hostages.
Aurelia is a fictional country mentioned in various contexts, often used in discussions about international relations or geopolitical scenarios.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421,8a15ba0e9c228225918d6207fc8b6a8d,bd13629205b4661186b2631023139a53</data>
    </node>
    <node id="FIRUZABAD">
      <data key="d0">GEO</data>
      <data key="d1">Firuzabad is a fictional location where hostages were held.
Firuzabad is a geographical location mentioned in the context of a hostage situation, serving as a backdrop for negotiations.
Firuzabad is a geographical location mentioned in the context of a hostage situation.
Firuzabad is a location where hostages were held and negotiations took place.
Firuzabad is a country where hostages were held and negotiations took place.
Firuzabad is a geographical location where hostages were held, as mentioned in the context of the Aurelian hostages.
Firuzabad is a geographical location known for its political significance and recent hostage situations.
Firuzabad is a geographical location where hostages were held, as mentioned in the context of the hostage exchange.
Firuzabad is a geographical location that may be relevant in various contexts, possibly related to trade or events.
Firuzabad is a fictional location often referenced in discussions about geopolitical events or conflicts.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,735b59f53ffba96602dace4169c285ed,8a15ba0e9c228225918d6207fc8b6a8d,b45c653df41952b7c0b22c7926afe5f7,bd13629205b4661186b2631023139a53,d5db54aea339e57737c40468d9473a13,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="TIRUZIA">
      <data key="d0">GEO</data>
      <data key="d1">Tiruzia is the capital of Firuzabad where hostages were imprisoned.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad where hostages were held.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad where the Aurelians were being held.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad where hostages were held.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad, where the Aurelian hostages were held in prison.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,4a99c636fb9adfcf5771118fe58ce017,4da3554b7826cf4b6dd608127da53568,4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="KROHAARA">
      <data key="d0">GEO</data>
      <data key="d1">Krohaara is the capital city of Quintara, involved in the hostage exchange.
Krohaara is the capital city in Quintara, where hostages were taken after the exchange.
Krohaara is the capital city of Quintara, involved in the hostage exchange negotiations.
Krohaara is the capital city of Quintara where hostages were taken after the exchange.
Krohaara is the capital city in Quintara, where hostages were taken after the exchange.
Krohaara is the capital city in Quintara, involved in the hostage exchange.
Krohaara is the capital city of Quintara, involved in the hostage exchange.
Krohaara is the capital city of Quintara, involved in the hostage exchange.
Krohaara is the capital city of Quintara, involved in negotiations for hostage exchanges.
Krohaara is the capital city of Quintara, where the Aurelian hostages were taken after the exchange.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,4a99c636fb9adfcf5771118fe58ce017,4da3554b7826cf4b6dd608127da53568,4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="CASHION">
      <data key="d0">GEO</data>
      <data key="d1">Cashion is the capital city of Aurelia, where the released hostages are headed.
Cashion is the capital city of Aurelia, where the released hostages are headed.
Cashion is the capital city of Aurelia, where the released hostages are headed.
Cashion is the capital city of Aurelia where the released hostages are headed.
Cashion is the capital city of Aurelia, where the released hostages are headed.
Cashion is the capital city in Aurelia, where the released hostages are headed.
Cashion is the capital city of Aurelia, mentioned in the context of the Aurelian hostages.
Cashion is the capital city of Aurelia, mentioned in the context of the Aurelian hostages.
Cashion is the capital city of Aurelia, where Aurelian officials welcomed the released hostages.
Cashion is the capital city of Aurelia, mentioned in the context of the Aurelian officials welcoming hostages.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,4a99c636fb9adfcf5771118fe58ce017,4da3554b7826cf4b6dd608127da53568,4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="DURKE BATAGLANI">
      <data key="d0">PERSON</data>
      <data key="d1">Durke Bataglani is a journalist from Aurelia who was held hostage.
Durke Bataglani is a journalist from Aurelia who was held hostage.
Durke Bataglani is a journalist from Aurelia who was also held hostage.
Durke Bataglani is a journalist from Aurelia who was held hostage.
Durke Bataglani is a fictional character mentioned in the context of a hostage situation, representing individuals involved in such events.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,7d1946ff469243c820fe74fd26b68cbd,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="MEGGIE TAZBAH">
      <data key="d0">PERSON</data>
      <data key="d1">Meggie Tazbah is an environmentalist from Aurelia who was also held hostage.
Meggie Tazbah is an environmentalist and Bratinas national who was held hostage.
Meggie Tazbah is an environmentalist and Bratinas national who was held hostage.
Meggie Tazbah is an environmentalist and Bratinas national who was held hostage.
Meggie Tazbah is a fictional character mentioned in the context of a hostage situation, representing individuals involved in such events.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,45fc1e950172cd0fb4a7f0162afae421,7d1946ff469243c820fe74fd26b68cbd,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="I18N">
      <data key="d0">EVENT</data>
      <data key="d1">I18N (internationalization) support in Next.js allows applications to handle multiple languages and locales.
Internationalization (i18n) is a feature in Next.js that allows applications to support multiple languages and locales, enhancing accessibility for users worldwide.
I18n is a library used for internationalization, allowing applications to support multiple languages and locales.</data>
      <data key="d2">353184f9ee9fe27f7425aaec76c8a30a,bd13629205b4661186b2631023139a53,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="CORS">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-Origin Resource Sharing (CORS) is a security feature that allows you to control which sites can access your resources.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the resource originated.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain.
Cross-Origin Resource Sharing (CORS) is a security feature that allows or restricts resources on a web page to be requested from another domain outside the domain from which the first resource was served.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the first resource was served.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the resource originated.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the resource originated.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the first resource was served.
Cross-Origin Resource Sharing (CORS) is a security feature that allows or restricts resources requested from another domain outside the domain from which the first resource was served.
CORS (Cross-Origin Resource Sharing) is a security feature that allows or restricts resources requested from another domain outside the domain from which the first resource was served.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51,113e44bf79d1dd5dbde02354435765e3,3b86536c72cd33dea29dc82250012d80,459eadcad7d141c2129458137d7d41d9,6a2f21642257c922b2659f7bb932521a,960cd708b2617651d0d7b1a22712d9fa,a30c1b22a2bba568f986171e6685170b,c5461cfa4259c43255132d8f916b1764,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="X-DNS-PREFETCH-CONTROL">
      <data key="d0">EVENT</data>
      <data key="d1">X-DNS-Prefetch-Control is a header that controls DNS prefetching, allowing browsers to proactively perform domain name resolution on external links.
X-DNS-Prefetch-Control is a header that controls DNS prefetching to reduce latency when accessing external resources.
</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="STRICT-TRANSPORT-SECURITY">
      <data key="d0">EVENT</data>
      <data key="d1">Strict-Transport-Security is a header that informs browsers to only access the site using HTTPS.
Strict-Transport-Security is a security header that enforces the use of HTTPS for a specified duration.
Strict-Transport-Security is an HTTP header that instructs browsers to only access a site using HTTPS, enhancing security by preventing downgrade attacks.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </node>
    <node id="X-FRAME-OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">X-Frame-Options is a header that indicates whether the site should be allowed to be displayed within an iframe to prevent clickjacking attacks.
X-Frame-Options is an HTTP header that helps prevent clickjacking attacks by controlling whether a browser should allow a page to be displayed in a frame.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="PERMISSIONS-POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">Permissions-Policy is a header that allows you to control which features and APIs can be used in the browser.
Permissions-Policy is an HTTP header that allows web developers to control which features and APIs can be used in the browser, enhancing security and privacy.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="X-CONTENT-TYPE-OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">X-Content-Type-Options is a header that prevents the browser from guessing the type of content if the Content-Type header is not explicitly set.
X-Content-Type-Options is an HTTP header that prevents browsers from MIME-sniffing a response away from the declared content type, helping to mitigate certain types of attacks.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="REFERRER-POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">Referrer-Policy is a header that controls how much information the browser includes when navigating from the current website to another.
Referrer-Policy is an HTTP header that controls how much referrer information should be included with requests made from a document.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="CONTENT-SECURITY-POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">Content-Security-Policy is a security feature that helps prevent a variety of attacks such as Cross-Site Scripting (XSS) and data injection attacks.</data>
      <data key="d2">ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="GETSTATICPROPS">
      <data key="d0">EVENT</data>
      <data key="d1">getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a function in Next.js that allows for pre-rendering a page at build time using the props returned from the function.
getStaticProps is a function in Next.js that allows for static generation of pages at build time.
getStaticProps is a data fetching function in Next.js that has been replaced in the app directory.
getStaticProps is a data fetching method in Next.js that allows for static generation of pages at build time.
getStaticProps is a function in Next.js that pre-renders a page at build time, fetching data from an external API or database.
The getStaticProps event is a function used in the pages directory to fetch data at build time for pre-rendering pages.
getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a Next.js function that fetches data at build time for static generation of pages.
getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a Next.js function used for static generation of pages, allowing data to be fetched at build time.
getStaticProps is a function in Next.js that allows static generation of pages at build time.

getStaticProps is a Next.js function that allows for static generation of pages at build time, fetching data from a headless CMS or other sources to pre-render pages for performance and SEO benefits.
getStaticProps is a function in Next.js that allows for static generation of pages by fetching data at build time.
getStaticProps is a function in Next.js that allows for fetching data at build time to pre-render a page with that data.
getStaticProps is a function in Next.js that pre-renders a page at build time with static data.
getStaticProps is a Next.js function that allows developers to fetch data at build time for static generation of pages.
getStaticProps is a Next.js data fetching method that allows for static generation of pages at build time.
getStaticProps is a function used to pre-render a page at build time by fetching data from an external API or database.
getStaticProps is a function that allows for fetching data at build time and passing it as props to a page in a web application.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290,249a768c4964d383be47267af810ece7,28003ee6fb44c56e3a5598cedee41343,3678e68072101ac922b838851eaa8465,391895fc365f2f2512a45ea503fbfa86,45fc1e950172cd0fb4a7f0162afae421,56ab21d16e9b86cd9d551ec941e65b04,78b4dd6ed52242dca68aec48915841fe,7cd464b0f42ff05e87fa7e149d7e2997,7de6e744f7ef4ab90e5a1db6bfad49c3,8023a6acc1593be80b1d65bbe4d5fb3e,8139e8b58a97f9e03ee08d82f3d2858a,98961c89bf003488bbe6223bc946b205,a114c731efa8589ee311d40c0106c001,b61989d8657d5b33a55c584f46e7d436,ccae232c83746c7020e2c1ff92d50349,ccf507e98d23ff18f3ca206f0a8f29a2,d96f8e049ce9a691971e1a92b5b556af,db6f031874217fc604efd6e2661bace2,e5dd9b12a829becf46c92a1a02044920,e871ceb5e34368061b569a8df8c57c33,ef6fa1b3e61aee8ae358b362e18f319d,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="GETSERVERSIDEPROPS">
      <data key="d0">EVENT</data>
      <data key="d1">getServerSideProps is a Next.js function that allows developers to fetch data on each request for server-side rendering of pages.
getServerSideProps is a Next.js function that enables server-side rendering for a page on each request.
getServerSideProps is a Next.js function that allows developers to fetch data at request time for server-side rendering of pages.
getServerSideProps is a Next.js data fetching method that allows for server-side rendering of pages on each request.</data>
      <data key="d2">57aa8258500bb7c522d2a394931d9248,ccae232c83746c7020e2c1ff92d50349,e5dd9b12a829becf46c92a1a02044920,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="GETSTATICPATHS">
      <data key="d0">EVENT</data>
      <data key="d1">getStaticPaths is a Next.js function that enables dynamic routes to be pre-rendered at build time based on data.
getStaticPaths is a Next.js function that enables dynamic routing by generating paths for static pages at build time.
getStaticPaths is a Next.js function that generates dynamic routes for static pages based on data.
getStaticPaths is a Next.js function that enables dynamic routes to be pre-rendered at build time based on data.
getStaticPaths is a Next.js function that enables dynamic routes to be pre-rendered at build time.
getStaticPaths is a function in Next.js that enables the creation of dynamic routes by pre-rendering paths based on external data.
getStaticPaths is a function in Next.js that allows for defining dynamic routes to be pre-rendered at build time.
getStaticPaths is a Next.js function that enables dynamic routes to be pre-rendered at build time based on the paths returned.
getStaticPaths is a Next.js function used to specify dynamic routes that should be statically generated at build time.
getStaticPaths is a function used to define dynamic paths that should be pre-rendered at build time.
</data>
      <data key="d2">249a768c4964d383be47267af810ece7,28003ee6fb44c56e3a5598cedee41343,391895fc365f2f2512a45ea503fbfa86,78b4dd6ed52242dca68aec48915841fe,7cd464b0f42ff05e87fa7e149d7e2997,8139e8b58a97f9e03ee08d82f3d2858a,815b3c1f78ab2336e7e5bdae07b49d2b,a114c731efa8589ee311d40c0106c001,b61989d8657d5b33a55c584f46e7d436,ccae232c83746c7020e2c1ff92d50349,e871ceb5e34368061b569a8df8c57c33</data>
    </node>
    <node id="STATIC IMAGE IMPORTS">
      <data key="d0" />
      <data key="d1">
Static image imports refer to the method of importing images in Next.js, which differs from Create React App.
Static image imports in Next.js refer to the method of importing images that allows for optimized rendering and layout stability in applications.</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,ab869c819df53e1e9e3adebf6a4234a2,ccae232c83746c7020e2c1ff92d50349</data>
    </node>
    <node id="GIT_HASH">
      <data key="d0">PERSON</data>
      <data key="d1">GIT_HASH is an environment variable used to generate a consistent build ID in Next.js applications.</data>
      <data key="d2">d1675bdf7576ae8e63e95f4105fcb693</data>
    </node>
    <node id="GENERATEBUILDID">
      <data key="d0">EVENT</data>
      <data key="d1">generateBuildId is an event in Next.js that allows developers to specify a unique build ID for their application.</data>
      <data key="d2">d1675bdf7576ae8e63e95f4105fcb693</data>
    </node>
    <node id="GENERATEETAGS">
      <data key="d0">EVENT</data>
      <data key="d1">generateEtags is an event in Next.js that controls the generation of etags for HTML pages.
</data>
      <data key="d2">a9c779cfa21a679f557dbbc90283565f,d1675bdf7576ae8e63e95f4105fcb693</data>
    </node>
    <node id="EXPORTPATHMAP">
      <data key="d0">EVENT</data>
      <data key="d1">exportPathMap is a feature in Next.js that allows developers to define a mapping of request paths to page destinations during export.
ExportPathMap is a deprecated feature in Next.js that allowed developers to specify a mapping of request paths to page destinations during export.</data>
      <data key="d2">a9c779cfa21a679f557dbbc90283565f,d1675bdf7576ae8e63e95f4105fcb693</data>
    </node>
    <node id="BROTLI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Brotli is a compression algorithm that is used to compress web content, providing better compression rates than gzip, especially for text files.
Brotli is a compression algorithm that is used to compress web content, providing better compression rates than Gzip in many cases.</data>
      <data key="d2">4443464e7a2cb4bcbbf667881fecb236,83cffab512363b08e89e0b35424b489c</data>
    </node>
    <node id="ELECTRON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Electron is a framework for building cross-platform desktop applications using web technologies like JavaScript, HTML, and CSS.</data>
      <data key="d2">83cffab512363b08e89e0b35424b489c</data>
    </node>
    <node id="PROCESS.ENV">
      <data key="d0" />
      <data key="d1">

Process.env is a global object in Node.js that provides access to environment variables.</data>
      <data key="d2">4f1b35d4044fdc993b02fcfb2db35bd6,83cffab512363b08e89e0b35424b489c,8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="PHASE_DEVELOPMENT_SERVER">
      <data key="d0">EVENT</data>
      <data key="d1">PHASE_DEVELOPMENT_SERVER is a constant in Next.js that indicates the application is running in development mode, allowing for specific configurations during development.
PHASE_DEVELOPMENT_SERVER is a constant in Next.js that indicates the development phase of the application.
PHASE_DEVELOPMENT_SERVER is a constant in Next.js that indicates the application is running in development mode.</data>
      <data key="d2">4647f3f9cf6eaae5dadd71a1dc2e58ae,ba53cb824bd4e5b80d861ee299c10f92,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </node>
    <node id="ASSETPREFIX">
      <data key="d0">EVENT</data>
      <data key="d1">assetPrefix is a configuration option in Next.js that allows developers to set a custom CDN for serving static assets, enhancing the delivery speed of resources.
AssetPrefix is a configuration in Next.js that allows hosting static assets on a different domain or CDN.</data>
      <data key="d2">4647f3f9cf6eaae5dadd71a1dc2e58ae,4f1b35d4044fdc993b02fcfb2db35bd6</data>
    </node>
    <node id="BUNDLEPAGESROUTERDEPENDENCIES">
      <data key="d0" />
      <data key="d1">
The bundlePagesRouterDependencies option in Next.js allows automatic bundling of external packages for the Pages Router.</data>
      <data key="d2">4647f3f9cf6eaae5dadd71a1dc2e58ae,cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="TYPE SCRIPT">
      <data key="d0">PERSON</data>
      <data key="d1">TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js projects.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and other features.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, relevant for Next.js applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications for better type safety.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications for better code quality.
TypeScript is a programming language that adds static typing to JavaScript, often used in Next.js applications.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and is commonly used in Next.js applications.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in conjunction with frameworks like Next.js.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications for better type safety.
TypeScript is a programming language used in the development of ACME's sitemap functionality.
TypeScript is a programming language that Acme uses for writing the code that generates images.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, enhancing code quality and maintainability.
TypeScript is a programming language that is a superset of JavaScript, providing static typing and is often used in Next.js applications.
TypeScript is a superset of JavaScript that adds static types, often used in Next.js applications for better development experience.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, often used in Next.js applications.
TypeScript is a superset of JavaScript that adds static typing to the language, enhancing development with better tooling and error checking.
TypeScript is a programming language that builds on JavaScript by adding static type definitions, enabling developers to catch errors early and improve code quality.
TypeScript is a programming language developed by Microsoft that is a superset of JavaScript, adding static types and other features to enhance development.</data>
      <data key="d2">016bf1f47e649cd8112b488d5c847dcc,03986c3b8388e42d1b82f4db5232270e,173e80ccbe8ecd833c055f4cd3e75ee6,280c36ab0ae3dc66fffd099a273b96ab,5791705a1f965d3a768f111e7fdcade1,63ad6476d7970e4ee569325f59f21115,77bf22c1fcd1e61ff866f696397b3a69,7a1bd3f71b0a9aadbba7495339a8b723,7bc622b9dda4deed82c3382772daca19,84b5c29553feb2883a2e93ffbac5b791,85fc82d441624fc7d477f417afcce94e,8c16e2baedacd39ce0384eac61e5ee79,9f6dc0f379759d79c664c445c0051202,a19a92a20fca1ccc164ea11570a4b26a,a5566406ae5db585eb3829f4a25e7025,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d5c8e583b99d40e21e52e5d76498cb0d,fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="NEXT.CONFIG.MJS">
      <data key="d0">EVENT</data>
      <data key="d1">next.config.mjs is an alternative configuration file format for Next.js that allows the use of ECMAScript modules.
next.config.mjs is a configuration file for Next.js that allows developers to customize the framework's settings.
next.config.mjs is a configuration file for Next.js that holds various options for the framework's behavior.</data>
      <data key="d2">6bb5264a8b72d26916099f27337032fe,95c2ea5a0f820f012ba0ea521843d34d,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </node>
    <node id="NEXT.CONFIG.TS">
      <data key="d0">EVENT</data>
      <data key="d1">next.config.ts is a TypeScript configuration file for Next.js projects, enabling type definitions in the configuration.
next.config.ts is a configuration file for Next.js that allows for better type inference and supports importing Native ESM modules.
next.config.ts is a configuration file in Next.js that allows developers to customize various settings for their application.
next.config.ts is a TypeScript version of the configuration file for Next.js, allowing developers to define settings and options for their applications.
next.config.ts is a TypeScript version of the Next.js configuration file, allowing developers to customize settings using TypeScript syntax.
next.config.ts is a TypeScript version of the Next.js configuration file, allowing for type checking and better integration with TypeScript projects.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e,391895fc365f2f2512a45ea503fbfa86,815b3c1f78ab2336e7e5bdae07b49d2b,936f58e9a3d0c41d6fd88ca7b6e0a119,9726f4ae30b11539c429ff41c8326d46,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </node>
    <node id="USE_ROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">useRouter is a React Hook in Next.js that allows access to the router object within function components.
useRouter is a React Hook provided by Next.js that gives access to the router object, allowing for programmatic navigation and route management.
useRouter is a hook in Next.js that provides access to the router object, allowing developers to programmatically navigate and access route parameters.
UseRouter is a hook in Next.js that allows for programmatic navigation within client components.</data>
      <data key="d2">1d939f19e04dfaa8df3664a2cd4db1f1,223233d7a3658c1a7836573abacf9175,4a99c636fb9adfcf5771118fe58ce017,59f479f2a59b233e2c0b4bfcfce952a8</data>
    </node>
    <node id="ROUTER OBJECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The router object in Next.js contains information about the current route, including pathname, query, and methods for navigation.</data>
      <data key="d2">4a99c636fb9adfcf5771118fe58ce017</data>
    </node>
    <node id="ACTIVE LINK">
      <data key="d0">EVENT</data>
      <data key="d1">ActiveLink is a component in Next.js that uses the useRouter hook to create a link that changes style based on the current route.</data>
      <data key="d2">4a99c636fb9adfcf5771118fe58ce017</data>
    </node>
    <node id="CPU">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CPU stands for Central Processing Unit, which is the primary component of a computer that performs most of the processing inside a computer.</data>
      <data key="d2">4a99c636fb9adfcf5771118fe58ce017</data>
    </node>
    <node id="OS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4a99c636fb9adfcf5771118fe58ce017</data>
    </node>
    <node id="PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A page in Next.js that displays content and maintains state across navigations without resetting by default.
A page in Next.js is a React component that is associated with a route and can be rendered on the server or client side.
A page in Next.js that can utilize getInitialProps or getServerSideProps for data fetching.
Page refers to a specific route in a Next.js application that renders a component.
Page is a component in Next.js that serves as an entry point for the application, handling routing and rendering of content based on the URL.
The page refers to a specific route in the Next.js application, which can render different components based on the URL.
A page represents a specific route or segment within the application that can be rendered or redirected to.
The Page component in Next.js is a React component that represents a single page in the application, which can utilize the headers function to access request headers.
A component in a web application that represents a specific route, which can be dynamically generated based on parameters.
Page refers to the individual components or views rendered in the Next.js application based on the route and parameters.
A page in Next.js is a React component that is associated with a route and can be rendered on the server or client side.
Page refers to a specific route in Next.js that can be rendered and served to users, defined in page.tsx files.
A page in Next.js is a unique UI component associated with a specific route in the application.


Page is a component in the code that renders text using different font styles defined earlier.
The page component in Next.js serves as the entry point for a specific route, rendering the content for that route based on the application's structure.
The Page component is a React component that renders the homepage of a Next.js application, including a heading and a link to the About page.
A page in Next.js is a React component that is associated with a route in the application, rendering content for that route.
Page is a Server Component that renders content and attempts to use the Carousel component.

Page is a component in Next.js that is prerendered and can include other components like tables.
The Page is a component in a TypeScript/JavaScript application that handles form submissions and user interactions.
Page is a component in Next.js that represents a single route in the application, capable of fetching and rendering data.
A page in Next.js refers to a specific route or component that is rendered when a user navigates to a particular URL within the application.
Pages in Next.js are unique UI components that correspond to specific routes, defined by exporting a component from a page.js file.
Page refers to the individual sections of content that can be navigated through in a pagination system.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,102262d1b2a41d767a543121d96412c6,12ed2a0e7657f4c4359e7bea38b9bc13,170893bac86ced48a278abde4d144710,1d855e055624fb34345331017d371137,21bbed2998c7a9b202d76d56c78cb512,223233d7a3658c1a7836573abacf9175,2c3e23b7d2b5c3c6c258760c75956b4c,2e44942744c40cf6e169212e822438d5,3fb45c793f55da9bb4eda5392e25aafe,455e168c432979d018ea3d145e2547b5,4dfb13dff74e4dc45c19d4d71fe1a443,52bf7bb5a492d2cb5b2f5f06d6507a81,52f67911efe49d48e703ba654f23728e,57aa8258500bb7c522d2a394931d9248,62cbc95f20c7b902a0c2e3e9af7dd83c,64c02a535c1519ef24ded4a2a368f2be,9ac6b7bdb38f92b5b8fbd5762735c158,9e3cdf604b5960851cad4f9699d3ba89,9f6dc0f379759d79c664c445c0051202,a19a92a20fca1ccc164ea11570a4b26a,a50f51132c97b3887f2b21ed846fa020,b6c19fc60714c90b16c67bd7df9573f9,dc10462a75be57d14f05bf6a26ba9731,dea59f788f9645dcf527f4f5f4f12ae7,e50d0654e953ff5fe60c725be1dea551,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="LOGIN">
      <data key="d0">EVENT</data>
      <data key="d1">An event that triggers user authentication and redirects to a dashboard upon successful login.
An event where a user provides credentials to access their account in the web application, triggering session creation and management processes.
The login event refers to the action of a user attempting to access their account through a login interface.

The Login event is a user authentication process that allows users to access the application.
Login is an event where a user enters their credentials to access the application.
Login is an event where users enter their credentials to access their accounts.
Login is an event that occurs when a user successfully authenticates their identity in an application.
Login is an event that allows users to authenticate themselves using their credentials in the Authenticator component.</data>
      <data key="d2">170893bac86ced48a278abde4d144710,353184f9ee9fe27f7425aaec76c8a30a,73680e5bf87090f014e7bd9d2b8e582a,7d1946ff469243c820fe74fd26b68cbd,81518acc3db43af0161d599284ff910e,9755f3d6b34a8ac25f409b1d0fe38854,99d758fe4e77c64e3d6461268ba8b6d4,a50f51132c97b3887f2b21ed846fa020,f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="ROUTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The router in Next.js is responsible for handling navigation and routing between different pages in the application.
The Router in Next.js is responsible for handling navigation and routing events within the application.

Router is a component in Next.js that enables navigation between different pages in a web application.
The router in Next.js is responsible for handling navigation and routing within the application, including locale transitions.
The router in Next.js allows for client-side navigation and route management within applications.
The router in Next.js is responsible for handling navigation and routing between different pages and components in the application.
Router is a component that manages navigation and routing in a React application, allowing users to move between different pages.
The router in Next.js is responsible for handling navigation and routing logic within the application, allowing for dynamic and efficient page transitions.
The Router in Next.js is responsible for managing navigation and routing between different pages and components in the application.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,170893bac86ced48a278abde4d144710,223233d7a3658c1a7836573abacf9175,7ad571c896064ee6e36a4acd93898e88,7cd464b0f42ff05e87fa7e149d7e2997,a50f51132c97b3887f2b21ed846fa020,ab49838f472483f11a1afbcaff84ad1e,bb9110629910b21a122e4dbd23ba9236,d4880ef934642aac0f85ca34038b847d,fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="PUSH">
      <data key="d0">EVENT</data>
      <data key="d1">A method used by the router to navigate to a new URL, adding a new entry to the browser's history stack.</data>
      <data key="d2">170893bac86ced48a278abde4d144710</data>
    </node>
    <node id="REPLACE">
      <data key="d0">EVENT</data>
      <data key="d1">A method used by the router to navigate to a new URL without adding a new entry to the browser's history stack.</data>
      <data key="d2">170893bac86ced48a278abde4d144710</data>
    </node>
    <node id="PREFETCH">
      <data key="d0">EVENT</data>
      <data key="d1">A method that allows Next.js to pre-load a page in the background for faster client-side transitions.</data>
      <data key="d2">170893bac86ced48a278abde4d144710</data>
    </node>
    <node id="BEFOREPOPSTATE">
      <data key="d0">EVENT</data>
      <data key="d1">A method that allows developers to define custom behavior before the router handles a popstate event, such as navigating back in history.</data>
      <data key="d2">170893bac86ced48a278abde4d144710</data>
    </node>
    <node id="USESTATE">
      <data key="d0" />
      <data key="d1">
useState is a Hook in React that allows you to add state to function components, enabling dynamic rendering based on state changes.</data>
      <data key="d2">0bfaadafcf31828f19e4b2657565944a,170893bac86ced48a278abde4d144710</data>
    </node>
    <node id="HISTORY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The History object allows manipulation of the browser session history, enabling navigation through the user's history of visited pages.</data>
      <data key="d2">223233d7a3658c1a7836573abacf9175</data>
    </node>
    <node id="WINDOW">
      <data key="d0" />
      <data key="d1">
Window is a global object in the browser that provides access to the browser's window and its properties, used in client-side components.)&lt;|COMPLETE|&gt;
The Window interface represents a window containing a DOM document; it is the global object in the browser environment.</data>
      <data key="d2">223233d7a3658c1a7836573abacf9175,7ad571c896064ee6e36a4acd93898e88,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="USE REPORT WEB VITALS">
      <data key="d0">EVENT</data>
      <data key="d1">The useReportWebVitals hook allows developers to report Core Web Vitals metrics for performance monitoring in web applications.
Use Report Web Vitals is a hook in Next.js that allows developers to collect and report web performance metrics during local development.</data>
      <data key="d2">86965ee0055fe16d855a4f0e993b9d85,fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="MYAPP">
      <data key="d0">PERSON</data>
      <data key="d1">MyApp is a component in Next.js that utilizes the useReportWebVitals hook to monitor performance metrics.
MyApp is a component that is wrapped in the ThemeProvider to apply the defined theme.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55,fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="HANDLE ROUTE CHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">Handle Route Change is an asynchronous function that manages the routing logic when a user is not authenticated.</data>
      <data key="d2">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="USER">
      <data key="d0">PERSON</data>
      <data key="d1">User refers to the individual interacting with the application, whose authentication status is checked for routing purposes.
An individual who interacts with the web application, requiring authentication and session management for access to features and data.
A user is an individual who interacts with a web application, requiring authentication and authorization to access certain functionalities.

The User function is a React component that fetches user data based on the authorization header retrieved from the headers function.
A User is an individual who interacts with the Signup Form to create an account or log in to an application.
An individual who interacts with the application, requiring authentication and session management.
A user is an individual who interacts with the application, potentially having different roles such as admin or regular user.
User refers to individuals interacting with the application, whose roles are checked for authorization.
A user is an individual who interacts with a web application, initiating requests and receiving responses from the server.
The User is an individual who interacts with the application, submitting forms and updating their profile information.
A user is an individual who interacts with the application and can be identified for personalized messaging and engagement.
The user is an individual whose data is being sent to Amazon Pinpoint, including their name, email, and location.
A user is an individual who interacts with the application, creating and managing to-do items.
A user is an individual who signs up and verifies their account in the AWS Amplify system.
User refers to the individual interacting with the application, capable of managing songs and their associated images.
User is a model in the schema that represents an individual with fields that may include last known location and other attributes.
A user is an individual who interacts with the application, typically requiring authentication to access certain features.
A user is an individual who interacts with the application, managing their account and authentication status.
A user is an individual who interacts with the application, typically requiring authentication to access features.
A user is an individual who interacts with the AWS Amplify platform, typically by signing up or signing in to access services.
A user is an individual who interacts with the application and is authenticated through Amplify Auth and Amazon Cognito.
A user is an individual who accesses the application and utilizes the authentication features provided by AWS Amplify and Cognito.
A user in the context of AWS is an entity that can interact with AWS services, typically associated with specific permissions and roles.
A user is an individual who interacts with the application, signing up and managing their to-do items.
A user is an individual who interacts with the application, signing in to manage their tasks and data.
A user is an individual who interacts with the application, often requiring authentication to access certain features.
User refers to individuals who interact with the application and utilize the FaceLivenessDetector for authentication purposes.

User represents the current signed-in user in the application, with attributes like username.

A user is an individual who interacts with the AWS Amplify platform, utilizing its authentication features to manage their account.
User refers to individuals who interact with the application, utilizing features such as sign-up and sign-in.
A user is an individual who interacts with the Authenticator component to sign in or create an account.
The user is an individual who interacts with the application, utilizing features like sign-in and account management through the Authenticator component.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,0cd205bf5fe0ebe4aec3529e4d44191c,102262d1b2a41d767a543121d96412c6,17ef311a22a51eef0f55aaf7d03a5ed7,1e46ce5bc3a6e1fa6bece36f86a46f80,24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,32ab448d1972668cba4e2c467ff116a8,353184f9ee9fe27f7425aaec76c8a30a,3bedaf75477c620e5f8469d8d96cfae3,407c79602db9cac967822f4d34fa94d2,4ccaaec02cfc4169e423aaf4ce28263f,530b644b2b2dcf37b1cde4a8c015083a,55e07f6f599d31bd6bca8ce0ea6a1072,58b4ec0bb9e980cc17fe0b3178671c95,7040175c91fe86a908046a9b485b0410,715bdaaae1cb7470e0e54efac993beb5,729c604ddd30e8eb3491209028c25dde,793ee29fd3ae616dbc82df13c1d4f39b,7b0e16fa06f15b959c34b3d3401845e8,81518acc3db43af0161d599284ff910e,9755f3d6b34a8ac25f409b1d0fe38854,9ac6b7bdb38f92b5b8fbd5762735c158,9bcc9002428492e349dade67bf61476e,9d1ecd9e6b4e4bc832178b9ae1a06e8d,aba5b97fa8a2f6114a40b1d94fc276b2,abdfd668c78186087ff9da2146979893,acfd457359d2693c084c6ab2341189be,bcb8bed3236fce81cd5b966a435370ba,c58075426e62c1f9da00343d6b1599a7,cb9405c9d1ffc30f045effa85b1e9e09,d4d0ea2c5ed830460edee88a18f0b2b2,f0c17549b011af117faf3f7556948996,fbb05e41116fc030ff4f57b77c6ebd29,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Loading is a state that indicates whether the application is in the process of loading data or resources.
Loading is a state in Next.js that can be represented by a loading file, which creates instant loading states built on Suspense.
Loading is an event that indicates the application is in the process of fetching or preparing data for display.
Loading refers to the behavior of how images are loaded in Next.js, with options for lazy or eager loading.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,4132dfa96e84fb89d3908b0e9dea6a62,a046fdf9fbebaa56c0d37da25e453974,fbb05e41116fc030ff4f57b77c6ebd29</data>
    </node>
    <node id="USER TIMING API">
      <data key="d0">EVENT</data>
      <data key="d1">The User Timing API is a browser API that allows developers to measure the performance of their web applications by providing a way to create custom timestamps.
The User Timing API is a browser feature that allows developers to measure the performance of their web applications by providing timestamps for specific events.</data>
      <data key="d2">5afd0d2ef8220eea43b9a4e3736e7bee,86965ee0055fe16d855a4f0e993b9d85</data>
    </node>
    <node id="NAVIGATOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Navigator is a built-in object in web browsers that provides information about the application running the script, including the user's browser and operating system.
</data>
      <data key="d2">86965ee0055fe16d855a4f0e993b9d85,91a237014868fc106c5edbdc4ad2b520</data>
    </node>
    <node id="AMP OPTIMIZER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AMP Optimizer is a tool that applies transformations to AMP pages to improve their performance and ensure they meet AMP specifications.</data>
      <data key="d2">86965ee0055fe16d855a4f0e993b9d85</data>
    </node>
    <node id="HYPERLINK">
      <data key="d0">EVENT</data>
      <data key="d1">Hyperlink refers to a clickable link that directs users to another location, often used in web pages to navigate between resources.</data>
      <data key="d2">86965ee0055fe16d855a4f0e993b9d85</data>
    </node>
    <node id="VERCEL SPEED INSIGHTS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">86965ee0055fe16d855a4f0e993b9d85</data>
    </node>
    <node id="IP">
      <data key="d0">EVENT</data>
      <data key="d1">IP refers to Internet Protocol, which is a set of rules governing the format of data sent over the internet or local network, often used to identify devices on a network.
The IP function retrieves the client's IP address using the headers function to access specific headers related to IP forwarding.</data>
      <data key="d2">102262d1b2a41d767a543121d96412c6,febb4f969f596319fd061f8b7238dfa9</data>
    </node>
    <node id="REPO">
      <data key="d0">EVENT</data>
      <data key="d1">A repository (repo) is a storage location for software packages, which can be hosted on platforms like GitHub.
A repository on GitHub that contains the code and documentation for the Next.js framework.
A repository (repo) on GitHub is a storage space where project files and their revision history are kept.</data>
      <data key="d2">57aa8258500bb7c522d2a394931d9248,8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="STATIC PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">Static props are a feature in Next.js that allows pre-rendering of pages at build time, fetching data to be passed as props to the page component.
Static props are a feature in Next.js that allows pre-rendering of pages at build time with data fetched from an API.</data>
      <data key="d2">8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="STATIC PATHS">
      <data key="d0">EVENT</data>
      <data key="d1">Static paths are a feature in Next.js that allows the specification of dynamic routes to be pre-rendered at build time.
Static paths are a feature in Next.js that determines which dynamic routes will be pre-rendered at build time.</data>
      <data key="d2">8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="404 STATUS">
      <data key="d0">EVENT</data>
      <data key="d1">404 status is an HTTP response code indicating that the requested resource could not be found on the server.</data>
      <data key="d2">e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="PROCESS.CWD">
      <data key="d0">EVENT</data>
      <data key="d1">process.cwd() is a Node.js method that returns the current working directory of the Node.js process, often used in Next.js for file path resolution.</data>
      <data key="d2">e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="STATIC GENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Static generation is a method of pre-rendering pages at build time in Next.js, allowing for faster page loads and improved performance.
Static generation is a method of pre-rendering pages at build time, serving them as static HTML files for faster load times.
Static Generation is a pre-rendering method in Next.js where HTML is generated at build time and reused on each request for better performance.</data>
      <data key="d2">3678e68072101ac922b838851eaa8465,c8d58fd330c4f217c52b50590414e517,e1b487c3c6375629c06ea480fd8dc53b</data>
    </node>
    <node id="DATA">
      <data key="d0" />
      <data key="d1">
Data is a resource in the AWS Amplify backend that manages data storage and retrieval.
Data is a resource in AWS Amplify that allows developers to manage and interact with data storage services, such as databases.
Data is a resource in AWS Amplify that allows developers to manage and interact with data storage solutions, such as databases.
Data refers to the data management service that handles the storage and retrieval of data in the backend system.
Data refers to the information processed or stored by the application, which can be managed through the defined schema and models.
Data is a resource in AWS Amplify that provides a way to manage and interact with application data through APIs.
Data is a module in Amplify that manages the data schema and interactions for applications.
Data refers to the information managed by Amplify, including APIs, databases, and user management features.
Data is a resource within AWS Amplify that handles data management and storage for applications.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e,119c44bcb05c001f48d12d86b105f1bf,1950a5e06a03170ed4dc66a00668ea47,195fa68e405624fc5cbe7eeb5767c2ef,344b01eb184403f029e31d4621f1ea1f,502c34bc5ff7e00594c0a0d9df58834d,8e6f8a08e3cdc9d85f1015001bcf93dc,c53f4501f1dba5ecec6c90cfcc2152c2,e1b487c3c6375629c06ea480fd8dc53b,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="FALLBACK">
      <data key="d0">EVENT</data>
      <data key="d1">Fallback is a feature in Next.js that determines how to handle paths not returned by getStaticPaths during the build process.
Fallback is a feature in Next.js that allows for rendering a loading state while a page is being generated for the first time.
Fallback is a feature in Next.js that allows the application to redirect requests to a specified endpoint when no matching routes are found.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,8735729cb47a3e421748c05ffb31502f,ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </node>
    <node id="BUILD TIME">
      <data key="d0">EVENT</data>
      <data key="d1">Build time refers to the period when Next.js compiles and prepares the application for deployment, including pre-rendering pages.
Build time refers to the period when the application is compiled and prepared for deployment, during which static pages are generated in Next.js.</data>
      <data key="d2">8735729cb47a3e421748c05ffb31502f,b61989d8657d5b33a55c584f46e7d436</data>
    </node>
    <node id="GETINITIALPROPS">
      <data key="d0">EVENT</data>
      <data key="d1">getInitialProps is a legacy API in Next.js that allows for data fetching on both server-side and client-side during page transitions.
getInitialProps is a Next.js lifecycle method that allows data fetching before rendering a page.
getInitialProps is a legacy data fetching method in Next.js that allows for data to be fetched before rendering a page.
getInitialProps is a Next.js lifecycle method that allows data fetching before rendering a page, enabling server-side rendering capabilities.</data>
      <data key="d2">57aa8258500bb7c522d2a394931d9248,8023a6acc1593be80b1d65bbe4d5fb3e,815b3c1f78ab2336e7e5bdae07b49d2b,ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </node>
    <node id="INCREMENTAL STATIC REGENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Incremental Static Regeneration is a feature in Next.js that allows for updating static pages after they have been built.
Incremental Static Regeneration is a Next.js feature that allows static pages to be updated after they've been built without needing a full rebuild.
Incremental Static Regeneration (ISR) is a feature in Next.js that allows pages to be updated after the site has been built, enabling static pages to be revalidated at runtime.
Incremental Static Regeneration (ISR) allows updating static content without rebuilding the entire site.
Incremental static regeneration allows developers to update static content after the site has been built, enabling dynamic updates without a full rebuild.
Incremental Static Regeneration allows for updating static pages after the site has been built, enabling new data to be served without a full rebuild.
Incremental Static Regeneration (ISR) is a feature in Next.js that allows developers to update static pages after the site has been built, without needing to rebuild the entire site.
Incremental Static Regeneration (ISR) is a feature in Next.js that allows developers to update static content without rebuilding the entire site, improving performance and reducing server load.
Incremental Static Regeneration (ISR) is a feature in Next.js that allows pages to be updated after the site has been built, without needing a full rebuild.
Incremental Static Regeneration is a feature in Next.js that allows you to update static pages after the site has been built, enabling dynamic content updates without a full rebuild.
A feature in Next.js that allows pages to be updated incrementally without rebuilding the entire site, enhancing performance</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,0bfaadafcf31828f19e4b2657565944a,3678e68072101ac922b838851eaa8465,4f1b35d4044fdc993b02fcfb2db35bd6,66fea93bb642287d13f3a25b8b3e0083,98961c89bf003488bbe6223bc946b205,9bc82a2671446cca168796fea771ecad,adb5bec4b54e83924618cafc99d40e24,af00e01481cac23e3b67c635215254ab,ccf507e98d23ff18f3ca206f0a8f29a2,ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="E-COMMERCE SITE">
      <data key="d0">EVENT</data>
      <data key="d1">An e-commerce site is a website that allows users to buy and sell goods and services online.</data>
      <data key="d2">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </node>
    <node id="PRODUCT PAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Product pages are individual web pages that showcase a specific product for sale on an e-commerce site.</data>
      <data key="d2">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </node>
    <node id="STARS">
      <data key="d0">EVENT</data>
      <data key="d1">Stars are a metric used on GitHub to indicate the popularity of a repository, reflecting user interest and approval.</data>
      <data key="d2">57aa8258500bb7c522d2a394931d9248</data>
    </node>
    <node id="API.GITHUB">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">57aa8258500bb7c522d2a394931d9248</data>
    </node>
    <node id="HOMEPAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Homepage is the main entry point of a Next.js application, typically represented by the index.js file.
The homepage is the main landing page of a website, often serving as the starting point for navigation.
The main page of the Next.js application that displays a greeting message and a button component.
The HomePage is a component in a Next.js application that renders a simple greeting message, demonstrating the framework's ability to create dynamic web pages.
The homepage is the main entry point of a website, typically containing links to other sections of the site.</data>
      <data key="d2">21bbed2998c7a9b202d76d56c78cb512,393aa2365a84cbbbeaa882f89f100b89,3c09a802c38a10e785a119f2ba114c73,66c478df0b5dc48b45a6c5e00867576d,7cf992845bf79c5ec4ae2614617a79f4</data>
    </node>
    <node id="ABOUT US">
      <data key="d0">EVENT</data>
      <data key="d1">About Us is a route in Next.js that provides information about the application or organization.
About Us is a page in the Next.js application that provides information about the organization or application.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73,d4880ef934642aac0f85ca34038b847d</data>
    </node>
    <node id="BLOG POST">
      <data key="d0">EVENT</data>
      <data key="d1">Blog Post is a dynamic route in Next.js that displays individual blog articles based on the slug parameter.
Blog Post is a dynamic page in the Next.js application that displays individual blog entries.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73,d4880ef934642aac0f85ca34038b847d</data>
    </node>
    <node id="USER-GENERATED CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">User-generated content refers to any content created and published by users, which can be removed by the author.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73</data>
    </node>
    <node id="SERVER-SIDE PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">Server-side props are properties that are fetched and passed to a Next.js page component during server-side rendering.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73</data>
    </node>
    <node id="PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">Props are properties that can be passed to components in Next.js, allowing for dynamic rendering and functionality.
Props are properties passed to components in React, allowing for customization and dynamic behavior in MDX components.
Props are the properties passed to a React component, which can include data fetched using getStaticProps for rendering the component.
Props are properties passed to components in React, including required and optional attributes for the Image Component.
Props are a mechanism in React for passing data and event handlers down to child components.
Props are a mechanism in React for passing data from parent components to child components, essential for component communication.
Props are a mechanism for passing data and event handlers down to child components in React.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73,4e07cca41acd33806d13242f5e21f621,6e82a6e0427e12aef8dafce9907f3835,7bf88bf4f2097fabdb3b57f7074def08,98961c89bf003488bbe6223bc946b205,a4afb71ec5010173b514ca4604c40002,bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="404">
      <data key="d0" />
      <data key="d1">
A 404 error is rendered in Next.js when a requested page or resource cannot be found.</data>
      <data key="d2">3c09a802c38a10e785a119f2ba114c73,7bf88bf4f2097fabdb3b57f7074def08</data>
    </node>
    <node id="STYLED-COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Styled-components is a library for styling React components using tagged template literals.
Styled Components is a library for React and React Native that allows you to use component-level styles in your application.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="URL OBJECT">
      <data key="d0">EVENT</data>
      <data key="d1">A URL object is used in Next.js to format URLs for navigation, allowing for dynamic routing.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c</data>
    </node>
    <node id="HREF">
      <data key="d0">EVENT</data>
      <data key="d1">HREF is an attribute used in anchor tags to specify the URL of the page the link goes to.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c</data>
    </node>
    <node id="NAVIGATION">
      <data key="d0">EVENT</data>
      <data key="d1">Navigation refers to the process of moving between different pages or sections within a web application.
Navigation refers to the process of moving between different pages or sections within the application.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,99d758fe4e77c64e3d6461268ba8b6d4</data>
    </node>
    <node id="CLIENT-SIDE NAVIGATION">
      <data key="d0">EVENT</data>
      <data key="d1">Client-side navigation is a method of navigating between pages in a web application without a full page reload, enhancing user experience.
Client-side navigation refers to the ability to navigate between pages in a web application without a full page reload, enhancing user experience.
Client-side navigation occurs when the &lt;Form&gt; is submitted, allowing for a faster user experience without a full page reload.</data>
      <data key="d2">07e97df1a8257492f53460b3979b0e3c,439d5be2d39a5b9cedb135d149974680,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="AUTH TOKEN">
      <data key="d0">PERSON</data>
      <data key="d1">Auth Token is a cookie used to determine if a user is authenticated in the Next.js application.</data>
      <data key="d2">d5c8e583b99d40e21e52e5d76498cb0d</data>
    </node>
    <node id="USEISAUTHECED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">useIsAuthed is a custom hook in Next.js that checks if a user is authenticated.</data>
      <data key="d2">d5c8e583b99d40e21e52e5d76498cb0d</data>
    </node>
    <node id="LOADING STRATEGY">
      <data key="d0">EVENT</data>
      <data key="d1">Loading strategies determine how and when scripts are executed in a web application, affecting performance and user experience.</data>
      <data key="d2">80a786416360b0f3873c10b0b635c67b</data>
    </node>
    <node id="WEB WORKER">
      <data key="d0">EVENT</data>
      <data key="d1">A Web Worker is a JavaScript script that runs in the background, allowing for concurrent execution of code without blocking the main thread.
</data>
      <data key="d2">80a786416360b0f3873c10b0b635c67b,c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="BROWSER">
      <data key="d0" />
      <data key="d1">


The browser is a software application used to access information on the World Wide Web, which interacts with Next.js applications.</data>
      <data key="d2">2238ba4c005a726e011e67cd17d3a576,80a786416360b0f3873c10b0b635c67b,8eb965e4d19780deabbcf7d96ed2a45f,c55d8ff0ea71716df1fdfba115d52035</data>
    </node>
    <node id="PROFILE.PNG">
      <data key="d0">PERSON</data>
      <data key="d1">Profile.png is an example image used in the documentation to demonstrate the Image Component functionality.
Profile.png is an example image file used in the Image Component demonstration within Next.js.</data>
      <data key="d2">24e08d5dea64dab91a3ce772d91b0e8f,7bf88bf4f2097fabdb3b57f7074def08</data>
    </node>
    <node id="IMAGE LOADER">
      <data key="d0">EVENT</data>
      <data key="d1">Image Loader is a custom function in Next.js that resolves image URLs based on parameters like src, width, and quality.
The image loader is a custom function in Next.js that resolves image URLs based on parameters like src, width, and quality.</data>
      <data key="d2">24e08d5dea64dab91a3ce772d91b0e8f,7bf88bf4f2097fabdb3b57f7074def08</data>
    </node>
    <node id="OBJECT-FIT">
      <data key="d0">EVENT</data>
      <data key="d1">Object-fit is a CSS property that determines how an image should be resized to fit its container, relevant in the context of the Image Component.

Object-fit is a CSS property that determines how an image should be resized to fit its container, with options like contain and cover.
Object-fit is a CSS property that defines how an image should be resized to fit its container, affecting how images are displayed in responsive designs.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,24e08d5dea64dab91a3ce772d91b0e8f,5b4f484288a596801b79828ce9d0ba11,7b971bc32d696dda8aea178d02a73fea</data>
    </node>
    <node id="ALT TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Alt text is a property used in the Image Component to provide a textual description of the image for accessibility and SEO purposes.</data>
      <data key="d2">24e08d5dea64dab91a3ce772d91b0e8f</data>
    </node>
    <node id="APP/PAGE.JS">
      <data key="d0" />
      <data key="d1">
</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9,24e08d5dea64dab91a3ce772d91b0e8f</data>
    </node>
    <node id="WEB.DEV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Web.dev is a resource for web developers to learn about best practices and performance optimization for web applications.
Web.dev is a website that provides resources and documentation for web developers, including information on image optimization and performance metrics.</data>
      <data key="d2">7b971bc32d696dda8aea178d02a73fea,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="MDN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MDN (Mozilla Developer Network) is a comprehensive resource for developers, providing documentation and tutorials on web technologies.
MDN (Mozilla Developer Network) is a comprehensive resource for developers, offering documentation and guides on web technologies, including image handling and optimization.</data>
      <data key="d2">7b971bc32d696dda8aea178d02a73fea,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="OBJECT-POSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Object-position is a CSS property that specifies the alignment of the image or video within its container.</data>
      <data key="d2">7b971bc32d696dda8aea178d02a73fea</data>
    </node>
    <node id="SIZES">
      <data key="d0">EVENT</data>
      <data key="d1">Sizes is a property that provides information about how wide an image will be at different breakpoints, affecting image performance.
Sizes is a property used in the Image component to inform the browser about the size of the image to be loaded based on the viewport.
Sizes is a property in the Image component that helps the browser determine the appropriate image size to download based on the viewport.
Sizes refer to the different size options available for the SelectField component, such as small, large, and default.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,7b971bc32d696dda8aea178d02a73fea,8eb965e4d19780deabbcf7d96ed2a45f,e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="FILL">
      <data key="d0">EVENT</data>
      <data key="d1">Fill is a property that allows an image to fill the entire container, potentially cropping the image to maintain aspect ratio.


Fill is a layout mode in the Image component that allows the image to expand to fill its parent element.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9,20f099859bc84200865a67d0cbf4c8bb,7b971bc32d696dda8aea178d02a73fea,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="EVENT">
      <data key="d0">EVENT</data>
      <data key="d1">An event in programming refers to an action or occurrence recognized by software, often triggered by user interactions or system changes.
An event in this context refers to a specific occurrence that triggers a function, such as an API request or a scheduled task.
An event in this context refers to an occurrence that triggers a function or process in AWS Lambda, such as a database query or a data update.</data>
      <data key="d2">3538ba83bb1b1b6801c4b0e5bc962812,4c49dc5beda0203ac9ac135243ec127e,6a2f21642257c922b2659f7bb932521a</data>
    </node>
    <node id="CONFIGURATION OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Configuration options in Next.js allow developers to customize the behavior of the framework, including image handling and optimization settings.
Configuration options in Next.js allow developers to customize the behavior of the framework, particularly for image optimization.</data>
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e,ccacadee21d69e15eb428a9a9d8de65f</data>
    </node>
    <node id="REMOTE PATTERNS">
      <data key="d0">EVENT</data>
      <data key="d1">Remote patterns are used in Next.js to specify which external images can be served, enhancing security by restricting image sources.
Remote patterns are configurations in next.config.js that allow the use of external URLs for images in the Next.js framework.
Remote patterns in Next.js are used to configure which external images can be served from the Image Optimization API.
Remote patterns configuration is a setup in Next.js that allows developers to define a list of remote hostnames for image optimization.
Remote patterns are configurations in Next.js that allow developers to specify allowed external image sources for optimization.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,4c49dc5beda0203ac9ac135243ec127e,affc1268c54094ecde29441589759673,ca4cf87ea29b0d3f9a148fa9aeabce4b,ccacadee21d69e15eb428a9a9d8de65f</data>
    </node>
    <node id="DOMAINS">
      <data key="d0">EVENT</data>
      <data key="d1">Domains in Next.js are used to allow specific hostnames for external images, though this method is deprecated in favor of remote patterns.</data>
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e</data>
    </node>
    <node id="LAZY LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Lazy loading is a technique that defers loading of images until they are about to enter the viewport, improving performance.
Lazy loading is a technique used in web development to delay the loading of images until they are needed, improving performance.

Lazy loading is a technique in Next.js that defers the loading of components and libraries until they are needed, enhancing application performance.</data>
      <data key="d2">3da6822267f4aca1b29b1233660a9282,4c49dc5beda0203ac9ac135243ec127e,ccacadee21d69e15eb428a9a9d8de65f,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="EAGER LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Eager loading is a method where images are loaded immediately, regardless of their position in the viewport, which can impact performance.</data>
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e</data>
    </node>
    <node id="BLUR DATA URL">
      <data key="d0">EVENT</data>
      <data key="d1">Blur Data URL is a placeholder image used before the main image loads, enhancing user experience during loading times.</data>
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e</data>
    </node>
    <node id="UNOPTIMIZED">
      <data key="d0">EVENT</data>
      <data key="d1">Unoptimized refers to serving images without any modifications to quality, size, or format, which can be controlled via configuration settings.</data>
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e</data>
    </node>
    <node id="LOAD">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4c49dc5beda0203ac9ac135243ec127e</data>
    </node>
    <node id="ACME">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Acme is a fictional company used in examples, often representing a generic organization in various contexts.
Acme is a fictional company used in examples, often representing a generic business in various contexts.
ACME is a company that operates a website providing various services and information, including a blog and an about page.
Acme is a company that provides various web application services, including sitemap generation and metadata management for social media sharing.
Acme is an organization that generates images programmatically using code and provides metadata for image optimization.
Acme is a company that provides various services and products, including web development and metadata management.
Acme is a company that provides assets for web applications, as referenced in the domains configuration example.</data>
      <data key="d2">4da3554b7826cf4b6dd608127da53568,5791705a1f965d3a768f111e7fdcade1,5eccc9b6c90fe181c8a1389dcb99435b,63ad6476d7970e4ee569325f59f21115,85fc82d441624fc7d477f417afcce94e,affc1268c54094ecde29441589759673,c22dbf534c525258e8788bff5c1c5e66</data>
    </node>
    <node id="HOSTAGE EXCHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">The hostage exchange event involves negotiations and the transfer of hostages between countries, specifically between Firuzabad and Aurelia.</data>
      <data key="d2">5eccc9b6c90fe181c8a1389dcb99435b</data>
    </node>
    <node id="IMAGE OPTIMIZATION API">
      <data key="d0">EVENT</data>
      <data key="d1">The Image Optimization API is a feature in Next.js that dynamically optimizes images upon request, enhancing performance for web applications.
The Image Optimization API is a feature in Next.js that optimizes images on-the-fly for better performance and loading times.
The Image Optimization API is a built-in feature of Next.js that optimizes images from anywhere on the web and serves them directly from the Next.js web server.

The Image Optimization API is a feature of Next.js that automatically optimizes images for better performance based on the request's Accept header.
The Image Optimization API in Next.js automatically optimizes images for faster loading times and better performance.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,179a1a7e8e9c1777096b12c6bb6ff93c,5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673,b0ea8bc9e77f37505a6e3b25a48b4dbb,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="CACHING BEHAVIOR">
      <data key="d0">EVENT</data>
      <data key="d1">Caching behavior refers to how Next.js manages cached images, including how they are stored and served to users, impacting application performance.
</data>
      <data key="d2">5eccc9b6c90fe181c8a1389dcb99435b,b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </node>
    <node id="LOADER FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The loader file in Next.js is a custom configuration that allows developers to define how images are loaded, providing flexibility in image handling.
The loader file is a JavaScript file that exports a function used to customize how images are loaded in Next.js applications.</data>
      <data key="d2">5eccc9b6c90fe181c8a1389dcb99435b,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="DEVICE SIZES">
      <data key="d0">EVENT</data>
      <data key="d1">Device sizes are a configuration in Next.js that specifies expected device widths for users, optimizing image delivery based on screen size.
Device sizes are predefined breakpoints used to serve optimized images based on the user's device width.
Device sizes are a configuration in Next.js that specifies expected device widths for serving optimized images.</data>
      <data key="d2">5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="IMAGE SIZES">
      <data key="d0">EVENT</data>
      <data key="d1">Image sizes are a configuration in Next.js that defines specific widths for images, ensuring appropriate image rendering for various use cases.
Image sizes are specific widths defined for images that are smaller than the full width of the screen, used in responsive design.
Image sizes are a configuration in Next.js that defines specific widths for images that are less than the full width of the screen.</data>
      <data key="d2">5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="SVG">
      <data key="d0">EVENT</data>
      <data key="d1">SVG (Scalable Vector Graphics) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation.
SVG (Scalable Vector Graphics) is an XML-based format for vector graphics that is used to define graphics for the Web.
SVG (Scalable Vector Graphics) is an XML-based format for vector graphics that allows for high-quality graphics on the web.</data>
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7,179a1a7e8e9c1777096b12c6bb6ff93c,6634963e5bc3eae8755d15393e4c9b71</data>
    </node>
    <node id="CONTENT SECURITY POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">Content Security Policy is a security feature that helps prevent a variety of attacks such as cross-site scripting (XSS) and data injection attacks.
Content Security Policy is a security feature that helps prevent various attacks by controlling which resources can be loaded by a web application.
Content Security Policy is a security feature that helps prevent a variety of attacks such as Cross-Site Scripting (XSS) and data injection attacks.
Content Security Policy is a security feature that helps prevent a variety of attacks, including Cross-Site Scripting (XSS) and data injection attacks.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,179a1a7e8e9c1777096b12c6bb6ff93c,b0ea8bc9e77f37505a6e3b25a48b4dbb,db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="STATIC IMAGE IMPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Static Image Import is a feature in Next.js that allows developers to import images directly into their components for optimized loading.
Static Image Import is a feature in Next.js that allows developers to import static files directly into their applications.
Static Image Import is a feature in Next.js that allows developers to import images directly into their components for optimized loading.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c,b0ea8bc9e77f37505a6e3b25a48b4dbb,db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="DANGEROUSLYALLOWSVG">
      <data key="d0">EVENT</data>
      <data key="d1">DangerouslyAllowSVG is a configuration option in Next.js that allows serving SVG images with the default Image Optimization API, despite potential security risks.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </node>
    <node id="CONTENTDISPOSITIONTYPE">
      <data key="d0">EVENT</data>
      <data key="d1">ContentDispositionType is a configuration option in Next.js that sets the Content-Disposition header for images served through the Image Optimization API.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </node>
    <node id="RESPONSIVE IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Responsive Images is a feature in Next.js that allows images to adapt to different screen sizes and resolutions for better performance.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </node>
    <node id="MINIMUMCACHETTL">
      <data key="d0" />
      <data key="d1">
minimumCacheTTL is a setting in Next.js that defines the minimum time-to-live for cached images, impacting how long they are stored in the cache.</data>
      <data key="d2">179a1a7e8e9c1777096b12c6bb6ff93c,db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="NEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.
Next.js is a React framework for building server-rendered applications and static websites, known for its built-in SEO support and routing capabilities.

Next.js is a React framework that enables developers to build server-side rendered and statically generated web applications.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,20f099859bc84200865a67d0cbf4c8bb,8023a6acc1593be80b1d65bbe4d5fb3e,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="THEME IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Theme Image is a component that displays different images based on the user's preferred color scheme.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">App refers to the application structure in Next.js where components are defined and rendered.
The App component is a client-only component in the Next.js application that is dynamically imported to avoid server-side rendering.
App is the main component of the application that contains the client-side logic and UI elements.
The App component is the main component of a Next.js application that serves as the entry point for rendering the application.
The app refers to the Next.js application that is being developed, which includes various components and pages.
The App component is the main entry point for a Next.js application, where global styles are applied.
The app refers to the application structure in Next.js, which includes layouts and components for building user interfaces.
A web application that utilizes dynamic routing and static parameter generation for its pages.
The app directory in Next.js is where the application structure is defined, including pages, components, and API routes.

The App is a client-side application that runs in the browser, built using React and managed by Next.js.
The app directory in a Next.js project contains the application's components, pages, and configuration files necessary for building the application.
The App component is a central part of the application that handles the rendering of the user interface in a React application.

The app refers to a web application that utilizes various font styles and layouts for its user interface.


The app is a software application that includes various components for user interaction and data handling.
The app refers to the overall application built using Next.js, which includes various components, pages, and routing logic.
An application (app) is a software program designed to perform specific tasks for users, often available on mobile devices or web platforms.
The App is a React component that utilizes TanStack Query and Amplify Data API to manage and display real estate properties.
The App is a React component that manages the state and interactions for real estate property records using AWS Amplify and TanStack libraries.
App is the main component of the application that integrates various functionalities including data fetching and state management.
The main application that manages real estate properties and their details.
The App refers to the overall application that utilizes the Amplify Console for managing data and user interactions.
App refers to the application built using AWS Amplify, which integrates various services for managing data and files.
The App is a React application that utilizes AWS Amplify for managing data and user authentication.
App is the main component of the application that handles user interactions and integrates various functionalities, including text-to-speech conversion.
App is a general term for a software application designed to perform specific tasks for users, often used in the context of mobile or web applications.
The app refers to the application being developed, which includes features like to-do management and user authentication.
The application being developed is a to-do list application that allows users to create, delete, and manage their tasks.
The App is a React component that integrates the Storage Manager and provides a user interface for file uploads, including language selection and custom components.
The App is a React application that utilizes Amplify's in-app messaging and storage components to display messages and images.
App is a placeholder for the main application component that utilizes the Authenticator for user authentication.
The App is a React component that utilizes the Authenticator to manage user sessions and display user information.
The App is a sample application demonstrating the use of AWS Amplify and its components for user authentication and other functionalities.

</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,1487c7dd4403a73c173d49bf2f73e2d8,1ceae74b49c1b621d815e85b8ca49988,1d0207e2e11503628d08eefd24849d93,21bbed2998c7a9b202d76d56c78cb512,2599c1b415576410d2f9b23f4299c4cb,290d8b37bd253372b8a78b79be1eca98,2c3e23b7d2b5c3c6c258760c75956b4c,39e13e59ba48563c8ec1c8c813746dac,3a82472230692a8c3ac8444f7738b625,3cdd6c81baa65bbde6eabfc399eb25b6,453096a495a2eae0cd2491664604b080,455e168c432979d018ea3d145e2547b5,52bf7bb5a492d2cb5b2f5f06d6507a81,56488edd7cf127c0da3442fbce7f97db,6980c90f0a7a58894d9518accd2ab5dd,6cbd446a7960622a6472bb28c61d77e7,73680e5bf87090f014e7bd9d2b8e582a,7510b258e7a4194c8664e8c8ba088ecc,818fcb4044a83bd6eead8a24e57319ad,95c47d77c6b1c1b930bbbff2c9d1facf,9e3cdf604b5960851cad4f9699d3ba89,9f6dc0f379759d79c664c445c0051202,a19a92a20fca1ccc164ea11570a4b26a,a50f51132c97b3887f2b21ed846fa020,ab869c819df53e1e9e3adebf6a4234a2,abdfd668c78186087ff9da2146979893,aee85ce10da1e12fe3e8ba84ec64e808,b6c19fc60714c90b16c67bd7df9573f9,b79fdaa9cac2c2fbf9ccc392ed341f6e,c1845aec41d031b5a72f6f472ab4a5f2,cb861a02338e7cf7786d791829706a53,d8d35bb9ab00c5657d67d2362a6bbd10,e80ffe46586bd824e28fa24a230442db,e8d59516a524ae342a9c7507d5bac243,efa0be72e5e017f56fa9efbf06af7e7c,f4e8cc1d9894ee07a7020eb056ec9d8a,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="CSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CSS is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS is a style sheet language used for describing the presentation of a document written in HTML, commonly used in Next.js applications to style web pages.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS is a style sheet language used for describing the presentation of a document written in HTML, important for styling Next.js applications.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML, which is also referenced in the tutorial for webpage styling.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS is a stylesheet language used for describing the presentation of a document written in HTML or XML.
CSS is a style sheet language used for describing the presentation of a document written in HTML or XML, allowing for customization of UI components.
CSS (Cascading Style Sheets) is a stylesheet language used for describing the presentation of a document written in HTML or XML, crucial for styling components in Amplify UI.
CSS is a style sheet language used for describing the presentation of a document written in HTML or XML, mentioned in the context of the RadioGroupField component.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML, commonly used in conjunction with AWS Amplify components.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML.
CSS is a stylesheet language used for describing the presentation of a document written in HTML, which is utilized in Amplify UI for styling components.
CSS (Cascading Style Sheets) is a style sheet language used for describing the presentation of a document written in HTML or XML, which Amplify UI utilizes for styling components.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,155e5b639ff1fbe14e9b7c7375cf5e03,18256f324d7f8fc0edac5bbf717bf76d,2e4837fd908fed547d3170725336a52e,6634963e5bc3eae8755d15393e4c9b71,818fcb4044a83bd6eead8a24e57319ad,84837300711040f4e7b736cdd8fce7d2,99aea11e8e00a31189977a03ce528a10,a8cc34c06c7b64595006afc28abc0ae2,bf223ba92c40347202f7dcf0e841b2ed,c157c439271dbeeebb69b81254b288af,d26ffe8f4908cd05e7882cd4223c3490,dc07058d355dcb6432e4280af3eba3d0,e28baad4e7d7ca8e43254a705cbf687f,f4e8cc1d9894ee07a7020eb056ec9d8a,f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="PICTURE">
      <data key="d0">EVENT</data>
      <data key="d1">Picture is an HTML element that allows for art direction by providing different images based on media queries.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="BACKGROUND IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Background Image refers to the use of images as a background in web applications, often optimized for performance.
Background Image is a component in Next.js that illustrates how to set an image as a background while optimizing it for performance.
Background Image is a usage example of the Image component that showcases how to set an image as a background with specific styling.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9,66669d057195f54843266efcffb93a3b,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="IMAGE-SET">
      <data key="d0">EVENT</data>
      <data key="d1">Image-set is a CSS function that allows for the use of multiple images for a single background image.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="ART DIRECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Art Direction refers to the practice of providing different images for different screen sizes or orientations in web applications.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="MEDIA QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">Media Query is a CSS technique used to apply styles based on the viewport size or device characteristics.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="DARK MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Dark Mode is a user interface option that changes the color scheme of an application to darker colors for better visibility in low-light conditions.
Dark Mode is a feature in Amplify UI that allows users to switch between light and dark color schemes in their applications.
Dark mode is a color scheme that uses light-colored text, icons, and graphical user interface elements on a dark background.
Dark Mode is a design option that changes the color scheme of the application to a darker palette for better visibility in low-light conditions.
Dark mode is a user interface theme that uses a dark color palette, which can be customized in applications built with AWS Amplify.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,1e46ce5bc3a6e1fa6bece36f86a46f80,877a7ccbdb63a00477117db13eba1534,b8276fb595f7138780baf2d76c97bb37,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="LIGHT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Light Mode is a user interface option that uses lighter colors for better visibility in bright conditions.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="FETCH PRIORITY">
      <data key="d0">EVENT</data>
      <data key="d1">Fetch Priority is a prop in the Next.js Image component that allows developers to specify the loading priority of images.</data>
      <data key="d2">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </node>
    <node id="AVIF">
      <data key="d0">EVENT</data>
      <data key="d1">AVIF is an image file format that provides high compression efficiency and is supported by modern web browsers for improved image loading.</data>
      <data key="d2">2238ba4c005a726e011e67cd17d3a576</data>
    </node>
    <node id="LEGACY">
      <data key="d0">EVENT</data>
      <data key="d1">Legacy refers to the previous version of the Image component in Next.js that has been replaced by the new next/image component.</data>
      <data key="d2">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="NEXT/IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The next/image component is the new version of the image handling component in Next.js, designed to optimize image loading and rendering.
</data>
      <data key="d2">564b1122ed77a335ef83dd856be6b406,ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="ALT PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The alt prop is a required property in the new next/image component that provides alternative text for images, enhancing accessibility.</data>
      <data key="d2">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="LOADER PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The loader prop is a customizable function in the next/image component that resolves URLs for images based on specified parameters.</data>
      <data key="d2">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="WIDTH PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The width prop is a required property in the next/image component that defines the width of the image in pixels, affecting its rendering.</data>
      <data key="d2">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="HEIGHT PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The height prop is a required property in the next/image component that defines the height of the image in pixels, affecting its rendering.</data>
      <data key="d2">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </node>
    <node id="EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Example event demonstrates how to use the Image component in a React application to optimize image loading and performance.</data>
      <data key="d2">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="PRIORITY">
      <data key="d0">EVENT</data>
      <data key="d1">Priority is a property that indicates whether an image should be loaded immediately or deferred, impacting performance metrics.
Priority is a prop in the Image component that indicates whether the image should be preloaded as a high priority element.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="PLACEHOLDER">
      <data key="d0">EVENT</data>
      <data key="d1">Placeholder is a property that defines what to display while an image is loading, enhancing user experience during loading times.
Placeholder is a prop in the Image component that specifies what to display while the image is loading, with options like blur or empty.
Placeholder is a temporary text displayed in the SelectField when no value is selected, guiding the user on what to choose.
A Placeholder is a UI component in AWS Amplify used to fill out an interface while the content is loading.
Placeholder is a component used to fill out an interface while the content is loading, providing a visual cue to users.
The Placeholder component fills out the interface while content is loaded asynchronously in Amplify UI.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,51eb03a68a36f040cb248c3d2430e43a,8eb965e4d19780deabbcf7d96ed2a45f,a3d37007c833039158d1e1720cb62466,e33823d803dfc43e2ab84d0208782223,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="OBJECT FIT">
      <data key="d0">EVENT</data>
      <data key="d1">Object Fit is a CSS property that determines how an image should be resized to fit its container.</data>
      <data key="d2">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="OBJECT POSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Object Position is a CSS property that defines how an image is positioned within its parent element.</data>
      <data key="d2">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="IMAGE LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Image loading refers to the process of fetching and displaying images on a webpage, which can be optimized using various properties.</data>
      <data key="d2">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="PERFORMANCE METRICS">
      <data key="d0">EVENT</data>
      <data key="d1">Performance metrics are measurements that indicate how well a webpage performs, particularly in terms of loading speed and resource usage.</data>
      <data key="d2">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </node>
    <node id="VIEWPORT">
      <data key="d0">GEO</data>
      <data key="d1">The viewport is the visible area of a webpage on a device, which affects how images are displayed and loaded based on their sizes.
Viewport is a concept in web development that refers to the visible area of a web page on a device, which can be customized in Next.js.
Viewport is the user's visible area of a web page, which can vary with the device used to view the page.</data>
      <data key="d2">84837300711040f4e7b736cdd8fce7d2,8eb965e4d19780deabbcf7d96ed2a45f,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="DOM ELEMENT">
      <data key="d0">GEO</data>
      <data key="d1">A DOM element is a part of the document object model that represents a single node in the HTML structure of a webpage.</data>
      <data key="d2">ccacadee21d69e15eb428a9a9d8de65f</data>
    </node>
    <node id="ASYNCHRONOUS DECODING">
      <data key="d0">EVENT</data>
      <data key="d1">Asynchronous decoding is a method used in Next.js to optimize image loading by allowing the browser to decode images without blocking the rendering of the page.</data>
      <data key="d2">ccacadee21d69e15eb428a9a9d8de65f</data>
    </node>
    <node id="UNOPTIMIZED IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Unoptimized images in Next.js are served as-is without any modifications to quality, size, or format.</data>
      <data key="d2">ccacadee21d69e15eb428a9a9d8de65f</data>
    </node>
    <node id="CLOUDINARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cloudinary is a cloud-based service that provides image and video management solutions, including optimization and delivery.
Cloudinary is a cloud-based image and video management service that provides solutions for image optimization and delivery.
Cloudinary is a cloud-based service that provides an end-to-end image and video management solution.
Cloudinary is a cloud-based service that provides image and video management solutions, including optimization and delivery.
Cloudinary is a cloud-based service that provides an end-to-end image and video management solution, including hosting and optimization.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab,e871ceb5e34368061b569a8df8c57c33,e90648c68d5bac977f4df1b052ea3636,e99cfa8c07448d7a84d08d3a5ba6dc7a,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="AKAMAI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Akamai is a content delivery network (CDN) that provides cloud services for delivering, optimizing, and securing online content.
Akamai is a cloud service provider that offers solutions for content delivery, web performance, and security.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="CACHE BEHAVIOR">
      <data key="d0">EVENT</data>
      <data key="d1">Cache behavior refers to the algorithm used for caching optimized images, including how they are stored and served.</data>
      <data key="d2">e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="OUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">Output refers to the final result of the image optimization process, including the delivery of optimized images to users.
Output refers to the files and configurations generated by Next.js during the build process for deployment.</data>
      <data key="d2">a3dae9be9408e57ff26350383026033f,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Configuration refers to the settings and properties defined in next.config.js for customizing image optimization behavior.
Configuration refers to the settings defined in next.config.js that control various aspects of a Next.js application.
Configuration refers to the settings that can be adjusted in next.config.js to customize the behavior of Next.js applications.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,a3dae9be9408e57ff26350383026033f,e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="CACHE CONTROL HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">Cache Control Header is an HTTP header used to define caching policies for optimized images.</data>
      <data key="d2">e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="MINIMUM CACHE TTL">
      <data key="d0">EVENT</data>
      <data key="d1">Minimum Cache TTL is a configuration setting that defines the time to live for cached optimized images.</data>
      <data key="d2">e90648c68d5bac977f4df1b052ea3636</data>
    </node>
    <node id="FONT MODULE">
      <data key="d0">EVENT</data>
      <data key="d1">The Font Module is a feature in Next.js that allows developers to optimize and manage fonts in their applications.
Font Module is a tool that automatically hosts font files with other static assets, optimizing performance by removing external network requests and reducing layout shift.</data>
      <data key="d2">aaea03d7a1385785fae028f24c52f8a5,db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="CACHE-CONTROL HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">The Cache-Control header is used to define caching policies for web resources, impacting how browsers cache images and other assets.
The Cache-Control header is an HTTP header used to specify caching policies for web resources, which is automatically set by Next.js for various asset types.
The Cache-Control header is an HTTP header used to specify directives for caching mechanisms in both requests and responses.
The Cache-Control header is an HTTP header used to specify directives for caching mechanisms in both requests and responses.</data>
      <data key="d2">4f1b35d4044fdc993b02fcfb2db35bd6,b0ea8bc9e77f37505a6e3b25a48b4dbb,db79d898afcf0c4fadf71858f0b3e795,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="SVG IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">SVG images are vector graphics that can be resized without loss of quality and are often used in web applications for icons and illustrations.
SVG Images are vector graphics that can be scaled without loss of quality, often used in web applications for icons and illustrations.</data>
      <data key="d2">b0ea8bc9e77f37505a6e3b25a48b4dbb,db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="DANGEROUSLY ALLOW SVG">
      <data key="d0">EVENT</data>
      <data key="d1">Dangerously Allow SVG is a configuration option in Next.js that allows SVG images to be served with the default Image Optimization API.</data>
      <data key="d2">db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="CONTENT DISPOSITION TYPE">
      <data key="d0">EVENT</data>
      <data key="d1">Content Disposition Type is a setting in Next.js that determines how the browser handles the download of images, either forcing a download or allowing inline rendering.</data>
      <data key="d2">db79d898afcf0c4fadf71858f0b3e795</data>
    </node>
    <node id="INTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Inter is a variable font that offers a range of weights and styles for use in web design and development.

Inter is a font used in web applications, particularly in Next.js, to enhance typography and improve performance through subsets.
Inter is a programming interface used in the code to define font styles and weights for a web application.
Inter is a font family that is used in web applications and can be imported from Google Fonts.
Inter is a font from Google that can be used in Next.js applications for styling text.</data>
      <data key="d2">7bc622b9dda4deed82c3382772daca19,a39499341fdd66534be31b2131784b51,aee85ce10da1e12fe3e8ba84ec64e808,b6c19fc60714c90b16c67bd7df9573f9,e36d6ba428fb6e6b41847dce90fde4cc,f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="FONT WEIGHT">
      <data key="d0">EVENT</data>
      <data key="d1">Font weight refers to the thickness of the characters in a font, with values ranging from '100' to '900' for variable fonts.
Font Weight is a property that defines the thickness of the text in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13,f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="FONT STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Font style defines the appearance of the text, such as normal, italic, or oblique, and can be applied in various ways in web design.</data>
      <data key="d2">f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="FONT DISPLAY">
      <data key="d0">EVENT</data>
      <data key="d1">Font display is a CSS property that defines how a font is displayed while it is loading, with options like 'auto', 'block', 'swap', 'fallback', or 'optional'.</data>
      <data key="d2">f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="FALLBACK FONT">
      <data key="d0">EVENT</data>
      <data key="d1">Fallback fonts are alternative fonts that are used if the primary font fails to load, ensuring text remains readable.</data>
      <data key="d2">f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="CSS VARIABLE">
      <data key="d0">EVENT</data>
      <data key="d1">CSS variables are entities in CSS that allow for the reuse of values throughout a stylesheet, enhancing maintainability and flexibility.
CSS Variables are used to define reusable values in CSS, allowing for dynamic styling and easier maintenance of styles across a web application.
CSS Variable is a feature in CSS that allows developers to store values that can be reused throughout a stylesheet.
CSS Variables are used in Next.js to define and manage font styles dynamically within the application.</data>
      <data key="d2">7bc622b9dda4deed82c3382772daca19,aee85ce10da1e12fe3e8ba84ec64e808,e36d6ba428fb6e6b41847dce90fde4cc,f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="VARIABLE FONT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f29e8a7f61e2c8934f86db0f78127d28</data>
    </node>
    <node id="UPGRADING TO VERSION 9">
      <data key="d0">EVENT</data>
      <data key="d1">The event describes the process of upgrading Next.js to version 9, including commands and important notes for developers.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="DYNAMIC ROUTING">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Routing is a feature in Next.js 9 that allows for automatic configuration of routes without needing a vercel.json file.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="CUSTOM APP FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The Custom App File in Next.js allows developers to override the default App component to control the page initialization.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="SOURCE SANS 3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Source Sans 3 is a sans-serif typeface that is used in web applications for its clean and modern appearance.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="GREAT VIBES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Great Vibes is a cursive font that is often used for decorative purposes in web design.
Great Vibes is a custom local font defined in the code for stylistic text presentation.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51,b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="FONTS.TS">
      <data key="d0">EVENT</data>
      <data key="d1">The fonts.ts file is used to define and manage font imports and configurations in a Next.js application.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="FONT DEFINITIONS FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A font definitions file is a structured way to manage font imports and settings in a web application.</data>
      <data key="d2">a39499341fdd66534be31b2131784b51</data>
    </node>
    <node id="VERSION 11">
      <data key="d0">EVENT</data>
      <data key="d1">Version 11 is the latest release of Next.js, introducing new features and improvements for developers.</data>
      <data key="d2">bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="@TYPES/REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @types/react package provides TypeScript definitions for React, which should also be upgraded to match the new version of React being used with Next.js.</data>
      <data key="d2">bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="DYNAMIC COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic components in Next.js no longer render a default loading state while loading, which is a change in behavior in the latest version.</data>
      <data key="d2">bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="PAGES/API">
      <data key="d0">EVENT</data>
      <data key="d1">Pages in the pages/api/ directory are now treated as API Routes, which is a change in how Next.js handles these pages.</data>
      <data key="d2">bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="@TYPES/NEXT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">bab5eb78712e4c073d8280b72cd3de79</data>
    </node>
    <node id="CLEANING DISTDIR">
      <data key="d0">EVENT</data>
      <data key="d1">Cleaning the distDir is a new default behavior in Next.js that clears the build output directory except for Next.js caches.</data>
      <data key="d2">ab49838f472483f11a1afbcaff84ad1e</data>
    </node>
    <node id="UPGRADING TO REACT 17">
      <data key="d0">EVENT</data>
      <data key="d1">Upgrading to React 17 involves changes in how JSX is transformed and requires updating the React and React-DOM packages.</data>
      <data key="d2">ab49838f472483f11a1afbcaff84ad1e</data>
    </node>
    <node id="MOMENT.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Moment.js is a JavaScript library for parsing, validating, manipulating, and displaying dates and times in JavaScript.</data>
      <data key="d2">ab49838f472483f11a1afbcaff84ad1e</data>
    </node>
    <node id="VERSION 10">
      <data key="d0">EVENT</data>
      <data key="d1">Version 10 of Next.js introduced no breaking changes and provided commands for upgrading applications to this version.</data>
      <data key="d2">60041d4c2667ea62ef90a73e1138bae6</data>
    </node>
    <node id="VERSION 12">
      <data key="d0">EVENT</data>
      <data key="d1">Version 12 of Next.js introduced several new features, including the use of the Rust-based compiler SWC for improved performance and changes to minimum Node.js and React versions.
Version 12 is the previous release of Next.js, which has been upgraded to version 13.
Version 12 of Next.js introduced several features and improvements for building applications.
Version 12 of Next.js introduced several features and improvements, including the new Image Component and experimental features for routing.</data>
      <data key="d2">016bf1f47e649cd8112b488d5c847dcc,564b1122ed77a335ef83dd856be6b406,60041d4c2667ea62ef90a73e1138bae6,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="BUN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bun is a modern JavaScript runtime that aims to be fast and efficient, providing an alternative for running JavaScript applications.</data>
      <data key="d2">60041d4c2667ea62ef90a73e1138bae6</data>
    </node>
    <node id="VERSION 13">
      <data key="d0">EVENT</data>
      <data key="d1">Version 13 is the latest release of Next.js, introducing new features and improvements over version 12.
Version 13 of Next.js introduced new features, including the App Router and improvements to existing components like Image and Link.
Version 13 of Next.js introduced the App Router and various enhancements to existing components, improving performance and usability.</data>
      <data key="d2">016bf1f47e649cd8112b488d5c847dcc,564b1122ed77a335ef83dd856be6b406,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="NEXT/LINK">
      <data key="d0">EVENT</data>
      <data key="d1">The next/link component is used for client-side navigation between pages in a Next.js application.</data>
      <data key="d2">564b1122ed77a335ef83dd856be6b406</data>
    </node>
    <node id="NEXT/SCRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">The next/script component is used to manage and optimize the loading of third-party scripts in Next.js applications.</data>
      <data key="d2">564b1122ed77a335ef83dd856be6b406</data>
    </node>
    <node id="FONT OPTIMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Font optimization in Next.js allows developers to customize font loading for better performance and privacy.
Font Optimization is a feature in Next.js that helps improve font loading performance and privacy.
Font Optimization in Next.js refers to the automatic optimization of font loading to improve performance and privacy.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421,564b1122ed77a335ef83dd856be6b406,7e52aca588d432140f210661ae169677</data>
    </node>
    <node id="ROOT LAYOUT">
      <data key="d0">EVENT</data>
      <data key="d1">The Root Layout is a special layout in Next.js that applies to all routes inside the app directory.
The Root Layout is a React Server Component in Next.js that wraps all pages in an application, defining the overall structure of the HTML document.
The root layout is a top-most layout in the Next.js app directory used to define the &lt;html&gt; and &lt;body&gt; tags and other globally shared UI.
The Root Layout is a React Server Component in Next.js that wraps all pages in an application.
The root layout in Next.js is a React Server Component that wraps all pages in an application, similar to the index.html file in Create React App.

Root Layout is the main layout in Next.js where scripts can be loaded for all routes in the application.
Root Layout is the top-level component in a React application that wraps all other components, often used for layout and styling purposes.
The Root Layout is a component in Next.js that applies global styles to every route in the application.
Root Layout is a component that serves as the main layout for the application, rendering children components and context providers.
The root layout is a component in Next.js that defines the overall structure of the application, including HTML and body tags.</data>
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe,45fc1e950172cd0fb4a7f0162afae421,6ebc8c74b9b797357659151a46693a88,8b55191578f60b2d2fac3ae2f4d05b2e,95c2ea5a0f820f012ba0ea521843d34d,a19a92a20fca1ccc164ea11570a4b26a,a5566406ae5db585eb3829f4a25e7025,a67099d1f0ea66a70c07e9595443231a,d405678be18c78d7d78d7a6521a58a56,d8317c2b832a421e629375219f74e12f,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="MIGRATING">
      <data key="d0">EVENT</data>
      <data key="d1">Migrating refers to the process of moving from the pages directory to the app directory in Next.js.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421</data>
    </node>
    <node id="GETSERVERPROPS">
      <data key="d0">EVENT</data>
      <data key="d1">getServerSideProps is a data fetching function in Next.js that has been replaced in the app directory.
getServerSideProps is a data fetching method in Next.js that allows for server-side rendering of pages with dynamic data.
getServerSideProps is a function in Next.js that fetches data on the server for a page before rendering it.
getServerSideProps is a Next.js function that allows for server-side rendering of pages, fetching data on each request.
getServerSideProps is a function in Next.js that allows server-side rendering of pages with personalized user data.
getServerSideProps is a function used to fetch data on the server and pass it as props to a React component.</data>
      <data key="d2">28003ee6fb44c56e3a5598cedee41343,3678e68072101ac922b838851eaa8465,391895fc365f2f2512a45ea503fbfa86,45fc1e950172cd0fb4a7f0162afae421,56ab21d16e9b86cd9d551ec941e65b04,8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </node>
    <node id="GENERATESTATICPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">generateStaticParams is a new API in Next.js that replaces getStaticPaths in the app directory.
The generateStaticParams event is a function used in the app directory to define dynamic route parameters for pre-rendering.
A function that generates static parameters for dynamic routes in a web application, returning an array of objects with specific properties for routing purposes.

generateStaticParams is a function that simplifies the process of returning route parameters in the app directory.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421,8139e8b58a97f9e03ee08d82f3d2858a,9e3cdf604b5960851cad4f9699d3ba89,db6f031874217fc604efd6e2661bace2,dea59f788f9645dcf527f4f5f4f12ae7</data>
    </node>
    <node id="ERROR FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The error.js file is a new special file in Next.js that replaces pages/_error.js for handling errors.
An error file in Next.js allows developers to handle unexpected runtime errors and display fallback UI to users.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421,a046fdf9fbebaa56c0d37da25e453974</data>
    </node>
    <node id="NOT FOUND FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The not-found.js file is a new special file in Next.js that replaces pages/404.js for handling not found pages.</data>
      <data key="d2">45fc1e950172cd0fb4a7f0162afae421</data>
    </node>
    <node id="API ROUTES">
      <data key="d0">EVENT</data>
      <data key="d1">API Routes in Next.js have been replaced with the route.js special file in the app directory.
API Routes are server-side functions that can be called from the client-side to handle requests in Next.js applications.
Endpoints in a web application that handle requests and responses, allowing for operations such as setting and managing user sessions.

API Routes in Next.js allow developers to create API endpoints as part of their application, enabling server-side functionality.
API Routes in Next.js allow developers to create server-side endpoints for handling requests and data mutations securely.
API Routes are a feature in Next.js that allows developers to create API endpoints within their application.
API Routes in Next.js are endpoints that allow developers to build server-side functionality directly into their applications, which have been replaced with new route handling in the app directory.
API Routes are endpoints in a web application that allow for server-side logic and data fetching without a front-end interface.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51,0fec562f1c16117484e5946f3f2df826,45fc1e950172cd0fb4a7f0162afae421,66c478df0b5dc48b45a6c5e00867576d,6ebc8c74b9b797357659151a46693a88,7a1bd3f71b0a9aadbba7495339a8b723,7b0e16fa06f15b959c34b3d3401845e8,8139e8b58a97f9e03ee08d82f3d2858a,9755f3d6b34a8ac25f409b1d0fe38854</data>
    </node>
    <node id="PAGES DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The pages directory in Next.js is where traditional page components are stored, allowing for routing based on file structure.
The pages directory is a structure in a web application that contains static pages and routing logic, allowing for pre-rendering of content at build time.
The pages directory in Next.js is where page components are stored, allowing for automatic routing based on file names.
The pages directory in a Next.js application contains files that define routes and components for server-side rendering and static site generation.
The pages directory is a structure in a web application that organizes static pages and their associated logic.
The pages directory in Next.js is used for traditional routing and works alongside the app directory for incremental adoption of new features.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,28003ee6fb44c56e3a5598cedee41343,7a1bd3f71b0a9aadbba7495339a8b723,8023a6acc1593be80b1d65bbe4d5fb3e,8139e8b58a97f9e03ee08d82f3d2858a,db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="APP DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The app directory in Next.js is a new structure that supports server components by default and simplifies data fetching and routing.
The app directory is a structure in a web application that organizes components, pages, and data fetching logic, facilitating the development of the application.

The app directory is a structure within a Next.js project that organizes application files and components.
App directory is the main directory in a Next.js application where all components and pages are organized and stored.

The app directory is a structure in a React application where components and pages are organized, allowing for better routing and data fetching capabilities.
The app directory in a Next.js application allows colocating data fetching inside React components, optimizing the rendering process.
The app directory is a structure in a web application that organizes components and pages for better management and routing.
The app directory in Next.js is where the application components and pages are organized and structured.
The app directory in Next.js is where developers can define their application structure, including pages, layouts, and route handlers.
The app directory in Next.js defines the structure of routes and is where project files can be safely colocated without being routable unless a page.js or route.js file is added.

The app directory is a recommended structure in Next.js for organizing application files and components.</data>
      <data key="d2">28003ee6fb44c56e3a5598cedee41343,3615d6509a88bbb31eac0bc56f78c2f6,5214aa930e0680c0e176373359966818,7a1bd3f71b0a9aadbba7495339a8b723,8023a6acc1593be80b1d65bbe4d5fb3e,8139e8b58a97f9e03ee08d82f3d2858a,8a317609f77f5ace7ebd5473071b9693,8b55191578f60b2d2fac3ae2f4d05b2e,9f6dc0f379759d79c664c445c0051202,a332c6db30f7b29cd4dcb1117bd6eab3,a5566406ae5db585eb3829f4a25e7025,d8317c2b832a421e629375219f74e12f,db6f031874217fc604efd6e2661bace2,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="ROUTING HOOKS">
      <data key="d0">EVENT</data>
      <data key="d1">Routing hooks in Next.js provide functionality for navigating and managing routes within the app directory.
Routing Hooks are functions in Next.js that help manage navigation and routing within the application, providing access to the current route and parameters.</data>
      <data key="d2">8023a6acc1593be80b1d65bbe4d5fb3e,8a317609f77f5ace7ebd5473071b9693</data>
    </node>
    <node id="DOMAINLOCALES">
      <data key="d0">EVENT</data>
      <data key="d1">Domain locales are specific locales associated with a domain, used to manage internationalization in web applications.</data>
      <data key="d2">56ab21d16e9b86cd9d551ec941e65b04</data>
    </node>
    <node id="ASPATH">
      <data key="d0">EVENT</data>
      <data key="d1">asPath is a property in Next.js that represents the actual path of the page, including the query string.</data>
      <data key="d2">56ab21d16e9b86cd9d551ec941e65b04</data>
    </node>
    <node id="ISREADY">
      <data key="d0">EVENT</data>
      <data key="d1">isReady is a property in Next.js that indicates whether the router is ready to be used, particularly in the context of client-side navigation.</data>
      <data key="d2">56ab21d16e9b86cd9d551ec941e65b04</data>
    </node>
    <node id="PROJECTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Projects refer to the various tasks or initiatives that are being managed or executed within the application, often involving data fetching and rendering components.
</data>
      <data key="d2">28003ee6fb44c56e3a5598cedee41343,db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="INDEX">
      <data key="d0">EVENT</data>
      <data key="d1">The Index event represents the main entry point of the application where projects are fetched and displayed to the user.</data>
      <data key="d2">db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="POST">
      <data key="d0">EVENT</data>
      <data key="d1">The Post event refers to the action of displaying a specific post fetched from the server, typically involving dynamic routing based on the post ID.

Post refers to a dynamic route in the application that displays individual blog posts based on a unique slug.
Post refers to the content created and managed within a Next.js application, typically displayed on a PostPage.
A post is a piece of content that can be displayed on a website, often containing text, images, or other media.
A post that is being fetched and displayed in a React application
POST is an HTTP method supported by Next.js for sending data to a server to create or update a resource.
Post is a custom type defined in the schema that represents a data model for storing records in DynamoDB.
A post is an item created in the Amplify application that contains attributes such as title, content, author, ups, downs, and version.
A post is a piece of content created by an author, typically identified by a postId, and stored in a database like DynamoDB.
A Post is a custom type defined in the Amplify schema that includes attributes like title, content, and author.
A Post is a data model in the Amplify framework that represents a user-generated content item, including fields like id, owner, postname, and content.
A Post is a data model in AWS Amplify that represents a user's content, which can be created, read, updated, and deleted based on authorization rules.
Post is a data model that represents content created by users, which can include titles and body text.
The Post is a model that contains content and can have multiple relationships with Tags and Persons.
A post is a content piece created by a user, which can be authored or edited by individuals in the system.
</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,02d5f971b1d69adbfdf2a0cfc42447f7,03e3453a6652ab6e0dd2abb24a0199b1,06d355f57266e139e2c21ab1cbe5f8e6,249a768c4964d383be47267af810ece7,287574c9a7234d49dcc89de08710c55e,4189c0e92cbda0cbd95165143d5ba488,55e07f6f599d31bd6bca8ce0ea6a1072,5acf474a9e428eea738206bbcbd17f29,8139e8b58a97f9e03ee08d82f3d2858a,a332c6db30f7b29cd4dcb1117bd6eab3,b2d8cdaec278d34da4fff33772135cfc,d7f9d6d81c47c8666bdbe05c89629447,db6f031874217fc604efd6e2661bace2,dc10462a75be57d14f05bf6a26ba9731,ef896aab67cf49595a11632404eaa374,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="DYNAMICPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">The dynamicParams event controls how dynamic segments are handled in the app directory, determining whether they are generated on demand or return a 404.
dynamicParams is a configuration property that controls how dynamic segments are handled in the app directory.</data>
      <data key="d2">8139e8b58a97f9e03ee08d82f3d2858a,db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="INCREMENTALSTATICREGENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Incremental Static Regeneration refers to the ability to automatically regenerate a page after a specified amount of time, allowing for updated content without a full rebuild.</data>
      <data key="d2">db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="GETPROJECTS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">db6f031874217fc604efd6e2661bace2</data>
    </node>
    <node id="TAILWIND CSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tailwind CSS is a utility-first CSS framework for creating custom designs without leaving your HTML.
Tailwind CSS is a utility-first CSS framework that allows for rapid UI development with a focus on customization and responsiveness.
Tailwind CSS is a utility-first CSS framework that allows developers to create custom designs without leaving their HTML, working exceptionally well with Next.js.
Tailwind CSS is a utility-first CSS framework that allows developers to style applications using predefined classes.
Tailwind CSS is a utility-first CSS framework for creating custom designs without having to leave your HTML.

Tailwind CSS is a utility-first CSS framework for creating custom designs without having to leave your HTML.
Tailwind CSS is a utility-first CSS framework for creating custom designs without having to leave your HTML.
Tailwind CSS is a utility-first CSS framework that allows developers to create custom designs without having to leave their HTML, promoting a more efficient styling process.
Tailwind CSS is a utility-first CSS framework for creating custom designs without having to leave your HTML.
Tailwind CSS is a utility-first CSS framework that allows for rapid custom designs by composing utility classes.
Tailwind CSS is a utility-first CSS framework that is included by default in Next.js applications for styling.</data>
      <data key="d2">2f935bf8dd94b80e38c90109f4e620a3,3a82472230692a8c3ac8444f7738b625,66669d057195f54843266efcffb93a3b,7a1bd3f71b0a9aadbba7495339a8b723,7bc622b9dda4deed82c3382772daca19,816401f1962be5373b03365c403e3a92,8b55191578f60b2d2fac3ae2f4d05b2e,a19a92a20fca1ccc164ea11570a4b26a,d405678be18c78d7d78d7a6521a58a56,dc07058d355dcb6432e4280af3eba3d0,e36d6ba428fb6e6b41847dce90fde4cc,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="GLOBAL STYLESHEETS">
      <data key="d0">EVENT</data>
      <data key="d1">Global stylesheets in Next.js are styles that can be applied across the entire application, enhancing the visual consistency of the UI.</data>
      <data key="d2">7a1bd3f71b0a9aadbba7495339a8b723</data>
    </node>
    <node id="REACT SUSPENSE">
      <data key="d0">EVENT</data>
      <data key="d1">React Suspense is a feature that allows developers to manage loading states in React applications, improving user experience during data fetching.
React Suspense is a feature that allows components to wait for something before rendering, which is supported in Next.js for better loading states.
React Suspense is a feature in React that allows components to "wait" for something before rendering, such as data fetching or loading states, improving user experience during loading times.
React Suspense is a feature in React that allows developers to display a fallback UI while waiting for asynchronous operations to complete, such as fetching video URLs.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66,7a1bd3f71b0a9aadbba7495339a8b723,f1523e8a9fafd09d83cab1c6c14f3955,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="METADATA API">
      <data key="d0">EVENT</data>
      <data key="d1">The Metadata API in Next.js allows developers to manage metadata for their web pages, improving SEO and shareability.
Metadata API is a feature in Next.js that allows developers to manage metadata for their web pages, improving SEO and shareability.
The Metadata API is a feature in Next.js that allows developers to manage metadata for web applications efficiently.
The Metadata API in Next.js allows developers to manage metadata for their applications, including titles and descriptions.
The Metadata API in Next.js allows developers to manage metadata for their web pages, improving SEO and shareability of the content.
Metadata API is used to improve Search Engine Optimization (SEO) by adding page titles, descriptions, and more.
The Metadata API in Next.js allows developers to modify the &lt;head&gt; element of a page for better SEO and social media presentation.
The Metadata API in Next.js allows developers to modify HTML elements like title and meta tags dynamically, enhancing SEO and page information management.</data>
      <data key="d2">1d855e055624fb34345331017d371137,455e168c432979d018ea3d145e2547b5,4dfb13dff74e4dc45c19d4d71fe1a443,93cb0a5e111f219ec555f33bcd068d05,9f6dc0f379759d79c664c445c0051202,aaea03d7a1385785fae028f24c52f8a5,d8317c2b832a421e629375219f74e12f,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="BUILD OUTPUT DIRECTORY">
      <data key="d0">EVENT</data>
      <data key="d1">The build output directory is where the compiled files of a Next.js application are stored, specified in the configuration file.
The build output directory is the location where the compiled files of a project are stored after the build process.</data>
      <data key="d2">95c2ea5a0f820f012ba0ea521843d34d,d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="ROOT LAYOUT COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Root Layout Component is a React component that defines the layout structure for all pages in a Next.js application.</data>
      <data key="d2">d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="INDEX.HTML">
      <data key="d0">EVENT</data>
      <data key="d1">The index.html file is the main HTML file in a traditional React application, which is replaced by the Root Layout in Next.js.

The index.html file is the main HTML file in a web application that serves as the entry point for the application, containing the root div where the React app is rendered.
The creation of index.html is an event in the tutorial that involves setting up a webpage framework to display a map using Amplify Geo and MapLibre.
The index.html file is the main HTML document that serves as the entry point for a web application, containing the structure and content of the webpage.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,25014b83cc85c29d210c21fb3ab4b816,455e168c432979d018ea3d145e2547b5,9f6dc0f379759d79c664c445c0051202,d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="GLOBAL CSS FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A global CSS file is used in a Next.js application to apply styles across all components and pages.</data>
      <data key="d2">d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="TAILWIND">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tailwind is a utility-first CSS framework that can be integrated into Next.js applications for styling.
Tailwind is a utility-first CSS framework that provides a set of classes for styling applications, including support for typography in markdown files.
Tailwind is a utility-first CSS framework that can be used in Next.js applications for styling components efficiently.
Tailwind is a utility-first CSS framework for creating custom designs without having to leave your HTML.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,4e07cca41acd33806d13242f5e21f621,a4afb71ec5010173b514ca4604c40002,d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="NEXT.JS DEPENDENCY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d8317c2b832a421e629375219f74e12f</data>
    </node>
    <node id="CRA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Create React App (CRA) is a tool that sets up a new React project with a good default configuration.
</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9,ab869c819df53e1e9e3adebf6a4234a2</data>
    </node>
    <node id="AUTOPREFIXER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Autoprefixer is a PostCSS plugin that adds vendor prefixes to CSS rules using values from Can I Use.
Autoprefixer is a PostCSS plugin that automatically adds vendor prefixes to CSS rules to ensure compatibility across different browsers, including older versions like IE11.
</data>
      <data key="d2">78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,ab869c819df53e1e9e3adebf6a4234a2</data>
    </node>
    <node id="ENTRYPOINT PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The entrypoint page in Next.js serves as the main access point for the application, similar to the index file in Create React App.</data>
      <data key="d2">ab869c819df53e1e9e3adebf6a4234a2</data>
    </node>
    <node id="POSTCSS.CONFIG.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The postcss.config.js file is used to configure PostCSS plugins for processing CSS in a Next.js application.</data>
      <data key="d2">ab869c819df53e1e9e3adebf6a4234a2</data>
    </node>
    <node id="DYNAMIC IMPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic import is a feature in JavaScript that allows for loading modules asynchronously, used in Next.js to load components only when needed.
Dynamic import is a feature in JavaScript that allows modules to be loaded asynchronously, improving performance in Next.js applications.

Dynamic import is a feature in JavaScript that allows modules to be loaded asynchronously, improving performance by reducing the initial load time.</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,9f6dc0f379759d79c664c445c0051202,ab869c819df53e1e9e3adebf6a4234a2,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </node>
    <node id="GLOBAL CSS">
      <data key="d0" />
      <data key="d1">
Global CSS refers to styles that are applied across the entire application, ensuring a consistent look and feel.
Global CSS refers to styles that are applied across the entire application, as opposed to locally scoped styles.
Global CSS is a traditional CSS approach that applies styles globally but can lead to larger CSS bundles.</data>
      <data key="d2">7bc622b9dda4deed82c3382772daca19,a9a858ea7abac3fe79fa759ea8171597,ab869c819df53e1e9e3adebf6a4234a2,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="VITE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vite is a build tool that provides a faster and leaner development experience for modern web projects, which can be migrated to Next.js for enhanced features.
Vite is a build tool that provides a faster and leaner development experience for modern web projects, often compared to Next.js.
Vite is a build tool that provides a fast development environment for modern web projects.
Vite is a build tool that is mentioned in the context of migrating to Next.js from a Vite application.
Vite is a build tool that provides a faster and leaner development experience for modern web projects.
Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.
Vite is a build tool that provides a faster and leaner development experience for modern web projects, often used in conjunction with frameworks like React.
Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.
Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.
Vite is a build tool that provides a fast development environment for modern web projects.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,374f53811273c5cffe3558d227a0e4ec,39e13e59ba48563c8ec1c8c813746dac,9da317a323ff76913285228d8243413e,9f6dc0f379759d79c664c445c0051202,b6c19fc60714c90b16c67bd7df9573f9,b9eb6db49e67c5d8dd0f95139d465c50,c1845aec41d031b5a72f6f472ab4a5f2,f0a75595032bbb539a5844dc72a00955,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="REACT_ROUTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Router is a standard library for routing in React applications, which can be replaced by the Next.js App Router for better performance and features.</data>
      <data key="d2">f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="HTTP">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP (Hypertext Transfer Protocol) is the foundation of data communication on the web, which Next.js utilizes for server-side rendering and API routes.
HTTP is a protocol used for transmitting data over the web, commonly used in web applications for requests and responses.
HTTP (Hypertext Transfer Protocol) is an application protocol for distributed, collaborative, hypermedia information systems, used for transmitting data over the internet.
HTTP is the protocol used for transmitting data over the internet, which governs how messages are formatted and transmitted.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335,2e0b7ff508cb8313a540ecc1a356120e,4da3554b7826cf4b6dd608127da53568,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="SERVER-SIDE RENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">Server-side rendering is a technique used in Next.js to render web pages on the server before sending them to the client, improving performance and SEO.
Server-side Rendering is a Next.js feature that allows pages to be rendered on the server for improved performance and SEO.

Server-side rendering is a technique where the HTML of a web page is generated on the server rather than in the browser, allowing for faster initial page loads and better SEO.
Server-side rendering is a method of rendering web pages on the server rather than in the browser, allowing for faster initial page loads and better SEO.
Server-side Rendering (SSR) is a method where the HTML of a page is generated on each request, allowing for dynamic content.
Server-side Rendering (SSR) is a technique where HTML is generated on each request, allowing for dynamic content delivery.
Server-side Rendering is a pre-rendering method in Next.js where HTML is generated on each request, allowing for dynamic content.
Server-side rendering is a technique used in web development where the server generates the full HTML for a page on each request.
Server-side rendering (SSR) is a technique used in web development where the server generates the full HTML for a page on each request, improving performance and SEO.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290,249a768c4964d383be47267af810ece7,3678e68072101ac922b838851eaa8465,4fde2e7cc7218ba6b93e1b100e10fd38,66fea93bb642287d13f3a25b8b3e0083,9bc82a2671446cca168796fea771ecad,9da317a323ff76913285228d8243413e,c8d58fd330c4f217c52b50590414e517,d96f8e049ce9a691971e1a92b5b556af,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="STATIC SITE GENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Static site generation is a feature of Next.js that allows pages to be pre-rendered at build time, enhancing loading speed and performance.
Static site generation is a technique where web pages are pre-rendered at build time, resulting in faster load times and improved performance.

Static Site Generation is a method of pre-rendering web pages at build time, allowing for faster load times and improved performance.
Static site generation (SSG) is a method of pre-rendering web pages at build time, resulting in faster load times and improved performance.</data>
      <data key="d2">4fde2e7cc7218ba6b93e1b100e10fd38,66fea93bb642287d13f3a25b8b3e0083,98b8f4a199a3050f92608604cd0974b2,b61989d8657d5b33a55c584f46e7d436,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="CODE SPLITTING">
      <data key="d0">EVENT</data>
      <data key="d1">Code splitting is a feature in Next.js that allows loading parts of the application on demand, improving performance by reducing initial load time.</data>
      <data key="d2">f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="GITIGNORE">
      <data key="d0">EVENT</data>
      <data key="d1">The .gitignore file is used to specify files and directories that should be ignored by Git, often including build artifacts in Next.js projects.
The .gitignore file specifies intentionally untracked files to ignore in a Git repository.
The .gitignore file specifies intentionally untracked files that Git should ignore, such as build artifacts and environment files.</data>
      <data key="d2">9da317a323ff76913285228d8243413e,c1845aec41d031b5a72f6f472ab4a5f2,f33afd1ad915755b5724c85e5bdb3c98</data>
    </node>
    <node id="ROOTLAYOUT">
      <data key="d0">EVENT</data>
      <data key="d1">RootLayout is a component in Next.js that defines the structure of the HTML document for the application, including the head and body sections.
RootLayout is a component in a Next.js application that serves as the main layout for the application, managing the structure of the HTML document and rendering child components within a div with id 'root'.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,9f6dc0f379759d79c664c445c0051202</data>
    </node>
    <node id="FAVICON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Favicon is an icon associated with a particular website or web page, displayed in the browser's address bar or tab.
A favicon is an icon associated with a particular website or web page, typically displayed in the browser's address bar or next to the page's title in a list of bookmarks.
</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,9f6dc0f379759d79c664c445c0051202,d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </node>
    <node id="PUBLIC URL">
      <data key="d0">EVENT</data>
      <data key="d1">A public URL is a web address that can be accessed by anyone on the internet, often used for serving static assets in web applications.
A public URL is a web address that can be accessed by anyone, often used for serving static assets like images in web applications.
The public URL is the accessible path for static assets in a web application, allowing images and other files to be served to users.</data>
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e,9da317a323ff76913285228d8243413e,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </node>
    <node id="CIRCLECI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CircleCI is a continuous integration and delivery platform that automates the software development process.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="TRAVIS CI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Travis CI is a continuous integration service used to build and test software projects hosted on GitHub.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="GITLAB CI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GitLab CI is a continuous integration and deployment tool built into GitLab that automates the software development lifecycle.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="NETLIFY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Netlify is a platform for deploying and hosting static websites and web applications.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="AWS CODEBUILD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="GITHUB ACTIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GitHub Actions is a CI/CD feature that allows automation of workflows directly in GitHub repositories.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="BITBUCKET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bitbucket is a web-based version control repository hosting service owned by Atlassian.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="HEROKU">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Heroku is a cloud platform as a service (PaaS) that enables companies to build, run, and operate applications entirely in the cloud.
</data>
      <data key="d2">7cf992845bf79c5ec4ae2614617a79f4,f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="AZURE PIPELINES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Azure Pipelines is a cloud service that supports continuous integration and continuous delivery (CI/CD) to build, test, and deploy applications.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="JENKINS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Jenkins is an open-source automation server that enables developers to build, test, and deploy their software.</data>
      <data key="d2">f4fd4edd5d94e2931678672f66729691</data>
    </node>
    <node id="NGINX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Nginx is a web server that can be used to serve static files and configure rewrites for web applications.
Nginx is a high-performance web server that can be used to serve static files and handle reverse proxying, load balancing, and more.
Nginx is a high-performance web server that can also be used as a reverse proxy, load balancer, and HTTP cache.
Nginx is a high-performance web server and reverse proxy server used for serving web applications and handling load balancing.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61,e871ceb5e34368061b569a8df8c57c33</data>
    </node>
    <node id="OUT FOLDER">
      <data key="d0">EVENT</data>
      <data key="d1">The out folder is generated by Next.js after running the build process, containing the static HTML/CSS/JS assets for the application.
The out folder is generated by Next.js during the build process, containing static HTML/CSS/JS assets for the application.</data>
      <data key="d2">e871ceb5e34368061b569a8df8c57c33,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="PACKAGE-LOCK.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">The package-lock.json file is used to determine the cache validity for the npm install process in the build stage.
Package-lock.json is a file that locks the versions of dependencies in a Node.js project, ensuring consistent installs across environments, used in AWS Amplify applications.</data>
      <data key="d2">280c36ab0ae3dc66fffd099a273b96ab,e871ceb5e34368061b569a8df8c57c33</data>
    </node>
    <node id="HTML FILE">
      <data key="d0">EVENT</data>
      <data key="d1">HTML files are generated by Next.js for each route during the static export process, allowing for faster page loads and reduced JavaScript usage.</data>
      <data key="d2">e871ceb5e34368061b569a8df8c57c33</data>
    </node>
    <node id="IMAGE OPTIMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Image optimization is a process supported by Next.js through next/image, allowing for efficient loading of images in applications.
Image optimization is a feature in Next.js that enhances the performance of images in applications, ensuring they are served efficiently.
Image Optimization is a feature in Next.js that allows for the efficient loading and serving of images in web applications.
Image Optimization is a feature in Next.js that automatically optimizes images for faster loading times and better performance.</data>
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,e871ceb5e34368061b569a8df8c57c33,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="STATIC EXPORT">
      <data key="d0" />
      <data key="d1">
Static export refers to the process of generating a static version of a Next.js application that can be served without a server, suitable for hosting on any web server that serves static assets.
Static Export is a method in Next.js that allows applications to be generated as static HTML files, which can be served without a server.</data>
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,e871ceb5e34368061b569a8df8c57c33</data>
    </node>
    <node id="MULTI-ZONES">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-Zones is an approach in Next.js that allows the separation of a large application into smaller applications, improving build times and resource management.
Multi-Zones is an approach in Next.js for managing micro-frontends by separating a large application into smaller applications that serve specific paths, improving build times and code management.
Multi-Zones is a feature in Next.js that allows multiple applications to be served on the same domain, enabling independent development and deployment.</data>
      <data key="d2">20652ea1750ad5513b326c308672d886,cb4791e4249947cbab8022435c79aa13,ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </node>
    <node id="404.HTML">
      <data key="d0">EVENT</data>
      <data key="d1">404.html is the error page displayed when a user attempts to access a non-existent page within the Next.js application.
404.html is an error page that is displayed when a requested resource is not found on the server.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,cb4791e4249947cbab8022435c79aa13</data>
    </node>
    <node id="ASSETS">
      <data key="d0">EVENT</data>
      <data key="d1">Assets in Next.js refer to static files like JavaScript and CSS that are served to enhance the application's functionality and appearance.</data>
      <data key="d2">cb4791e4249947cbab8022435c79aa13</data>
    </node>
    <node id="REWRITE RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Rewrite rules are configurations in Next.js that direct specific paths to different zones or applications within the multi-zones setup.</data>
      <data key="d2">cb4791e4249947cbab8022435c79aa13</data>
    </node>
    <node id="PRODUCTION CHECKLIST">
      <data key="d0">EVENT</data>
      <data key="d1">The Production Checklist is a set of best practices and optimizations to consider before deploying a Next.js application to ensure optimal performance and security.
The Production Checklist is a set of best practices and optimizations recommended for deploying Next.js applications to ensure performance, security, and user experience.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="BUILDING YOUR APPLICATION">
      <data key="d0">EVENT</data>
      <data key="d1">Building Your Application is a guide for deploying Next.js applications, detailing various deployment options and best practices.</data>
      <data key="d2">9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="CODE-SPLITTING">
      <data key="d0">EVENT</data>
      <data key="d1">Code-splitting is an optimization technique used in Next.js that allows the application to load only the necessary code for the current page, improving performance.</data>
      <data key="d2">9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="PREFETCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Prefetching is a feature in Next.js that preloads the next page in the background when a link enters the user's viewport, making navigation faster.
Prefetching is a technique used to load resources in advance, improving the speed of navigation by preloading shared UI components.
Prefetching is the process of loading shared UI components before they are needed, improving navigation speed when the &lt;Form&gt; becomes visible.
Prefetching is a technique used in Next.js to load resources in advance, improving the speed of navigation between pages.
Prefetching is a technique used to load resources in advance, improving the user experience by reducing load times when navigating to a new route.</data>
      <data key="d2">439d5be2d39a5b9cedb135d149974680,7ad571c896064ee6e36a4acd93898e88,9bc82a2671446cca168796fea771ecad,c55d8ff0ea71716df1fdfba115d52035,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="AUTOMATIC STATIC OPTIMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Automatic Static Optimization is a feature in Next.js that allows pages without blocking data requirements to be pre-rendered and served efficiently.
Automatic Static Optimization is a feature of Next.js that allows pages to be pre-rendered if they have no blocking data requirements.</data>
      <data key="d2">249a768c4964d383be47267af810ece7,9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="CORE WEB VITALS">
      <data key="d0">EVENT</data>
      <data key="d1">Core Web Vitals are a set of metrics that measure the user experience of a website, focusing on loading performance, interactivity, and visual stability.
Core Web Vitals are a set of metrics that Google considers essential for delivering a good user experience on the web.
Core Web Vitals are metrics that help understand user experience on websites.
Core Web Vitals are a set of metrics that measure the user experience of a website, focusing on loading performance, interactivity, and visual stability.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9,4baf287e38f64339e2ce2ed9f18befe3,9bc82a2671446cca168796fea771ecad,aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="LIGHTHOUSE">
      <data key="d0">EVENT</data>
      <data key="d1">Lighthouse is an open-source tool for improving the quality of web pages, providing audits for performance, accessibility, and SEO.</data>
      <data key="d2">9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="ANALYTICS">
      <data key="d0">EVENT</data>
      <data key="d1">Analytics in Vercel provides insights into application traffic, including unique visitors and page views, helping developers understand user engagement.
Analytics refers to the measurement and reporting of performance metrics in web applications, which can be managed through hooks or services like Vercel.
The @analytics slot in Next.js is a designated area for handling analytics-related routes and components.
Analytics refers to the systematic computational analysis of data, which in this context relates to tracking user interactions and generating insights in Amazon Personalize.
Analytics refers to the systematic computational analysis of data or statistics, in this context, it involves tracking user behaviors and events in applications.
Analytics is a category in AWS Amplify that allows developers to collect and analyze user data to improve applications.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926,6741df7802dff57e070b002915d9590a,7b388f79ffb6d5d09b2f36b2618f109d,9435f5063dc16afb92c8c68706b77d2b,99d758fe4e77c64e3d6461268ba8b6d4,9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="SPEED INSIGHTS">
      <data key="d0">EVENT</data>
      <data key="d1">Speed Insights offers real-world performance insights based on visitor data, helping developers assess how their website performs in practice.</data>
      <data key="d2">9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="LOGGING">
      <data key="d0">EVENT</data>
      <data key="d1">Logging in Vercel provides runtime and activity logs to help developers debug issues and monitor application performance in production.
Logging in Next.js allows developers to configure the logging level and control what is logged during development.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,9bc82a2671446cca168796fea771ecad</data>
    </node>
    <node id="AWS S3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS S3 is a scalable storage service provided by Amazon Web Services for storing and retrieving any amount of data.
AWS S3 (Amazon Simple Storage Service) is a scalable object storage service offered by Amazon Web Services for storing and retrieving any amount of data at any time.
AWS S3 (Amazon Simple Storage Service) is a scalable object storage service offered by Amazon Web Services for data storage and retrieval.</data>
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61</data>
    </node>
    <node id="KUBERNETES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications.
Kubernetes is an open-source container orchestration platform for automating application deployment, scaling, and management.
Kubernetes is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications.
</data>
      <data key="d2">4f1b35d4044fdc993b02fcfb2db35bd6,7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61</data>
    </node>
    <node id="APPLICATION DEPLOYMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Application deployment refers to the process of making an application available for use, which can involve various methods such as managed services or self-hosting.</data>
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342</data>
    </node>
    <node id="NODE.JS SERVER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7b6d1725bb07f6076bb8010d535ae342</data>
    </node>
    <node id="CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">Cache refers to the storage of data for quick access, which is a key feature in Next.js for improving performance.
Cache is a storage layer that temporarily holds data to reduce access time and improve performance in applications.
Cache refers to the storage of data to improve performance and reduce loading times in Next.js applications.
Caching is the process of storing copies of files or data in a cache to reduce access time and improve performance.
Cache refers to the storage of fetched data to improve performance and reduce load times in web applications.
Cache refers to the storage of data for quick access, which is a significant aspect of optimizing performance in Next.js applications.
Cache refers to the storage of data to speed up retrieval and improve performance in applications, particularly in web development.
Caching is a process that stores information to improve performance, particularly in the context of ESLint processing files.
Cache refers to the storage of data in a temporary location to improve retrieval speed and efficiency in web applications.
Cache refers to the storage of data in a way that allows for faster retrieval, often used in web applications to improve performance by storing previously fetched data.
Cache is a mechanism used in Next.js to store data temporarily to improve the speed of data retrieval and reduce server load.
Cache is a mechanism for storing data temporarily to reduce the time taken to access it
Cache is a mechanism used in Next.js to store responses for faster data retrieval and improved performance.
Caching is a technique used to store copies of files or data in a cache to reduce access time and improve performance.</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,20652ea1750ad5513b326c308672d886,28003ee6fb44c56e3a5598cedee41343,4ce3b8264c29bdceda24edfe6f9bda41,4f1b35d4044fdc993b02fcfb2db35bd6,52f67911efe49d48e703ba654f23728e,72e1433a8550144aaf1d1fd8f3cb3774,7481573bcc2c3c6d105c0bf358bec2e6,98b8f4a199a3050f92608604cd0974b2,af00e01481cac23e3b67c635215254ab,b0ea8bc9e77f37505a6e3b25a48b4dbb,c38e2432510adf26b03148bb29ed9dda,daf474d256367130307c452111474f61,ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="DYNAMIC RENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic rendering is a technique used in Next.js to serve different content to different users based on their requests.
Dynamic rendering is a technique where content is generated on-the-fly based on user requests, often used to enhance performance and security.
Dynamic Rendering is a technique where web pages are rendered on the server for each request, allowing for real-time data updates and interactions.
Dynamic Rendering is a strategy where routes are rendered for each user at request time, allowing for personalized content.
Dynamic rendering is an event that occurs based on user sessions extracted from incoming requests in a React server component.</data>
      <data key="d2">4f1b35d4044fdc993b02fcfb2db35bd6,69ac19d7db15ae11c7884ce391807330,98b8f4a199a3050f92608604cd0974b2,9bd0a80f4c931386ae8f2fb0226f92cd,ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </node>
    <node id="CACHE HANDLER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A custom cache handler in Next.js allows for consistent caching across multiple instances of an application.
A cache handler in Next.js is a custom implementation that manages caching and revalidating pages, enhancing performance by reducing latency.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481,4f1b35d4044fdc993b02fcfb2db35bd6</data>
    </node>
    <node id="STATIC ASSETS">
      <data key="d0">EVENT</data>
      <data key="d1">Static assets refer to files that do not change, such as images, fonts, and scripts, which can be served by Next.js applications.
Static Assets in Next.js refer to files like images and fonts that can be served from the /public folder, allowing for efficient delivery and caching.
Static assets are files that are served to users without any server-side processing, such as images, CSS, and JavaScript files.
Static assets are files that are served as-is without any server-side processing, such as images, CSS, and JavaScript files.
Static Assets in Next.js refer to files like images, fonts, and other files served from the /public folder, which can be cached by CDN providers for efficient delivery.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee,4f1b35d4044fdc993b02fcfb2db35bd6,66669d057195f54843266efcffb93a3b,daf474d256367130307c452111474f61,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="DRAFT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Draft Mode is a feature in Next.js that allows developers to preview changes in real-time without affecting the live site.
Draft Mode is a feature in Next.js that allows users to view draft content immediately on their pages instead of waiting for static generation.

Draft Mode is a feature in Next.js that allows developers to detect and manage draft content within server components.
Draft Mode is a feature in Next.js that allows users to view draft content immediately on their pages instead of waiting for the build process.
</data>
      <data key="d2">44eb58960277cd9fc903de7625623163,4f1b35d4044fdc993b02fcfb2db35bd6,78b4dd6ed52242dca68aec48915841fe,d0c06a113103b401eb977025a69f0cee,e5f2d84dedb3e3e056a2a9003aeaa38e,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="AUTHENTICATION">
      <data key="d0">EVENT</data>
      <data key="d1">Authentication is the process of verifying a user's identity, typically involving a username and password.
Authentication is the process of verifying the identity of a user or system, often implemented in middleware to secure routes in Next.js applications.
Authentication is the process of verifying the identity of a user or system, often required to access secure areas of an application.
Authentication is the process of verifying a user's identity to protect application data.
Authentication is the process of verifying the identity of a user, typically involving a username and password.
Authentication is the process of verifying the identity of a user or system, often used in web applications to secure access to resources.
Authentication is the process of verifying the identity of a user or system, typically through credentials like usernames and passwords.
Authentication is the process of verifying the identity of a user, which is a key feature of AWS Amplify.
Authentication is the process of verifying the identity of a user, which is a key feature provided by AWS Amplify through Cognito.</data>
      <data key="d2">3b86536c72cd33dea29dc82250012d80,3bade0d5baadc8c11b8cf85372738fdd,53559278a11544ca19ad7864a7c3319c,5b2747800197a072e6dc22c54876eb35,a30c1b22a2bba568f986171e6685170b,bc4893f2f489d14f0975fa64ffca1df8,ca20f99a0d6214b86e1868fcc2725709,daf474d256367130307c452111474f61,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="SESSION MANAGEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Session management tracks a user's authentication state across requests, ensuring a seamless experience.
Session management involves maintaining the state of a user's interaction with a web application, either through stateless cookie-based or stateful database-backed methods.
Session Management is the process of maintaining a user's authenticated state across requests, involving the creation, storage, and deletion of sessions or tokens.</data>
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7,53559278a11544ca19ad7864a7c3319c,a67099d1f0ea66a70c07e9595443231a</data>
    </node>
    <node id="LOGIN FORM">
      <data key="d0">EVENT</data>
      <data key="d1">A login form is a user interface element that allows users to input their credentials to authenticate themselves.</data>
      <data key="d2">53559278a11544ca19ad7864a7c3319c</data>
    </node>
    <node id="DOCUMENT.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The _document.js file in a Next.js application is used to customize the HTML document structure, allowing for the addition of global scripts and styles.</data>
      <data key="d2">53559278a11544ca19ad7864a7c3319c</data>
    </node>
    <node id="SIGNAL HANDLING">
      <data key="d0">EVENT</data>
      <data key="d1">Signal handling refers to the process of managing system signals, such as SIGTERM or SIGINT, to perform cleanup actions before an application shuts down.</data>
      <data key="d2">53559278a11544ca19ad7864a7c3319c</data>
    </node>
    <node id="SESSION MANAGEMENT LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A library recommended for managing user sessions securely in web applications, such as iron-session or Jose.</data>
      <data key="d2">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </node>
    <node id="DATABASE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A structured collection of data that is managed and stored for session data, allowing for secure and efficient access and manipulation of user sessions.
A database is an organized collection of structured information or data, typically stored electronically in a computer system.
A database is a structured collection of data that can be queried and manipulated, often used in conjunction with server-side code to fetch and store information.
A Database is a structured collection of data that stores user information, including names, emails, and hashed passwords for authentication purposes.
A structured collection of data that can be easily accessed, managed, and updated, often used for storing session data in applications.
A database is an organized collection of data that can be accessed, managed, and updated, often used in conjunction with a Data Access Layer for data retrieval.

A database is an organized collection of structured information or data, typically stored electronically in a computer system.
A database is a structured set of data held in a computer, which the application queries to fetch posts
A database is a structured set of data held in a computer, typically accessed and managed by a database management system.

A database is a structured set of data held in a computer, especially one that is accessible in various ways.</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,0bfaadafcf31828f19e4b2657565944a,0dc4f8c1cc6105e325f2d84d2083a4c0,17ef311a22a51eef0f55aaf7d03a5ed7,1950a5e06a03170ed4dc66a00668ea47,1d939f19e04dfaa8df3664a2cd4db1f1,3538ba83bb1b1b6801c4b0e5bc962812,3678e68072101ac922b838851eaa8465,715bdaaae1cb7470e0e54efac993beb5,9755f3d6b34a8ac25f409b1d0fe38854,98961c89bf003488bbe6223bc946b205,acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="SESSION ID">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An encrypted identifier that represents a user's session, allowing the server to retrieve session data securely.
Session ID is a unique identifier used to track a user's session during the Face Liveness check process.

The session ID is a unique identifier used to track a user's session during the Face Liveness Detector process.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf,9755f3d6b34a8ac25f409b1d0fe38854,cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="OPTIMISTIC CHECKS">
      <data key="d0">EVENT</data>
      <data key="d1">A method of quickly verifying user permissions using session data stored in cookies, often used for UI operations and redirections.</data>
      <data key="d2">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </node>
    <node id="SECURE CHECKS">
      <data key="d0">EVENT</data>
      <data key="d1">A method of verifying user permissions using session data stored in the database, typically used for sensitive operations requiring higher security.</data>
      <data key="d2">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </node>
    <node id="KINDLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Kinde is a platform that provides authentication services, allowing developers to manage user identities and access control.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8</data>
    </node>
    <node id="IRON SESSION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Iron Session is a library for managing user sessions in web applications, focusing on security and ease of use.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8</data>
    </node>
    <node id="JOSE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Jose is a library for handling JSON Web Tokens (JWT) in web applications, providing tools for encoding and decoding tokens securely.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8</data>
    </node>
    <node id="COPENHAGEN BOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The Copenhagen Book is a resource that discusses security concepts and practices in web development, particularly in the context of Next.js.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8</data>
    </node>
    <node id="DATA ACCESS LAYER">
      <data key="d0">EVENT</data>
      <data key="d1">The Data Access Layer (DAL) is a design pattern used to manage data access in applications, ensuring security and efficiency in data handling.
The Data Access Layer (DAL) centralizes data requests and authorization logic in an application, ensuring secure and consistent data handling.</data>
      <data key="d2">715bdaaae1cb7470e0e54efac993beb5,7b0e16fa06f15b959c34b3d3401845e8</data>
    </node>
    <node id="SESSION">
      <data key="d0">PERSON</data>
      <data key="d1">A session refers to the period during which a user interacts with a web application, often involving authentication and authorization checks.
A session represents a user's interaction with an application, which can be created, updated, or deleted based on user actions.
A session represents a user's interaction with the application, containing information such as user ID and role for authorization purposes.
Session refers to the user's active session data, which includes user roles and permissions.
A session in web applications is defined as a period during which a user interacts with the application, tracked for analytics purposes.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2,715bdaaae1cb7470e0e54efac993beb5,7b0e16fa06f15b959c34b3d3401845e8,9435f5063dc16afb92c8c68706b77d2b,acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="ADMIN">
      <data key="d0">PERSON</data>
      <data key="d1">An admin is a user with elevated privileges, allowing access to restricted areas of a web application and the ability to manage other users.
An administrator is a person responsible for managing user accounts and settings within the Cognito User Pool.</data>
      <data key="d2">7b0e16fa06f15b959c34b3d3401845e8,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="CYPRESS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cypress is a test runner used for End-to-End (E2E) and Component Testing, particularly with Next.js applications.

Cypress is a testing framework for web applications that allows for end-to-end testing of user interactions.
Cypress is a test runner used for End-to-End (E2E) and Component Testing in web applications, particularly with frameworks like Next.js.
Cypress is a testing framework used for End-to-End (E2E) testing, particularly for web applications built with frameworks like Next.js.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,0ef0d7dfd239c67d2b08d6be68926b78,5e1697c043b2eb0208b7ae196db74f56,62cbc95f20c7b902a0c2e3e9af7dd83c,f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="CYPRESS TESTING SUITE">
      <data key="d0">EVENT</data>
      <data key="d1">The Cypress testing suite is a collection of tests that validate the functionality of web applications, initiated by running the Cypress command.</data>
      <data key="d2">f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="E2E TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">End-to-End (E2E) testing is a testing methodology that simulates real user scenarios to ensure the application behaves as expected from start to finish.
E2E testing refers to End-to-End testing, a methodology used to test the flow of an application from start to finish.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="COMPONENT TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">Component testing focuses on testing individual components of an application in isolation without the need for a full application context.
Component testing is a type of testing that focuses on individual components of a web application to ensure they function correctly in isolation.
Component testing is a type of testing that focuses on individual components of an application to ensure they function correctly.
Component testing is a type of testing focused on verifying the functionality of individual components in a software application, particularly in React.</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,0ef0d7dfd239c67d2b08d6be68926b78,f180dd367ecf063eddddd218ef6dbc1e,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="CYPRESS.CONFIG.JS">
      <data key="d0">EVENT</data>
      <data key="d1">cypress.config.js is a configuration file used to set up Cypress testing parameters and options for testing applications.
</data>
      <data key="d2">03f7555dc3d6cacee4fb80d112de29dd,f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="CYPRESS/E2E/APP.CY.JS">
      <data key="d0">EVENT</data>
      <data key="d1">app.cy.js is a specific test file in Cypress that contains end-to-end tests for the application.</data>
      <data key="d2">f180dd367ecf063eddddd218ef6dbc1e</data>
    </node>
    <node id="CYPRUS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cypress is a testing framework that allows developers to write and run tests for web applications, particularly for component testing in frameworks like Next.js.
Cypress is a front-end testing tool built for the modern web, providing fast, reliable testing for web applications.</data>
      <data key="d2">0ef0d7dfd239c67d2b08d6be68926b78,a67099d1f0ea66a70c07e9595443231a</data>
    </node>
    <node id="ABOUT PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The About Page is a specific component in a Next.js application that displays information about the application or organization.
</data>
      <data key="d2">0ef0d7dfd239c67d2b08d6be68926b78,85fc82d441624fc7d477f417afcce94e</data>
    </node>
    <node id="REACT TESTING LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Testing Library is a library for testing React components, providing utilities to interact with and assert on the rendered output of components.
React Testing Library is a library for testing React components, often used alongside Jest.</data>
      <data key="d2">0ef0d7dfd239c67d2b08d6be68926b78,407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="COVERAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Coverage refers to the measurement of how much of the code is tested by the tests, which is collected during the testing process.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="SETUP FILES">
      <data key="d0">EVENT</data>
      <data key="d1">Setup files are scripts that run before each test to configure the testing environment, ensuring that tests run in a consistent state.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="TRANSFORM">
      <data key="d0">EVENT</data>
      <data key="d1">Transform refers to the process of converting files from one format to another, particularly in the context of preparing files for testing.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="MAPPING">
      <data key="d0">EVENT</data>
      <data key="d1">Mapping refers to the configuration of how modules and assets are resolved in the testing environment, ensuring that imports work correctly.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="TEST PATH IGNORE PATTERNS">
      <data key="d0">EVENT</data>
      <data key="d1">Test path ignore patterns are settings in Jest that specify which paths should be ignored when running tests, typically to exclude certain directories like node_modules.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="COVERAGE PROVIDER">
      <data key="d0">EVENT</data>
      <data key="d1">Coverage provider refers to the tool used by Jest to collect coverage information, with options like v8 for improved performance.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="MODULE NAME MAPPER">
      <data key="d0">EVENT</data>
      <data key="d1">Module name mapper is a configuration option in Jest that allows developers to define how module paths are resolved during testing.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="TRANSFORM IGNORE PATTERNS">
      <data key="d0">EVENT</data>
      <data key="d1">Transform ignore patterns are settings in Jest that specify which files should not be transformed, often used to exclude node_modules.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="SETUP FILES AFTER ENV">
      <data key="d0">EVENT</data>
      <data key="d1">Setup files after environment is a configuration option in Jest that allows developers to specify scripts that should run after the test environment is set up.</data>
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="JEST.CONFIG.JS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">01379aeac4a4cce03362928b2dfe7c39</data>
    </node>
    <node id="ERROR BOUNDARY">
      <data key="d0">EVENT</data>
      <data key="d1">Error Boundaries are a React feature that allows developers to catch JavaScript errors in their components and provide a fallback UI.
Error Boundary is a React component that catches JavaScript errors in its child component tree, logs those errors, and displays a fallback UI.
An error boundary in Next.js is a React component that catches JavaScript errors in its child component tree, allowing for graceful error handling.</data>
      <data key="d2">444fc385d67c401653f1a2c133ba95e6,a046fdf9fbebaa56c0d37da25e453974,a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="500 PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The 500 page is a default static page provided by Next.js to handle server-side errors.</data>
      <data key="d2">444fc385d67c401653f1a2c133ba95e6</data>
    </node>
    <node id="404 PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The 404 page is used in Next.js to handle specific runtime errors like file not found.</data>
      <data key="d2">444fc385d67c401653f1a2c133ba95e6</data>
    </node>
    <node id="TESTING LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Testing Library is a set of utilities for testing React components, making it easier to write tests that resemble how users interact with applications.
Testing Library is a family of libraries for testing UI components in a user-centric way, often used with React applications.
Testing Library is a set of utilities for testing React components, providing custom matchers for assertions.
React Testing Library is a set of utilities for testing React components, focusing on user interactions and accessibility.
</data>
      <data key="d2">444fc385d67c401653f1a2c133ba95e6,62cbc95f20c7b902a0c2e3e9af7dd83c,66c478df0b5dc48b45a6c5e00867576d,b0a7c0b65015814bd16809b55a84c5cc,b45c653df41952b7c0b22c7926afe5f7</data>
    </node>
    <node id="JEST SETUP">
      <data key="d0">EVENT</data>
      <data key="d1">Jest setup refers to the configuration and initialization process for Jest, including importing necessary libraries and setting up test environments.</data>
      <data key="d2">444fc385d67c401653f1a2c133ba95e6</data>
    </node>
    <node id="ERRORBOUNDARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ErrorBoundary is a React component that handles errors in the application by rendering a fallback UI when an error occurs.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="SENTRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sentry is a service used for monitoring and reporting errors in applications.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="BUGSNAG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bugsnag is a tool for error monitoring and reporting in software applications.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="DATADOG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Datadog is a monitoring and analytics platform for cloud applications.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CSP">
      <data key="d0">EVENT</data>
      <data key="d1">Content Security Policy (CSP) is a security feature that helps prevent various attacks such as cross-site scripting (XSS) and data injection.
Content Security Policy (CSP) is a security feature that helps prevent a variety of attacks, such as Cross-Site Scripting (XSS) and data injection attacks.
Content-Security-Policy (CSP) is a security feature that helps prevent a variety of attacks such as Cross-Site Scripting (XSS) and data injection attacks.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b,9bd0a80f4c931386ae8f2fb0226f92cd,b8276fb595f7138780baf2d76c97bb37</data>
    </node>
    <node id="FALLBACK UI">
      <data key="d0">EVENT</data>
      <data key="d1">Fallback UI is a user interface that is displayed when an error occurs, providing users with an option to retry or navigate away.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CLIENT ERRORS">
      <data key="d0">EVENT</data>
      <data key="d1">Client errors refer to issues that occur on the user's side, often related to the application or network.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CROSS-SITE SCRIPTING">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-site scripting (XSS) is a security vulnerability that allows attackers to inject malicious scripts into web pages viewed by other users.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CLICKJACKING">
      <data key="d0">EVENT</data>
      <data key="d1">Clickjacking is a malicious technique where an attacker tricks a user into clicking on something different from what the user perceives, potentially leading to unauthorized actions.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CODE INJECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Code injection is a security vulnerability that allows an attacker to introduce malicious code into a program, which can be executed by the application.</data>
      <data key="d2">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="NONCE">
      <data key="d0">EVENT</data>
      <data key="d1">A nonce is a unique, random string used in security protocols to ensure that certain actions can only be performed once, often used in conjunction with CSP.
A nonce is a unique token used to ensure that a script or request is valid and has not been tampered with, often used in security contexts.</data>
      <data key="d2">44eb58960277cd9fc903de7625623163,9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="REQUEST HEADERS">
      <data key="d0">EVENT</data>
      <data key="d1">Request headers are key-value pairs sent by the client to the server, providing information about the request context and client preferences.
Request Headers are key-value pairs sent by the client to the server, containing information about the request.
Request headers are key-value pairs sent by the client to the server, containing information about the request context and client preferences.
Request headers are the headers sent by the client in an HTTP request, containing information such as content type and authorization.
Request headers are key-value pairs sent in an HTTP request that provide information about the request or the client making it.</data>
      <data key="d2">113e44bf79d1dd5dbde02354435765e3,44eb58960277cd9fc903de7625623163,856c945b28eacce9c83378e56652fee3,9bd0a80f4c931386ae8f2fb0226f92cd,a30c1b22a2bba568f986171e6685170b</data>
    </node>
    <node id="RESPONSE HEADERS">
      <data key="d0">EVENT</data>
      <data key="d1">Response headers are key-value pairs sent by the server back to the client, providing information about the server's response and the content being sent.
Response headers are the headers sent by the server in an HTTP response, providing information about the server's response and the data being sent.</data>
      <data key="d2">113e44bf79d1dd5dbde02354435765e3,9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </node>
    <node id="CHROME DEVTOOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser, used for debugging and optimizing web applications.
Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser, used for debugging and optimizing web applications.
Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser, allowing developers to inspect and debug web applications.
Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser, used for debugging and analyzing web applications.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b,45d1b0474e5a4ef2a69bdf70528aedb4,ce540af7d610dfd65c29afa83f46b65e,ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="DEBUGGING">
      <data key="d0">EVENT</data>
      <data key="d1">Debugging is the process of identifying and removing errors from computer hardware or software, crucial for ensuring the functionality of applications.
Debugging is the process of identifying and removing errors from computer software or hardware, often involving the use of tools to inspect code execution.
Debugging refers to the process of identifying and resolving issues or bugs in software code.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b,45d1b0474e5a4ef2a69bdf70528aedb4,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="LAUNCH.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">launch.json is a configuration file used in Visual Studio Code to define debugging settings for applications, including Next.js.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b</data>
    </node>
    <node id="APPLICATIONS">
      <data key="d0" />
      <data key="d1">
Applications are software programs that can integrate Amazon Polly to provide speech capabilities, enhancing user interaction and accessibility.</data>
      <data key="d2">0aae21b170363fb93fdbbb65d9c7576b,3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="CROSS-ENV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cross-env is a package that allows you to set environment variables across different operating systems in a consistent manner.
Cross-env is a package that allows users to set environment variables across different operating systems, ensuring consistent behavior in scripts.</data>
      <data key="d2">ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="VITEST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vitest is a testing framework that is often used with Vite and React Testing Library for unit testing in JavaScript applications.
Vitest is a testing framework for JavaScript and TypeScript, designed to work with modern frontend frameworks like React.
Vitest is a fast unit test framework for Vite projects, providing a simple and efficient way to test JavaScript code.
Vitest is a Vite-native unit testing framework that is designed to work seamlessly with Vite and React Testing Library for testing JavaScript applications.</data>
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d,a67099d1f0ea66a70c07e9595443231a,b45c653df41952b7c0b22c7926afe5f7,ce540af7d610dfd65c29afa83f46b65e</data>
    </node>
    <node id="WINDOWS">
      <data key="d0">GEO</data>
      <data key="d1">Windows is a group of several proprietary graphical operating system families developed by Microsoft, widely used for personal computers.
Windows is an operating system developed by Microsoft, commonly used for personal computers and servers.</data>
      <data key="d2">ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="DEBUGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The debugger is a tool that allows developers to inspect and control the execution of their code, often used in conjunction with development environments.</data>
      <data key="d2">ce540af7d610dfd65c29afa83f46b65e</data>
    </node>
    <node id="PREVIEW MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Preview Mode is a feature in Next.js that allows users to preview draft content from a headless CMS before it is published.
Preview mode is a feature that allows users to see unpublished content before it goes live.

Preview Mode in Next.js allows developers to bypass static generation to render pages at request time, useful for previewing content before it goes live.</data>
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d,a114c731efa8589ee311d40c0106c001,b61989d8657d5b33a55c584f46e7d436,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="TEST SCRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">A test script is a command defined in package.json that runs tests using a testing framework like Vitest.</data>
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d</data>
    </node>
    <node id="JS.DOM">
      <data key="d0">EVENT</data>
      <data key="d1">jsdom is a JavaScript implementation of the DOM and HTML standards, used for testing web applications in a simulated browser environment.</data>
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d</data>
    </node>
    <node id="CHARACTERISTICS">
      <data key="d0">EVENT</data>
      <data key="d1">Characteristics refer to the attributes or features of a component or application, often discussed in the context of testing and configuration.</data>
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d</data>
    </node>
    <node id="VITEST.CONFIG">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">66c478df0b5dc48b45a6c5e00867576d</data>
    </node>
    <node id="HEADLESS CMS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A headless CMS is a content management system that allows users to manage content without being tied to a specific front-end presentation layer.
A headless CMS is a content management system that provides a way to manage content without a front-end, allowing for flexible content delivery through APIs.
A headless CMS is a content management system that provides a backend for managing content but does not dictate how that content is presented on the frontend, allowing for greater flexibility in web development.
A headless CMS is a content management system that provides a way to manage content without a front-end delivery layer, allowing for more flexibility in how content is presented.
A headless CMS is a content management system that provides a backend for managing content without a front-end delivery layer, allowing for dynamic content fetching.</data>
      <data key="d2">44eb58960277cd9fc903de7625623163,78b4dd6ed52242dca68aec48915841fe,a114c731efa8589ee311d40c0106c001,e5f2d84dedb3e3e056a2a9003aeaa38e,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="TOKEN">
      <data key="d0">PERSON</data>
      <data key="d1">A token is a secret string used to authenticate requests to the preview API route.
A token is a secret string used for authentication in API requests, ensuring that only authorized users can access certain functionalities.
Tokens in AWS Amplify are used to customize the appearance and behavior of UI components, including colors and styles.
Tokens in Amplify UI refer to design tokens that provide a consistent styling approach across components, such as colors and sizes.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f,a114c731efa8589ee311d40c0106c001,a8cc34c06c7b64595006afc28abc0ae2,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </node>
    <node id="SLUG">
      <data key="d0">PERSON</data>
      <data key="d1">A slug is a URL-friendly string that represents a specific resource, often used in web development to identify pages.
A string representation of a product or category used in URLs for routing purposes.
Slug is a URL-friendly string that represents the title or identifier of a post in the application.
A slug is a URL-friendly string that represents a specific resource or page, often derived from the title of the content.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89,a114c731efa8589ee311d40c0106c001,dc10462a75be57d14f05bf6a26ba9731,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </node>
    <node id="PREVIEW API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The preview API is an endpoint that allows users to preview content before it is published.</data>
      <data key="d2">a114c731efa8589ee311d40c0106c001</data>
    </node>
    <node id="DRAFT POSTS">
      <data key="d0">EVENT</data>
      <data key="d1">Draft posts are unpublished content that can be previewed before going live.</data>
      <data key="d2">a114c731efa8589ee311d40c0106c001</data>
    </node>
    <node id="YOUR-SITE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">a114c731efa8589ee311d40c0106c001</data>
    </node>
    <node id="SET DRAFT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Set Draft Mode is an action in Next.js that enables draft mode by setting a cookie, allowing users to view draft content.</data>
      <data key="d2">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="ISR">
      <data key="d0">EVENT</data>
      <data key="d1">Incremental Static Regeneration (ISR) is a feature in Next.js that allows developers to update static content after the site has been built.</data>
      <data key="d2">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </node>
    <node id="IE11">
      <data key="d0">GEO</data>
      <data key="d1">Internet Explorer 11 is a web browser developed by Microsoft, known for its limited support of modern web standards compared to other browsers.</data>
      <data key="d2">78b4dd6ed52242dca68aec48915841fe</data>
    </node>
    <node id="SASS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS), allowing for more advanced features like variables and nesting.
Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS), allowing for more dynamic stylesheets.
Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS), allowing for more dynamic and maintainable stylesheets.
Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS).
Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS), providing features like variables and nested rules to enhance CSS development.
Sass is a popular CSS preprocessor that extends CSS with features like variables, nested rules, and mixins.
Sass is a pre-processor scripting language that is interpreted or compiled into CSS, providing additional features for styling components.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,a9a858ea7abac3fe79fa759ea8171597,dc07058d355dcb6432e4280af3eba3d0,f6421de6d362747d50f273057f0bcb55,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="DRAFT API ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">The Draft API Route is a specific endpoint in Next.js that enables the functionality of Draft Mode, allowing users to access draft content securely.</data>
      <data key="d2">78b4dd6ed52242dca68aec48915841fe</data>
    </node>
    <node id="CUSTOM SERVER">
      <data key="d0">EVENT</data>
      <data key="d1">A custom server in Next.js allows developers to programmatically start a server for custom patterns, integrating with existing backends.

A custom server in Next.js allows developers to programmatically start a server for custom routing patterns.
</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b,0dc4f8c1cc6105e325f2d84d2083a4c0,9c75ee4a07cd172f143b2b09451d333c,b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </node>
    <node id="POSTCSS CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">PostCSS configuration refers to the setup of PostCSS plugins and settings that dictate how CSS is processed in a project.</data>
      <data key="d2">9c75ee4a07cd172f143b2b09451d333c</data>
    </node>
    <node id="SERVER">
      <data key="d0">EVENT</data>
      <data key="d1">A server in the context of Next.js is a program that listens for requests and serves responses, allowing for custom server configurations.

A server is a system that provides data, resources, or services to other computers, known as clients, over a network.
The server is a program that listens for requests and serves responses, often used in web applications.
The server is a computer in a data center that stores application code and processes requests from clients.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335,0dc4f8c1cc6105e325f2d84d2083a4c0,4da3554b7826cf4b6dd608127da53568,729c604ddd30e8eb3491209028c25dde,b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </node>
    <node id="MARKDOWN">
      <data key="d0">EVENT</data>
      <data key="d1">Markdown is a lightweight markup language used for formatting text, commonly utilized in web content creation.
Markdown is a lightweight markup language with plain-text formatting syntax, used for formatting text in MDX files.
Markdown is a lightweight markup language used for formatting text, commonly utilized for writing content on websites and blogs.
Markdown is a lightweight markup language with plain-text formatting syntax, used for writing content that can be converted to HTML.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89,6bb5264a8b72d26916099f27337032fe,b48fe8c8f5e2835de49d9a46578cbf9d,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </node>
    <node id="STANDALONE OUTPUT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Standalone output mode in Next.js outputs a minimal server.js file and does not trace custom server files, which is useful for specific deployment scenarios.</data>
      <data key="d2">b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </node>
    <node id="USE FILE SYSTEM PUBLIC ROUTES">
      <data key="d0">EVENT</data>
      <data key="d1">The useFileSystemPublicRoutes configuration in Next.js determines whether to serve files in the pages folder under a pathname matching the filename, affecting routing behavior.</data>
      <data key="d2">b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </node>
    <node id="MY-PROJECT">
      <data key="d0">EVENT</data>
      <data key="d1">my-project is a sample project structure demonstrating the integration of MDX with Next.js.</data>
      <data key="d2">6bb5264a8b72d26916099f27337032fe</data>
    </node>
    <node id="MDX-COMPONENTS.TSX">
      <data key="d0">EVENT</data>
      <data key="d1">mdx-components.tsx is a file that defines global MDX components for use in an MDX project with Next.js.</data>
      <data key="d2">6bb5264a8b72d26916099f27337032fe</data>
    </node>
    <node id="CREATEMDX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">createMDX is a function used to configure MDX support in Next.js applications.</data>
      <data key="d2">6bb5264a8b72d26916099f27337032fe</data>
    </node>
    <node id="HTML">
      <data key="d0">EVENT</data>
      <data key="d1">HTML is the standard markup language for documents designed to be displayed in a web browser, generated from markdown content.
HTML is the standard markup language for creating web pages and web applications.
HTML (HyperText Markup Language) is the standard markup language for documents designed to be displayed in a web browser.
HTML is the standard markup language used to create web pages, which is defined in the root layout of a Next.js application.
HTML is the standard markup language for documents designed to be displayed in a web browser.

HTML (HyperText Markup Language) is the standard markup language for documents designed to be displayed in a web browser.
HTML is the standard markup language for documents designed to be displayed in a web browser, which includes elements like &lt;video&gt; and &lt;iframe&gt; for multimedia content.
HTML (HyperText Markup Language) is the standard markup language used to create web pages and web applications.
HTML is the standard markup language for documents designed to be displayed in a web browser, which is used in the structure of web pages.

HTML is a markup language used for structuring content on the web, essential for building applications with Next.js.
HTML (HyperText Markup Language) is the standard markup language used to create web pages, and its usage is essential in the tutorial for setting up the webpage.
HTML is the standard markup language for documents designed to be displayed in a web browser.
</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,0dc4f8c1cc6105e325f2d84d2083a4c0,2e4837fd908fed547d3170725336a52e,514671e4a7b4b0d7573852d3d380eefd,5ef33e2acd1009a637bf4b8ab41d49a1,60d9151920f9b881f34c958c0c5d770b,6bb5264a8b72d26916099f27337032fe,7ebeb57bb18774254a901eafc1cb096f,84837300711040f4e7b736cdd8fce7d2,9b92d19ee6176284aa500c2d4bcd28a4,a5566406ae5db585eb3829f4a25e7025,bf223ba92c40347202f7dcf0e841b2ed,c157c439271dbeeebb69b81254b288af,c4efc37a62b19ea7ba04b6eccea112c5,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="MYCOMPONENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">6bb5264a8b72d26916099f27337032fe</data>
    </node>
    <node id="JOHN DOE">
      <data key="d0">PERSON</data>
      <data key="d1">John Doe is a fictional name often used as a placeholder for an anonymous or generic person, mentioned in the context of metadata in blog posts.
John Doe is a placeholder name used in the example code to represent a user or individual in the application context.
John Doe is a fictional name often used as a placeholder for an unknown or generic person.
John Doe is another user example in the AWS Amplify documentation, illustrating the use of custom user attributes during sign-up.
John Doe is a user example used in the sign-in function of AWS Amplify documentation.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e,3188b79ca82feb7410b45f4162ba4317,4e07cca41acd33806d13242f5e21f621,a4afb71ec5010173b514ca4604c40002,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="FS MODULE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The fs module is a Node.js module that provides an API for interacting with the file system, allowing for reading and writing files.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="GLOBBY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Globby is a Node.js package that allows for matching files using glob patterns, often used for file manipulation tasks in JavaScript applications.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="MDX PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">MDX Page refers to a specific page that utilizes MDX format to combine markdown and React components for dynamic content presentation.
MDX Page is a page created using the MDX format, allowing for the integration of markdown and React components.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89,a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="CUSTOMH1">
      <data key="d0">PERSON</data>
      <data key="d1">CustomH1 is a React component defined to render an H1 element with specific styles, demonstrating how to override default components in MDX.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="OVERRIDE COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Override Components are custom components that replace default MDX components, allowing for tailored rendering of specific elements.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="SHARED LAYOUT">
      <data key="d0">EVENT</data>
      <data key="d1">Shared Layout refers to a layout component that can be reused across multiple MDX pages to maintain consistent styling and structure.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="TAILWIND TYPOGRAPHY PLUGIN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Tailwind Typography Plugin enhances the styling of markdown content by applying Tailwind's typography classes to improve readability and aesthetics.</data>
      <data key="d2">a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="WELCOME">
      <data key="d0" />
      <data key="d1">
Welcome refers to the example content used in the MDX page to demonstrate how to render markdown with React components.
Welcome is an event that introduces users to the MDX framework and its capabilities.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89,4e07cca41acd33806d13242f5e21f621,a4afb71ec5010173b514ca4604c40002</data>
    </node>
    <node id="REMARK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Remark is a tool for parsing and transforming markdown, part of a larger ecosystem that includes rehype for HTML processing.
Remark is a tool for parsing and transforming markdown content into HTML.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0,7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </node>
    <node id="REHYPE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Rehype is a tool for processing HTML, allowing for transformations and sanitization of HTML content in web applications.
Rehype is a tool for transforming HTML content, often used in conjunction with remark.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0,7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </node>
    <node id="MDXREMOTE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MDXRemote is a component in Next.js that renders MDX content, allowing for dynamic content loading and rendering of JSX within markdown.</data>
      <data key="d2">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </node>
    <node id="SERIALIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Serialize is a function used in Next.js to convert MDX content into a format that can be rendered by the MDXRemote component.</data>
      <data key="d2">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </node>
    <node id="CUSTOM VALIDATOR">
      <data key="d0">EVENT</data>
      <data key="d1">A custom validator in Next.js is a user-defined function that validates AMP pages during development.</data>
      <data key="d2">173e80ccbe8ecd833c055f4cd3e75ee6</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="SRC DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The src directory is a common pattern in Next.js projects for organizing application code separate from configuration files.
The src directory is a common pattern in Next.js projects for organizing application code separate from configuration files.
The src directory in Next.js is an optional directory that can be used to store application code separately from project configuration files.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b,173e80ccbe8ecd833c055f4cd3e75ee6,3615d6509a88bbb31eac0bc56f78c2f6</data>
      <data key="d3">GEO</data>
    </node>
    <node id="STATIC HTML EXPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Static HTML export in Next.js refers to the process of generating static HTML pages from React components.</data>
      <data key="d2">173e80ccbe8ecd833c055f4cd3e75ee6</data>
    </node>
    <node id="NODE_ENV">
      <data key="d0">PERSON</data>
      <data key="d1">NODE_ENV is an environment variable that determines the environment in which a Node.js application is running, such as development, production, or test.
NODE_ENV is an environment variable that specifies the environment in which a Node.js application is running, such as development, production, or test, and is relevant for configuring Next.js applications.
NODE_ENV is an environment variable that determines the environment in which a Node.js application is running, affecting configuration and behavior of the application.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56,7cf992845bf79c5ec4ae2614617a79f4,936f58e9a3d0c41d6fd88ca7b6e0a119</data>
    </node>
    <node id=".ENV">
      <data key="d0">EVENT</data>
      <data key="d1">The .env file is used to define environment variables for applications, allowing configuration of settings without hardcoding them.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id=".GITIGNORE">
      <data key="d0">EVENT</data>
      <data key="d1">The .gitignore file specifies intentionally untracked files to ignore in a Git repository, including local environment variable files.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id="DEFAULTS">
      <data key="d0">EVENT</data>
      <data key="d1">Defaults refer to pre-defined settings for environment variables that can be overridden in specific environments like development or production.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id="TEST ENVIRONMENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Test Environment is a configuration setting used to run tests in a controlled environment, separate from development and production.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id="LOAD_ENV_CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">loadEnvConfig is a function from the @next/env package used to load environment variables in a Next.js application during testing.</data>
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id="PROJECT SETTINGS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5e1697c043b2eb0208b7ae196db74f56</data>
    </node>
    <node id="BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">A button component used in the Next.js application to trigger actions or events when clicked.
The Button component is a reusable UI element that can be styled using CSS Modules in Next.js applications.
Button is a UI element that triggers navigation to the Dashboard route when clicked.
The button is an interactive element that users click to submit the signup form.
A button is an HTML element that users can click to perform an action, such as resetting an error state in the GlobalError component.
Button is a component in Amplify UI that can be styled and used to trigger actions in a web application.
Button is a UI component that triggers an action when clicked.
Button is a UI component in Amplify UI that can be styled with various properties including boxShadow.
The Button is a UI component that users can click to perform an action, such as submitting a form or navigating to another page.
Buttons are interactive elements that users can click to perform actions or submit forms.
Button is a UI element that users can click to perform an action in an application.
Button is a UI component in Amplify UI that triggers actions when clicked, such as changing the color mode in the ThemeProvider examples.

The Button is a UI element that triggers actions, such as browsing files or canceling uploads, within the Storage Manager component.
The Button is a UI component in AWS Amplify that triggers actions when clicked.
The Button component is used to trigger actions such as displaying messages in the application.
Button is a UI element that triggers actions, such as flying to a specific location on the map when clicked.
A button is a user interface element that allows users to trigger actions, such as retrying an operation in the error view of the Face Liveness Detector.
Button is a UI component in React that allows users to trigger actions, commonly used in conjunction with the Authenticator component in AWS Amplify.

Button is a component in the AWS Amplify UI React library used to create clickable buttons in user interfaces.
Button is a component in the Amplify UI for React that allows users to trigger actions or submit forms.
Button is a component in AWS Amplify that triggers an action when clicked.
Button is a UI component in AWS Amplify that allows users to trigger actions or events when clicked.
Button is a UI component that triggers an action when clicked, commonly used in forms and interactive applications.
Button is a UI element that users can click to perform an action, such as submitting a form or toggling settings.
Button is a component used in the AWS Amplify UI for triggering actions, available in different sizes.
A clickable element in a user interface that triggers an action when pressed, such as submitting a form.
A clickable element that submits the form when pressed
Button is a component used to trigger actions in forms, such as submitting data or toggling visibility.
The Button is a UI component that triggers an action, such as submitting a form, when clicked by the user.
Button is a UI component that triggers an action when clicked, commonly used for form submissions and other interactions.
Button is a component in the Amplify UI library that allows users to submit forms or trigger actions.
Button is a UI element that allows users to trigger the file picker in the DropZone component.
Button is a component from the AWS Amplify UI for React that allows users to perform actions through click events.
Button is a UI component that triggers an action when clicked, often used in web applications for user interactions.
Button is a component within the Amplify UI library that triggers actions when clicked.
Button is a clickable element in a form that triggers an action when clicked.
Button is a UI element that triggers an action when clicked, often used in forms and interactive components.
Button is a UI component in AWS Amplify that triggers actions when clicked by the user.
A Button is a UI element in Amplify UI that triggers actions when clicked, often used in conjunction with other components like Alert.
Button is an HTML element that can be rendered by the View component in Amplify UI, allowing user interaction.

The Button primitive in Amplify UI triggers actions or events, such as submitting forms or opening dialogs.
The Button component in Amplify UI allows users to trigger actions, such as adding items to a cart.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,12c9fa6332d9cd62a8cbe8be18fd540e,155e5b639ff1fbe14e9b7c7375cf5e03,1ceae74b49c1b621d815e85b8ca49988,1d0207e2e11503628d08eefd24849d93,21ba26eef933ca84de0597d8f7c58f7e,21bbed2998c7a9b202d76d56c78cb512,229e08ddbc773881c8e1ca68ba06dea8,26dcbf3b494b9d9117cffa213b39f7cf,27665866f8a25b886ee05eef06c3054c,3357299f904d0dd5b40c967c28b75149,3a82472230692a8c3ac8444f7738b625,45bc04c1106dd47dcfb887084a04fd7b,480e2412619ad09a750dc16a3f8ceab3,4d25b33f699aef8a075e8858bf0ad630,4ef2269a1b7af8535395e8de5c20722d,56553341236a20419cc336c60c2bed04,6edc6c7e13a23d971e48b75724b50d5f,717f3b1fb6a6ce86c291aca158771f33,7510b258e7a4194c8664e8c8ba088ecc,7668a790c01b22add1e76afc928004db,7ebeb57bb18774254a901eafc1cb096f,7fea5fbe98eba1d68851892af6df2407,818fcb4044a83bd6eead8a24e57319ad,85d9171dd6e70ffdb5803e227ecacbc4,868b364b65a596f02a214b12ca0cbb6a,8b2761fb86513e3cf4d313a43b80f9fc,919c09d2956ed4ab195e7a6898f39063,93e4ae7768c14468bccb3caa2eb8fb2b,98fcf483b563a8d8b54ee85b2f6fa533,9939e974ca8f24b6b7f34bbf89addb7e,a3d37007c833039158d1e1720cb62466,b8276fb595f7138780baf2d76c97bb37,bb9110629910b21a122e4dbd23ba9236,c1a6031416f64c80a84765d33eb17be4,c7af2749681510be539a408772ae1755,d5db54aea339e57737c40468d9473a13,d700fb2336ddc0a563736b65003c9d4f,da8a5f647964e74661f5f6b0ad4f6a74,ddc8b27b83cca7d4613a25a5e5a519c9,e3c4629b893f38a9c103147f3ea608f3,e6f9ca43dfb29c7478264e5ebadfca37,e7727282a239fcb7a1e69d029f0709ba,e9839e578f896e0d269ce78abd50bae3,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="LCP">
      <data key="d0">EVENT</data>
      <data key="d1">LCP (Largest Contentful Paint) is a metric that measures loading performance in web applications.
Largest Contentful Paint (LCP) is a web performance metric that measures loading performance, specifically the time it takes for the largest visible content element to be rendered on the screen.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,4baf287e38f64339e2ce2ed9f18befe3</data>
    </node>
    <node id="SYNCHRONOUS SCRIPTS">
      <data key="d0">EVENT</data>
      <data key="d1">Synchronous scripts are scripts that block the rendering of the page until they are fully loaded.</data>
      <data key="d2">4baf287e38f64339e2ce2ed9f18befe3</data>
    </node>
    <node id="ESLINT CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">ESLint config refers to the configuration settings used to customize the behavior of ESLint in a project.
ESLint Config refers to the configuration settings for ESLint, which can be set up in a .eslintrc.json file in a Next.js project.
eslint-config-next is a configuration package that extends ESLint with recommended rules for Next.js projects.</data>
      <data key="d2">2f935bf8dd94b80e38c90109f4e620a3,4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="CUSTOM FONTS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4baf287e38f64339e2ce2ed9f18befe3</data>
    </node>
    <node id="TSCONFIG.JSON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">tsconfig.json is a configuration file for TypeScript projects that specifies the compiler options and the files to be included in the compilation.
tsconfig.json is a configuration file used in TypeScript projects to specify compiler options and project settings.
tsconfig.json is a configuration file for TypeScript projects that specifies compiler options and file paths.
tsconfig.json is a configuration file for TypeScript projects that defines compiler options and paths for module resolution, which can be updated for Next.js applications.
tsconfig.json is a configuration file used by TypeScript to specify the root files and the compiler options required to compile the project.
Tsconfig.json is a configuration file for TypeScript projects that specifies compiler options and the files to be included in the compilation, relevant for AWS Amplify projects using TypeScript.
Tsconfig.json is a configuration file for TypeScript projects that specifies compiler options and paths for module resolution.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b,280c36ab0ae3dc66fffd099a273b96ab,2f935bf8dd94b80e38c90109f4e620a3,391895fc365f2f2512a45ea503fbfa86,936f58e9a3d0c41d6fd88ca7b6e0a119,95c2ea5a0f820f012ba0ea521843d34d,c143d279740f3e9c59920d2a6720240e</data>
    </node>
    <node id="APP PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">AppProps is a built-in type in Next.js that represents the properties passed to a custom App component.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e</data>
    </node>
    <node id="GTM-XYZ">
      <data key="d0">EVENT</data>
      <data key="d1">GTM-XYZ is a placeholder for a Google Tag Manager container ID used for tracking events in a Next.js application.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e</data>
    </node>
    <node id="INCREMENTAL TYPE CHECKING">
      <data key="d0">EVENT</data>
      <data key="d1">Incremental type checking is a feature in Next.js that allows for faster type checking in larger applications when enabled in tsconfig.json.
Incremental Type Checking is a feature in Next.js that allows for faster type checking in larger applications by only checking files that have changed.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e,735b59f53ffba96602dace4169c285ed</data>
    </node>
    <node id="IGNORE BUILT-IN TYPE CHECKING">
      <data key="d0">EVENT</data>
      <data key="d1">Ignoring built-in type checking is a configuration option in Next.js that allows production builds to succeed even with TypeScript errors present.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e</data>
    </node>
    <node id="NEW-TYPES.D.TS">
      <data key="d0">EVENT</data>
      <data key="d1">new-types.d.ts is a custom type declaration file that developers create to declare custom types in a Next.js project.</data>
      <data key="d2">03986c3b8388e42d1b82f4db5232270e</data>
    </node>
    <node id="GOOGLE TAG MANAGER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Tag Manager is a tag management system that allows you to quickly and easily update tags and code snippets on your website or mobile app from a web-based user interface.
Google Tag Manager is a tag management system that allows you to quickly and easily update tags and code snippets on your website or mobile app.
Google Tag Manager is a tag management system that allows users to quickly and easily update tags and code snippets on their website or mobile app from a web-based user interface.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee,5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="EVENT BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The Event Button is a component that triggers an event in Google Tag Manager when clicked, allowing for tracking of user interactions.
The Event Button is a user interface element that triggers an event in Google Analytics when clicked, allowing for tracking of user interactions.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="GOOGLE MAPS EMBED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Maps Embed is a service that allows you to embed Google Maps into your web pages, providing location-based services and information.
Google Maps Embed is a service that allows users to embed Google Maps into their web pages, providing location-based services and visualizations.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="YOUTUBE EMBED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">YouTube Embed is a component that allows you to load and display YouTube videos on your web pages, enhancing user engagement with video content.
YouTube Embed is a service that allows users to embed YouTube videos into their web pages, enhancing content engagement and multimedia presentation.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="SEND GA EVENT">
      <data key="d0">EVENT</data>
      <data key="d1">The sendGAEvent function is used to measure user interactions by sending events to Google Analytics through the dataLayer object.</data>
      <data key="d2">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="DATA LAYER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The data layer is a JavaScript object that holds information that can be used by Google Tag Manager and Google Analytics to track user interactions and events.
</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="PAGES/INDEX.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/index.js file is a page file in Next.js where components like Google Analytics and YouTube Embed can be included for tracking and displaying content.</data>
      <data key="d2">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="SEND GTM EVENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </node>
    <node id="OPEN TELEMETRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenTelemetry is a platform-agnostic observability framework that allows developers to instrument applications for monitoring and performance optimization.
OpenTelemetry is an observability framework for cloud-native software, providing a set of APIs, libraries, agents, and instrumentation to enable observability in applications.
OpenTelemetry is a set of APIs, libraries, agents, and instrumentation to provide observability for applications, which can be integrated with Next.js for performance monitoring.
OpenTelemetry is an observability framework for cloud-native software, providing APIs, libraries, agents, and instrumentation to help developers monitor their applications.</data>
      <data key="d2">3da6822267f4aca1b29b1233660a9282,5372e12cf32e25741c25f62d7e23221e,6e870d62774508940749246fdee4d7b7,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="FUSE.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Fuse.js is an external library used for fuzzy searching in JavaScript applications, allowing for dynamic loading based on user input.
Fuse.js is a lightweight fuzzy-search library that allows for efficient searching through arrays of data, often used in web applications for search functionalities.</data>
      <data key="d2">3da6822267f4aca1b29b1233660a9282,82c6ef4d52bb277665ade9f274822be3</data>
    </node>
    <node id="DYNAMIC IMPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic imports in Next.js allow components to be loaded on demand, improving initial loading performance by reducing the amount of JavaScript needed to render a route.
Dynamic Imports in Next.js allow developers to load components or libraries on demand, improving the initial loading performance of applications.</data>
      <data key="d2">3da6822267f4aca1b29b1233660a9282,82c6ef4d52bb277665ade9f274822be3</data>
    </node>
    <node id="SUSPENSE">
      <data key="d0">EVENT</data>
      <data key="d1">Suspense is a React feature that allows components to wait for something before rendering, often used in conjunction with dynamic imports to provide a loading state.
Suspense is a React feature that allows components to "wait" for something before rendering, often used in conjunction with dynamic imports in Next.js.
Suspense is a React component that allows for the rendering of a fallback UI while waiting for some asynchronous operation to complete.
Suspense is a React feature that allows components to wait for something before rendering, such as data fetching or code splitting.
Suspense is a React feature that allows components to "wait" for something before rendering, enhancing the user experience in applications built with Next.js.
Suspense is a React feature that allows components to wait for something before rendering, often used with dynamic components in Next.js.
Suspense is a React feature that allows components to "wait" for something before rendering, such as data fetching or code splitting.
Suspense is a React feature that allows components to wait for something before rendering, enhancing user experience during data fetching</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,04edddc24da6789de5ee2349698f4056,0d45ae64c949dd150906ccaed4b6b5c2,2e44942744c40cf6e169212e822438d5,3da6822267f4aca1b29b1233660a9282,4a5b866ffddc7fba2346c94f6c037019,6ebc8c74b9b797357659151a46693a88,bb9110629910b21a122e4dbd23ba9236</data>
    </node>
    <node id="DYNAMIC HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Header is an example of a component in Next.js that is loaded dynamically to improve performance and reduce the initial JavaScript bundle size.</data>
      <data key="d2">3da6822267f4aca1b29b1233660a9282</data>
    </node>
    <node id="CLIENT COMPONENTS">
      <data key="d0" />
      <data key="d1">
Client Components are a feature in Next.js that allow for the use of functions to manage state and effects in a component.
Client Components in Next.js are components that run on the client side and can utilize certain props like onLoad and onError.
Client Components in Next.js are components that run on the client side, allowing for dynamic interactions and data fetching.
Client Components are React components that are rendered on the client side, allowing for dynamic interactions and lazy loading in Next.js applications.
Client Components are interactive UI components that are prerendered on the server and can run client-side JavaScript in the browser.
Client Components are components that are rendered on the client side, allowing for interactivity in web applications.
Client components in Next.js are components that are rendered on the client side, enabling interactive features and dynamic content.
Client Components in Next.js are components that run on the client side, allowing for interactivity and state management, including error handling.

Client Components in Next.js are components that run in the browser and can manage client-side state and effects.
Client Components are components in Next.js that run on the client side, allowing for interactive features in applications.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb,2c3e23b7d2b5c3c6c258760c75956b4c,33239b71158a6566c2b82b6a30b68e82,3da6822267f4aca1b29b1233660a9282,4132dfa96e84fb89d3908b0e9dea6a62,5214aa930e0680c0e176373359966818,69ac19d7db15ae11c7884ce391807330,7ad571c896064ee6e36a4acd93898e88,7ebeb57bb18774254a901eafc1cb096f,82c6ef4d52bb277665ade9f274822be3,c157c439271dbeeebb69b81254b288af,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="OPENTELEMETRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenTelemetry is a set of APIs, libraries, agents, and instrumentation to provide observability for applications, allowing developers to monitor and troubleshoot their software effectively.
OpenTelemetry is a set of APIs and tools for observability, allowing developers to monitor and log application performance.
OpenTelemetry is an observability framework for cloud-native software, providing APIs and libraries for collecting telemetry data.</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e,7b388f79ffb6d5d09b2f36b2618f109d,f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="OPEN_TELEMETRY_COLLECTOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenTelemetry Collector is a component that receives, processes, and exports telemetry data, allowing for the collection of observability data from applications.
</data>
      <data key="d2">7b388f79ffb6d5d09b2f36b2618f109d,f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="INSTRUMENTATION">
      <data key="d0">EVENT</data>
      <data key="d1">Instrumentation refers to the process of adding monitoring capabilities to applications, allowing for the collection of performance and usage data.
Instrumentation is the process of integrating monitoring and logging tools into applications to track performance and behavior.
Instrumentation in Next.js is an experimental feature that allows tracking and logging of server errors and performance metrics.
</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e,40b01d3865b7f98f3123b0d905e2e01d,a0a19960cdaef7a85c598591f06454da,f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="CUSTOM_EXPORTERS">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Exporters are components that allow developers to send telemetry data to specific backends or services, tailored to their needs.
Custom Exporters refer to the ability to use tailored OpenTelemetry exporters for specific telemetry data handling, enhancing flexibility in observability.</data>
      <data key="d2">7b388f79ffb6d5d09b2f36b2618f109d,f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@OPENTELEMETRY/SDK-NODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @opentelemetry/sdk-node package provides a set of tools for instrumenting Node.js applications with OpenTelemetry, allowing for detailed observability.</data>
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@OPENTELEMETRY/API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @opentelemetry/api package provides the core API for OpenTelemetry, allowing developers to create and manage spans and traces in their applications.</data>
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@OPENTELEMETRY/EXPORTER-TRACE-OTLP-HTTP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @opentelemetry/exporter-trace-otlp-http package is an exporter that sends trace data to an OpenTelemetry-compatible backend over HTTP.</data>
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@OPENTELEMETRY/RESOURCES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @opentelemetry/resources package provides a way to define resource attributes that describe the entity producing telemetry data.</data>
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@OPENTELEMETRY/SEMANTIC-CONVENTIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @opentelemetry/semantic-conventions package defines standard attributes and naming conventions for telemetry data, ensuring consistency across different services.</data>
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="@VERCEL/OTEL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f4599158722218aadb2ccd78fa2745ad</data>
    </node>
    <node id="FETCHGITHUBSTARS">
      <data key="d0">EVENT</data>
      <data key="d1">fetchGithubStars is a function that tracks the result of fetching GitHub stars using OpenTelemetry APIs.</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e</data>
    </node>
    <node id="REGISTER FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">The register function is a part of the instrumentation setup that initializes monitoring tools in an application.
The register function in Next.js is used to manage the import of modules and components, allowing for conditional loading based on the runtime environment.</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e,82c6ef4d52bb277665ade9f274822be3</data>
    </node>
    <node id="SEMANTIC CONVENTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Semantic conventions are standardized attributes and naming conventions used in OpenTelemetry to ensure consistency in telemetry data.</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e</data>
    </node>
    <node id="SPANS">
      <data key="d0" />
      <data key="d1">
Spans are a fundamental concept in OpenTelemetry, representing a single operation within a trace, providing insights into the performance of that operation.
Spans are the basic unit of work in OpenTelemetry, representing a single operation within a trace, providing insights into application performance.</data>
      <data key="d2">2e0b7ff508cb8313a540ecc1a356120e,40b01d3865b7f98f3123b0d905e2e01d,7b388f79ffb6d5d09b2f36b2618f109d</data>
    </node>
    <node id="PUBLIC FOLDER">
      <data key="d0">GEO</data>
      <data key="d1">The public folder in Next.js is a directory used to serve static assets like images and files, accessible from the base URL.</data>
      <data key="d2">3486aab51f1c22b4f23003db40986564</data>
    </node>
    <node id="CACHE CONTROL">
      <data key="d0">EVENT</data>
      <data key="d1">Cache Control is a mechanism that defines how, and for how long, the browser should cache static assets.
Cache-Control is an HTTP header used to specify caching policies for browsers and other caching mechanisms.
Cache control is a mechanism that defines how web browsers and servers cache content, affecting the retrieval of files.</data>
      <data key="d2">3486aab51f1c22b4f23003db40986564,4248e6bed3ca383db55da9c5251a47ee,63bae3a149e50b7452962f7bdd8724ea</data>
    </node>
    <node id="INSTRUMENTATION FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The instrumentation file in Next.js is a script that should be placed in the root of the project to enable performance tracking and monitoring.</data>
      <data key="d2">3486aab51f1c22b4f23003db40986564</data>
    </node>
    <node id="AVATAR">
      <data key="d0">EVENT</data>
      <data key="d1">The Avatar component in Next.js is used to display user images, utilizing the Image component for optimized loading.</data>
      <data key="d2">3486aab51f1c22b4f23003db40986564</data>
    </node>
    <node id="INSTRUMENTATION HOOK">
      <data key="d0" />
      <data key="d1">
Instrumentation Hook is an experimental feature in Next.js that allows for setting up instrumentation in the application.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484,3486aab51f1c22b4f23003db40986564</data>
    </node>
    <node id="BUNDLE ANALYZER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @next/bundle-analyzer is a plugin for Next.js that helps manage the size of application bundles by generating visual reports of package sizes and dependencies.

The @next/bundle-analyzer is a plugin for Next.js that helps manage the size of application bundles by generating visual reports.</data>
      <data key="d2">2d13fb0b0bfe03d14a0f41e4d7920e31,5afd0d2ef8220eea43b9a4e3736e7bee,ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="ANALYZE">
      <data key="d0">EVENT</data>
      <data key="d1">The ANALYZE event refers to the process of analyzing JavaScript bundles to improve application performance.
The process of analyzing JavaScript bundles to evaluate and optimize application performance.</data>
      <data key="d2">2d13fb0b0bfe03d14a0f41e4d7920e31,5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </node>
    <node id="REPORT WEB VITALS">
      <data key="d0">EVENT</data>
      <data key="d1">Report Web Vitals is a function that allows developers to send performance metrics to external systems for tracking and analysis.</data>
      <data key="d2">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </node>
    <node id="OPTIMIZING BUNDLING">
      <data key="d0">EVENT</data>
      <data key="d1">Optimizing Bundling refers to the process of improving the performance of applications by managing and analyzing package sizes and dependencies.</data>
      <data key="d2">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </node>
    <node id="CUSTOM METRICS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </node>
    <node id="PARTYTOWN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Partytown is a library that allows offloading scripts to web workers to improve performance in web applications.
Partytown is a library that helps manage web worker interactions in web applications, particularly with Next.js.
Partytown is a library that helps offload scripts to web workers to improve web application performance.</data>
      <data key="d2">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343,cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="OPTIMIZING SCRIPTS">
      <data key="d0">EVENT</data>
      <data key="d1">Optimizing scripts in Next.js involves strategies for loading third-party scripts to improve application performance.</data>
      <data key="d2">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="APPLICATION SCRIPTS">
      <data key="d0">EVENT</data>
      <data key="d1">Application scripts are JavaScript files that enhance the functionality of a web application, often loaded through Next.js.
Application Scripts are scripts that are loaded and executed when any route in a Next.js application is accessed.</data>
      <data key="d2">cf17a04fd1ade3fe98ee4b50654b493e,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="CUSTOM _APP">
      <data key="d0">EVENT</data>
      <data key="d1">The custom _app component in Next.js is used to initialize pages and can include global styles and scripts.</data>
      <data key="d2">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="CUSTOM _DOCUMENT">
      <data key="d0">EVENT</data>
      <data key="d1">The custom _document component in Next.js allows for modifying the HTML document structure, including adding scripts and meta tags.</data>
      <data key="d2">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </node>
    <node id="INLINE SCRIPTS">
      <data key="d0">EVENT</data>
      <data key="d1">Inline scripts are JavaScript code written directly within a component in Next.js, allowing for dynamic behavior without external files.
Inline scripts are JavaScript code written directly within HTML documents, executed in the context of the page.</data>
      <data key="d2">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="DANGEROUSLYSETINNERHTML">
      <data key="d0">EVENT</data>
      <data key="d1">dangerouslySetInnerHTML is a property in React that allows for setting HTML directly from React components, often used for inline scripts in Next.js.
dangerouslySetInnerHTML is a property in React that allows you to set HTML directly from React components, often used for rendering HTML strings.</data>
      <data key="d2">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="EVENT HANDLERS">
      <data key="d0">EVENT</data>
      <data key="d1">Event handlers in Next.js are functions that execute additional code in response to specific events, such as script loading or errors.
</data>
      <data key="d2">7e52aca588d432140f210661ae169677,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="VARIABLE FONTS">
      <data key="d0">EVENT</data>
      <data key="d1">Variable fonts are a type of font that allows for multiple styles and weights to be contained in a single font file, optimizing performance in web applications.</data>
      <data key="d2">7e52aca588d432140f210661ae169677</data>
    </node>
    <node id="ASSET PREFIX">
      <data key="d0" />
      <data key="d1">
Asset Prefix is a configuration option in Next.js that allows developers to set a custom path for serving static assets, improving content delivery.</data>
      <data key="d2">4443464e7a2cb4bcbbf667881fecb236,7e52aca588d432140f210661ae169677</data>
    </node>
    <node id="ROBOTO MONO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Roboto Mono is a monospaced font that can be used in web applications, often in conjunction with other fonts like Inter for varied typography.

Roboto Mono is a monospaced font from Google that can be used in Next.js applications for styling text.</data>
      <data key="d2">7bc622b9dda4deed82c3382772daca19,aee85ce10da1e12fe3e8ba84ec64e808,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="LOCAL FONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Local Font refers to fonts that are hosted locally within a web application, allowing for better performance and flexibility in design.
Local Font refers to fonts that are hosted within the application, allowing for consistent typography across different components in Next.js.
Local Font refers to fonts that are stored locally within a project and can be imported for use in web applications.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,7bc622b9dda4deed82c3382772daca19,aee85ce10da1e12fe3e8ba84ec64e808</data>
    </node>
    <node id="FONT API REFERENCE">
      <data key="d0" />
      <data key="d1">
Font API Reference provides documentation and guidelines on how to use different fonts in web applications.
</data>
      <data key="d2">7bc622b9dda4deed82c3382772daca19,aee85ce10da1e12fe3e8ba84ec64e808,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="WEB ALMANAC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Web Almanac is a research project that provides insights and statistics about the web, including data on image usage and performance metrics.
Web Almanac is a resource that provides insights and statistics about web technologies and performance.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="PRIMARY COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Primary Color is a Sass variable that can be exported from CSS Module files and used in Next.js applications for consistent theming.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822</data>
    </node>
    <node id="REMOTE IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Remote Images are images that are hosted on external servers and can be optimized using the Next.js Image component by specifying their URL.
Remote images refer to images that are hosted on external servers and can be optimized using the Next.js Image component.</data>
      <data key="d2">0b10d085541dc5564e998254b8588822,5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="S3.AMAZONAWS.COM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon S3 is a scalable storage service provided by Amazon Web Services, used for storing and retrieving any amount of data at any time.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </node>
    <node id="FILL PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The fill prop in Next.js allows images to be sized by their parent element, helping to prevent layout shifts during loading.
The fill prop is a property in Next Image that allows images to fill their parent container while maintaining aspect ratio.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d,5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="PATHNAME">
      <data key="d0">EVENT</data>
      <data key="d1">Pathname refers to the specific path to a resource on a server, here it is '/my-bucket/**' indicating a specific bucket in Amazon S3.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </node>
    <node id="IMAGE SIZING">
      <data key="d0">EVENT</data>
      <data key="d1">Image sizing refers to the methods used to define the dimensions of images in Next.js to prevent layout shifts and improve performance.</data>
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </node>
    <node id="PROTOCOL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </node>
    <node id="MOUNTAINS">
      <data key="d0">GEO</data>
      <data key="d1">Mountains are depicted in the images used in the Next.js application, serving as a visual element in the user interface.
mountains is an image file used in various examples of the Image component to demonstrate responsive and background image features.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9,66669d057195f54843266efcffb93a3b</data>
    </node>
    <node id="OPTIMIZATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Optimizations in Next.js refer to various built-in features designed to improve application speed and performance, enhancing user experience.</data>
      <data key="d2">66669d057195f54843266efcffb93a3b</data>
    </node>
    <node id="ANALYTICS AND MONITORING">
      <data key="d0">EVENT</data>
      <data key="d1">Analytics and Monitoring in Next.js involve integrating tools to track application performance and user interactions, helping developers optimize their applications.
Analytics and Monitoring refers to the processes and tools used to track and analyze the performance of applications, helping developers understand user interactions and application behavior.</data>
      <data key="d2">66669d057195f54843266efcffb93a3b,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </node>
    <node id="FILL CONTAINER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">66669d057195f54843266efcffb93a3b</data>
    </node>
    <node id="STYLESHEET">
      <data key="d0">EVENT</data>
      <data key="d1">A stylesheet is a file that contains CSS rules and is used to style components and pages in a Next.js application.
A stylesheet is a file that contains CSS rules for styling the application, which can be global or modular.
Stylesheet is a file that contains style rules for HTML documents, used to control the appearance of web pages.</data>
      <data key="d2">3a82472230692a8c3ac8444f7738b625,a19a92a20fca1ccc164ea11570a4b26a,b48f64ddd27370c0d0a93447e796c6b3</data>
    </node>
    <node id="CSS-IN-JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CSS-in-JS is a styling approach that allows CSS to be written within JavaScript files, enabling dynamic styling capabilities.
CSS-in-JS is a styling approach that allows developers to write CSS directly within JavaScript files, enabling dynamic styling.
CSS-in-JS is a styling approach that allows developers to write CSS directly within JavaScript, often used in modern web development.
CSS-in-JS is a styling technique where CSS is composed using JavaScript instead of defined in external stylesheets.</data>
      <data key="d2">3a82472230692a8c3ac8444f7738b625,a9a858ea7abac3fe79fa759ea8171597,d405678be18c78d7d78d7a6521a58a56,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="GLOBAL STYLES">
      <data key="d0" />
      <data key="d1">
Global styles are styles that apply to all pages in a Next.js application, ensuring a consistent look and feel.</data>
      <data key="d2">3a82472230692a8c3ac8444f7738b625,a19a92a20fca1ccc164ea11570a4b26a</data>
    </node>
    <node id="BOOTSTRAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bootstrap is a popular front-end framework for developing responsive and mobile-first websites.
Bootstrap is a popular front-end framework for developing responsive and mobile-first websites.</data>
      <data key="d2">a19a92a20fca1ccc164ea11570a4b26a,a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="DEVELOPMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Development is the environment where developers build and test their applications before deploying them to production.</data>
      <data key="d2">a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="MINIFIED CSS">
      <data key="d0">EVENT</data>
      <data key="d1">Minified CSS refers to the process of compressing CSS files to reduce their size for faster loading times in production.</data>
      <data key="d2">a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="APPLICATION STATE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">a9a858ea7abac3fe79fa759ea8171597</data>
    </node>
    <node id="DYNAMIC RESPONSES">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic responses are generated on the server based on user requests, allowing for personalized content delivery.</data>
      <data key="d2">3678e68072101ac922b838851eaa8465</data>
    </node>
    <node id="CMS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Content Management System (CMS) is a software application that enables users to create, manage, and modify content on a website without needing specialized technical knowledge.
A headless CMS is a content management system that provides a way to manage content without a front-end, allowing for flexible data fetching and integration with various platforms.
A Content Management System (CMS) is a software application that allows users to create, manage, and modify content on a website without needing specialized technical knowledge.
A Content Management System (CMS) is a software application that enables users to create, manage, and modify content on a website without needing specialized technical knowledge.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0,3678e68072101ac922b838851eaa8465,98961c89bf003488bbe6223bc946b205,b61989d8657d5b33a55c584f46e7d436</data>
    </node>
    <node id="THIRD-PARTY APIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Third-party APIs are interfaces provided by external services that allow applications to interact with their data and functionality.</data>
      <data key="d2">3678e68072101ac922b838851eaa8465</data>
    </node>
    <node id="CLIENT-SIDE FETCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Client-side fetching refers to the process of retrieving data on the client side, typically using JavaScript, to update the content of a web page dynamically.</data>
      <data key="d2">d96f8e049ce9a691971e1a92b5b556af</data>
    </node>
    <node id="REVALIDATE">
      <data key="d0">EVENT</data>
      <data key="d1">Revalidate is a process in Next.js that allows for the regeneration of static pages on-demand, ensuring that the content is up-to-date.
Revalidate is a feature in Next.js that allows developers to specify how long a resource should be cached before it is considered stale and needs to be fetched again.
Revalidate is an option in Next.js that sets the default revalidation time for a layout or page, affecting how often data is refreshed.
Revalidate is an option used in data fetching to specify the cache lifetime for the fetched data.
Revalidate is a field in getStaticProps that allows for automatic regeneration of a page after a specified amount of time.</data>
      <data key="d2">28003ee6fb44c56e3a5598cedee41343,4ce3b8264c29bdceda24edfe6f9bda41,6b625fce8c9b4b0f729aa3cdc85d284d,8139e8b58a97f9e03ee08d82f3d2858a,d96f8e049ce9a691971e1a92b5b556af</data>
    </node>
    <node id="API ROUTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The API Router in Next.js is a feature that allows developers to create API endpoints within their Next.js application for server-side logic.</data>
      <data key="d2">d96f8e049ce9a691971e1a92b5b556af</data>
    </node>
    <node id="DURABLE STORAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Durable storage refers to the persistent storage solutions used in Next.js for caching and revalidating pages in production environments.</data>
      <data key="d2">d96f8e049ce9a691971e1a92b5b556af</data>
    </node>
    <node id="SWR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SWR is a React hook library created by the team behind Next.js for data fetching, which handles caching and revalidation.
SWR is a data fetching library for React that provides features like caching, revalidation, and more for efficient data fetching.
SWR is a React Hooks library for data fetching, used in the Layout component to manage remote data fetching and caching.
SWR is a React Hooks library for data fetching, providing features like caching and revalidation.</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826,66fea93bb642287d13f3a25b8b3e0083,a8c0873902ebe92185a879561056ce61,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="FORM">
      <data key="d0">EVENT</data>
      <data key="d1">Forms are used in web applications to create and update data, and Next.js provides methods to handle form submissions.
The &lt;Form&gt; component in Next.js extends the HTML &lt;form&gt; element to provide enhanced features like prefetching and client-side navigation on submission.
The &lt;Form&gt; component in Next.js is used to handle form submissions and navigation in a web application.
Form is a component in Next.js that allows for the creation of forms to handle user input and submissions.
Forms in Next.js can invoke Server Actions using the action attribute, allowing for data submission without page refresh.
The Form is an HTML element that allows users to input data and submit it to the server for processing.
The form is an HTML element that allows users to input their email and submit it for signup.
A form is an interactive element in web applications that allows users to input data and submit it for processing.
A form is an interactive element in the application that allows users to input data, such as creating a new to-do item.
A form is an event that allows users to input data, such as email and password, for authentication purposes.
A form is a structured document with fields for user input, often used to collect data from users in applications.
A FORM is a structured document that collects user input, often containing various fields like text inputs, checkboxes, and buttons.
A Form is a web component that collects user input, often including fields like text boxes, checkboxes, and buttons for submission.
A form is a section of a document that contains interactive controls for submitting information.</data>
      <data key="d2">02d5f971b1d69adbfdf2a0cfc42447f7,079ee4d85f6e400435d903fa9074f9e6,0fec562f1c16117484e5946f3f2df826,21ba26eef933ca84de0597d8f7c58f7e,2f2dde2368e46aa812e2a39e32b3505d,439d5be2d39a5b9cedb135d149974680,7510b258e7a4194c8664e8c8ba088ecc,81518acc3db43af0161d599284ff910e,93e4ae7768c14468bccb3caa2eb8fb2b,9ac6b7bdb38f92b5b8fbd5762735c158,9bcc9002428492e349dade67bf61476e,a05256700be9b39d3c9098982e0fa5d4,e9839e578f896e0d269ce78abd50bae3,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="CLIENT-SIDE DATA FETCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Client-side data fetching is the process of retrieving data in the browser, which can impact application performance and load speed.</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826</data>
    </node>
    <node id="PROFILE DATA">
      <data key="d0">EVENT</data>
      <data key="d1">Profile data refers to user-specific information that can be fetched and displayed in applications, often using hooks like useEffect or SWR.</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826</data>
    </node>
    <node id="FORM VALIDATION">
      <data key="d0">EVENT</data>
      <data key="d1">Form validation is the process of ensuring that user input meets certain criteria before it is submitted to the server.
Form validation is the process of ensuring that user input meets certain criteria before it is processed.</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826,1e3e9559f0cf793e96c48297529ec161</data>
    </node>
    <node id="FORM DATA">
      <data key="d0">EVENT</data>
      <data key="d1">Form data refers to the data collected from user input in forms, which can be sent to a server for processing.
Form Data is the structured data collected from the Signup Form, including the user's name, email, and password.
Form data refers to the data submitted through a web form, typically sent to a server for processing.
</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826,17ef311a22a51eef0f55aaf7d03a5ed7,33239b71158a6566c2b82b6a30b68e82,c5461cfa4259c43255132d8f916b1764</data>
    </node>
    <node id="ERROR HANDLING">
      <data key="d0">EVENT</data>
      <data key="d1">Error handling is the process of managing errors that occur during the execution of a program, particularly during data fetching or form submissions.
Error handling in Next.js involves managing expected errors and uncaught exceptions to ensure a smooth user experience.
Error Handling refers to the process of managing errors that occur during the execution of a program, particularly in the context of loading images from storage.</data>
      <data key="d2">0fec562f1c16117484e5946f3f2df826,33239b71158a6566c2b82b6a30b68e82,515a9fba2517051a51ebb09f8a2c2b06</data>
    </node>
    <node id="SUBMIT">
      <data key="d0">EVENT</data>
      <data key="d1">Submit is an event that occurs when a form is submitted, triggering the associated onSubmit function.</data>
      <data key="d2">a0ed25040eb1637a5c82493764f822ac</data>
    </node>
    <node id="LOADING STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Loading state is a visual indication that a process is ongoing, often shown while waiting for a server response.
Loading State is a UI indication that an action is being processed, often represented by a spinner or loading text.</data>
      <data key="d2">8b2761fb86513e3cf4d313a43b80f9fc,a0ed25040eb1637a5c82493764f822ac</data>
    </node>
    <node id="CATCH">
      <data key="d0">EVENT</data>
      <data key="d1">Catch is a block of code that handles errors that may occur during asynchronous operations, such as fetch requests.</data>
      <data key="d2">a0ed25040eb1637a5c82493764f822ac</data>
    </node>
    <node id="FINALLY">
      <data key="d0">EVENT</data>
      <data key="d1">Finally is a block of code that executes after try and catch blocks, regardless of whether an error occurred or not.</data>
      <data key="d2">a0ed25040eb1637a5c82493764f822ac</data>
    </node>
    <node id="API EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example of an API call to fetch data from a specified endpoint, demonstrating how to handle asynchronous data fetching in a React component.</data>
      <data key="d2">66fea93bb642287d13f3a25b8b3e0083</data>
    </node>
    <node id="FETCHER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A fetcher is a function or method used to retrieve data from an API or other data source, often used in conjunction with data fetching libraries like SWR.
</data>
      <data key="d2">66fea93bb642287d13f3a25b8b3e0083,a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="LIB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The lib/ directory in a Next.js project is used to store shared functions and utilities that can be used across different parts of the application, including data fetching logic.</data>
      <data key="d2">98961c89bf003488bbe6223bc946b205</data>
    </node>
    <node id="CLIENT-SIDE">
      <data key="d0">EVENT</data>
      <data key="d1">Client-side refers to operations that are performed in the user's browser, including rendering and interaction with the user interface after the page has been loaded.</data>
      <data key="d2">98961c89bf003488bbe6223bc946b205</data>
    </node>
    <node id="INITIAL RENDER">
      <data key="d0">EVENT</data>
      <data key="d1">Initial render is the first time a web page is displayed to the user, which can be optimized using static generation techniques like getStaticProps.</data>
      <data key="d2">98961c89bf003488bbe6223bc946b205</data>
    </node>
    <node id="CDN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Content Delivery Network (CDN) is a system of distributed servers that deliver web content to users based on their geographic location, improving load times and performance.
A Content Delivery Network (CDN) is a system of distributed servers that deliver web content to users based on their geographic location.
A Content Delivery Network (CDN) is a system of distributed servers that deliver web content to users based on their geographic location.
A Content Delivery Network (CDN) is a system of distributed servers that deliver web content to users based on their geographic location.</data>
      <data key="d2">249a768c4964d383be47267af810ece7,4443464e7a2cb4bcbbf667881fecb236,95c47d77c6b1c1b930bbbff2c9d1facf,b61989d8657d5b33a55c584f46e7d436</data>
    </node>
    <node id="AUTHENTICATION AND AUTHORIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Authentication and Authorization are use cases for Middleware that ensure user identity and access control before granting access to specific pages or API routes.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="SERVER-SIDE REDIRECTS">
      <data key="d0">EVENT</data>
      <data key="d1">Server-Side Redirects are a Middleware feature that allows redirection of users based on certain conditions before the request is completed.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="PATH REWRITING">
      <data key="d0">EVENT</data>
      <data key="d1">Path Rewriting is a Middleware capability that dynamically rewrites paths to API routes or pages based on request properties.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="BOT DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Bot Detection is a Middleware use case that protects resources by identifying and blocking bot traffic.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="LOGGING AND ANALYTICS">
      <data key="d0">EVENT</data>
      <data key="d1">Logging and Analytics involve capturing and analyzing request data for insights before processing by the page or API.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="FEATURE FLAGGING">
      <data key="d0">EVENT</data>
      <data key="d1">Feature Flagging is a Middleware strategy that enables or disables features dynamically for seamless rollouts or testing.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="HEAVY COMPUTATIONAL TASKS">
      <data key="d0">EVENT</data>
      <data key="d1">Heavy Computational Tasks are processes that should not be handled by Middleware due to potential delays in page load.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="DIRECT DATABASE OPERATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Direct Database Operations are discouraged within Middleware and should be managed by dedicated Route Handlers or server-side utilities.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="MATCHING PATHS">
      <data key="d0">EVENT</data>
      <data key="d1">Matching Paths refers to the process of determining which routes Middleware will be invoked for in a Next.js application.</data>
      <data key="d2">1d629a9403a987213102a9bfd769f290</data>
    </node>
    <node id="MATCHER">
      <data key="d0">EVENT</data>
      <data key="d1">Matcher is a configuration in Middleware that allows filtering of which paths the Middleware will run on.)&lt;|COMPLETE|&gt;
Matcher is a property in the config object that defines the paths where the middleware applies, allowing for targeted request handling.
Matcher is a configuration setting in Next.js middleware that determines which paths the middleware will run on, allowing for targeted request processing.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,1d629a9403a987213102a9bfd769f290,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">Headers are key-value pairs sent in requests and responses that provide essential information about the request or response.</data>
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="SITEMAP.XML">
      <data key="d0">EVENT</data>
      <data key="d1">Sitemap.xml is a file that provides information about the pages, videos, and other files on a site, and how they relate to each other.
Sitemap.xml is the XML file that lists the URLs of ACME's website to assist search engines in indexing the site.</data>
      <data key="d2">85fc82d441624fc7d477f417afcce94e,db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="ROBOTS.TXT">
      <data key="d0">EVENT</data>
      <data key="d1">Robots.txt is a text file that instructs web crawlers and bots about which pages to crawl or not to crawl on a website.
Robots.txt is a file that instructs search engine crawlers on which URLs to access on a website.
A robots.txt file is a standard used by websites to communicate with web crawlers and other web robots about which pages should not be crawled.
Robots.txt is a file used to manage and control how search engines crawl and index a website, automatically added to the application by Next.js if placed in the app directory.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,5791705a1f965d3a768f111e7fdcade1,a67099d1f0ea66a70c07e9595443231a,db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="NEXT-ROUTER-PREFETCH">
      <data key="d0">EVENT</data>
      <data key="d1">Next-router-prefetch is a header used in Next.js to indicate that a request is a prefetch request for faster navigation.</data>
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="PURPOSE">
      <data key="d0">EVENT</data>
      <data key="d1">Purpose is a header that can indicate the intent of a request, such as whether it is for prefetching resources.</data>
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="X-PRESENT">
      <data key="d0">EVENT</data>
      <data key="d1">X-present is a custom header that may be used to indicate the presence of certain features or states in a request.</data>
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="X-MISSING">
      <data key="d0">EVENT</data>
      <data key="d1">X-missing is a custom header that may indicate the absence of certain features or states in a request.</data>
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="FAVICON.ICO">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">db459e8194ba2f087761e7727b876b9d</data>
    </node>
    <node id="RESPONSE COOKIES">
      <data key="d0">EVENT</data>
      <data key="d1">Response Cookies are used to store data on the client side, allowing for stateful sessions in web applications.</data>
      <data key="d2">a30c1b22a2bba568f986171e6685170b</data>
    </node>
    <node id="ANALYTICS PLATFORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An analytics platform is a service that collects and analyzes data from web applications, often used in conjunction with middleware for tracking user interactions.</data>
      <data key="d2">a30c1b22a2bba568f986171e6685170b</data>
    </node>
    <node id="RUNTIME">
      <data key="d0">EVENT</data>
      <data key="d1">The runtime refers to the environment in which the Next.js middleware operates, specifically the Edge runtime for performance and scalability.
The period during which a web application is running and can respond to user interactions and requests dynamically.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89,c8d58fd330c4f217c52b50590414e517</data>
    </node>
    <node id="INTERNATIONALIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Internationalization (i18n) in Next.js refers to the built-in support for routing based on different locales, enhancing the user experience for global audiences.
Internationalization is the process of designing a software application so that it can be adapted to various languages and regions without engineering changes.
</data>
      <data key="d2">3b86536c72cd33dea29dc82250012d80,7eb4739e8bed8bf13646d7e252c1ae14,c8d58fd330c4f217c52b50590414e517</data>
    </node>
    <node id="LEGACY PREFIXES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Legacy prefixes are specific URL patterns that can be handled differently in Next.js middleware to maintain compatibility with older routes.</data>
      <data key="d2">c8d58fd330c4f217c52b50590414e517</data>
    </node>
    <node id="URL NORMALIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">URL normalization is a process in Next.js that ensures consistent URL formats, which can be disabled for specific use cases.</data>
      <data key="d2">c8d58fd330c4f217c52b50590414e517</data>
    </node>
    <node id="EXAMPLE.NL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Example.nl is a domain that serves the Dutch language and handles locale routing for Dutch-speaking users.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="EXAMPLE.FR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Example.fr is a domain that serves the French language and handles locale routing for French-speaking users.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="LOCALE STRATEGIES">
      <data key="d0">EVENT</data>
      <data key="d1">Locale strategies refer to the methods used to handle different languages and locales in web applications, specifically in Next.js.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="SUB-PATH ROUTING">
      <data key="d0">EVENT</data>
      <data key="d1">Sub-path routing is a locale handling strategy that includes the locale in the URL path for routing purposes.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="DOMAIN ROUTING">
      <data key="d0">EVENT</data>
      <data key="d1">Domain routing is a locale handling strategy that serves different locales from different domains.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="AUTOMATIC LOCALE DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Automatic locale detection is a feature that identifies a user's preferred locale based on their browser settings and redirects them accordingly.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="DEFAULT LOCALE">
      <data key="d0">EVENT</data>
      <data key="d1">The default locale is the primary language setting used when no specific locale is detected or specified by the user.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="ACCEPT-LANGUAGE HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">The Accept-Language header is an HTTP header used by browsers to indicate the user's preferred languages for content delivery.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="URL PATH">
      <data key="d0">EVENT</data>
      <data key="d1">URL path refers to the specific address structure used in web applications to access different resources, including locale-specific content.
The URL path in Next.js is the address used to access different routes defined by the folder structure in the app directory.
URL paths in Next.js are the addresses that map to specific components or pages within the application, defined by the routing structure.
The URL path is a part of the web address that comes after the domain and is composed of segments that define the routing structure in Next.js.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,3615d6509a88bbb31eac0bc56f78c2f6,5214aa930e0680c0e176373359966818,839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="PAGES/BLOG.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Pages/blog.js is an example of a file in a Next.js application that can be routed to different locales based on the configuration.</data>
      <data key="d2">839413fc3a58298ee6809914ff2ed3f7</data>
    </node>
    <node id="TRAILING SLASH">
      <data key="d0">EVENT</data>
      <data key="d1">Trailing slash refers to the practice of adding a slash at the end of URLs, which can affect routing and content delivery in web applications.
Trailing Slash is a configuration option in Next.js that controls URL redirection behavior regarding trailing slashes.
Trailing Slash is a configuration option in Next.js that determines whether URLs should end with a slash or not, affecting routing behavior.
Trailing slash is a configuration option in Next.js that determines whether URLs should end with a slash, affecting routing behavior.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b,815b3c1f78ab2336e7e5bdae07b49d2b,839413fc3a58298ee6809914ff2ed3f7,89def9941cbf0a381e1e4a28a703e201</data>
    </node>
    <node id="HREFLANG">
      <data key="d0">EVENT</data>
      <data key="d1">hreflang is an HTML attribute used to specify the language and regional targeting of a webpage, helping search engines serve the correct language version to users.</data>
      <data key="d2">7cd464b0f42ff05e87fa7e149d7e2997</data>
    </node>
    <node id="CUSTOM 404 PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom 404 page is created in Next.js to handle not found errors, improving user experience and server performance.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="CUSTOM 500 PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom 500 page is created in Next.js to handle server-side errors, providing a better user experience.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="ERROR COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Error component in Next.js is used to handle and display error messages for both client-side and server-side errors.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="PAGES/_APP">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/_app file in Next.js is used to customize the default App component, allowing for shared layouts and global CSS.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="PAGES/404.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/404.js file is where a custom 404 page is defined in Next.js, which is statically generated at build time.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="PAGES/500.JS">
      <data key="d0">EVENT</data>
      <data key="d1">The pages/500.js file is where a custom 500 page is defined in Next.js, which is also statically generated at build time.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="CUSTOM ROUTING">
      <data key="d0">EVENT</data>
      <data key="d1">Custom routing in Next.js allows developers to define specific routes and behaviors for their applications.</data>
      <data key="d2">e5dd9b12a829becf46c92a1a02044920</data>
    </node>
    <node id="ROUTE HANDLERS">
      <data key="d0">EVENT</data>
      <data key="d1">Route Handlers are a feature in the App Router of Next.js that provide an alternative to API Routes for handling requests.
Route Handlers are custom request handlers in Next.js that allow developers to define how to respond to HTTP requests for specific routes.

Route Handlers are a new way to create custom request handlers for specific routes using the Web Request and Response APIs in the app directory.
Route Handlers in Next.js are used to handle HTTP requests and can generate static responses during the build process.
Route Handlers are events that manage API requests and responses, ensuring user authentication and authorization.
Route Handlers in Next.js are functions that handle requests and responses for specific routes, enabling server-side logic.
Route Handlers are functions that handle incoming requests to specific routes in a web application, often used in conjunction with middleware for processing requests.
Route Handlers in Next.js allow for custom request handling for specific routes using the Web Request and Response APIs.
Route handlers in Next.js are functions that handle HTTP requests for specific routes in an application.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51,2d13fb0b0bfe03d14a0f41e4d7920e31,407c79602db9cac967822f4d34fa94d2,52bf7bb5a492d2cb5b2f5f06d6507a81,64c02a535c1519ef24ded4a2a368f2be,72e1433a8550144aaf1d1fd8f3cb3774,8139e8b58a97f9e03ee08d82f3d2858a,a332c6db30f7b29cd4dcb1117bd6eab3,dc74aa0cbe86d8235a59d0f6809f6184,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="HTTP METHODS">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP Methods refer to the different types of requests (GET, POST, etc.) that can be handled in API routes.
HTTP Methods are the set of request methods supported by Route Handlers in Next.js, including GET, POST, PUT, PATCH, DELETE, HEAD, and OPTIONS.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51,64c02a535c1519ef24ded4a2a368f2be</data>
    </node>
    <node id="BODY PARSER">
      <data key="d0">EVENT</data>
      <data key="d1">Body Parser is a middleware in Next.js API Routes that parses incoming request bodies.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51</data>
    </node>
    <node id="REQUEST HELPERS">
      <data key="d0">EVENT</data>
      <data key="d1">Request Helpers are built-in utilities in Next.js API Routes that assist in handling incoming requests.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51</data>
    </node>
    <node id="RESPONSE HELPERS">
      <data key="d0">EVENT</data>
      <data key="d1">Response Helpers are methods provided in Next.js API Routes to facilitate sending responses to clients.</data>
      <data key="d2">08316a3a770ad75c98250e17ce7ddf51</data>
    </node>
    <node id="EXPRESS.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Express.js is a web application framework for Node.js, designed for building web applications and APIs with a robust set of features.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335</data>
    </node>
    <node id="CLIENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A client is a computer or software that requests services or resources from a server in a networked environment.
Client refers to the part of the application that runs on the user's browser, handling user interactions and rendering components dynamically.
The client refers to the user's device, typically a browser, that sends requests to the server and renders the user interface.
The client refers to the user's browser environment where the Next.js application is rendered and interacted with.

Client is the service that interacts with the Real Estate Property model to perform operations like delete and update.
The client refers to the Amplify Data client that allows interaction with the GraphQL API to perform queries and mutations.
The client refers to the end-user or application that interacts with the backend services to perform operations like create, read, update, and delete data.
The client refers to the application or user that interacts with the AWS Amplify services to perform operations like creating records and uploading files.
Client is a generated instance in Amplify that allows interaction with the defined data schema.
The client is an entity that interacts with the models to perform operations such as creating, updating, and retrieving data.
A client is an application that interacts with the data models to fetch and manipulate posts and person data.
Client is a generated instance in AWS Amplify that interacts with the data models and manages subscriptions.
The client refers to the instance of the Data client that interacts with the backend data schema in AWS Amplify.
The client in AWS Amplify is a generated instance that allows interaction with the backend services, including data operations like create, read, update, and delete.
Client refers to the application or service that interacts with AWS Amplify to perform data operations.
The client refers to the instance of the Amplify Data service that is used to make API requests to the backend.
The client is an instance of the Amplify library that interacts with the backend to perform operations like create, read, update, and delete on data models.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,0540b18a392d2ccc8d9b4915eed9acfe,06d355f57266e139e2c21ab1cbe5f8e6,07423380fe232270f2991cb99f038a6e,0a447cfbac33fa416ddcd2ffd57d0335,1950a5e06a03170ed4dc66a00668ea47,1b3c3a93e182b501d03ffb0b41273e30,1d8a8421d5e948b0b12a0f554b2ac95e,374f53811273c5cffe3558d227a0e4ec,455e168c432979d018ea3d145e2547b5,502c34bc5ff7e00594c0a0d9df58834d,5acf474a9e428eea738206bbcbd17f29,61cf173fbdd2221f3bcf1bc2a4df1840,729c604ddd30e8eb3491209028c25dde,92bcd3df485df362e04da4f60878ff3b,b79fdaa9cac2c2fbf9ccc392ed341f6e,f0df8a5e739e43b9c43840817e1bd7d1,f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="ASYNC OPERATION">
      <data key="d0">EVENT</data>
      <data key="d1">An async operation is a process that runs independently of the main program flow, allowing other operations to continue while waiting for the async task to complete.</data>
      <data key="d2">0a447cfbac33fa416ddcd2ffd57d0335</data>
    </node>
    <node id="BODY">
      <data key="d0">EVENT</data>
      <data key="d1">BODY is the main section of an HTML document that contains the content of the web page.
Body refers to the data payload that is sent with a network request, often containing information to be processed by the server.
The body tag in HTML is used to define the main content of a web page, which is also defined in the root layout of a Next.js application.
The &lt;body&gt; element in HTML contains the content of the document, including text, images, and other media.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,91a237014868fc106c5edbdc4ad2b520,a5566406ae5db585eb3829f4a25e7025,c4efc37a62b19ea7ba04b6eccea112c5</data>
    </node>
    <node id="MAIN">
      <data key="d0">EVENT</data>
      <data key="d1">MAIN is a semantic HTML element that represents the main content of the document.
The &lt;Main&gt; component in Next.js is used to render the main content of the application.
Main is the entry point of the application where the Amplify configuration is loaded and initialized for use in the app.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,6980c90f0a7a58894d9518accd2ab5dd,c4efc37a62b19ea7ba04b6eccea112c5</data>
    </node>
    <node id="NEXTSCRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">NextScript is a component in Next.js that is used to include scripts in the document.
The &lt;NextScript&gt; component in Next.js is used to include scripts necessary for the application to function.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,c4efc37a62b19ea7ba04b6eccea112c5</data>
    </node>
    <node id="DOCUMENTINITIALPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DocumentInitialProps is a type that defines the initial properties that can be passed to a Next.js document component during server-side rendering.</data>
      <data key="d2">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </node>
    <node id="DOCUMENTCONTEXT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </node>
    <node id="LAYOUT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Layout is a component in Next.js that provides a consistent structure for pages, including navigation and footer elements.
Layouts in Next.js are structures that define the overall design and organization of pages, allowing for consistent UI across different routes.
Layout is a component in a React application that wraps around children components and manages the overall structure of the application.
Layout refers to the structure of a page in Next.js that can include static and dynamic metadata and components.
In Next.js, layout refers to the structure of a page that can include metadata and other components for rendering.

Layouts in Next.js are used to define the structure and design of pages, allowing for consistent UI across different routes.
A layout is a structure in Next.js that allows for shared UI components across multiple routes, preserving state and interactivity during navigation.
Layouts in Next.js are components that persist across routes and maintain state, providing a consistent structure for the application.
A layout in Next.js is a special file that provides shared UI for a route segment and its children, enhancing the user experience.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,1487c7dd4403a73c173d49bf2f73e2d8,1b3c3a93e182b501d03ffb0b41273e30,1d855e055624fb34345331017d371137,4dfb13dff74e4dc45c19d4d71fe1a443,5214aa930e0680c0e176373359966818,64c02a535c1519ef24ded4a2a368f2be,a8c0873902ebe92185a879561056ce61,bb9110629910b21a122e4dbd23ba9236,dea59f788f9645dcf527f4f5f4f12ae7</data>
    </node>
    <node id="NAVBAR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Navbar is a component that displays navigation links for the application, allowing users to navigate between different pages.
The docs navbar in Next.js documentation organizes pages sequentially, aiding users in following the documentation step-by-step.</data>
      <data key="d2">a8c0873902ebe92185a879561056ce61,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="FOOTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Footer is a component that typically contains copyright information and additional links at the bottom of the page.</data>
      <data key="d2">a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="ROUTING">
      <data key="d0">EVENT</data>
      <data key="d1">Routing in Next.js refers to the process of navigating between different pages in a web application, including handling redirects and dynamic routes.
Routing in Next.js refers to the mechanism of navigating between different pages or components in a web application.
Routing in Next.js refers to the mechanism of defining how URLs map to specific pages or components in the application.
Routing in Next.js refers to the process of navigating between different pages or components within the application, often involving dynamic segments and catch-all routes.
Routing in Next.js refers to the process of defining how URLs map to specific components or pages in the application.
Routing in Next.js refers to the system that maps folders and files to URL segments, allowing for the creation of nested routes and publicly accessible pages.</data>
      <data key="d2">1d855e055624fb34345331017d371137,2e4837fd908fed547d3170725336a52e,3b86536c72cd33dea29dc82250012d80,5214aa930e0680c0e176373359966818,a50f51132c97b3887f2b21ed846fa020,a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="REDIRECTING">
      <data key="d0">EVENT</data>
      <data key="d1">Redirecting is an event in Next.js that allows developers to send users from one URL to another, often used for managing URL changes or user authentication.
Redirecting in Next.js involves managing how users are redirected from one URL to another, often after a specific event or action.</data>
      <data key="d2">5214aa930e0680c0e176373359966818,a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="AUTHENTICATE">
      <data key="d0">EVENT</data>
      <data key="d1">Authenticate is an event that checks if a user is logged in or has the necessary permissions to access certain pages in a web application.</data>
      <data key="d2">a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="NEXTCONFIG.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">next.config.js is a configuration file in Next.js that allows developers to customize various settings, including redirects and other application behaviors.</data>
      <data key="d2">a8c0873902ebe92185a879561056ce61</data>
    </node>
    <node id="BLOOM FILTER">
      <data key="d0">EVENT</data>
      <data key="d1">A Bloom filter is a data structure that helps in checking the existence of an element in a set, used here for optimizing redirect lookups.
A Bloom filter is a space-efficient probabilistic data structure used to test whether an element is a member of a set, allowing for fast membership queries.</data>
      <data key="d2">3bade0d5baadc8c11b8cf85372738fdd,84b5c29553feb2883a2e93ffbac5b791</data>
    </node>
    <node id="REDIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Redis is an in-memory data structure store, used as a database, cache, and message broker, often utilized for fast data retrieval.
Redis is an in-memory data structure store, used as a database, cache, and message broker, known for its speed and efficiency in data retrieval.</data>
      <data key="d2">3bade0d5baadc8c11b8cf85372738fdd,84b5c29553feb2883a2e93ffbac5b791</data>
    </node>
    <node id="LOGIN PAGE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3bade0d5baadc8c11b8cf85372738fdd</data>
    </node>
    <node id="HOME">
      <data key="d0">EVENT</data>
      <data key="d1">Home is a page in the Next.js application that serves as the landing page for users.
The home event refers to the redirection of users to the home page of the application, typically after a successful request or action.
Home is a component in the application that serves as the main entry point for users.
Home is a component that displays a welcome message to the authenticated user and provides a sign-out button.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24,abdfd668c78186087ff9da2146979893,d4880ef934642aac0f85ca34038b847d,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="FILTER">
      <data key="d0" />
      <data key="d1">
Filter is a query operation that allows users to retrieve specific data based on defined criteria in the Customer model.
Filter is a feature in AWS Amplify that allows users to define conditions for subscription events, controlling which events are received.
Filters are criteria used to narrow down data results in queries, enhancing data retrieval efficiency.</data>
      <data key="d2">61cf173fbdd2221f3bcf1bc2a4df1840,a3d633e1c801de300a4724738b7290c3,d4880ef934642aac0f85ca34038b847d,f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="DYNAMIC SEGMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Segments are placeholders in Next.js routes that allow for dynamic data to be included in the URL structure.
Dynamic segments are placeholders in the URL that can be filled with variable data, allowing for the creation of routes based on dynamic content.</data>
      <data key="d2">59f479f2a59b233e2c0b4bfcfce952a8,a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="CATCH-ALL SEGMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Catch-all Segments in Next.js are used to match multiple segments in a URL, allowing for more flexible routing options.
Catch-all segments in Next.js allow for matching multiple URL paths under a single route, enabling flexible routing structures.</data>
      <data key="d2">59f479f2a59b233e2c0b4bfcfce952a8,a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="OPTIONAL CATCH-ALL SEGMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Optional Catch-all Segments allow routes to match even when the parameter is not provided, enhancing routing flexibility in Next.js.</data>
      <data key="d2">59f479f2a59b233e2c0b4bfcfce952a8</data>
    </node>
    <node id="BIGINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BigInt represents a whole number with arbitrary precision in programming contexts.
Bigint is a numeric data type in SQL that can store very large integer values, typically ranging from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="BIGINT64ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BigInt64Array represents a typed array of 64-bit signed integers in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="BIGUINT64ARRAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BigUint64Array represents a typed array of 64-bit unsigned integers in programming contexts.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="BOOLEAN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Boolean represents a logical entity that can have two values: true and false.
Boolean is a synonym for the bool data type in SQL, used to store true or false values.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="DATAVIEW">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DataView represents a generic view of an ArrayBuffer in programming contexts.
DataView is a JavaScript object that provides a low-level interface for reading and writing multiple number types in an ArrayBuffer.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="DATE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Date represents a single moment in time in a platform-independent format.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="DOMEXCEPTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DOMException represents an error that occurs in the Document Object Model (DOM).</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="FUNCTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Function represents a block of code designed to perform a particular task in programming contexts.
Function is a fundamental building block in JavaScript that allows for the encapsulation of code into reusable blocks.
A function in this context refers to a specific piece of code that performs a task, often in response to an event.
A function in AWS Amplify is a piece of code that can be executed in response to events, such as API calls or scheduled tasks.
A function in this context refers to a piece of code that is executed in response to an event, often used in serverless architectures to handle requests and perform operations.

A function in the context of AWS Amplify refers to a server-side operation that can be executed, such as adding a user to a group.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a,23f821c071cb4c4cf183f5aac596db35,6a2f21642257c922b2659f7bb932521a,99aea11e8e00a31189977a03ce528a10,bc4893f2f489d14f0975fa64ffca1df8,c3958c03e7b6908e78ca65d6563b3555,dcf0763f48070d41b43f528c6ac2928a</data>
    </node>
    <node id="WEBAASSEMBLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WebAssembly provides access to WebAssembly, a binary instruction format for a stack-based virtual machine.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="UNSUPPORTED APIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Unsupported APIs in the Edge Runtime include native Node.js APIs and certain JavaScript language features.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="CLEARTIMEOUT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">clearTimeout cancels a timed, repeating action which was previously established by a call to setTimeout().</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="DECODEURI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">decodeURI decodes a Uniform Resource Identifier (URI) previously created by encodeURI or by a similar routine.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="DECODEURICOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">decodeURIComponent decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="ENCODEURI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">encodeURI encodes a Uniform Resource Identifier (URI) by replacing certain characters with escape sequences representing the UTF-8 encoding of the character.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="ENCODEURICOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">encodeURIComponent encodes a Uniform Resource Identifier (URI) component by replacing certain characters with escape sequences representing the UTF-8 encoding of the character.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="EVALERROR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">EvalError represents an error that occurs regarding the global function eval().</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="WEAKMAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WeakMap represents a collection of key/value pairs in which the keys are weakly referenced.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="WEAKSET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">WeakSet represents a collection of objects in which each object may occur only once.</data>
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="CLEARINTERVAL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">22aa4f927a16210ebb8804ace28ec79a</data>
    </node>
    <node id="ES MODULES">
      <data key="d0">EVENT</data>
      <data key="d1">ES Modules are a standardized module system in JavaScript that allows for the import and export of code between different files.</data>
      <data key="d2">99aea11e8e00a31189977a03ce528a10</data>
    </node>
    <node id="SASS/SCSS">
      <data key="d0">EVENT</data>
      <data key="d1">Sass/SCSS is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS).</data>
      <data key="d2">99aea11e8e00a31189977a03ce528a10</data>
    </node>
    <node id="OPTIMIZING">
      <data key="d0">EVENT</data>
      <data key="d1">Optimizing refers to the process of improving the performance and efficiency of a Next.js application.</data>
      <data key="d2">816401f1962be5373b03365c403e3a92</data>
    </node>
    <node id="DEPLOYING">
      <data key="d0">EVENT</data>
      <data key="d1">Deploying is the process of making a Next.js application available for users on the web.</data>
      <data key="d2">816401f1962be5373b03365c403e3a92</data>
    </node>
    <node id="UPGRADING">
      <data key="d0">EVENT</data>
      <data key="d1">Upgrading refers to the process of updating a Next.js application to a newer version to take advantage of new features and improvements.</data>
      <data key="d2">816401f1962be5373b03365c403e3a92</data>
    </node>
    <node id="CREATE NEXT APP">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">816401f1962be5373b03365c403e3a92</data>
    </node>
    <node id="DARCY">
      <data key="d0">PERSON</data>
      <data key="d1">Darcy is a fictional character often used in examples, representing a typical user or developer in programming contexts.</data>
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="HTTPS CERTIFICATE FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A file that contains the SSL certificate used to authenticate the server in HTTPS connections.</data>
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="HTTPS CA FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A file that contains the certificate authority's certificate, used to verify the authenticity of the SSL certificate.</data>
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="BUILD">
      <data key="d0">EVENT</data>
      <data key="d1">The process of compiling and optimizing the application for production deployment in Next.js.
Build refers to the process of compiling and preparing an application for deployment in Amplify.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="START">
      <data key="d0">EVENT</data>
      <data key="d1">The command used to start a Next.js application in production mode after it has been built.</data>
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="INFO">
      <data key="d0">EVENT</data>
      <data key="d1">A command that prints relevant details about the current system and Next.js setup for debugging purposes.
The info command generates information on the system, binaries, npm packages, and environment variables for troubleshooting issues.
Info refers to the styling and design elements used in Amplify's components to convey informational messages.
An Info alert in Amplify UI provides general information to the user, often used to convey non-critical messages.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b,37ea4ea73ecb3370ad928dc71b30f77f,c7af2749681510be539a408772ae1755,f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="LINT">
      <data key="d0">EVENT</data>
      <data key="d1">A command that runs ESLint to check for code quality and potential errors in the application.</data>
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="HTTPS KEY FILE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f85230e3fc997d23be219ba313c72951</data>
    </node>
    <node id="CUMULATIVE LAYOUT SHIFT">
      <data key="d0">EVENT</data>
      <data key="d1">Cumulative Layout Shift (CLS) is a metric that measures visual stability by quantifying how much the page layout shifts during the loading phase.
Cumulative Layout Shift (CLS) is a web performance metric that measures the visual stability of a page by quantifying how much the content shifts during the loading phase.</data>
      <data key="d2">1a9f90261d97f4e9455bb0fa22f4ee9c,6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="LARGEST CONTENTFUL PAINT">
      <data key="d0">EVENT</data>
      <data key="d1">Largest Contentful Paint (LCP) measures the time it takes for the largest content element to become visible in the viewport.
Largest Contentful Paint (LCP) is a web performance metric that measures the time it takes for the largest content element to be rendered on the screen.</data>
      <data key="d2">1a9f90261d97f4e9455bb0fa22f4ee9c,6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="EXPERIMENTAL HTTPS">
      <data key="d0">EVENT</data>
      <data key="d1">Experimental HTTPS is a feature in Next.js that allows developers to use HTTPS during development for secure environments.</data>
      <data key="d2">1a9f90261d97f4e9455bb0fa22f4ee9c</data>
    </node>
    <node id="EXPERIMENTAL">
      <data key="d0">EVENT</data>
      <data key="d1">Experimental features in Next.js are new functionalities that are still under development and may change in future releases.
An artwork titled 'Experimental' created by artist Bruno Thethe.
Experimental is an artwork created by artist Bruno Thethe, showcasing unique artistic techniques.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,9726f4ae30b11539c429ff41c8326d46,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="SWR DELTA">
      <data key="d0">EVENT</data>
      <data key="d1">SWR Delta is a configuration option in Next.js that specifies a custom stale-while-revalidate period for CDNs.</data>
      <data key="d2">89def9941cbf0a381e1e4a28a703e201</data>
    </node>
    <node id="TRANSPILE PACKAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Transpile Packages is a feature in Next.js that allows automatic transpilation and bundling of dependencies from local packages or external dependencies.</data>
      <data key="d2">89def9941cbf0a381e1e4a28a703e201</data>
    </node>
    <node id="STALERTIMES">
      <data key="d0">EVENT</data>
      <data key="d1">StaleTimes is an experimental feature in Next.js that enables caching of page segments in the client-side router cache.</data>
      <data key="d2">fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="SERVER EXTERNAL PACKAGES">
      <data key="d0" />
      <data key="d1">
Server External Packages are packages that can be utilized in server-side applications to extend capabilities and features.</data>
      <data key="d2">16332d9a8715d2cac034c2aa3c4f12f6,fc0ba612fedfd66b2e97651149105594</data>
    </node>
    <node id="SERVER COMPONENTS EXTERNAL PACKAGES">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">16332d9a8715d2cac034c2aa3c4f12f6</data>
    </node>
    <node id="MY-PROXY.COM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">My-proxy.com is a domain that is used as an allowed origin for Server Actions in Next.js applications.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b</data>
    </node>
    <node id="SERVER ACTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Server Actions are a feature in Next.js that allows server-side functions to be invoked from client-side code, enhancing the interactivity of applications.
Server Actions are events that perform operations on the server, requiring user authentication and role verification.
Server Actions are operations that are executed on the server side, often in response to user interactions or events.
Server Actions are asynchronous functions executed on the server to handle form submissions and data mutations in Next.js applications.
Server Actions are a feature in Next.js that allows server-side functions to be invoked from client-side components, enhancing the interactivity of applications while maintaining security.
Server Actions in Next.js are functions that handle server-side logic, including error management and user actions like creating a user.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,10386033375aedc4b4d87fd57d246c1b,2f2dde2368e46aa812e2a39e32b3505d,33239b71158a6566c2b82b6a30b68e82,407c79602db9cac967822f4d34fa94d2,ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="ALLOWED ORIGINS">
      <data key="d0">EVENT</data>
      <data key="d1">Allowed Origins is a configuration setting in Next.js that specifies which domains can invoke Server Actions, enhancing security against CSRF attacks.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b</data>
    </node>
    <node id="BODY SIZE LIMIT">
      <data key="d0">EVENT</data>
      <data key="d1">Body Size Limit is a configuration option in Next.js that sets the maximum size of the request body for Server Actions to prevent excessive resource consumption.</data>
      <data key="d2">10386033375aedc4b4d87fd57d246c1b</data>
    </node>
    <node id="CUSTOM ROUTES PROXYING ENDPOINT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">10386033375aedc4b4d87fd57d246c1b</data>
    </node>
    <node id="SERVER COMPONENTS HMR CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">An experimental feature in Next.js that allows caching of fetch responses during Hot Module Replacement in local development.</data>
      <data key="d2">8c16e2baedacd39ce0384eac61e5ee79</data>
    </node>
    <node id="REACT STRICT MODE">
      <data key="d0">EVENT</data>
      <data key="d1">A development mode feature in React that helps identify potential problems in an application.</data>
      <data key="d2">8c16e2baedacd39ce0384eac61e5ee79</data>
    </node>
    <node id="FETCH CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">Fetch cache refers to the caching mechanism used to store responses from fetch requests, improving performance and reducing API call costs.</data>
      <data key="d2">8c16e2baedacd39ce0384eac61e5ee79</data>
    </node>
    <node id="HEADER, COOKIE, AND QUERY MATCHING">
      <data key="d0">EVENT</data>
      <data key="d1">Header, cookie, and query matching is a feature in Next.js that allows redirects to be applied based on specific header, cookie, or query parameters.</data>
      <data key="d2">de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="BASEPATH SUPPORT">
      <data key="d0">EVENT</data>
      <data key="d1">BasePath support in Next.js allows developers to define a base path for all routes, simplifying the management of nested routes.</data>
      <data key="d2">de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="I18N SUPPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Internationalization (i18n) support in Next.js enables developers to create applications that can handle multiple languages and locales.
</data>
      <data key="d2">21183997adb6288a64caa86bfd107612,de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="MATCHING CHARACTERS">
      <data key="d0">EVENT</data>
      <data key="d1">Matching characters are special characters used in Next.js routing to define patterns for URL matching, such as *, +, and ?.</data>
      <data key="d2">de5d774b63da599b2e72cb96a3e61337</data>
    </node>
    <node id="REACT COMPILER">
      <data key="d0">EVENT</data>
      <data key="d1">The React Compiler is a feature introduced in Next.js 15 RC that optimizes component rendering for better performance.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="BABEL PLUGIN REACT COMPILER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Babel plugin that enables the use of the React Compiler in Next.js applications.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="VERSION 13.3.0">
      <data key="d0">EVENT</data>
      <data key="d1">A version update of Next.js that introduced new features and improvements.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="VERSION 10.2.0">
      <data key="d0">EVENT</data>
      <data key="d1">A version update of Next.js that added new functionalities.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="VERSION 9.5.0">
      <data key="d0">EVENT</data>
      <data key="d1">A version update of Next.js that introduced redirects.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="REACT MAX HEADERS LENGTH">
      <data key="d0">EVENT</data>
      <data key="d1">An option in Next.js that allows configuration of the maximum length of headers emitted by React during static rendering.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="PRODUCTION BROWSER SOURCE MAPS">
      <data key="d0">EVENT</data>
      <data key="d1">A configuration option in Next.js that enables source map generation during production builds.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="REVERSE PROXY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A server that sits between a client and a web server, which can affect how headers are processed.</data>
      <data key="d2">21183997adb6288a64caa86bfd107612</data>
    </node>
    <node id="PARTIAL PRERENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">Partial Prerendering (PPR) is a feature in Next.js that allows developers to combine static and dynamic components in the same route, enhancing performance and flexibility.
Partial Prerendering is a feature in Next.js that allows combining static and dynamic components in the same route for improved performance.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5,4d99e596a43a5b336e12425953d3a120</data>
    </node>
    <node id="CONFIGURATION FLAG">
      <data key="d0">EVENT</data>
      <data key="d1">A configuration flag in Next.js is a setting that can be enabled or disabled to modify the behavior of the framework, such as enabling source map generation or PPR.</data>
      <data key="d2">4d99e596a43a5b336e12425953d3a120</data>
    </node>
    <node id="SERVER.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Server.js is a minimal server file output by Next.js that can be used instead of next start for serving applications.
server.js is a custom server file used to run a Next.js application, allowing for custom server configurations.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b,a3dae9be9408e57ff26350383026033f</data>
    </node>
    <node id="DEPLOYMENT PLATFORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A deployment platform, such as Vercel, is used to host and serve applications built with Next.js.</data>
      <data key="d2">a3dae9be9408e57ff26350383026033f</data>
    </node>
    <node id="TURBOTRACE">
      <data key="d0">EVENT</data>
      <data key="d1">Turbotrace is an experimental feature in Next.js that provides faster dependency tracing for applications.</data>
      <data key="d2">a3dae9be9408e57ff26350383026033f</data>
    </node>
    <node id="OUTPUT FILE TRACING ROOT">
      <data key="d0">EVENT</data>
      <data key="d1">Output file tracing root is a setting in next.config.js that specifies the root directory for tracing files in a monorepo setup.</data>
      <data key="d2">a3dae9be9408e57ff26350383026033f</data>
    </node>
    <node id="HTTP AGENT OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP Agent Options in Next.js allow configuration of HTTP Keep-Alive settings for fetch calls on the server-side.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="ANTD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Ant Design (antd) is a design system and React UI library, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@ANT-DESIGN/ICONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@ant-design/icons is a package that provides a set of icons for Ant Design, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@HEADLESSUI/REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Headless UI is a set of completely unstyled, fully accessible UI components for React, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@VISX/VISX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Visx is a collection of reusable low-level visualization components for React, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@TREMOR/REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tremor is a library for building data visualizations in React, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="RXJS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">RxJS is a library for reactive programming using Observables, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@MUI/MATERIAL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Material-UI (MUI) is a popular React UI framework that implements Google's Material Design, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@MATERIAL-UI/CORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@material-ui/core is a package that provides core components for Material-UI, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="@TABLER/ICONS-REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tabler Icons is a set of open-source icons for React, optimized for use with Next.js.</data>
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="LUCIDE-REACT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">03726602b8c47d68bb675c6e306f6484</data>
    </node>
    <node id="CACHE MAX MEMORY SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Cache Max Memory Size is a configuration option in Next.js that allows users to disable the default in-memory caching for better control over caching behavior.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481</data>
    </node>
    <node id="GENERATE BUILD ID">
      <data key="d0">EVENT</data>
      <data key="d1">Generate Build ID is a feature in Next.js that allows developers to create a consistent build ID for identifying application versions across multiple containers.</data>
      <data key="d2">15e19e9603c0108a515ce63026694481</data>
    </node>
    <node id="GIT HASH">
      <data key="d0">EVENT</data>
      <data key="d1">The GIT HASH is a unique identifier for a specific commit in a Git repository, used to track changes in the codebase.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="AWS CLOUDFRONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CloudFront is a content delivery network (CDN) service provided by Amazon Web Services that accelerates the delivery of web content.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="CUSTOM IMAGE LOADER">
      <data key="d0">EVENT</data>
      <data key="d1">A custom image loader is a function that can be defined in Next.js to handle image loading and optimization according to specific requirements.
A custom image loader in Next.js allows developers to define how images are loaded and optimized, providing flexibility in image handling.</data>
      <data key="d2">affc1268c54094ecde29441589759673,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="MY IMAGE LOADER">
      <data key="d0">EVENT</data>
      <data key="d1">My Image Loader is an example of a custom image loader function that formats image URLs for optimization.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="EXAMPLE LOADER CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Example Loader Configuration refers to various configurations provided for different image optimization services that can be used in Next.js.</data>
      <data key="d2">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </node>
    <node id="OUTDIR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">outDir is a configurable output directory for Next.js builds, allowing developers to specify where the generated files should be placed.</data>
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </node>
    <node id="DISTDIR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">distDir is the directory where Next.js stores the compiled output of the application, typically the .next/ directory.
The &lt;distDir&gt; is a directory used in Next.js to store build artifacts, including cached images.</data>
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b,b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </node>
    <node id="BUILD ID">
      <data key="d0">EVENT</data>
      <data key="d1">The build ID is a unique identifier generated during the build process of a Next.js application, used for caching and versioning.</data>
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </node>
    <node id="CROSSORIGIN">
      <data key="d0">EVENT</data>
      <data key="d1">crossOrigin is an option in Next.js that allows developers to specify how cross-origin requests should be handled in script tags.</data>
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </node>
    <node id="DEVINDICATORS">
      <data key="d0">EVENT</data>
      <data key="d1">devIndicators are on-screen indicators in Next.js that provide context about the current route during development.</data>
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </node>
    <node id="NEXT EXPORT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </node>
    <node id="DYNAMIC APIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dynamic APIs are application programming interfaces that rely on runtime information to provide data, often used in web applications.
Dynamic APIs are application programming interfaces that allow for real-time data retrieval and interaction with web applications.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056,daf474d256367130307c452111474f61</data>
    </node>
    <node id="BUILD DIRECTORY">
      <data key="d0">EVENT</data>
      <data key="d1">The build directory is a specified location where the output of the build process is stored, which can be customized in Next.js.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056</data>
    </node>
    <node id="CSS CHUNKING">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Chunking is an experimental feature in Next.js that improves web application performance by splitting CSS files into manageable chunks.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056</data>
    </node>
    <node id="BASE PATH">
      <data key="d0">EVENT</data>
      <data key="d1">Base path is a configuration option in Next.js that allows applications to be deployed under a sub-path of a domain.
Base Path is a feature in Next.js that allows applications to be served from a sub-path, such as /docs, instead of the root path.
Base path is a prefix that can be included in the formAction path when using the &lt;Form&gt; component in Next.js.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056,439d5be2d39a5b9cedb135d149974680,4443464e7a2cb4bcbbf667881fecb236</data>
    </node>
    <node id="LOADING.JS">
      <data key="d0">EVENT</data>
      <data key="d1">loading.js is a file that can be used in Next.js to manage loading states and improve user experience during data fetching.</data>
      <data key="d2">04edddc24da6789de5ee2349698f4056</data>
    </node>
    <node id="USERAGENT">
      <data key="d0">EVENT</data>
      <data key="d1">The userAgent helper in Next.js extends the Web Request API to interact with user agent objects from requests.</data>
      <data key="d2">ba53cb824bd4e5b80d861ee299c10f92</data>
    </node>
    <node id="ECMASCRIPT MODULES">
      <data key="d0">EVENT</data>
      <data key="d1">ECMAScript Modules are a standard for structuring JavaScript code into reusable components, supported in Next.js through next.config.mjs.
ECMAScript modules are a standard for structuring JavaScript code that allows for modular programming and is required for certain configurations in Amplify Gen 2.</data>
      <data key="d2">ba53cb824bd4e5b80d861ee299c10f92,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="CONFIGURATION AS A FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">Configuration as a Function allows for dynamic configuration in Next.js based on the current phase of the application.</data>
      <data key="d2">ba53cb824bd4e5b80d861ee299c10f92</data>
    </node>
    <node id="ASYNC CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Async Configuration in Next.js allows for asynchronous operations during the configuration phase, enhancing flexibility.</data>
      <data key="d2">ba53cb824bd4e5b80d861ee299c10f92</data>
    </node>
    <node id="USESELECTEDLAYOUTSEGMENT">
      <data key="d0">EVENT</data>
      <data key="d1">useSelectedLayoutSegment is a Client Component hook in Next.js that allows reading the active route segment one level below the Layout it is called from.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="USESEARCHPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">useSearchParams is a Client Component hook in Next.js that lets you read the current URL's query string.
useSearchParams is a hook in React that allows components to read the URL's query string parameters.
useSearchParams is a React hook in Next.js that allows components to access and manipulate the URL's query parameters.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,7ad571c896064ee6e36a4acd93898e88,b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="BLINK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Blink is a browser engine developed as part of the Chromium project, used by Google Chrome and other browsers.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="EDGEHTML">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">EdgeHTML is a browser engine developed by Microsoft for its Edge browser, designed for performance and compatibility.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="FLOW">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Flow is a browser engine that is part of the Opera web browser, focusing on speed and efficiency.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="GECKO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Gecko is a web browser engine developed by Mozilla, used in Firefox and other applications.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="GOANNA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Goanna is a fork of the Gecko engine, used in the Pale Moon web browser.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="ICAB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">iCab is a web browser for macOS and iOS that offers a variety of features and customization options.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="KHTML">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">KHTML is a browser engine that was originally developed for the Konqueror web browser and is the basis for WebKit.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="LINKS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Links is a text-based web browser that is designed for use in a terminal environment.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="LYNX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Lynx is a text-based web browser that allows users to browse the web in a command-line interface.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="NETFRONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NetFront is a web browser engine designed for embedded systems and mobile devices.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="NETSURF">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">NetSurf is a lightweight web browser designed for speed and efficiency, particularly on low-resource devices.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="PRESTO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Presto is a browser engine developed by Opera Software, known for its speed and standards compliance.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="TASMAN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tasman is a web browser engine developed by Apple for the classic Mac OS and early versions of Mac OS X.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="TRIDENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Trident is a browser engine developed by Microsoft for Internet Explorer, focusing on compatibility with web standards.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="W3M">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">w3m is a text-based web browser that allows users to browse the web in a terminal environment, supporting tables and frames.</data>
      <data key="d2">b134d3f66855ad9639688a0ef9bc8d25</data>
    </node>
    <node id="SEARCHBAR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SearchBar is a client component that utilizes the useSearchParams hook to display and manage search parameters in the dashboard.
SearchBar is an interactive component that allows users to input search queries within a layout in a web application.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2,bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="SEARCH">
      <data key="d0">PERSON</data>
      <data key="d1">Search is a query parameter that can be retrieved using the useSearchParams hook to filter or find specific data.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </node>
    <node id="FORCE-DYNAMIC">
      <data key="d0">EVENT</data>
      <data key="d1">Force-dynamic is a configuration option in Next.js that forces a route to be rendered dynamically, regardless of its static rendering settings.</data>
      <data key="d2">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </node>
    <node id="USESELECTEDLAYOUTSEGMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">useSelectedLayoutSegments is a Client Component hook in Next.js that allows reading active route segments below the Layout it is called from.</data>
      <data key="d2">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </node>
    <node id="USEROUTER">
      <data key="d0">EVENT</data>
      <data key="d1">useRouter is a hook in Next.js that enables programmatic navigation within Client Components, allowing for dynamic routing and history management.</data>
      <data key="d2">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </node>
    <node id="ROUTER EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Router events in Next.js allow developers to listen for page changes and manage navigation state effectively.</data>
      <data key="d2">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </node>
    <node id="NAVIGATION EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Navigation events are components in Next.js that track and respond to changes in the application's routing and URL parameters.
Navigation Events is a component that handles navigation-related events in a React application.</data>
      <data key="d2">1487c7dd4403a73c173d49bf2f73e2d8,bb9110629910b21a122e4dbd23ba9236</data>
    </node>
    <node id="ROUTE GROUPS">
      <data key="d0">EVENT</data>
      <data key="d1">Route Groups are a feature in Next.js that allows developers to group routes for better organization and management of application structure.
Route groups in Next.js are created by wrapping a folder in parentheses, allowing for organizational purposes without affecting the route's URL path.</data>
      <data key="d2">1487c7dd4403a73c173d49bf2f73e2d8,3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="METRIC">
      <data key="d0">EVENT</data>
      <data key="d1">Metric is an object that contains performance data related to Core Web Vitals in a web application.</data>
      <data key="d2">bb9110629910b21a122e4dbd23ba9236</data>
    </node>
    <node id="PERFORMANCE API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Performance API is a set of web APIs that provide methods to measure and analyze the performance of web applications.</data>
      <data key="d2">bb9110629910b21a122e4dbd23ba9236</data>
    </node>
    <node id="USEPATHNAME">
      <data key="d0">EVENT</data>
      <data key="d1">usePathname is a Client Component hook in Next.js that allows reading the current URL's pathname, facilitating navigation and state management in applications.
usePathname is a React hook in Next.js that provides the current pathname of the URL, allowing components to react to changes in the route.
usePathname is a hook in Next.js that allows components to determine the current pathname, enabling dynamic navigation link behavior.</data>
      <data key="d2">1d855e055624fb34345331017d371137,7ad571c896064ee6e36a4acd93898e88,91a237014868fc106c5edbdc4ad2b520</data>
    </node>
    <node id="USEPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">useParams is a Client Component hook in Next.js that retrieves dynamic parameters from the current URL, enabling developers to access route-specific data.</data>
      <data key="d2">91a237014868fc106c5edbdc4ad2b520</data>
    </node>
    <node id="UNSTABLE_RETHROW">
      <data key="d0">EVENT</data>
      <data key="d1">unstable_rethrow is an API in Next.js designed to handle internal errors without catching them, allowing for better error management in applications.
unstable_rethrow is an API in Next.js that allows developers to re-throw internal errors to maintain expected behavior in error handling.</data>
      <data key="d2">91a237014868fc106c5edbdc4ad2b520,e2066c317993455c32b6ebbfabfb5497</data>
    </node>
    <node id="UNSTABLE_NO_STORE">
      <data key="d0">EVENT</data>
      <data key="d1">unstable_noStore is an API in Next.js that allows components to opt out of static rendering and caching.</data>
      <data key="d2">e2066c317993455c32b6ebbfabfb5497</data>
    </node>
    <node id="UNSTABLE_CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">unstable_cache is an API in Next.js that enables caching of results from expensive operations like database queries.
unstable_cache is a function in Next.js that allows caching of data fetched asynchronously, improving performance by reducing the need for repeated data fetching.
Unstable Cache is a feature in Next.js that allows developers to cache data from database queries or API calls for improved performance.
The unstable_cache API in Next.js is used to cache responses from data fetching functions, allowing for improved performance and reduced load times.</data>
      <data key="d2">0bfaadafcf31828f19e4b2657565944a,af00e01481cac23e3b67c635215254ab,e2066c317993455c32b6ebbfabfb5497,edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="NOTFOUND">
      <data key="d0">EVENT</data>
      <data key="d1">notFound is a function in Next.js that throws an internal error to render a not-found component when a resource is not found.
notFound is a function in Next.js that allows rendering a not-found UI within a route segment.</data>
      <data key="d2">c38e2432510adf26b03148bb29ed9dda,e2066c317993455c32b6ebbfabfb5497</data>
    </node>
    <node id="DATABASE QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">A database query is a request for data or information from a database, which can be executed to retrieve or manipulate data.</data>
      <data key="d2">e2066c317993455c32b6ebbfabfb5497</data>
    </node>
    <node id="REVALIDATETAG">
      <data key="d0">EVENT</data>
      <data key="d1">revalidateTag is a function in Next.js that allows for on-demand purging of cached data associated with a specific cache tag.</data>
      <data key="d2">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="UNSTABLE_AFTER">
      <data key="d0">EVENT</data>
      <data key="d1">unstable_after is a function in Next.js that allows scheduling of work to be executed after a response is finished, useful for non-blocking tasks.</data>
      <data key="d2">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="FETCHDATA">
      <data key="d0">EVENT</data>
      <data key="d1">fetchData is an asynchronous function in Next.js that retrieves the data to be cached.</data>
      <data key="d2">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="PARAMETERS">
      <data key="d0">EVENT</data>
      <data key="d1">Parameters are the settings and options that control the behavior of the caching functions in Next.js.
Parameters are variables passed to functions that allow customization of their behavior and output.</data>
      <data key="d2">c38e2432510adf26b03148bb29ed9dda,edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </node>
    <node id="REVALIDATEPATH">
      <data key="d0">EVENT</data>
      <data key="d1">revalidatePath is a function in Next.js that allows for on-demand cache purging for specific paths.</data>
      <data key="d2">c38e2432510adf26b03148bb29ed9dda</data>
    </node>
    <node id="CALLBACK FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">A callback function is a function passed into another function as an argument, which is executed after a certain event occurs.</data>
      <data key="d2">c38e2432510adf26b03148bb29ed9dda</data>
    </node>
    <node id="PLATFORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A platform refers to the underlying technology or service that supports the execution of applications, such as serverless computing environments.</data>
      <data key="d2">c38e2432510adf26b03148bb29ed9dda</data>
    </node>
    <node id="SERVERLESS FUNCTION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c38e2432510adf26b03148bb29ed9dda</data>
    </node>
    <node id="NOT FOUND">
      <data key="d0">EVENT</data>
      <data key="d1">The notFound() function is invoked to handle errors gracefully in a web application, indicating that a resource was not found.
The not-found file in Next.js is used to render UI when a requested resource cannot be found, returning a 404 status code for non-streamed responses.
Not found is an event that indicates a requested resource could not be found, triggering a specific UI response.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,52bf7bb5a492d2cb5b2f5f06d6507a81,a046fdf9fbebaa56c0d37da25e453974</data>
    </node>
    <node id="PERMANENT REDIRECT">
      <data key="d0">EVENT</data>
      <data key="d1">The permanentRedirect function allows users to be redirected to another URL, indicating a permanent change in resource location.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065</data>
    </node>
    <node id="TEAM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A team is a group of individuals working together within the application, often identified by a unique ID.
A Team is a model in the AWS Amplify framework that can have many Members associated with it.
The team is a model that contains members and can be queried for its members' details.</data>
      <data key="d2">0087b03cba217e40a9fa75c83b21f065,06d355f57266e139e2c21ab1cbe5f8e6,33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="SERVER ACTION">
      <data key="d0">EVENT</data>
      <data key="d1">An action that processes data on the server side and can trigger redirects in a web application.
Server actions are functions that run on the server side, allowing developers to perform operations like setting or deleting cookies.
A Server Action is a function that can be executed when the form is submitted, allowing for server-side processing of form data.
Server Actions are functions that execute on the server to handle logic such as form submissions and data validation.
Server Actions are functions in Next.js that can be executed on the server to handle data revalidation and cache invalidation.
Server Action refers to the function that processes the form submission on the server side, handling the data sent from the client.
Server Actions are functions that run on the server and can handle tasks like creating items, managing cookies, and redirecting users.
Server Action refers to a function in Next.js that performs operations on the server, such as creating posts and managing data revalidation.

Server actions are functions that can be executed on the server side in a Next.js application, allowing for data fetching and processing.</data>
      <data key="d2">1d939f19e04dfaa8df3664a2cd4db1f1,439d5be2d39a5b9cedb135d149974680,4a5b866ffddc7fba2346c94f6c037019,4da3554b7826cf4b6dd608127da53568,9ac6b7bdb38f92b5b8fbd5762735c158,ace34d6baa071fb6d6db3dcaaf3da1dc,af00e01481cac23e3b67c635215254ab,b6f71d64cf5764914e58142430b460e6,c55d8ff0ea71716df1fdfba115d52035,ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="HTTP REDIRECTS">
      <data key="d0">EVENT</data>
      <data key="d1">A mechanism that allows web servers to redirect users from one URL to another, often with specific status codes indicating the type of redirect.</data>
      <data key="d2">b6f71d64cf5764914e58142430b460e6</data>
    </node>
    <node id="IMAGE_RESPONSE">
      <data key="d0">EVENT</data>
      <data key="d1">ImageResponse is a constructor in Next.js that allows for the generation of dynamic images using JSX and CSS, useful for social media images.</data>
      <data key="d2">c219d208ec8254181cab570f210dac3f</data>
    </node>
    <node id="GENERATE VIEWPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Generate Viewport is a function in Next.js that allows developers to customize the initial viewport of a page.</data>
      <data key="d2">84837300711040f4e7b736cdd8fce7d2</data>
    </node>
    <node id="RECORD">
      <data key="d0">EVENT</data>
      <data key="d1">Record refers to a structured set of data, often used in programming to store information about various entities.</data>
      <data key="d2">84837300711040f4e7b736cdd8fce7d2</data>
    </node>
    <node id="SATORI">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">84837300711040f4e7b736cdd8fce7d2</data>
    </node>
    <node id="X-FORWARDED-FOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The x-forwarded-for header is used to identify the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.</data>
      <data key="d2">102262d1b2a41d767a543121d96412c6</data>
    </node>
    <node id="X-REAL-IP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The x-real-ip header is used to pass the real IP address of a client to the server when behind a proxy.</data>
      <data key="d2">102262d1b2a41d767a543121d96412c6</data>
    </node>
    <node id="PRODUCT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A category of items that can be sold or offered in a web application, identified by unique IDs and categories.
Product refers to an item or service that is being offered for sale, which can be managed through forms in AWS Amplify.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89,afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="CATEGORY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A classification used to group products in a web application, allowing for organized navigation and retrieval of items.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89</data>
    </node>
    <node id="CATCH-ALL DYNAMIC SEGMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A type of dynamic segment that captures all possible routes that match a certain pattern, allowing for flexible routing in a web application.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89</data>
    </node>
    <node id="STATIC RENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">The process of generating HTML for a web page at build time, allowing for faster load times and improved SEO.
Static Rendering is a method in Next.js where components are rendered at build time, improving performance by serving pre-rendered pages.
Static Rendering is a server rendering strategy where routes are rendered at build time and cached for subsequent requests.
Static rendering is an event that does not require a user session and is used for rendering pages with guest access.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,69ac19d7db15ae11c7884ce391807330,9e3cdf604b5960851cad4f9699d3ba89,ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </node>
    <node id="DYNAMIC PARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">Parameters that can change based on user input or other conditions, allowing for dynamic content generation in web applications.</data>
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89</data>
    </node>
    <node id="DYNAMIC SEGMENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9e3cdf604b5960851cad4f9699d3ba89</data>
    </node>
    <node id="PRODUCTS">
      <data key="d0">EVENT</data>
      <data key="d1">Products refer to the items being fetched and displayed in the application, which are categorized and identified by unique IDs.
Products refer to items that are being managed and listed in the sitemaps generated by the application.</data>
      <data key="d2">c22dbf534c525258e8788bff5c1c5e66,dea59f788f9645dcf527f4f5f4f12ae7</data>
    </node>
    <node id="SEB">
      <data key="d0">PERSON</data>
      <data key="d1">Seb is one of the authors associated with the Next.js framework.
Seb is an author associated with Next.js, contributing to its development and documentation.
Seb is one of the authors of the Next.js framework, contributing to its development and documentation.</data>
      <data key="d2">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="JOSH">
      <data key="d0">PERSON</data>
      <data key="d1">Josh is another author associated with the Next.js framework, contributing to its development and documentation.
Josh is another author associated with Next.js, contributing to its development and documentation.
Josh is another author of the Next.js framework, involved in its development and community engagement.</data>
      <data key="d2">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="JIACHI LIU">
      <data key="d0">PERSON</data>
      <data key="d1">Jiachi Liu is credited as the creator of Next.js.
Jiachi Liu is a creator involved in the Next.js project, likely contributing to its features or documentation.</data>
      <data key="d2">ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="SEBASTIAN MARKB&#197;GE">
      <data key="d0">PERSON</data>
      <data key="d1">Sebastian Markb&#229;ge is identified as the publisher of Next.js.
Sebastian Markb&#229;ge is a publisher associated with Next.js, likely overseeing its documentation or promotional materials.</data>
      <data key="d2">ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="APPLICATION NAME">
      <data key="d0">EVENT</data>
      <data key="d1">The application name is a metadata field that specifies the name of the application, which is 'Next.js' in this case.</data>
      <data key="d2">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="DESCRIPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Description is a metadata field that provides a brief overview of the Next.js framework, stating it is 'The React Framework for the Web.'</data>
      <data key="d2">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="KEYWORDS">
      <data key="d0">EVENT</data>
      <data key="d1">Keywords are metadata fields that include terms related to the Next.js framework, such as 'Next.js', 'React', and 'JavaScript'.</data>
      <data key="d2">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="REFERRER">
      <data key="d0">EVENT</data>
      <data key="d1">Referrer is a metadata field that indicates the referrer policy for the application, set to 'origin-when-cross-origin'.</data>
      <data key="d2">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </node>
    <node id="ACME.COM">
      <data key="d0">GEO</data>
      <data key="d1">Acme.com is a domain used for demonstrating metadataBase in Next.js, serving as a base URL for metadata fields.
Acme.com is a hypothetical domain used in the example configuration for deploying Next.js applications on a web server.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </node>
    <node id="OPEN GRAPH">
      <data key="d0">EVENT</data>
      <data key="d1">Open Graph is a protocol used to integrate web pages into the social graph, allowing for rich previews on social media platforms.

Open Graph is a protocol that allows web pages to become rich objects in a social graph, enabling better sharing on social media platforms.</data>
      <data key="d2">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="LAYOUT.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Layout.js is a file in Next.js that typically contains the layout structure for web pages, allowing for consistent design across the application.

layout.js is a file in the Next.js app structure that defines the root layout for the application.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,ddf9997eb4ecd67204ea6df04b23cc07,efa0be72e5e017f56fa9efbf06af7e7c</data>
    </node>
    <node id="PAGE.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Page.js is a file in Next.js that defines the content and behavior of a specific page within the application.
Page.js is a JavaScript file in Next.js that typically contains the logic and structure for individual pages in a web application.
page.js is a file in Next.js that defines the content returned to the client for a specific route, making the route publicly accessible.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,3615d6509a88bbb31eac0bc56f78c2f6,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </node>
    <node id="2023-01-01">
      <data key="d0">EVENT</data>
      <data key="d1">The date when the article about Next.js was published, marking a significant moment for the framework's updates and features.</data>
      <data key="d2">93cb0a5e111f219ec555f33bcd068d05</data>
    </node>
    <node id="ROBOTS">
      <data key="d0">EVENT</data>
      <data key="d1">Robots meta tag is used to control how search engines index and follow the content of a web page.</data>
      <data key="d2">93cb0a5e111f219ec555f33bcd068d05</data>
    </node>
    <node id="ICON">
      <data key="d0">EVENT</data>
      <data key="d1">Icons are graphical representations used in web applications to enhance user interface and experience.
An icon is a graphical representation of a program, feature, or function, often used in user interfaces to help users navigate applications.
Icon is a graphical representation used in the web application to enhance user interface and branding.
Icon is a graphical representation used in UI components to convey meaning or action.
Icon is a UI component in React that represents graphical symbols, often used alongside buttons and other interactive elements in applications.
Icon is a graphical element used in the SelectField to indicate the dropdown functionality, enhancing the user interface.
Icon is a component in the AWS Amplify UI for React that can be used within buttons to enhance user interface.
An icon is a graphical representation used in alerts to visually convey the type of message, such as info, success, warning, or error.

An icon is a graphical representation of a concept or action, often used in user interfaces to enhance usability and aesthetics.
Icon is a graphical representation used in user interfaces to symbolize actions, objects, or concepts, enhancing user experience.
The Icon component displays simple vector graphics for use in other components like Buttons within Amplify UI.</data>
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7,3bcd47a467bca8030037be27b1ae1b3e,4d25b33f699aef8a075e8858bf0ad630,6634963e5bc3eae8755d15393e4c9b71,6edc6c7e13a23d971e48b75724b50d5f,93cb0a5e111f219ec555f33bcd068d05,d5db54aea339e57737c40468d9473a13,d96d8ae7162e4a76bff1216bb9a8e47a,e33823d803dfc43e2ab84d0208782223,e3c4629b893f38a9c103147f3ea608f3,e6f9ca43dfb29c7478264e5ebadfca37,ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="MANIFEST">
      <data key="d0">EVENT</data>
      <data key="d1">A web application manifest is a JSON file that provides information about a web application in a structured format, allowing it to be installed on devices.
The manifest is a JSON file that provides metadata about a web application, including its name, icons, and start URL.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,93cb0a5e111f219ec555f33bcd068d05</data>
    </node>
    <node id="GOOGLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google is a multinational technology company specializing in Internet-related services and products, including search engines, online advertising, and cloud computing.
Google is a technology company that offers various services, including authentication through its Google accounts for third-party applications.
Google is a technology company that offers Google Sign-In as an external identity provider for authentication.
Google is a technology company that provides various services, including a popular search engine, and is included in the authentication options for both Gen 1 and Gen 2.
Google LLC is a multinational technology company specializing in Internet-related services and products, and provides sign-in options for AWS Amplify.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,24ec8a10e8f41cfaeb32d036093e3bdf,4b1835219f538ab9f3ba5712dcb54610,5b9454881a44ee34d198e3403f5388af,964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="YAHOO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Yahoo is a web services provider known for its web portal, search engine, and email services.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </node>
    <node id="YANDEX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Yandex is a Russian multinational corporation specializing in Internet-related products and services, including a search engine and various online services.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </node>
    <node id="APPLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Apple is a technology company that designs, manufactures, and markets consumer electronics, software, and online services.
Apple is a technology company known for its consumer electronics and software, and is included in the authentication options for both Gen 1 and Gen 2.
Apple Inc. is a technology company known for its consumer electronics, software, and online services, and offers sign-in options through its platform for AWS Amplify.
Apple is an option in the RadioGroupField example under the Fruit category.
Apple is a type of fruit that is edible and produced by the apple tree.
</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee,24ec8a10e8f41cfaeb32d036093e3bdf,4b1835219f538ab9f3ba5712dcb54610,4bc06a4de4b3d3bcc2e2a060955740c8,bf223ba92c40347202f7dcf0e841b2ed,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="TWITTER CARD">
      <data key="d0">EVENT</data>
      <data key="d1">Twitter Card is a feature that allows users to attach rich photos, videos, and media experiences to Tweets, enhancing the visibility of content shared on Twitter.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </node>
    <node id="TWITTER CARD MARKUP">
      <data key="d0">EVENT</data>
      <data key="d1">Twitter Card Markup is a specification that allows web developers to attach rich media to tweets, enhancing the visibility of their content.</data>
      <data key="d2">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </node>
    <node id="REACTDOM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ReactDOM is a package that provides methods for interacting with the DOM in React applications.</data>
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </node>
    <node id="TYPE SAFETY">
      <data key="d0">EVENT</data>
      <data key="d1">Type safety is a feature that helps prevent type errors in programming by ensuring that variables are used consistently with their defined types.
Type safety practices involve using TypeScript and its plugin to catch errors early in the development process.</data>
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443,aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="SITEMAPS">
      <data key="d0">EVENT</data>
      <data key="d1">Sitemaps are files that provide information about the pages, videos, and other files on a site, and the relationships between them.</data>
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </node>
    <node id="GENERATESITEMAPS">
      <data key="d0">EVENT</data>
      <data key="d1">The generateSitemaps function in Next.js is used to create multiple sitemaps for an application, enhancing SEO and site structure.
</data>
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443,c22dbf534c525258e8788bff5c1c5e66</data>
    </node>
    <node id="BASE URL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </node>
    <node id="GENERATE IMAGE METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">Generate Image Metadata is a function in Next.js that allows the generation of different versions of an image or multiple images for a single route segment.</data>
      <data key="d2">d0c06a113103b401eb977025a69f0cee</data>
    </node>
    <node id="SITEMAP">
      <data key="d0">EVENT</data>
      <data key="d1">Sitemap is a feature in Next.js that helps in generating unique sitemaps for products based on their IDs.
A sitemap is a file that lists the pages of a website to inform search engines about the organization of the site's content.
The sitemap is an XML file that lists the pages of a website to inform search engines about the organization of the site's content.
A sitemap is a file that lists the pages of a website to inform search engines about the organization of the site's content.
A sitemap is a file that provides information about the pages, videos, and other files on a site, and the relationships between them.</data>
      <data key="d2">4da3554b7826cf4b6dd608127da53568,85fc82d441624fc7d477f417afcce94e,a67099d1f0ea66a70c07e9595443231a,c22dbf534c525258e8788bff5c1c5e66,d0c06a113103b401eb977025a69f0cee</data>
    </node>
    <node id="BASE_URL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BASE_URL is a constant used in Next.js applications to define the base URL for generating product URLs in sitemaps.
BASE_URL is a constant used in the application to define the base URL for generating product links in sitemaps.</data>
      <data key="d2">c22dbf534c525258e8788bff5c1c5e66,d0c06a113103b401eb977025a69f0cee</data>
    </node>
    <node id="IMAGE RESPONSE">
      <data key="d0">EVENT</data>
      <data key="d1">Image Response is a function in Next.js that generates a response containing an image based on provided parameters.

</data>
      <data key="d2">63ad6476d7970e4ee569325f59f21115,9b92d19ee6176284aa500c2d4bcd28a4,d0c06a113103b401eb977025a69f0cee</data>
    </node>
    <node id="GET PRODUCTS">
      <data key="d0">EVENT</data>
      <data key="d1">Get Products is a function that retrieves product data from the database for use in generating sitemaps.</data>
      <data key="d2">d0c06a113103b401eb977025a69f0cee</data>
    </node>
    <node id="DATA CACHE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Data Cache is a mechanism used by Next.js to store and manage data fetched from external sources, optimizing performance and reducing server load.
Data Cache is a caching mechanism in Next.js that stores data across user requests and deployments for improved performance.
Data Cache is a built-in feature in Next.js that persists the result of data fetches across incoming server requests and deployments.
The Data Cache is a storage mechanism used by Next.js to temporarily hold fetched data to improve performance and reduce the need for repeated requests to external data sources.
Data Cache is a caching mechanism that stores data fetched from APIs in Next.js applications to improve performance.
Data Cache is a mechanism that stores data temporarily to reduce the time taken to access it, improving performance in applications.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,0a535ba637862aaba58115b1f3e1a96b,6b625fce8c9b4b0f729aa3cdc85d284d,98b8f4a199a3050f92608604cd0974b2,c55d8ff0ea71716df1fdfba115d52035,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="COOKIES">
      <data key="d0">EVENT</data>
      <data key="d1">Cookies are small pieces of data stored on the client-side that are used to manage user sessions and preferences in web applications.

Cookies are small pieces of data stored on the user's computer by the web browser while browsing a website, used for session management.

Cookies are small pieces of data stored on the user's computer by the web browser while browsing a website, used for session management and tracking.
Cookies are small pieces of data stored on the client side that can be used to remember information about the user between sessions.
Cookies are small pieces of data stored on the client side that are sent with HTTP requests and responses, often used for session management.
Cookies are small pieces of data stored on the user's device that are used for session management and user authentication in web applications.
</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,4a5b866ffddc7fba2346c94f6c037019,4da3554b7826cf4b6dd608127da53568,6b625fce8c9b4b0f729aa3cdc85d284d,72e1433a8550144aaf1d1fd8f3cb3774,acfd457359d2693c084c6ab2341189be,d0da48d43a184db7d07729aa6047ca3d,f307707abfeb56b5061ee3f77f2b7cb5,f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="ASYNC/AWAIT">
      <data key="d0">EVENT</data>
      <data key="d1">Async/Await is a JavaScript feature that allows for asynchronous code to be written in a more synchronous manner, improving readability and maintainability.
Async/await is a syntax in JavaScript that simplifies working with asynchronous code, used in data fetching within Next.js applications.</data>
      <data key="d2">6b625fce8c9b4b0f729aa3cdc85d284d,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="HTTP CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP Cache is a mechanism that stores responses to HTTP requests to improve load times and reduce server load by serving cached responses when available.</data>
      <data key="d2">6b625fce8c9b4b0f729aa3cdc85d284d</data>
    </node>
    <node id="IMAGE SITEMAPS">
      <data key="d0">EVENT</data>
      <data key="d1">Image Sitemaps are a feature that allows ACME to include images in its sitemap for better visibility in search engines.</data>
      <data key="d2">85fc82d441624fc7d477f417afcce94e</data>
    </node>
    <node id="LOCALIZED SITEMAP">
      <data key="d0">EVENT</data>
      <data key="d1">The Localized Sitemap is a version of ACME's sitemap that includes alternate language links for different regions.</data>
      <data key="d2">85fc82d441624fc7d477f417afcce94e</data>
    </node>
    <node id="METADATA ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">Metadata Route is a type of route in Next.js that allows for the definition of metadata for web pages, including sitemaps.</data>
      <data key="d2">c22dbf534c525258e8788bff5c1c5e66</data>
    </node>
    <node id="GETPRODUCTS">
      <data key="d0">EVENT</data>
      <data key="d1">getProducts is a function that retrieves product data from a database for inclusion in the generated sitemaps.</data>
      <data key="d2">c22dbf534c525258e8788bff5c1c5e66</data>
    </node>
    <node id="SITEMAP ID">
      <data key="d0">EVENT</data>
      <data key="d1">Sitemap ID is a unique identifier used to differentiate between multiple sitemap files generated for a web application.</data>
      <data key="d2">c22dbf534c525258e8788bff5c1c5e66</data>
    </node>
    <node id="OPENGRAPH-IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Opengraph-image is a route handler that generates images for social media sharing, specifically for the Open Graph protocol.</data>
      <data key="d2">63ad6476d7970e4ee569325f59f21115</data>
    </node>
    <node id="TWITTER-IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Twitter-image is a route handler that generates images for sharing on Twitter, following specific metadata conventions.</data>
      <data key="d2">63ad6476d7970e4ee569325f59f21115</data>
    </node>
    <node id="INTER SEMI BOLD">
      <data key="d0">PERSON</data>
      <data key="d1">Inter Semi Bold is a font used in the image generation process for styling the text in the generated images.</data>
      <data key="d2">63ad6476d7970e4ee569325f59f21115</data>
    </node>
    <node id="LOGO.PNG">
      <data key="d0">EVENT</data>
      <data key="d1">Logo.png is an image file used in the examples to demonstrate fetching local assets in web applications.</data>
      <data key="d2">5791705a1f965d3a768f111e7fdcade1</data>
    </node>
    <node id="APPLE-ICON">
      <data key="d0">EVENT</data>
      <data key="d1">An apple-icon is a specific type of icon used for Apple devices, displayed on the home screen of iOS applications.</data>
      <data key="d2">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </node>
    <node id="FILE CONVENTION">
      <data key="d0">EVENT</data>
      <data key="d1">File conventions are standardized methods for naming and organizing files within a project, ensuring consistency and ease of use.</data>
      <data key="d2">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </node>
    <node id="IMAGE RESPONSE API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The ImageResponse API from Next.js allows developers to programmatically generate images for use as icons in web applications.</data>
      <data key="d2">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </node>
    <node id="IMAGE FILE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </node>
    <node id="NEXT.JS APPLICATION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next.js Application is a web application framework built on React, designed for building server-side rendered and statically generated web applications.</data>
      <data key="d2">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="MANIFEST.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">Manifest.json is a file that provides metadata about the web application, including its name, description, and icons.</data>
      <data key="d2">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="ARRAYBUFFER">
      <data key="d0">EVENT</data>
      <data key="d1">ArrayBuffer is a JavaScript object that represents a generic, fixed-length raw binary data buffer, used for handling binary data in web applications.</data>
      <data key="d2">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="TYPEDARRAY">
      <data key="d0">EVENT</data>
      <data key="d1">TypedArray is a type of array in JavaScript that provides a mechanism for reading and writing binary data in a more efficient way.</data>
      <data key="d2">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </node>
    <node id="ROUTE SEGMENT CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Route Segment Config refers to the configuration options available for managing the behavior of pages, layouts, or route handlers in Next.js.</data>
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="DYNAMIC BEHAVIOR">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic behavior in Next.js allows pages or layouts to be rendered dynamically based on user requests or data changes.</data>
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="EXPERIMENTAL_PPR">
      <data key="d0">EVENT</data>
      <data key="d1">Experimental PPR (Partial Prerendering) is a feature in Next.js that allows for selective prerendering of components.</data>
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="DYNAMIC_PARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Params control the behavior of dynamic segments in Next.js routing, determining how they are generated or handled.</data>
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="FETCH REQUEST">
      <data key="d0">EVENT</data>
      <data key="d1">Fetch Request is a method used in Next.js to retrieve data from APIs or other resources.</data>
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="FILE CONVENTIONS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </node>
    <node id="ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">Route refers to the URL path that maps to a specific page or layout in Next.js applications.
A Route in Next.js refers to a specific path in the application that corresponds to a page or component, allowing for navigation within the app.</data>
      <data key="d2">64c02a535c1519ef24ded4a2a368f2be,735b59f53ffba96602dace4169c285ed</data>
    </node>
    <node id="FETCH REQUESTS">
      <data key="d0">EVENT</data>
      <data key="d1">Fetch requests are used in Next.js to retrieve data from APIs or other resources, influencing how pages are rendered.
Fetch requests are used in Next.js to retrieve data from APIs, which can be memoized for performance optimization.</data>
      <data key="d2">64c02a535c1519ef24ded4a2a368f2be,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="CACHE OPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Cache options determine how data fetched in Next.js is stored and retrieved, affecting performance and revalidation.</data>
      <data key="d2">64c02a535c1519ef24ded4a2a368f2be</data>
    </node>
    <node id="DYNAMIC API">
      <data key="d0">EVENT</data>
      <data key="d1">The Dynamic API in Next.js allows for the handling of dynamic search parameters that cannot be known ahead of time, opting the page into dynamic rendering at request time.</data>
      <data key="d2">52bf7bb5a492d2cb5b2f5f06d6507a81</data>
    </node>
    <node id="SEARCH PARAMETERS">
      <data key="d0">EVENT</data>
      <data key="d1">Search parameters are key-value pairs in the URL that can be accessed in Next.js to manage dynamic content based on user input.
Search parameters are key-value pairs sent in a request to filter or specify the data being requested from a server.</data>
      <data key="d2">52bf7bb5a492d2cb5b2f5f06d6507a81,c5461cfa4259c43255132d8f916b1764</data>
    </node>
    <node id="EXPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Exports in JavaScript refer to the syntax used to make functions, objects, or primitives available for use in other modules.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668</data>
    </node>
    <node id="MDXCOMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MDXComponents is a type that represents the components used in MDX files, allowing customization of how Markdown is rendered in Next.js.
MDXComponents is a type that allows customization of React components used in MDX files.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,4e07cca41acd33806d13242f5e21f621</data>
    </node>
    <node id="CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">The config object in Next.js Middleware specifies the matcher and other options for how middleware should behave.
Config is a configuration object used to set up AWS Amplify with necessary parameters for the application.
The Config is a configuration object used to set up AWS Amplify services in the application.</data>
      <data key="d2">100c0297f81a6b39d0682205a4f6f668,1d0207e2e11503628d08eefd24849d93,3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="GLOBAL ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">Global error is an event that handles errors at the root level of the application, providing a fallback UI when an error occurs.
Global Error handling in Next.js is a mechanism to manage errors at the root level of the application, providing a fallback UI for any uncaught exceptions.</data>
      <data key="d2">33239b71158a6566c2b82b6a30b68e82,a046fdf9fbebaa56c0d37da25e453974</data>
    </node>
    <node id="LOADING FILE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">a046fdf9fbebaa56c0d37da25e453974</data>
    </node>
    <node id="DYNAMIC ROUTE PARAMETERS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic route parameters are used in Next.js to capture variable segments of a URL and pass them to layout components.</data>
      <data key="d2">a5566406ae5db585eb3829f4a25e7025</data>
    </node>
    <node id="CONTEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Context in Next.js refers to the environment or situation in which a request or error occurs, providing additional information for debugging and logging.</data>
      <data key="d2">a0a19960cdaef7a85c598591f06454da</data>
    </node>
    <node id="AUTH">
      <data key="d0">EVENT</data>
      <data key="d1">Auth refers to the authentication process that determines user access to certain routes in the application.

Auth refers to the authentication process that verifies the identity of a user before allowing access to certain actions or data.
The @auth slot in Next.js is a designated area for handling authentication-related routes and components.
Auth is a resource in the AWS Amplify backend that manages user authentication and authorization.
Auth is a resource in AWS Amplify that provides authentication capabilities for applications, including user sign-up, sign-in, and access control.
Auth is a resource in AWS Amplify that provides authentication services for applications, including user sign-up and sign-in functionalities.
Auth refers to the authentication service that manages user access and permissions in the backend system.
Auth refers to the authentication configuration in Amplify, managing user sign-up and sign-in processes.
Auth is a resource in AWS Amplify that manages user authentication and authorization for applications.

Auth refers to the authentication capabilities provided by AWS Amplify, allowing users to securely access applications.
Auth is a category in AWS Amplify that provides authentication and authorization capabilities for applications.
Auth refers to the authentication features provided by Amplify, allowing developers to manage user sign-in and registration flows.
Auth is a resource within AWS Amplify that manages authentication processes for applications.
Auth is a service provided by AWS Amplify that handles user authentication and account management.
Auth is a service provided by AWS Amplify for managing user authentication and authorization in applications.</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf,195fa68e405624fc5cbe7eeb5767c2ef,1ef9b6a9263edfd718636bcbc29f4a72,344b01eb184403f029e31d4621f1ea1f,4a5b866ffddc7fba2346c94f6c037019,502c34bc5ff7e00594c0a0d9df58834d,530b644b2b2dcf37b1cde4a8c015083a,57f05fa9d96242d8c2cb2869e13f9e1c,6741df7802dff57e070b002915d9590a,8e6f8a08e3cdc9d85f1015001bcf93dc,99d758fe4e77c64e3d6461268ba8b6d4,a67099d1f0ea66a70c07e9595443231a,c53f4501f1dba5ecec6c90cfcc2152c2,cb861a02338e7cf7786d791829706a53,dc10462a75be57d14f05bf6a26ba9731,e3c6466a080dbad6e05f99bda0212547,e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="PUBLIC DASHBOARD">
      <data key="d0">EVENT</data>
      <data key="d1">Public Dashboard is a route accessible to unauthenticated users in the application.
The Public Dashboard is a specific route in Next.js applications that is accessible to all users.</data>
      <data key="d2">77bf22c1fcd1e61ff866f696397b3a69,dc10462a75be57d14f05bf6a26ba9731</data>
    </node>
    <node id="AUTH DASHBOARD">
      <data key="d0">EVENT</data>
      <data key="d1">Auth Dashboard is a route accessible to authenticated users in the application.
The Auth Dashboard is a specific route in Next.js applications that is accessible only to authenticated users.</data>
      <data key="d2">77bf22c1fcd1e61ff866f696397b3a69,dc10462a75be57d14f05bf6a26ba9731</data>
    </node>
    <node id="NAVLINK">
      <data key="d0">EVENT</data>
      <data key="d1">NavLink is a custom component that wraps the Link component to create styled navigation links in the application.</data>
      <data key="d2">dc10462a75be57d14f05bf6a26ba9731</data>
    </node>
    <node id="REDLINK">
      <data key="d0">EVENT</data>
      <data key="d1">RedLink is a styled anchor tag used within the NavLink component to provide a specific visual style.</data>
      <data key="d2">dc10462a75be57d14f05bf6a26ba9731</data>
    </node>
    <node id="DEFAULT.JS">
      <data key="d0">EVENT</data>
      <data key="d1">default.js is a file used in Next.js to render a fallback within Parallel Routes when the active state cannot be recovered after a full-page load.
Default.js is a fallback file used in Next.js to render a default view when specific conditions are not met.
Default.js is a fallback file in Next.js that is rendered when no specific page is found for a route.</data>
      <data key="d2">7bf88bf4f2097fabdb3b57f7074def08,99d758fe4e77c64e3d6461268ba8b6d4,e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="WORKER">
      <data key="d0">EVENT</data>
      <data key="d1">A worker is a script that runs in the background, separate from the main thread, allowing for concurrent execution of tasks in web applications.</data>
      <data key="d2">e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="LAZYONLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">lazyOnload is a loading strategy in Next.js that allows scripts to be loaded only when the page is opened in the browser, improving performance.</data>
      <data key="d2">e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="ONLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">onLoad is a property that allows executing JavaScript code after a script has finished loading in a web application.
onLoad is an event handler that executes code after a script has finished loading in a web application.</data>
      <data key="d2">c1f63acba6f9a58b56bd71c409dcd343,e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="ONREADY">
      <data key="d0">EVENT</data>
      <data key="d1">onReady is a property that allows executing JavaScript code after a script has loaded and every time the component is mounted in a web application.
onReady is an event handler that executes code after a script has finished loading and every time the component is mounted.</data>
      <data key="d2">c1f63acba6f9a58b56bd71c409dcd343,e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="ONERROR">
      <data key="d0">EVENT</data>
      <data key="d1">onError is a property that allows handling errors when a script fails to load in a web application.
onError is an event handler that executes code if a script fails to load in a web application.
The onError event is triggered when there is an error during form submission, allowing for error logging and user notifications.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403,c1f63acba6f9a58b56bd71c409dcd343,e50d0654e953ff5fe60c725be1dea551</data>
    </node>
    <node id="ZACK">
      <data key="d0">PERSON</data>
      <data key="d1">Zack is an example artist used in the dynamic route parameters for Next.js applications.</data>
      <data key="d2">7bf88bf4f2097fabdb3b57f7074def08</data>
    </node>
    <node id="CHILDREN">
      <data key="d0">EVENT</data>
      <data key="d1">Children is an implicit slot in Next.js that represents nested components or elements within a parent component.
Children refers to the React nodes that are passed to the RootLayout component, which will be rendered inside the main layout structure.
Children refers to the implicit slot in Next.js that renders nested components within a parent layout.
Children refers to the React nodes or components that are passed as props to the Modal component, representing the content displayed within the modal.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5,7bf88bf4f2097fabdb3b57f7074def08,99d758fe4e77c64e3d6461268ba8b6d4,a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="ANALYTICS SLOT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7bf88bf4f2097fabdb3b57f7074def08</data>
    </node>
    <node id="QUALITY">
      <data key="d0">EVENT</data>
      <data key="d1">Quality is a prop in the Image component that sets the quality of the optimized image, ranging from 1 to 100.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb</data>
    </node>
    <node id="STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Style is a prop that allows passing CSS styles to the underlying image element in the Image component.</data>
      <data key="d2">20f099859bc84200865a67d0cbf4c8bb</data>
    </node>
    <node id="PROFILEIMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">ProfileImage is a functional component that renders a user profile image with specific styling.</data>
      <data key="d2">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </node>
    <node id="UNOPTIMIZED IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Unoptimized Image is a component that serves images without any optimization, preserving the original quality and size.</data>
      <data key="d2">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </node>
    <node id="LOADING COMPLETE">
      <data key="d0">EVENT</data>
      <data key="d1">Loading Complete is a callback function that is triggered once an image has fully loaded in the Next.js Image component.</data>
      <data key="d2">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </node>
    <node id="BLURDATAURL">
      <data key="d0">EVENT</data>
      <data key="d1">BlurDataURL is a property used in the Next.js Image component to display a blurred placeholder image before the main image loads.</data>
      <data key="d2">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </node>
    <node id="IMAGE STYLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </node>
    <node id="FORMATS">
      <data key="d0">EVENT</data>
      <data key="d1">Formats in Next.js determine the image formats supported by the Image Optimization API based on the browser's Accept header.</data>
      <data key="d2">affc1268c54094ecde29441589759673</data>
    </node>
    <node id="PROXY/CDN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Proxy/CDN is a service that acts as an intermediary for requests from clients seeking resources from other servers, often used to improve performance and security.</data>
      <data key="d2">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </node>
    <node id="MAX AGE">
      <data key="d0">EVENT</data>
      <data key="d1">Max Age is a configuration setting that defines the duration for which cached images are considered valid before they need to be revalidated.</data>
      <data key="d2">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </node>
    <node id="AUTHOR">
      <data key="d0">PERSON</data>
      <data key="d1">The author is a person who creates content, in this case, related to responsive images in web development.

</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488,5acf474a9e428eea738206bbcbd17f29,5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="NEXT IMAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next Image is a component in the Next.js framework that optimizes image loading and rendering for web applications.</data>
      <data key="d2">5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="RESPONSIVE IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A responsive image is an event in web design where images adjust to different screen sizes and resolutions.</data>
      <data key="d2">5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="DYNAMIC IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A dynamic image is an event where images are loaded from a remote URL, adapting to various display conditions.</data>
      <data key="d2">5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="STATIC IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A static image is an event where images are directly imported and used without dynamic loading.</data>
      <data key="d2">5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="CSS MEDIA QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">A CSS media query is a technique used in web design to apply styles based on the viewport size or device characteristics, often used for responsive design.</data>
      <data key="d2">5b4f484288a596801b79828ce9d0ba11</data>
    </node>
    <node id="GET METHOD">
      <data key="d0" />
      <data key="d1">
The GET method is an HTTP request method used to request data from a specified resource, which can be memoized in React.
GET method is an HTTP request method used to request data from a specified resource.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b,f0814c1eeb2105aa085a8917000972a0,f4e17ed362ae0155d86b249ad8a6653b</data>
    </node>
    <node id="SEARCH PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The search page is a destination where users can view results based on their search queries submitted through the form.</data>
      <data key="d2">439d5be2d39a5b9cedb135d149974680</data>
    </node>
    <node id="LOADING UI">
      <data key="d0">EVENT</data>
      <data key="d1">The loading UI is displayed while the search results are being fetched after form submission.
Loading UI refers to user interface elements that indicate to users that content is being loaded, improving user experience during data retrieval processes.
Loading UI is a special file in Next.js that displays a loading state for a segment while data is being fetched or processed.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,439d5be2d39a5b9cedb135d149974680,84b5c29553feb2883a2e93ffbac5b791</data>
    </node>
    <node id="SEARCH BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The SearchButton component provides instant feedback to users during form submission, indicating whether a search is in progress.
Search Button is an interactive element in the SearchField component that triggers the search action when clicked.</data>
      <data key="d2">439d5be2d39a5b9cedb135d149974680,b48f64ddd27370c0d0a93447e796c6b3</data>
    </node>
    <node id="SEARCH PARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">Search params are the encoded parameters included in the URL when the form is submitted, used to fetch relevant data.</data>
      <data key="d2">439d5be2d39a5b9cedb135d149974680</data>
    </node>
    <node id="EVENT PREVENT DEFAULT">
      <data key="d0">EVENT</data>
      <data key="d1">The event.preventDefault() method can be used to stop the default form submission behavior, allowing for custom handling of the submission.</data>
      <data key="d2">439d5be2d39a5b9cedb135d149974680</data>
    </node>
    <node id="ACTION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">439d5be2d39a5b9cedb135d149974680</data>
    </node>
    <node id="SEARCHBUTTON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SearchButton is a UI component used in Next.js applications to facilitate search functionality.</data>
      <data key="d2">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </node>
    <node id="CREATEPOST">
      <data key="d0">EVENT</data>
      <data key="d1">CreatePost is an event that occurs when a user submits a form to create a new post in a Next.js application.</data>
      <data key="d2">02d5f971b1d69adbfdf2a0cfc42447f7</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="POSTPAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PostPage is a component in Next.js that displays the details of a specific post based on its ID.</data>
      <data key="d2">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </node>
    <node id="GETPOST">
      <data key="d0">EVENT</data>
      <data key="d1">GetPost is an event that retrieves the data of a specific post based on its ID in a Next.js application.</data>
      <data key="d2">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </node>
    <node id="LORA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Lora is a font style defined in the code, used for displaying text in a specific aesthetic.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="SOURCE_SANS_3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Source Sans 3 is a font family used in the code with different weights for styling text.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="TS_CONFIG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">tsconfig.json is a configuration file used in TypeScript projects to define compiler options and paths.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="PAGE.TSX">
      <data key="d0">EVENT</data>
      <data key="d1">page.tsx is a TypeScript file that defines a component for rendering a page in the Next.js application.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="NEXT.FONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">next/font is a module in Next.js that allows for the easy integration of custom fonts into the application.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="MIGRATING FROM VITE">
      <data key="d0">EVENT</data>
      <data key="d1">Migrating from Vite is an event that describes the process of transitioning an application from Vite to Next.js.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Components refer to the building blocks of the Next.js application, which can be defined and rendered in various files.
Components refer to the various building blocks provided by Amplify for creating user interfaces, including buttons, badges, and menus.</data>
      <data key="d2">919c09d2956ed4ab195e7a6898f39063,b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="VERSION CHANGES">
      <data key="d0">EVENT</data>
      <data key="d1">Version Changes refer to the updates and modifications made to the Next.js framework over time.</data>
      <data key="d2">b6c19fc60714c90b16c67bd7df9573f9</data>
    </node>
    <node id="MERGE CONFLICTS">
      <data key="d0">EVENT</data>
      <data key="d1">Merge conflicts occur when changes from different sources conflict with each other during the integration of code or data.</data>
      <data key="d2">95c2ea5a0f820f012ba0ea521843d34d</data>
    </node>
    <node id="SPA">
      <data key="d0">EVENT</data>
      <data key="d1">SPA stands for Single-Page Application, a web application that interacts with the user by dynamically rewriting the current page rather than loading entire new pages from the server.</data>
      <data key="d2">95c2ea5a0f820f012ba0ea521843d34d</data>
    </node>
    <node id="MIGRATION PROCESS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">95c2ea5a0f820f012ba0ea521843d34d</data>
    </node>
    <node id="HTTP://LOCALHOST:3000">
      <data key="d0">GEO</data>
      <data key="d1">Localhost is a hostname that refers to the current computer used to access the web application, typically used for testing purposes.</data>
      <data key="d2">9da317a323ff76913285228d8243413e</data>
    </node>
    <node id="REACT ROUTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Router is a standard library for routing in React applications, allowing navigation among views of various components.

React Router is a library for routing in React applications, allowing navigation among views of various components in a React application.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6,9da317a323ff76913285228d8243413e,cc73438c54108f8ee25c9221d62bafca</data>
    </node>
    <node id="APPLICATION MIGRATION">
      <data key="d0">EVENT</data>
      <data key="d1">Application migration refers to the process of moving an application from one environment or framework to another, such as from Vite to Next.js.</data>
      <data key="d2">9da317a323ff76913285228d8243413e</data>
    </node>
    <node id="DIMENSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Dimensions refer to the width and height attributes of an image that determine its size on a webpage.</data>
      <data key="d2">9da317a323ff76913285228d8243413e</data>
    </node>
    <node id="BASE_PATH">
      <data key="d0">EVENT</data>
      <data key="d1">Base path is a configuration setting in Next.js that allows developers to set a prefix for all routes in the application.</data>
      <data key="d2">9da317a323ff76913285228d8243413e</data>
    </node>
    <node id="RSS FEED">
      <data key="d0">EVENT</data>
      <data key="d1">An RSS feed is a web feed that allows users to access updates to online content in a standardized format.</data>
      <data key="d2">a67099d1f0ea66a70c07e9595443231a</data>
    </node>
    <node id="OPEN GRAPH IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">An Open Graph image is a type of metadata used to represent a webpage visually when shared on social media platforms.</data>
      <data key="d2">a67099d1f0ea66a70c07e9595443231a</data>
    </node>
    <node id="STATIC ASSET">
      <data key="d0">EVENT</data>
      <data key="d1">Static assets are files that are served directly to the client without any server-side processing, such as images, stylesheets, and scripts.</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5</data>
    </node>
    <node id="CATCH-ALL ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">A catch-all route in Next.js is a routing mechanism that allows a single page to handle multiple routes, defined by creating a directory with [[...slug]].</data>
      <data key="d2">455e168c432979d018ea3d145e2547b5</data>
    </node>
    <node id="CRA APPLICATION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0e3c564b3dd53e829befef4d6241c23e</data>
    </node>
    <node id="LAYOUTS">
      <data key="d0">EVENT</data>
      <data key="d1">Layouts in Next.js are used to define UI that is shared across multiple routes, allowing for better organization and reusability of components in applications.
Layouts are components in the application that manage the rendering of user interfaces based on user roles.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2,6ebc8c74b9b797357659151a46693a88</data>
    </node>
    <node id="HOME PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Home Page is a specific page component that displays recent posts fetched from an API in a React application.
The home page is the main entry point of a Next.js application, typically defined in the app/page.tsx file.</data>
      <data key="d2">8a317609f77f5ace7ebd5473071b9693,8b55191578f60b2d2fac3ae2f4d05b2e</data>
    </node>
    <node id="POSTS">
      <data key="d0">EVENT</data>
      <data key="d1">Posts are data entries that can be displayed on the Home Page, typically fetched from an external source.
Posts refer to the individual blog entries that are fetched and displayed in Next.js applications, typically retrieved from an API.
Posts refer to the individual entries or articles that are fetched and displayed in the application, typically from a blog or content management system.</data>
      <data key="d2">0bfaadafcf31828f19e4b2657565944a,8a317609f77f5ace7ebd5473071b9693,af00e01481cac23e3b67c635215254ab</data>
    </node>
    <node id="DATA FETCHING APIS">
      <data key="d0">EVENT</data>
      <data key="d1">Data Fetching APIs in Next.js allow components to fetch data directly from external sources, simplifying the data retrieval process for pages and components.</data>
      <data key="d2">8a317609f77f5ace7ebd5473071b9693</data>
    </node>
    <node id="DEVELOPMENT SERVER">
      <data key="d0">EVENT</data>
      <data key="d1">The Development Server is a local server that runs the application during development, allowing developers to see changes in real-time at a specified URL.
The development server is a local server that allows developers to run and test their Next.js applications during development.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,8a317609f77f5ace7ebd5473071b9693</data>
    </node>
    <node id="PAGE COMPONENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">8a317609f77f5ace7ebd5473071b9693</data>
    </node>
    <node id="POSTLAYOUT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PostLayout is a component that defines the layout structure for displaying a post in the application.</data>
      <data key="d2">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </node>
    <node id="GETSTATICPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">getStaticParams is a function that generates static parameters for dynamic routes in a web application.</data>
      <data key="d2">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </node>
    <node id="GLOBALS.CSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">globals.css is a global stylesheet imported in the Next.js application to apply styles across all components.</data>
      <data key="d2">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </node>
    <node id="STYLING">
      <data key="d0">EVENT</data>
      <data key="d1">Styling refers to the process of applying CSS styles to components in a Next.js application.</data>
      <data key="d2">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </node>
    <node id="VERSION 14">
      <data key="d0">EVENT</data>
      <data key="d1">Version 14 is an upgrade release of Next.js that includes various improvements and changes to the framework.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </node>
    <node id="VERSION 15">
      <data key="d0">EVENT</data>
      <data key="d1">Version 15 is the subsequent upgrade release of Next.js following version 14, introducing further enhancements.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </node>
    <node id="LEGACY BEHAVIOR">
      <data key="d0">EVENT</data>
      <data key="d1">Legacy Behavior is a prop in Next.js that allows applications to maintain old behavior for links while transitioning to new features.</data>
      <data key="d2">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </node>
    <node id="STATIC EXPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Static Exports is a feature in Next.js that allows applications to be generated as static HTML files for improved performance and easier hosting.</data>
      <data key="d2">ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </node>
    <node id="HTTP PROXY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </node>
    <node id="API.EXAMPLE.COM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">api.example.com is a placeholder API endpoint used for fetching data in the Next.js application.
api.example.com is a placeholder URL used in examples to demonstrate how to fetch data in applications.</data>
      <data key="d2">735b59f53ffba96602dace4169c285ed,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </node>
    <node id="CACHING">
      <data key="d0">EVENT</data>
      <data key="d1">Caching in Next.js refers to storing data requests and rendered results to reduce network requests and improve application performance.
Caching is a technique used to store copies of files or data in a temporary storage location to reduce access time and improve performance.
Caching in Next.js improves application performance and reduces costs by caching rendering work and data requests.
Caching is a technique used in Server Components to store rendered results for reuse, improving performance and reducing costs.
Caching in Next.js refers to storing previously fetched data to improve performance and reduce server requests during navigation.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e,69ac19d7db15ae11c7884ce391807330,7ad571c896064ee6e36a4acd93898e88,adb5bec4b54e83924618cafc99d40e24,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="JS">
      <data key="d0">EVENT</data>
      <data key="d1">JavaScript (JS) is a programming language that enables interactive web pages and is a core technology of Next.js applications for client-side functionality.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e</data>
    </node>
    <node id="DEPLOYMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Deployment is the process of making a web application available for use, which is a key aspect of working with Next.js.</data>
      <data key="d2">2e4837fd908fed547d3170725336a52e</data>
    </node>
    <node id="SECURITY">
      <data key="d0">EVENT</data>
      <data key="d1">Security practices to prevent sensitive data exposure and ensure user authorization for actions in applications.
Security refers to the measures taken to protect an application and its data from unauthorized access and breaches, often involving user authentication and session validation.
Security in the context of Server Components refers to the ability to keep sensitive data and logic on the server, protecting it from exposure to the client.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330,715bdaaae1cb7470e0e54efac993beb5,aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="OPEN GRAPH IMAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Open Graph images are created to prepare applications for social sharing.
Open Graph images are images used in metadata to enhance the appearance of shared links on social media platforms.</data>
      <data key="d2">aaea03d7a1385785fae028f24c52f8a5,c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="NEXT BUILD">
      <data key="d0">EVENT</data>
      <data key="d1">Next build is a command used to generate an optimized version of a Next.js application for production.</data>
      <data key="d2">aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="NEXT START">
      <data key="d0">EVENT</data>
      <data key="d1">Next start is a command that starts the Next.js application in a production-like environment.</data>
      <data key="d2">aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="DOCKER IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Docker image is a lightweight, standalone, executable package that includes everything needed to run a piece of software, including the code, runtime, libraries, and environment variables.
A Docker image is a lightweight, standalone, executable package that includes everything needed to run a piece of software, including the code, runtime, libraries, and environment variables, often used in conjunction with Next.js applications.</data>
      <data key="d2">7cf992845bf79c5ec4ae2614617a79f4,aaea03d7a1385785fae028f24c52f8a5</data>
    </node>
    <node id="APACHE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Apache is a widely-used open-source web server software that provides a robust and flexible platform for hosting websites and applications.</data>
      <data key="d2">adb5bec4b54e83924618cafc99d40e24</data>
    </node>
    <node id="SIGNUP FORM">
      <data key="d0">EVENT</data>
      <data key="d1">The Signup Form is a user interface component that allows users to enter their credentials to create a new account.
The Signup Form is a user interface component that allows users to create a new account by providing their name, email, and password.</data>
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7,ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="ZOD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Zod is a TypeScript-first schema declaration and validation library that helps in validating data structures.</data>
      <data key="d2">ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="YUP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Yup is a JavaScript schema builder for value parsing and validation, often used with forms in React applications.</data>
      <data key="d2">ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="USER CREDENTIALS">
      <data key="d0">EVENT</data>
      <data key="d1">User credentials refer to the information provided by a user, such as name, email, and password, to authenticate their identity.</data>
      <data key="d2">ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="AUTHENTICATION PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An Authentication Provider is a service that manages user authentication and provides APIs for verifying user credentials.
An Authentication Provider is a service that verifies user credentials and manages user sessions for secure access to applications.</data>
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7,ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="AUTH LIBRARIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Auth Libraries are collections of pre-built solutions for implementing authentication, session management, and authorization in applications.</data>
      <data key="d2">ca20f99a0d6214b86e1868fcc2725709</data>
    </node>
    <node id="HASHED PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">A Hashed Password is a securely encrypted version of a user's password, created to protect user credentials in the database.</data>
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </node>
    <node id="BCRYPT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bcrypt is a library used to hash passwords securely before storing them in the database.</data>
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </node>
    <node id="FORM STATE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </node>
    <node id="SESSION MANAGEMENT LOGIC">
      <data key="d0">EVENT</data>
      <data key="d1">The process of managing user sessions in a web application, including creating, updating, and deleting sessions securely.</data>
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="USER SESSION">
      <data key="d0">EVENT</data>
      <data key="d1">A user session is a temporary and interactive information interchange between a user and a web application, typically managed through cookies.</data>
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="SESSION SECRET">
      <data key="d0">PERSON</data>
      <data key="d1">The session secret is a key used to encrypt and decrypt session data, ensuring secure communication between the client and server.</data>
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="ENCRYPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Encryption is the process of converting information or data into a code to prevent unauthorized access, used in session management to secure user data.
Encryption is the process of converting information into a code to prevent unauthorized access, particularly relevant in the context of server actions.</data>
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019,d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="DECRYPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Decryption is the process of converting encrypted data back into its original form, allowing access to the session data.</data>
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="DATABASE SESSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Database sessions refer to the management of user sessions stored in a database, allowing for persistent session data across different user interactions.</data>
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="SESSION PAYLOAD">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d0da48d43a184db7d07729aa6047ca3d</data>
    </node>
    <node id="AUTH LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A software library that handles user authentication and session management in applications.
An Auth library is a software component that manages user authentication and session management within an application.</data>
      <data key="d2">715bdaaae1cb7470e0e54efac993beb5,acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="VERCEL REDIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A database service that provides fast data retrieval, often used for session management in applications.</data>
      <data key="d2">acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="OPTIMISTIC AUTH CHECKS">
      <data key="d0">EVENT</data>
      <data key="d1">Optimistic auth checks are performed to quickly verify user permissions based on session data stored in cookies, enhancing user experience.</data>
      <data key="d2">acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="SECURE AUTH CHECKS">
      <data key="d0">EVENT</data>
      <data key="d1">Secure auth checks are performed to verify user permissions using session data stored in the database, ensuring security for sensitive operations.</data>
      <data key="d2">acfd457359d2693c084c6ab2341189be</data>
    </node>
    <node id="DAL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DAL is a data access layer that manages user roles and permissions in the application.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="AUTH CHECK">
      <data key="d0">EVENT</data>
      <data key="d1">Auth checks are events that verify user permissions before allowing access to certain components or data.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="CONTEXT PROVIDERS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Context Providers are components that provide session data to child components in the application.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="VERIFYSESSION">
      <data key="d0">EVENT</data>
      <data key="d1">verifySession is a function that checks if a user session is active and returns session data.</data>
      <data key="d2">407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="GETUSER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">407c79602db9cac967822f4d34fa94d2</data>
    </node>
    <node id="JEST.CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Jest.config is a configuration file used to customize the behavior of the Jest testing framework.</data>
      <data key="d2">b0a7c0b65015814bd16809b55a84c5cc</data>
    </node>
    <node id="E2E TESTS">
      <data key="d0">EVENT</data>
      <data key="d1">End-to-End (E2E) tests are a type of testing that validates the entire application flow, ensuring that all components work together as expected.</data>
      <data key="d2">b0a7c0b65015814bd16809b55a84c5cc</data>
    </node>
    <node id="ASYNC COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Async components are components that handle asynchronous operations, such as data fetching, in React applications.</data>
      <data key="d2">b0a7c0b65015814bd16809b55a84c5cc</data>
    </node>
    <node id="JEST.SETUP">
      <data key="d0">EVENT</data>
      <data key="d1">Jest.setup is a configuration file where developers can add custom setup options for Jest tests, such as importing custom matchers.</data>
      <data key="d2">b0a7c0b65015814bd16809b55a84c5cc</data>
    </node>
    <node id="MODULE PATH ALIASES">
      <data key="d0">EVENT</data>
      <data key="d1">Module Path Aliases are a feature in JavaScript that allows developers to create custom paths for importing modules, simplifying the import statements.
Module path aliases allow developers to create shortcuts for importing modules, improving code readability and maintainability.
Module Path Aliases in Next.js simplify the import statements in deeply nested project files, improving code readability and maintainability.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b,3615d6509a88bbb31eac0bc56f78c2f6,b0a7c0b65015814bd16809b55a84c5cc</data>
    </node>
    <node id="TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">Testing refers to the process of executing a program or application to identify any gaps, errors, or missing requirements in contrast to the actual requirements.</data>
      <data key="d2">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </node>
    <node id="SNAPSHOT TEST">
      <data key="d0">EVENT</data>
      <data key="d1">A snapshot test is a type of test that ensures the rendered output of a component does not change unexpectedly over time.</data>
      <data key="d2">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </node>
    <node id="JETBRAINS WEBSTORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JetBrains WebStorm is an integrated development environment (IDE) for JavaScript and related technologies, providing tools for debugging and testing applications.</data>
      <data key="d2">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </node>
    <node id="LAUNCH CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Launch configuration is a setup in an IDE that defines how to run or debug an application, specifying parameters like the type of application and the command to execute.</data>
      <data key="d2">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </node>
    <node id="UNIT TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">Unit testing is a software testing method where individual units or components of a software are tested in isolation to ensure they function correctly.</data>
      <data key="d2">fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="INTEGRATION TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">Integration testing is a phase in software testing where individual units are combined and tested as a group to identify interface defects.</data>
      <data key="d2">fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="END-TO-END TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">End-to-End (E2E) testing is a testing methodology that validates the entire application flow from start to finish, simulating real user scenarios.</data>
      <data key="d2">fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="SNAPSHOT TESTING">
      <data key="d0">EVENT</data>
      <data key="d1">Snapshot testing is a testing technique that captures the rendered output of a component and compares it to a previously saved snapshot to detect changes.</data>
      <data key="d2">fa740e66ec54695622178b0c41a679a4</data>
    </node>
    <node id="ROUTE HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">A Route Handler in Next.js is a function that handles requests to specific routes, allowing for dynamic behavior in applications.
Route Handlers in Next.js are server-side functions that handle requests and responses, enabling dynamic routing and API functionality.
Route Handlers in Next.js are functions that handle HTTP requests and responses for specific routes in the application.
Route Handler is a component in Next.js that processes incoming requests and determines how to respond, often used in conjunction with middleware for handling redirects.</data>
      <data key="d2">44eb58960277cd9fc903de7625623163,84b5c29553feb2883a2e93ffbac5b791,c5461cfa4259c43255132d8f916b1764,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </node>
    <node id="CSP HEADER">
      <data key="d0">EVENT</data>
      <data key="d1">Content Security Policy (CSP) header is a security feature that helps prevent a variety of attacks such as Cross-Site Scripting (XSS) and data injection attacks.</data>
      <data key="d2">44eb58960277cd9fc903de7625623163</data>
    </node>
    <node id="MY PROJECT">
      <data key="d0">EVENT</data>
      <data key="d1">My Project refers to the example project structure used to demonstrate the integration of MDX with Next.js.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89</data>
    </node>
    <node id="MDX COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MDX Components are custom React components that can be used within MDX files to enhance the rendering of markdown content.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89</data>
    </node>
    <node id="REACT COMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Components are reusable UI elements that can be embedded within MDX files to create dynamic content.</data>
      <data key="d2">11e614f4c015c7f8295c0c49ac211a89</data>
    </node>
    <node id="GLOBAL EXCHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Global Exchange is an event where stocks and securities are traded, relevant to the context of financial markets.
Global Exchange is a platform where various fonts can be utilized and displayed in web applications.
The Global Exchange is an event or platform where stocks and securities are traded.</data>
      <data key="d2">4e07cca41acd33806d13242f5e21f621,aee85ce10da1e12fe3e8ba84ec64e808,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="SERVER.TS">
      <data key="d0">EVENT</data>
      <data key="d1">server.ts is a TypeScript file that demonstrates how to create a custom server for a Next.js application.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </node>
    <node id="TYPECRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">TypeScript is a superset of JavaScript that adds static types, enabling developers to catch errors early and improve code quality.
TypeScript is a programming language that builds on JavaScript by adding static type definitions.
TypeScript is a programming language developed by Microsoft that is a superset of JavaScript, adding static types.
TypeScript is a programming language that extends JavaScript by adding static type definitions, which is supported by Next.js for better type checking.
TypeScript is a programming language that builds on JavaScript by adding static type definitions.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0,514671e4a7b4b0d7573852d3d380eefd,72e1433a8550144aaf1d1fd8f3cb3774,c5461cfa4259c43255132d8f916b1764,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="AST">
      <data key="d0">EVENT</data>
      <data key="d1">An Abstract Syntax Tree (AST) is a data structure that represents the structure of source code in a tree format.</data>
      <data key="d2">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </node>
    <node id="JSCONFIG.JSON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">jsconfig.json is a configuration file for JavaScript projects that specifies compiler options and file paths.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </node>
    <node id="ABSOLUTE IMPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Absolute imports allow developers to import modules using absolute paths instead of relative paths, simplifying the import process.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </node>
    <node id="HTTP SERVER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An HTTP server is a software that serves web content to clients over the internet, which Next.js can run behind.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </node>
    <node id="ABSOLUTE IMPORTS AND MODULE PATH ALIASES">
      <data key="d0">EVENT</data>
      <data key="d1">This refers to the configuration options in Next.js that allow for easier module imports and path management.</data>
      <data key="d2">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </node>
    <node id="STRICT">
      <data key="d0">EVENT</data>
      <data key="d1">Strict is one of the ESLint configuration options in Next.js that includes a stricter set of rules for better code quality.</data>
      <data key="d2">2f935bf8dd94b80e38c90109f4e620a3</data>
    </node>
    <node id="BASE">
      <data key="d0">EVENT</data>
      <data key="d1">Base is another ESLint configuration option in Next.js that includes the default ESLint rules without additional strictness.</data>
      <data key="d2">2f935bf8dd94b80e38c90109f4e620a3</data>
    </node>
    <node id="PACKAGES">
      <data key="d0">GEO</data>
      <data key="d1">Packages refer to directories or modules in a software project, often used in the context of monorepos.</data>
      <data key="d2">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="ROOT DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The root directory is the top-level folder in a project where configuration files and source code are located.</data>
      <data key="d2">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="LINT-STAGED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">lint-staged is a tool that allows running linters on pre-committed files in a Git repository.</data>
      <data key="d2">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="ESLINT PLUGIN NEXT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </node>
    <node id="@NEXT/ENV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The @next/env package is used to load environment variables from .env files in Next.js applications.</data>
      <data key="d2">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </node>
    <node id="DB_HOST">
      <data key="d0">PERSON</data>
      <data key="d1">DB_HOST is an example of an environment variable that specifies the database host in a Next.js application.</data>
      <data key="d2">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </node>
    <node id="DB_USER">
      <data key="d0">PERSON</data>
      <data key="d1">DB_USER is an example of an environment variable that specifies the database user in a Next.js application.</data>
      <data key="d2">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </node>
    <node id="DB_PASS">
      <data key="d0">PERSON</data>
      <data key="d1">DB_PASS is an example of an environment variable that specifies the database password in a Next.js application.</data>
      <data key="d2">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </node>
    <node id="CARD">
      <data key="d0">EVENT</data>
      <data key="d1">A Card is a component in Next.js that wraps a link and displays content, allowing for navigation within the application.
Card is a component in Amplify UI that can be styled using various style props to display content in a visually appealing way.
Card is a UI component used in Amplify UI to display content in a structured format, often used within the ThemeProvider examples.
A Card is a UI component in Amplify UI that can display content and actions on a single topic.
The Card component is a UI element in Amplify UI that displays content and actions on a single topic.
The Card is a UI component used to display content in a structured format within the Storage Manager, providing a visual container for other elements.
The Card component in AWS Amplify UI is used to group related pieces of content and can be customized for various uses.
The Card is a component in Amplify UI that displays content in a styled box, with variations such as outlined and elevated.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03,1a2c25b18b52cc9adff7a263b890a3b5,1ceae74b49c1b621d815e85b8ca49988,3bf357b72dac2808e7ba2223ab2c4745,717f3b1fb6a6ce86c291aca158771f33,735b59f53ffba96602dace4169c285ed,868b364b65a596f02a214b12ca0cbb6a,b8276fb595f7138780baf2d76c97bb37</data>
    </node>
    <node id="END-TO-END TYPE SAFETY">
      <data key="d0">EVENT</data>
      <data key="d1">End-to-End Type Safety refers to the ability to ensure type correctness throughout the entire application, from the server to the client, without needing to serialize data.</data>
      <data key="d2">735b59f53ffba96602dace4169c285ed</data>
    </node>
    <node id="CUSTOM TYPE DECLARATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Type Declarations are user-defined types in TypeScript that allow developers to extend the type system to fit their specific needs.</data>
      <data key="d2">735b59f53ffba96602dace4169c285ed</data>
    </node>
    <node id="VERSION 15.0.0">
      <data key="d0">EVENT</data>
      <data key="d1">Version 15.0.0 introduces support for next.config.ts in TypeScript projects.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="VERSION 13.2.0">
      <data key="d0">EVENT</data>
      <data key="d1">Version 13.2.0 includes beta support for statically typed links.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="VERSION 12.0.0">
      <data key="d0">EVENT</data>
      <data key="d1">Version 12.0.0 uses SWC by default to compile TypeScript and TSX for faster builds.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="VERSION 10.2.1">
      <data key="d0">EVENT</data>
      <data key="d1">Version 10.2.1 adds incremental type checking support when enabled in tsconfig.json.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="HEAP PROFILE">
      <data key="d0">EVENT</data>
      <data key="d1">A heap profile is a snapshot of memory usage in an application, used to identify potential sources of memory leaks.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="HEAP SNAPSHOT">
      <data key="d0">EVENT</data>
      <data key="d1">A heap snapshot is a record of the memory allocated at a specific point in time, used for analyzing memory usage.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="EXPERIMENTAL.WEBPACKMEMORYOPTIMIZATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">This feature, introduced in version 15.0.0, optimizes memory usage during Webpack builds but may increase compilation times.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="EXPERIMENTAL.DEBUG.MEMORY.USAGE">
      <data key="d0">EVENT</data>
      <data key="d1">This experimental feature allows developers to debug memory usage during the build process in Next.js applications.</data>
      <data key="d2">ea73c6964570e6f8578712d657ef12d4</data>
    </node>
    <node id="PUBLIC">
      <data key="d0">GEO</data>
      <data key="d1">The public directory in Next.js is used to serve static assets like images and files that can be accessed via the base URL.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee</data>
    </node>
    <node id="EXPERIMENTAL LIBRARY">
      <data key="d0">EVENT</data>
      <data key="d1">The @next/third-parties library is an experimental library under active development that provides components and utilities for integrating third-party libraries in Next.js applications.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee</data>
    </node>
    <node id="THIRD-PARTY LIBRARIES">
      <data key="d0">EVENT</data>
      <data key="d1">Third-party libraries are external libraries that can be integrated into Next.js applications to enhance functionality and performance.</data>
      <data key="d2">4248e6bed3ca383db55da9c5251a47ee</data>
    </node>
    <node id="BROOKLYN BRIDGE">
      <data key="d0">GEO</data>
      <data key="d1">The Brooklyn Bridge is a hybrid cable-stayed/suspension bridge in New York City, connecting the boroughs of Manhattan and Brooklyn.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e</data>
    </node>
    <node id="GA ID">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GA ID, or Google Analytics ID, is a unique identifier used to track and report data for a specific Google Analytics property.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e</data>
    </node>
    <node id="MEASUREMENT ID">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Measurement ID is a unique identifier for Google Analytics 4 properties, used to send data to the correct property for analysis.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e</data>
    </node>
    <node id="ENHANCED MEASUREMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Enhanced Measurement is a feature in Google Analytics that automatically tracks certain user interactions, such as page views and scrolls, without additional configuration.</data>
      <data key="d2">5372e12cf32e25741c25f62d7e23221e</data>
    </node>
    <node id="OPEN_TELEMETRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenTelemetry is a platform-agnostic observability framework that allows developers to instrument their applications for better performance and issue diagnosis.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d</data>
    </node>
    <node id="YOUR_PROJECT">
      <data key="d0">EVENT</data>
      <data key="d1">A placeholder for the user's project where OpenTelemetry can be implemented for observability.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d</data>
    </node>
    <node id="NODEJS">
      <data key="d0">GEO</data>
      <data key="d1">Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to build scalable network applications.
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine, allowing developers to run JavaScript on the server side.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d,64488fb4232e09664566b2ee3c00394a</data>
    </node>
    <node id="TRACES">
      <data key="d0">EVENT</data>
      <data key="d1">Traces are a collection of spans that represent the execution path of a request through a distributed system, helping to visualize the flow of operations.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d</data>
    </node>
    <node id="EXPORTER">
      <data key="d0">EVENT</data>
      <data key="d1">An exporter in OpenTelemetry is a component that sends collected telemetry data to a backend for analysis and visualization.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d</data>
    </node>
    <node id="OTEL_COLLECTOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenTelemetry Collector is a component that receives, processes, and exports telemetry data from applications to various backends.</data>
      <data key="d2">40b01d3865b7f98f3123b0d905e2e01d</data>
    </node>
    <node id="CUSTOM_SPANS">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Spans are user-defined spans in OpenTelemetry that allow developers to track specific operations within their applications for better observability.</data>
      <data key="d2">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </node>
    <node id="GETVALUE">
      <data key="d0">EVENT</data>
      <data key="d1">getValue is a function mentioned in the context of fetching data, likely used within the custom span example to retrieve specific information.</data>
      <data key="d2">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </node>
    <node id="FIRST CONTENTFUL PAINT">
      <data key="d0">EVENT</data>
      <data key="d1">First Contentful Paint (FCP) is a web performance metric that measures the time it takes for the first piece of content to be rendered on the screen.
First Contentful Paint (FCP) is a performance metric that measures the time it takes for the first piece of content to be rendered on the screen.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330,6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="FIRST INPUT DELAY">
      <data key="d0">EVENT</data>
      <data key="d1">First Input Delay (FID) is a web performance metric that measures the time from when a user first interacts with a page to the time when the browser is able to respond to that interaction.</data>
      <data key="d2">6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="INTERACTION TO NEXT PAINT">
      <data key="d0">EVENT</data>
      <data key="d1">Interaction to Next Paint (INP) is a web performance metric that measures the time from when a user interacts with a page to when the next frame is painted on the screen.</data>
      <data key="d2">6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="TIME TO FIRST BYTE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">6e870d62774508940749246fdee4d7b7</data>
    </node>
    <node id="APP PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The app/page.js file in Next.js serves as the entry point for the application, where components are defined and rendered.</data>
      <data key="d2">82c6ef4d52bb277665ade9f274822be3</data>
    </node>
    <node id="MODAL">
      <data key="d0">EVENT</data>
      <data key="d1">A modal is a dialog box that appears on top of the main content, often used for user interactions such as confirmations or forms in web applications.
A modal is a dialog box that appears on top of the main content, often used for user interactions without navigating away from the current page.
A modal is a dialog box that appears on top of the main content, often used for user interactions like login or confirmations.
A modal is a UI component that overlays on top of the main content, often used for user interactions like forms or confirmations.</data>
      <data key="d2">1e914b4d28a0e4ccc7e1e87c2504a6f5,82c6ef4d52bb277665ade9f274822be3,99d758fe4e77c64e3d6461268ba8b6d4,a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="OPTIMIZING PACKAGE BUNDLING">
      <data key="d0">EVENT</data>
      <data key="d1">A process described in Next.js documentation aimed at improving application performance through better management of package imports and bundling.</data>
      <data key="d2">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </node>
    <node id="OPTIMIZING FONTS">
      <data key="d0">EVENT</data>
      <data key="d1">A process described in Next.js documentation that focuses on improving font loading performance and privacy.</data>
      <data key="d2">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </node>
    <node id="ICON LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Icon libraries are collections of icons that can be used in web applications, often optimized for performance.</data>
      <data key="d2">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </node>
    <node id="ROBOTO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Roboto is a font family that is used in various applications and is imported from Google Fonts for styling text in web applications.</data>
      <data key="d2">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </node>
    <node id="NEXT FONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next Font is a library that allows developers to import and use fonts in Next.js applications.</data>
      <data key="d2">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </node>
    <node id="TYPED SCRIPT">
      <data key="d0">EVENT</data>
      <data key="d1">TypeScript is a programming language that is a superset of JavaScript, often used in web development for building applications.</data>
      <data key="d2">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </node>
    <node id="DASHBOARD LAYOUT">
      <data key="d0">EVENT</data>
      <data key="d1">Dashboard Layout is a specific layout in Next.js where third-party scripts can be loaded for multiple routes.
The Dashboard Layout is a specific layout component in Next.js that applies styles to the dashboard section of the application.</data>
      <data key="d2">a19a92a20fca1ccc164ea11570a4b26a,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="TAILWIND CSS CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Tailwind CSS Config is the configuration file where developers can customize the Tailwind CSS framework settings for their Next.js applications.</data>
      <data key="d2">e36d6ba428fb6e6b41847dce90fde4cc</data>
    </node>
    <node id="CONFIG-BASED METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">Config-based metadata is a method in Next.js to define application metadata using a static metadata object or a dynamic generateMetadata function.</data>
      <data key="d2">c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="FILE-BASED METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">File-based metadata is a method in Next.js to add static or dynamically generated special files to route segments for metadata management.
File-based metadata consists of specific files that can be used for static metadata in Next.js applications, such as favicon and sitemap.</data>
      <data key="d2">c1f63acba6f9a58b56bd71c409dcd343,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="SEO">
      <data key="d0">EVENT</data>
      <data key="d1">SEO, or Search Engine Optimization, is the practice of optimizing web content to improve visibility and ranking in search engine results.</data>
      <data key="d2">c1f63acba6f9a58b56bd71c409dcd343</data>
    </node>
    <node id="CHARACTER ENCODING">
      <data key="d0">EVENT</data>
      <data key="d1">Character encoding is a system that pairs each character in a given character set with a specific number, allowing computers to store and manipulate text.</data>
      <data key="d2">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="STATIC METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">Static metadata is metadata that is defined at build time and does not change during runtime in Next.js applications.</data>
      <data key="d2">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="DYNAMIC IMAGE GENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Image Generation is a feature in Next.js that allows developers to create images on-the-fly using JSX and CSS for social media sharing.</data>
      <data key="d2">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="PARENT METADATA">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </node>
    <node id="VIDEO">
      <data key="d0">EVENT</data>
      <data key="d1">Video refers to the multimedia content that can be embedded in web applications, often used for educational or promotional purposes.</data>
      <data key="d2">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </node>
    <node id="OPENGRAPH">
      <data key="d0">EVENT</data>
      <data key="d1">Open Graph is a protocol that allows web pages to become rich objects in a social graph, enabling better sharing of content on social media platforms.</data>
      <data key="d2">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </node>
    <node id="JSON-LD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JSON-LD is a method of encoding Linked Data using JSON, which is used to describe entities and their relationships in a structured format for search engines.</data>
      <data key="d2">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </node>
    <node id="VERCEL OG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vercel OG is a library used in Next.js for generating Open Graph images, enhancing the visual representation of web pages on social media.</data>
      <data key="d2">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </node>
    <node id="VIDEO TAG">
      <data key="d0">EVENT</data>
      <data key="d1">The &lt;video&gt; tag is an HTML element used to embed video content in web pages, allowing for playback of video files directly in the browser.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="IFRAME TAG">
      <data key="d0">EVENT</data>
      <data key="d1">The &lt;iframe&gt; tag is an HTML element that allows embedding of external content, such as videos from platforms like YouTube or Vimeo, into a web page.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="VERCEL BLOB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vercel Blob is a cloud storage solution provided by Vercel, designed for hosting and serving video content efficiently in web applications.
Vercel Blob is a cloud storage solution that provides efficient video hosting and works well with Next.js applications.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="VIDEO COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A Video Component in Next.js is a server component that generates an iframe for embedding videos, fetching the source URL dynamically for rendering.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="CAPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Captions are similar to subtitles but also include descriptions of non-dialogue audio, enhancing accessibility for all users, and can be added to videos using the &lt;track&gt; tag.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="HTML5">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">HTML5 is the latest version of the Hypertext Markup Language, which includes new features for embedding multimedia content, such as the &lt;video&gt; and &lt;iframe&gt; tags.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="ACCESSIBLE CONTROLS">
      <data key="d0">EVENT</data>
      <data key="d1">Accessible controls refer to user interface elements in video players that are designed to be navigable by keyboard and screen readers, ensuring usability for all users.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="FALLBACK CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">Fallback content is alternative content provided within the &lt;video&gt; tag for browsers that do not support video playback, ensuring users still receive information.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="VIDEO HOSTING SERVICES">
      <data key="d0">EVENT</data>
      <data key="d1">Video hosting services like YouTube and Vimeo provide platforms for uploading, sharing, and embedding videos, often using the &lt;iframe&gt; tag for integration into web pages.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66</data>
    </node>
    <node id="SUBTITLES">
      <data key="d0" />
      <data key="d1">
Subtitles are text displayed on a screen that transcribes or translates the spoken dialogue in videos, which can be added using the &lt;track&gt; element in HTML.</data>
      <data key="d2">29423d52dd581b926bd5f6be5dac2f66,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="FFMPEG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FFmpeg is a software suite to handle video, audio, and other multimedia files and streams, often used for video compression.</data>
      <data key="d2">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="MUX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Mux is a video platform that provides APIs for video hosting, streaming, and analytics, designed for developers.</data>
      <data key="d2">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="VIDEO HOSTING">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </node>
    <node id="ANT-DESIGN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Ant Design is a design system for enterprise-level products, providing a set of high-quality React components.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="CHAKRA-UI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Chakra UI is a simple, modular, and accessible component library for React applications.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="FLUENTUI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Fluent UI is a collection of UX frameworks used to create consistent experiences across Microsoft products.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="KUMA-UI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Kuma UI is a React component library that provides a set of customizable components for building user interfaces.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="PANDACSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Panda CSS is a utility-first CSS framework for building responsive and modern web applications.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="TAMAGUI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tamagui is a UI kit for React Native that provides a set of components and utilities for building mobile applications.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="TSS-REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TSS-React is a library for writing styles in TypeScript for React applications, providing a type-safe way to style components.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="VANILLA-EXTRACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vanilla Extract is a zero-runtime CSS-in-TypeScript library that allows you to write styles in TypeScript files.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="STYLE REGISTRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A style registry is a mechanism used to collect and manage CSS rules in a React application, particularly during server-side rendering.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="USE SERVER INSERTED HTML HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The useServerInsertedHTML hook is a React hook that allows developers to inject CSS rules into the HTML before rendering content that uses those styles.</data>
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="UPSTREAM APIS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d405678be18c78d7d78d7a6521a58a56</data>
    </node>
    <node id="PROFILE PIC">
      <data key="d0">PERSON</data>
      <data key="d1">Profile Pic is a placeholder name for an image file used in the examples to demonstrate the usage of the Next.js Image component.</data>
      <data key="d2">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="S3 AMAZON">
      <data key="d0">GEO</data>
      <data key="d1">S3 Amazon is a cloud storage service provided by Amazon Web Services, used for storing and retrieving any amount of data at any time.</data>
      <data key="d2">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="LCP PERFORMANCE">
      <data key="d0">EVENT</data>
      <data key="d1">LCP (Largest Contentful Paint) performance is a metric that measures loading performance, specifically how quickly the largest content element on a page is rendered.</data>
      <data key="d2">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="DYNAMIC AWAIT IMPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic await import is a JavaScript feature that allows for loading modules asynchronously, but is not supported in Next.js for static analysis.</data>
      <data key="d2">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </node>
    <node id="PROFILEPIC">
      <data key="d0">EVENT</data>
      <data key="d1">profilePic is an image file used in the Next.js application to represent the author in the Image component.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9</data>
    </node>
    <node id="RESPONSIVE">
      <data key="d0">EVENT</data>
      <data key="d1">Responsive is a layout example demonstrating how the Image component can be used to create responsive designs in Next.js applications.</data>
      <data key="d2">18f541d57ea407041cdaa1be5bf593d9</data>
    </node>
    <node id="STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">Styles refer to the CSS rules applied to components and pages in the Next.js application.
Styles refer to the design attributes and visual aspects that can be applied to UI components in Amplify.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">919c09d2956ed4ab195e7a6898f39063,a19a92a20fca1ccc164ea11570a4b26a</data>
    </node>
    <node id="REQUEST MEMOIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Request Memoization is a caching mechanism in Next.js that returns values of functions to reuse data in a React Component tree.
</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="FULL ROUTE CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">Full Route Cache is a caching mechanism in Next.js that reduces rendering costs and improves performance by caching HTML and RSC payloads.
Full Route Cache is a caching mechanism that stores the entire output of a route in Next.js to enhance navigation speed.</data>
      <data key="d2">c55d8ff0ea71716df1fdfba115d52035,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="ROUTER CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">Router Cache is a caching mechanism in Next.js that reduces server requests on navigation by caching RSC payloads.
The Router Cache is an in-memory cache in Next.js that stores previously visited route segments to enhance navigation speed and user experience.
Router Cache is a caching mechanism in Next.js that stores route segments to enable instant navigation without full-page reloads.
Router Cache is a caching mechanism that stores routing information to optimize the performance of web applications.
The Router Cache is a feature in Next.js that allows for the re-use of route segments to improve navigation performance.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,1b3c3a93e182b501d03ffb0b41273e30,98b8f4a199a3050f92608604cd0974b2,c55d8ff0ea71716df1fdfba115d52035,dc07058d355dcb6432e4280af3eba3d0</data>
    </node>
    <node id="ABORTCONTROLLER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AbortController is a web API that allows you to abort one or more DOM requests as and when desired.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="SERVER REQUEST">
      <data key="d0">EVENT</data>
      <data key="d1">A server request is an event that occurs when a client requests data from a server, which can be cached or memoized.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="MEMOIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Memoization is a performance optimization technique that stores the results of expensive function calls and returns the cached result when the same inputs occur again.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="POST METHOD">
      <data key="d0">EVENT</data>
      <data key="d1">The POST method is an HTTP request method used to send data to a server to create/update a resource, which is not memoized by default in React.
The POST method is an HTTP request method used to send data to a server, commonly used in web forms and API requests.
POST method is an HTTP request method used to send data to a server to create/update a resource.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b,ebeae91fd404de4ca5981ecf5cc74074,f0814c1eeb2105aa085a8917000972a0</data>
    </node>
    <node id="REVALIDATION">
      <data key="d0">EVENT</data>
      <data key="d1">Revalidation is the process of checking if cached data is still valid and updating it if necessary, either based on time or on-demand triggers.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="CACHING MECHANISMS">
      <data key="d0">EVENT</data>
      <data key="d1">Caching mechanisms in Next.js help improve performance by re-using cached data across server requests and deployments.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="SERVER COMPONENT TREE">
      <data key="d0">EVENT</data>
      <data key="d1">The server component tree in React refers to the structure of components that are rendered on the server, which can utilize memoization and caching.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="GENERATE METADATA">
      <data key="d0">EVENT</data>
      <data key="d1">Generate metadata is a function in Next.js that allows for the creation of metadata during the rendering process, which can involve data fetching.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="GENERATE STATIC PARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">Generate static params is a Next.js feature that allows for the generation of static parameters for pages, enhancing performance and SEO.</data>
      <data key="d2">0a535ba637862aaba58115b1f3e1a96b</data>
    </node>
    <node id="USE_ROUTER HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The useRouter hook is a feature in Next.js that provides access to the router object, allowing developers to manage navigation and routing in their applications.
The useRouter hook allows programmatic navigation between routes in Next.js applications.</data>
      <data key="d2">7ebeb57bb18774254a901eafc1cb096f,c55d8ff0ea71716df1fdfba115d52035</data>
    </node>
    <node id="DYNAMIC FUNCTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic Functions are functions that can change their behavior based on runtime information, such as incoming requests.

Dynamic functions in Next.js allow for the creation of request handlers that can respond to dynamic data.</data>
      <data key="d2">03988816c99b05a5845a71e1da91994c,729c604ddd30e8eb3491209028c25dde,72e1433a8550144aaf1d1fd8f3cb3774</data>
    </node>
    <node id="API KEY">
      <data key="d0">PERSON</data>
      <data key="d1">An API key is a code passed in by computer programs calling an API (application programming interface) to identify the calling program, its developer, or its user to the website.
An API Key is a code passed in by computer programs calling an API to identify the calling program, its developer, or its user to the website.
API Key is a method of authentication that allows access to AWS services without user credentials.
An API Key is a code passed in by computer programs calling an API to identify the calling program, its developer, or its user to the website.
An API key is a code passed in by computer programs calling an API to identify the calling program, its developer, or its user to the website.
</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,0dfb84288d523f687fe010cdbeb5603e,234c5cf6d90b5c8b7d3583a3300a4752,856c945b28eacce9c83378e56652fee3,d2da95c5361020f00b8857bfa61b4378,fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="REACT CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">React Cache is a feature that allows developers to memoize the return value of functions, optimizing data fetching and improving performance in React applications.</data>
      <data key="d2">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </node>
    <node id="CHANGLOG">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </node>
    <node id="SERVER-ONLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Server-only is a package that prevents developers from importing server-only modules into Client Components, ensuring proper usage of server-side code.
Server-only is a package in Next.js that ensures certain functions are executed only on the server side, preventing client-side access to sensitive data.</data>
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe,52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="ACME-CAROUSEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Acme-carousel is a third-party package that provides a Carousel component, which relies on client-only features.</data>
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe</data>
    </node>
    <node id="THEME CONTEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Theme Context is a React context used to share global concerns like the current theme across components.</data>
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe</data>
    </node>
    <node id="THEME PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Theme Provider is a Client Component that provides the Theme Context to its children, allowing them to access the current theme.
Theme Provider is a component in Amplify UI that allows customization of themes, including color modes.
The ThemeProvider is a component in Amplify UI for React that manages color modes for applications, allowing users to switch between light, dark, and system modes.
The ThemeProvider is a component in Amplify UI that allows developers to apply a theme to their application.
The ThemeProvider is a component in Amplify UI that allows developers to apply custom themes to their applications.
The Theme Provider is a component in AWS Amplify UI that allows developers to customize the appearance of UI components through theming.
ThemeProvider is a component that applies a theme to all Amplify UI components within its context.
Theme Provider is a component that allows customization of the UI theme in AWS Amplify applications.
The ThemeProvider is a component in Amplify UI that allows customization of the UI theme for applications.
The ThemeProvider is a component that allows customization of the UI theme in Amplify UI applications.
ThemeProvider is a component that provides theme context to child components in Amplify UI.
Theme Provider is a component that provides theme-related properties and styles to its child components in a React application.
Theme Provider is a component that allows developers to apply a custom theme to the Pagination component and other UI elements.
ThemeProvider is a component in Amplify UI that provides theme context to its child components.
ThemeProvider is a component in Amplify UI that applies a specified theme to its child components.


The Theme Provider is a component that allows for theming of UI components in a React application.
Theme Provider is a component that provides theme context to its children, allowing for consistent styling across UI components.
The ThemeProvider component allows customization of the appearance of UI components in an application by providing a theme context.

ThemeProvider is a component in AWS Amplify UI React that allows customization of the appearance of UI components through theming.
The ThemeProvider in AWS Amplify UI allows customization of the appearance of components, including the Link component.
ThemeProvider is a component in AWS Amplify that provides a theme context to its child components, allowing for consistent styling across the application.
Theme Provider is a component in Amplify UI that allows for the customization of themes and styling across the application.
The Theme Provider is a component that allows for consistent theming across an application, often used in UI frameworks.
The Theme Provider is a component in Amplify UI that allows developers to set the directionality of text and layout in applications.
ThemeProvider is a component in Amplify UI that allows developers to customize the theme of their application, ensuring consistency in design.
The ThemeProvider component in Amplify UI allows developers to customize the appearance of UI components.
The ThemeProvider is a component in Amplify UI that allows developers to customize the look and feel of their applications through theming controls.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,06fd00c0023b38a04bba794fae7ed356,0e5a9687dbee50e7916d42244a756478,12ed2a0e7657f4c4359e7bea38b9bc13,1a2c25b18b52cc9adff7a263b890a3b5,3c1da97b232e76bcfabe7b7c980f2a33,3fb45c793f55da9bb4eda5392e25aafe,40ccefaf714c8eadcebd508c051c9190,52fc958abba47a16871f909ed3cc2d5a,530b644b2b2dcf37b1cde4a8c015083a,5c2098e04771d356430a7ff2887e471b,6264f18714899ee18445e9c4535f5ff2,6f492ac78ca89b7028399a30a24b9dc6,6f822244ad945944fb292c514cfddc13,717f3b1fb6a6ce86c291aca158771f33,73680e5bf87090f014e7bd9d2b8e582a,7eb4739e8bed8bf13646d7e252c1ae14,818fcb4044a83bd6eead8a24e57319ad,85d9171dd6e70ffdb5803e227ecacbc4,95c47d77c6b1c1b930bbbff2c9d1facf,a3d37007c833039158d1e1720cb62466,a5e50f469dd57f00c706f3dcd5894c37,ac0c424efc84163fec05823d42352599,b8276fb595f7138780baf2d76c97bb37,b9eb6db49e67c5d8dd0f95139d465c50,c6562553adf4b52a1a6eec1a462e147f,d26ffe8f4908cd05e7882cd4223c3490,d700fb2336ddc0a563736b65003c9d4f,d862c0095587db23ca9388fe047e5de4,f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="EXTERNAL-SERVICE.COM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">External-service.com is the URL from which data is fetched in the server-only module.</data>
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe</data>
    </node>
    <node id="GALLERY">
      <data key="d0">EVENT</data>
      <data key="d1">Gallery is a Client Component that displays pictures and utilizes the Carousel component.
A gallery is a collection of images or photos displayed together, often allowing users to browse through them.)Relationships:("relationship"</data>
      <data key="d2">1e914b4d28a0e4ccc7e1e87c2504a6f5,3fb45c793f55da9bb4eda5392e25aafe</data>
    </node>
    <node id="LIB/DATA.JS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3fb45c793f55da9bb4eda5392e25aafe</data>
    </node>
    <node id="ESBUILD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">esbuild is a JavaScript bundler and minifier that can be configured to include specific directives in React applications.</data>
      <data key="d2">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="LOGO">
      <data key="d0">EVENT</data>
      <data key="d1">Logo is a static component that represents the brand or identity of the application, typically displayed in the navigation area.</data>
      <data key="d2">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="RSC PAYLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">RSC Payload refers to the rendered result of Server Components that contains references to Client Components for reconciliation in React applications.</data>
      <data key="d2">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="BUNDLERS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </node>
    <node id="CLIENTCOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ClientComponent is a component in Next.js that is rendered on the client side, allowing for dynamic interactions.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="SERVERCOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ServerComponent is a component in Next.js that is rendered on the server side, providing prerendered content to the client.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="DYNAMIC COMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dynamic Component refers to components in Next.js that can change based on user interactions or data, often requiring server-side rendering.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="STATIC COMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Static Component refers to components in Next.js that are rendered at build time and do not change based on user interactions.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="NEXTCONFIG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">next.config.js is a configuration file in Next.js that allows developers to customize the behavior of their application.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="INCREMENTAL ADOPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Incremental Adoption is a strategy in Next.js for gradually implementing new features like Partial Prerendering in existing applications.</data>
      <data key="d2">2e44942744c40cf6e169212e822438d5</data>
    </node>
    <node id="COUNTER">
      <data key="d0">EVENT</data>
      <data key="d1">Counter is a Client Component example that demonstrates the use of state and event listeners in a React application.</data>
      <data key="d2">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </node>
    <node id="TABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Table is a component that can dynamically render data based on search parameters passed to it.
Table refers to the structure in DynamoDB that holds data, in this case, the "Todo" table mentioned in the text.
Table is a component that displays tabular data using the HTML &lt;table&gt; element and related elements.
The Table is a component in Amplify UI for React that displays tabular data using the HTML &lt;table&gt; element and related elements.
A table is a structured format for organizing data in rows and columns, often used in web applications for displaying information.
A table is a structured format for organizing data in rows and columns, often used in web applications for displaying information.
Table is a component used to display data in a structured format within the Amplify UI for React.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478,2c3e23b7d2b5c3c6c258760c75956b4c,52fc958abba47a16871f909ed3cc2d5a,887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77,dce893dfb435d8bb64c3de3aa22630a5,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="SEARCHPARAMS">
      <data key="d0">EVENT</data>
      <data key="d1">SearchParams are parameters passed to components in Next.js to control rendering behavior, such as sorting.</data>
      <data key="d2">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </node>
    <node id="TABLE COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Table component is designed to display data dynamically based on the search parameters provided to it.</data>
      <data key="d2">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </node>
    <node id="CONTENT DELIVERY NETWORK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Content Delivery Network (CDN) is a system of distributed servers that deliver web content to users based on their geographic location.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330</data>
    </node>
    <node id="PERFORMANCE">
      <data key="d0">EVENT</data>
      <data key="d1">Performance refers to the optimization of web applications through the use of Server Components, reducing client-side JavaScript and improving load times.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330</data>
    </node>
    <node id="INITIAL PAGE LOAD">
      <data key="d0">EVENT</data>
      <data key="d1">Initial Page Load is the process of generating HTML on the server to allow users to view the page immediately without waiting for client-side rendering.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330</data>
    </node>
    <node id="REACT SERVER COMPONENT PAYLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">The React Server Component Payload (RSC) is a binary representation of the rendered Server Components tree used to update the browser's DOM.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330</data>
    </node>
    <node id="STREAMING">
      <data key="d0">EVENT</data>
      <data key="d1">Streaming is a technique that allows rendering work to be split into chunks and sent to the client as they become ready, improving user experience.
Streaming in Next.js allows for progressive rendering of UI from the server, enabling parts of the page to be displayed to the user before the entire content is ready.</data>
      <data key="d2">69ac19d7db15ae11c7884ce391807330,729c604ddd30e8eb3491209028c25dde</data>
    </node>
    <node id="REQUEST-RESPONSE LIFECYCLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Request-Response Lifecycle describes the sequence of actions that occur when a user interacts with a web application, including sending requests and receiving responses.</data>
      <data key="d2">729c604ddd30e8eb3491209028c25dde</data>
    </node>
    <node id="CACHED">
      <data key="d0">EVENT</data>
      <data key="d1">Cached refers to data that is stored temporarily to improve performance by reducing the need to fetch the same data repeatedly.</data>
      <data key="d2">729c604ddd30e8eb3491209028c25dde</data>
    </node>
    <node id="UNCACHED">
      <data key="d0">EVENT</data>
      <data key="d1">Uncached refers to data that is fetched directly from the source each time it is requested, rather than being stored for future use.</data>
      <data key="d2">729c604ddd30e8eb3491209028c25dde</data>
    </node>
    <node id="HYBRID APPLICATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Hybrid Applications refer to applications that combine both client-side and server-side rendering, a concept emphasized in Next.js.</data>
      <data key="d2">2f2dde2368e46aa812e2a39e32b3505d</data>
    </node>
    <node id="NETWORK BOUNDARY">
      <data key="d0">EVENT</data>
      <data key="d1">The Network Boundary is a concept in Next.js that defines the separation between client and server operations in an application.</data>
      <data key="d2">2f2dde2368e46aa812e2a39e32b3505d</data>
    </node>
    <node id="APPLICATION CODE">
      <data key="d0">EVENT</data>
      <data key="d1">Application Code refers to the code that runs in a Next.js application, which flows from the server to the client during a response.</data>
      <data key="d2">2f2dde2368e46aa812e2a39e32b3505d</data>
    </node>
    <node id="UPDATE USER">
      <data key="d0">EVENT</data>
      <data key="d1">The Update User action is a server-side function that processes user data updates based on form submissions.</data>
      <data key="d2">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </node>
    <node id="AMOUNT">
      <data key="d0">EVENT</data>
      <data key="d1">amount is a field in the FormData that indicates the monetary value associated with the invoice being created.</data>
      <data key="d2">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </node>
    <node id="STATUS">
      <data key="d0">EVENT</data>
      <data key="d1">status is a field in the FormData that represents the current state of the invoice, such as pending or completed.
Status is a field in the form that indicates the current state of a task, such as "Not started", "In progress", or "Done".
Status is a reference to the OrderStatus enum that indicates the current status of an order in the OrderStatusChange custom type.</data>
      <data key="d2">61659c64fca58284b65ddb212f319f91,9ac6b7bdb38f92b5b8fbd5762735c158,a05256700be9b39d3c9098982e0fa5d4</data>
    </node>
    <node id="FORM ELEMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Form elements are the various input fields within the Form that allow users to enter data, such as text inputs and buttons.</data>
      <data key="d2">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </node>
    <node id="CUSTOMERID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </node>
    <node id="SIGNUP">
      <data key="d0">EVENT</data>
      <data key="d1">The Signup event refers to the process where a user registers for an account through a form interface.
The Signup event refers to the process where users can create an account, which involves handling form submissions and potential errors.
SignUp is the process where new users create an account in an application, often requiring email verification.</data>
      <data key="d2">33239b71158a6566c2b82b6a30b68e82,5b2747800197a072e6dc22c54876eb35,7510b258e7a4194c8664e8c8ba088ecc</data>
    </node>
    <node id="CREATEUSER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CreateUser is an action that handles the user creation process in the application.</data>
      <data key="d2">7510b258e7a4194c8664e8c8ba088ecc</data>
    </node>
    <node id="EMAIL">
      <data key="d0">PERSON</data>
      <data key="d1">Email is a required field in the signup form for user registration.
Email is used as a login method for user authentication in the Amplify platform.
Email is a method of exchanging digital messages over the Internet, commonly used for communication in applications.
Email is a method of exchanging digital messages over the Internet, often used for user authentication and communication in applications.
The email "hello@mycompany.com" is an attribute used for user account verification in AWS Amplify.
Email is a method of user sign-in that is used by default in AWS Amplify for authentication purposes.
An email address is used for communication and is often required for user account setup and notifications in AWS services.
Email is a required field for user registration and login, representing the user's electronic mail address.
Email is a required field in the form that collects user email addresses.
Email is a label used in forms to collect the user's email address input.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778,162dda357807004bc0720c9422f45783,4f10f73a5698de38e9d0cd15643d69c1,7510b258e7a4194c8664e8c8ba088ecc,7925e036e2025ccae5e0f72fe8f556ac,7a771747e08d74ceb8c258bc5a658d6d,a31ec7e4bd06590a0d36f19c433d4801,c58075426e62c1f9da00343d6b1599a7,da8a5f647964e74661f5f6b0ad4f6a74,e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="INITIALSTATE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">initialState is an object that holds the initial state for the signup form, including a message field.</data>
      <data key="d2">7510b258e7a4194c8664e8c8ba088ecc</data>
    </node>
    <node id="PENDING">
      <data key="d0">EVENT</data>
      <data key="d1">Pending is a state that indicates whether the signup action is currently being processed.</data>
      <data key="d2">7510b258e7a4194c8664e8c8ba088ecc</data>
    </node>
    <node id="MESSAGE">
      <data key="d0">PERSON</data>
      <data key="d1">Message refers to the feedback provided to the user after attempting to sign up, indicating success or failure.
A Message is a structured data type that contains the subject, body text, and recipient address for email notifications.

Message provides a description of the error encountered during geofence operations.
Message is a custom type defined in the schema that represents the content and channel name for PubSub messaging.
Message is a custom type in Amplify that represents the content and channel name of a published message.
Message is a string that provides additional information about the order status change, required in the OrderStatusChange custom type.
Message refers to a data model in the chat app example, representing individual messages sent in a chat.
Message refers to the various message types and styles used in Amplify's components for user notifications.
Messages generated by Amplify components that convey information, success, warnings, or errors to users.
A message in the context of in-app messaging is a notification or alert sent to users while they are using the application.
A Message is a UI component in AWS Amplify that displays information to users, which can be styled and customized.
The Message component in Amplify UI is used to display feedback to the user.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e,35f3b0ff8ac0afd0bab73f2b8a1595ce,37ea4ea73ecb3370ad928dc71b30f77f,3a9b26a380534d4aa1f17290c51aea24,52545707508fac3ea71aa1d62f6d0cb6,5dced807ee929bcba98d82ba0000fe33,61659c64fca58284b65ddb212f319f91,7510b258e7a4194c8664e8c8ba088ecc,898474c2db3e19ba76a4ee18b9b1f4cb,8e6f8a08e3cdc9d85f1015001bcf93dc,a3d37007c833039158d1e1720cb62466,e3c4629b893f38a9c103147f3ea608f3,f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="USEACTIONSTATE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7510b258e7a4194c8664e8c8ba088ecc</data>
    </node>
    <node id="INCREMENTVIEWS">
      <data key="d0">EVENT</data>
      <data key="d1">incrementViews is an asynchronous function that updates the view count, likely by interacting with a backend service.</data>
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="ERROR.JS">
      <data key="d0">EVENT</data>
      <data key="d1">error.js is a file in Next.js that handles errors thrown during the execution of server actions or components.</data>
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="CLOSURES">
      <data key="d0">EVENT</data>
      <data key="d1">Closures are functions that capture the lexical scope in which they were defined, allowing them to access variables from that scope even when executed outside of it.</data>
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="NEXT_SERVER_ACTIONS_ENCRYPTION_KEY">
      <data key="d0">EVENT</data>
      <data key="d1">NEXT_SERVER_ACTIONS_ENCRYPTION_KEY is an environment variable used to maintain consistent encryption keys across multiple server instances in a Next.js application.</data>
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="VIEWS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">4a5b866ffddc7fba2346c94f6c037019</data>
    </node>
    <node id="CSRF ATTACKS">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-Site Request Forgery (CSRF) attacks are a type of security vulnerability that allows an attacker to trick a user into executing unwanted actions on a different website where they are authenticated.</data>
      <data key="d2">ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="HTTP METHOD">
      <data key="d0">EVENT</data>
      <data key="d1">HTTP methods are a set of request methods used by the HTTP protocol to indicate the desired action to be performed for a given resource, such as GET, POST, PUT, DELETE.</data>
      <data key="d2">ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="SERVER ACTIONS ALLOWED ORIGINS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ebeae91fd404de4ca5981ecf5cc74074</data>
    </node>
    <node id="API.VERCEL.APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The API at vercel.app is used for fetching blog data in Next.js applications, allowing developers to retrieve and display content dynamically.</data>
      <data key="d2">af00e01481cac23e3b67c635215254ab</data>
    </node>
    <node id="DATA FETCHING AND CACHING">
      <data key="d0">EVENT</data>
      <data key="d1">Data Fetching and Caching is a process in Next.js that involves retrieving data from APIs and caching it for performance optimization.</data>
      <data key="d2">af00e01481cac23e3b67c635215254ab</data>
    </node>
    <node id="REVALIDATE_PATH">
      <data key="d0">EVENT</data>
      <data key="d1">Revalidate Path is a function in Next.js that invalidates the cache for a specific route, allowing fresh data to be fetched.</data>
      <data key="d2">af00e01481cac23e3b67c635215254ab</data>
    </node>
    <node id="REVALIDATE_TAG">
      <data key="d0">EVENT</data>
      <data key="d1">Revalidate Tag is a function in Next.js that allows for more granular cache invalidation based on specific tags associated with data.</data>
      <data key="d2">af00e01481cac23e3b67c635215254ab</data>
    </node>
    <node id="ASYNC REACT SERVER COMPONENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0bfaadafcf31828f19e4b2657565944a</data>
    </node>
    <node id="DRIZZLE ORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Drizzle ORM is a library used for interacting with databases in a structured way within the application</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </node>
    <node id="ARTIST">
      <data key="d0">PERSON</data>
      <data key="d1">An individual whose information is fetched and displayed in the application, typically related to music or art</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </node>
    <node id="PLAYLISTS">
      <data key="d0">EVENT</data>
      <data key="d1">Collections of music tracks associated with an artist, fetched and displayed in the application</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </node>
    <node id="USERNAME">
      <data key="d0">PERSON</data>
      <data key="d1">A unique identifier for an artist used to fetch their data in the application
Username is a unique identifier for a user in a system, often used for login and profile identification.
A username is a unique identifier for a user in the AWS Amplify system, used during sign-up and sign-in processes.
Username is a required field for user authentication in the Authenticator component, representing the user's unique identifier.
Username is a unique identifier that users create to sign in to their accounts using the Authenticator component.
Username is a field that requires validation to ensure it includes at least one digit.
Username is a label used in forms to collect the user's chosen username input.
Username is a field in the FormData object that represents the unique identifier for a user in the application.</data>
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1,1d939f19e04dfaa8df3664a2cd4db1f1,322dba5659c945a3d1a5389a738aee99,73680e5bf87090f014e7bd9d2b8e582a,7a771747e08d74ceb8c258bc5a658d6d,9d1ecd9e6b4e4bc832178b9ae1a06e8d,cb861a02338e7cf7786d791829706a53,da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="CACHE FUNCTION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </node>
    <node id="ITEM">
      <data key="d0">EVENT</data>
      <data key="d1">Item is a component in the Next.js application that fetches and displays data based on the provided ID.
</data>
      <data key="d2">1b140f417545903391f0e28ef4baf7c2,52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="TAINT APIS">
      <data key="d0">EVENT</data>
      <data key="d1">Taint APIs are methods in React that help prevent sensitive data from being exposed to the client by marking certain data as tainted.</data>
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="PRELOAD">
      <data key="d0">EVENT</data>
      <data key="d1">Preload is a function that eagerly fetches data for an item before it is rendered in the Next.js application.</data>
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="CHECK IS AVAILABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Check Is Available is a function that checks the availability of an item in the Next.js application.</data>
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="USER DATA">
      <data key="d0">EVENT</data>
      <data key="d1">User Data is a function that retrieves user information from the database while ensuring sensitive data is not exposed to the client.</data>
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="QUERY DATA FROM DB">
      <data key="d0">EVENT</data>
      <data key="d1">Query Data From DB is a function that interacts with the database to fetch data in the Next.js application.</data>
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="GET ITEM">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">52f67911efe49d48e703ba654f23728e</data>
    </node>
    <node id="MIDDLEWARE.TS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">middleware.ts is a TypeScript file used in Next.js applications to define middleware functionalities for processing requests and responses.</data>
      <data key="d2">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="MIDDLEWARE.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">middleware.js is a JavaScript file used in Next.js applications to define middleware functionalities for processing requests and responses.</data>
      <data key="d2">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="CONDITIONAL STATEMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Conditional statements in middleware allow for specific actions to be taken based on the request path, enabling dynamic request handling.</data>
      <data key="d2">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </node>
    <node id="NEXTFETCHEVENT">
      <data key="d0">EVENT</data>
      <data key="d1">NextFetchEvent is an object in Next.js that extends the native FetchEvent, allowing for additional functionalities in middleware.</data>
      <data key="d2">3b86536c72cd33dea29dc82250012d80</data>
    </node>
    <node id="DICTIONARIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dictionaries in Next.js are used to manage translations and localized strings for different languages in an application.</data>
      <data key="d2">a332c6db30f7b29cd4dcb1117bd6eab3</data>
      <data key="d3">ORGANIZATION</data>
    </node>
    <node id="GET">
      <data key="d0">EVENT</data>
      <data key="d1">GET is an HTTP method supported by Next.js for retrieving data from a server.</data>
      <data key="d2">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </node>
    <node id="PUT">
      <data key="d0">EVENT</data>
      <data key="d1">PUT is an HTTP method supported by Next.js for sending data to a server to update a resource.</data>
      <data key="d2">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </node>
    <node id="PATCH">
      <data key="d0">EVENT</data>
      <data key="d1">PATCH is an HTTP method supported by Next.js for sending partial data to a server to update a resource.</data>
      <data key="d2">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </node>
    <node id="DELETE">
      <data key="d0">EVENT</data>
      <data key="d1">DELETE is an HTTP method supported by Next.js for removing a resource from a server.</data>
      <data key="d2">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </node>
    <node id="WEBHOOK">
      <data key="d0">EVENT</data>
      <data key="d1">Webhooks are user-defined HTTP callbacks that are triggered by specific events in a web application, allowing real-time communication between services.
A webhook is a method of augmenting or altering the behavior of a web application with custom callbacks, triggered by specific events.
A webhook is a method of augmenting or altering the behavior of a web application with custom callbacks when certain events occur.
Webhook is a method for one application to send real-time data to another application whenever an event occurs.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7,0cc40988714324257eaa1d03994f3e39,13036fcc04ff7a3a3d82cc055061ee52,c5461cfa4259c43255132d8f916b1764</data>
    </node>
    <node id="PHOTO">
      <data key="d0">EVENT</data>
      <data key="d1">A photo is an image that can be displayed in a gallery or feed, often interacted with in applications for viewing or sharing.</data>
      <data key="d2">1e914b4d28a0e4ccc7e1e87c2504a6f5</data>
    </node>
    <node id="PAGE VIEWS">
      <data key="d0">EVENT</data>
      <data key="d1">Page views is an event that tracks the number of times a specific page is viewed by users.</data>
      <data key="d2">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </node>
    <node id="VISITORS">
      <data key="d0">EVENT</data>
      <data key="d1">Visitors is an event that tracks the number of unique users visiting a specific page.</data>
      <data key="d2">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </node>
    <node id="ROLES">
      <data key="d0">EVENT</data>
      <data key="d1">Roles refer to the different user permissions that dictate what actions a user can perform within the application.</data>
      <data key="d2">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </node>
    <node id="SETTINGS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </node>
    <node id="MODAL CLOSING">
      <data key="d0">EVENT</data>
      <data key="d1">Modal closing refers to the action of dismissing or closing a modal window in the application, often triggered by user interaction.</data>
      <data key="d2">a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="ROUTER.BACK">
      <data key="d0">EVENT</data>
      <data key="d1">The router.back() function is a method used to navigate back to the previous page in the application, often used in modal interactions.</data>
      <data key="d2">a50f51132c97b3887f2b21ed846fa020</data>
    </node>
    <node id="ROUTE SEGMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A route segment in Next.js is defined by a folder in the app directory, which corresponds to a part of the URL path.</data>
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="PRIVATE FOLDERS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Private folders in Next.js are created by prefixing a folder with an underscore, indicating that the folder should not be considered by the routing system.</data>
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="FILE COLOCATION">
      <data key="d0">EVENT</data>
      <data key="d1">File colocation in Next.js allows developers to place project files within the app directory, ensuring that they are organized according to the routing structure.</data>
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="ROUTING SYSTEM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The routing system in Next.js determines how URLs map to specific files and folders within the app directory, controlling access to different parts of the application.</data>
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="NESTED FOLDERS">
      <data key="d0">EVENT</data>
      <data key="d1">Nested folders in the app directory define a hierarchy of routes, allowing for complex routing structures in Next.js applications.</data>
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="PROJECT ORGANIZATION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </node>
    <node id="FOLDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Folders in Next.js are used to organize project files and components, helping to maintain a clean project structure.
A folder is a virtual container within the storage system that holds files and can be created or selected for file operations.
A folder in AWS Amplify Storage is a virtual concept used to organize files, which may appear as files with a size of 0.</data>
      <data key="d2">5214aa930e0680c0e176373359966818,5f39324ac9e2fb1bb8b139c9b114f332,6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </node>
    <node id="PERMANENTREDIRECT">
      <data key="d0">EVENT</data>
      <data key="d1">PermanentRedirect is a function in Next.js that allows for a permanent redirect to another URL, typically used after a mutation or event that changes an entity's canonical URL.</data>
      <data key="d2">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </node>
    <node id="PROFILE">
      <data key="d0">EVENT</data>
      <data key="d1">Profile refers to a user profile page that can be navigated to after a successful action, such as updating a username.</data>
      <data key="d2">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </node>
    <node id="REDIRECT MAP">
      <data key="d0">EVENT</data>
      <data key="d1">A redirect map is a data structure that stores URL redirects, allowing applications to manage and implement URL redirection efficiently.</data>
      <data key="d2">84b5c29553feb2883a2e93ffbac5b791</data>
    </node>
    <node id="EDGE CONFIG">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">84b5c29553feb2883a2e93ffbac5b791</data>
    </node>
    <node id="REDIRECT FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">The redirect function is used in Server Components of Next.js to navigate users to different routes based on conditions.</data>
      <data key="d2">7ebeb57bb18774254a901eafc1cb096f</data>
    </node>
    <node id="BODY TAG">
      <data key="d0">EVENT</data>
      <data key="d1">The body tag in HTML is used to contain the main content of a web page, including text, images, and other elements.</data>
      <data key="d2">7ebeb57bb18774254a901eafc1cb096f</data>
    </node>
    <node id="GLOBALERROR">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7ebeb57bb18774254a901eafc1cb096f</data>
    </node>
    <node id="HISTORY API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The History API allows manipulation of the browser's session history, enabling developers to manage the navigation state of their applications.</data>
      <data key="d2">7ad571c896064ee6e36a4acd93898e88</data>
    </node>
    <node id="PARTIAL RENDERING">
      <data key="d0">EVENT</data>
      <data key="d1">Partial rendering allows only the segments of a page that change to be re-rendered, enhancing performance during navigation.</data>
      <data key="d2">7ad571c896064ee6e36a4acd93898e88</data>
    </node>
    <node id="SOFT NAVIGATION">
      <data key="d0">EVENT</data>
      <data key="d1">Soft navigation refers to the ability to navigate between pages without a full page reload, preserving client-side state and improving user experience.</data>
      <data key="d2">7ad571c896064ee6e36a4acd93898e88</data>
    </node>
    <node id="TEMPLATE">
      <data key="d0">EVENT</data>
      <data key="d1">A template in Next.js is a component that wraps a child layout or page, creating a new instance for each child on navigation, without preserving state.
Templates in Next.js are components that wrap child components, creating new instances for each child on navigation, allowing for specific behaviors like state reset and re-synchronization of effects.
A template in Next.js is a specialized re-rendered layout UI that can be used for dynamic content rendering.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,1b3c3a93e182b501d03ffb0b41273e30,1d855e055624fb34345331017d371137</data>
    </node>
    <node id="CLIENT ROUTER FILTER">
      <data key="d0">EVENT</data>
      <data key="d1">The client router filter in Next.js is a mechanism that detects transitions between pages and app routes, helping to manage navigation effectively.</data>
      <data key="d2">1b3c3a93e182b501d03ffb0b41273e30</data>
    </node>
    <node id="ROUTE SEGMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Route segments are parts of the URL that correspond to specific components or layouts in a Next.js application, allowing for organized navigation and rendering.
Route segments are defined by folders in Next.js that represent different parts of the URL path and help in organizing the application structure.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b,1b3c3a93e182b501d03ffb0b41273e30</data>
    </node>
    <node id="EXPERIMENTAL.CLIENTROUTERFILTERALLOWEDRATE">
      <data key="d0">EVENT</data>
      <data key="d1">This is a configuration option in Next.js that allows developers to customize the likelihood of false positives in client router filtering.</data>
      <data key="d2">1b3c3a93e182b501d03ffb0b41273e30</data>
    </node>
    <node id="EXPERIMENTAL.CLIENTROUTERFILTER">
      <data key="d0">EVENT</data>
      <data key="d1">This feature in Next.js can be enabled or disabled to manage routing behavior between pages and app directories.</data>
      <data key="d2">1b3c3a93e182b501d03ffb0b41273e30</data>
    </node>
    <node id="NAVLINKS">
      <data key="d0">EVENT</data>
      <data key="d1">NavLinks are components in Next.js that provide navigation links, determining if a link is active based on the current pathname.</data>
      <data key="d2">1d855e055624fb34345331017d371137</data>
    </node>
    <node id="CHILDREN PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The children prop is a special prop in React that allows components to pass child elements to a parent component, enabling composition of UI elements.</data>
      <data key="d2">1d855e055624fb34345331017d371137</data>
    </node>
    <node id="MIGRATION GUIDE">
      <data key="d0" />
      <data key="d1">
The Migration Guide provides instructions for upgrading from older versions of AWS Amplify UI for React to the latest version, detailing breaking changes and new features.</data>
      <data key="d2">1d855e055624fb34345331017d371137,f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="COMPONENT TREE">
      <data key="d0">EVENT</data>
      <data key="d1">A component tree is a hierarchical structure visualizing the relationship between React components in an application.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </node>
    <node id="ERROR UI">
      <data key="d0">EVENT</data>
      <data key="d1">Error UI is a special file in Next.js that handles error states for a route segment, providing feedback to users when issues occur.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </node>
    <node id="NOT FOUND UI">
      <data key="d0">EVENT</data>
      <data key="d1">Not Found UI is a special file in Next.js that provides a user-friendly message when a route does not exist.</data>
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </node>
    <node id="FILE SYSTEM">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </node>
    <node id="MY-APP">
      <data key="d0">PERSON</data>
      <data key="d1">My-app is a sample project name suggested during the Next.js installation process.</data>
      <data key="d2">8b55191578f60b2d2fac3ae2f4d05b2e</data>
    </node>
    <node id="GITHUB DISCUSSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">GitHub Discussions is a platform where the Next.js community can ask questions and share information.
GitHub Discussions is a platform where the Next.js community can ask questions and share information.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd,c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="INSTALLATION GUIDE">
      <data key="d0">EVENT</data>
      <data key="d1">The Installation Guide provides instructions on how to set up Next.js for development.</data>
      <data key="d2">514671e4a7b4b0d7573852d3d380eefd</data>
    </node>
    <node id="REACT FOUNDATIONS COURSE">
      <data key="d0">EVENT</data>
      <data key="d1">The React Foundations Course is an educational program designed to teach the fundamentals of React, which is beneficial for understanding Next.js.</data>
      <data key="d2">c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="TABLE OF CONTENTS">
      <data key="d0">EVENT</data>
      <data key="d1">The table of contents in the Next.js documentation helps users navigate between sections of a page easily.</data>
      <data key="d2">c157c439271dbeeebb69b81254b288af</data>
    </node>
    <node id="AMPLIFY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify is a service provided by AWS that allows developers to build and deploy fullstack applications with ease, including features like authentication, storage, and APIs.
Amplify is a platform that provides tools and services for building and deploying applications, particularly in the context of AWS services.
AWS Amplify is a set of tools and services that enables mobile and web developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables mobile and web application developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables mobile and web application developers to build scalable full-stack applications powered by AWS.
Amplify is a development platform that provides tools and services for building and deploying fullstack applications on AWS.
Amplify is a set of tools and services provided by AWS to help developers build scalable full-stack applications.

Amplify is a development platform from AWS that provides tools and services for building scalable web and mobile applications.
Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including in-app messaging and REST APIs.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for backend and frontend development.
Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including features for geolocation and mapping.
Amplify is a development platform by AWS that simplifies building applications with cloud services, including geofencing capabilities.
AWS Amplify is a set of tools and services that enables mobile and web developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
Amplify is a development platform that provides tools for building and deploying applications, including backend resources for data and authentication.
Amplify is a development platform by AWS that provides tools and services for building scalable web and mobile applications.
Amplify is a cloud-based service that provides hosting and backend resources for web applications, including CI/CD capabilities.
Amplify is a set of tools and services that enable developers to build scalable applications on AWS, including APIs and authentication services.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
Amplify is a development platform that enables developers to build and connect backend services for web and mobile applications, including features like streaming logs from functions.

Amplify is a development platform that provides tools and services for building scalable mobile and web applications, including storage solutions and backend configurations.
Amplify is a set of tools and services from AWS that helps developers build scalable applications, including APIs and data management.
Amplify is a development platform that enables developers to build scalable applications powered by AWS services.
Amplify is a development platform that provides tools for building and connecting applications to various data sources, including MySQL and PostgreSQL databases.
Amplify is a service that uses AWS Lambda functions to enable features like querying data from databases and managing SQL connections.
Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
Amplify is a development platform by AWS that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services to integrate with AWS services.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for backend development and integration with various AWS services.
Amplify is a framework that helps developers build scalable applications, integrating various backend services including authentication and data management.
Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
Amplify is a development platform that provides tools and services for building scalable mobile and web applications, including data management and authentication features.
Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including real-time APIs and databases.
Amplify is a development platform by AWS that helps developers build and connect backend services, including authentication features.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend development and hosting.
Amplify is a development platform that allows users to build and deploy fullstack applications on AWS, providing backend capabilities and integration with GitHub for deployment.
Amplify is a development platform that provides tools and services for building scalable mobile and web applications.
Amplify is a development platform that provides tools and services for building scalable mobile and web applications on AWS.
Amplify is a development platform that simplifies building web and mobile applications with features like authentication, data management, and UI components.
Amplify is a platform that provides tools and libraries for building applications, particularly focusing on UI components and theming for React applications.
Amplify is a company that provides various design and development tools, including color palettes and UI components for web applications.
Amplify is a company that provides various components and tools for building user interfaces, particularly in web and mobile applications.
Amplify is a company that provides various components and tools for building applications, including button components with customizable styles.
Amplify is a company that provides various components and tools for building user interfaces, including checkboxes and pagination buttons.
Amplify is an organization that provides various components and tools for building applications, focusing on user interface and experience design.
Amplify is a company that provides various components and tools for building applications, focusing on user interface elements and design systems.
Amplify is a company that provides various components and tools for building applications, focusing on user interface and experience enhancements.
Amplify is a company that provides various components and tools for building applications, including pagination and form controls.
Amplify is a company that provides various components and tools for building applications, including storage management and UI components.
Amplify is a company that provides various design and development tools, including components for user interface design.
Amplify is a cloud-based service that provides tools for building and deploying applications, including in-app messaging and storage solutions.
Amplify is a development platform that provides tools and services for building applications, including the FaceLivenessDetector component.
Amplify is a set of tools and services provided by AWS to build scalable mobile and web applications.

Amplify is a set of tools and services provided by AWS to help developers build scalable full-stack applications.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,07423380fe232270f2991cb99f038a6e,0cc40988714324257eaa1d03994f3e39,1950a5e06a03170ed4dc66a00668ea47,1a7480fec8557ce9c8b1f2d342f6ec9b,1d0207e2e11503628d08eefd24849d93,21fafbece16fa47f1f530df2b5f0817b,22362693d17a745c23fe5e9a2beecbd9,25014b83cc85c29d210c21fb3ab4b816,2599c1b415576410d2f9b23f4299c4cb,280c36ab0ae3dc66fffd099a273b96ab,3012140364ff4dc93ce2fc057a65a7bf,344b01eb184403f029e31d4621f1ea1f,35177d476072a1d9811b194441dac3c6,3538ba83bb1b1b6801c4b0e5bc962812,35f3b0ff8ac0afd0bab73f2b8a1595ce,374f53811273c5cffe3558d227a0e4ec,37ea4ea73ecb3370ad928dc71b30f77f,3a87ecd12d97d86a3bbb406e93d2c8d2,3cdd6c81baa65bbde6eabfc399eb25b6,405cec78205a77ac97466698654060ca,41deb762c8966a1fa15f960e2fa31753,459eadcad7d141c2129458137d7d41d9,4fde2e7cc7218ba6b93e1b100e10fd38,56488edd7cf127c0da3442fbce7f97db,5aa64e0729b8afd73930cdaf5ff7a8aa,5b9454881a44ee34d198e3403f5388af,60aaa13e30275fbe0d56cac47de824c2,61659c64fca58284b65ddb212f319f91,6534102a2bcab0d166b971b8fc0e8eb1,65ef73f546115ac23146d87cce61b9c8,6980c90f0a7a58894d9518accd2ab5dd,69b8cbe6ad275c39fc40832d62145181,6a2f21642257c922b2659f7bb932521a,6f3ebecb177d34e1aee592a1e38dc5e5,7f29cbfbdd4aea2867cf6f65ba567185,81518acc3db43af0161d599284ff910e,8e6f8a08e3cdc9d85f1015001bcf93dc,919c09d2956ed4ab195e7a6898f39063,995b90fa5ccd54a921a730cc91487965,9bfb7d7a715bed7eec92b32f7a175bf5,9eb555df7127fa0fdbcf9a8ef6d80287,a78e240c86d21333ffb6ad06277ccf23,ace34d6baa071fb6d6db3dcaaf3da1dc,ad25e8455b3a65969a17cb69a66a58ac,b0e5a5345f8f86afeb8b60d97f953436,b2f8fbd1f0a4b6ad7a5e2b164c14eccb,b394b4eeaf1a9df4b16937daeed33e3a,b5ba1f149a354e2b301e24778d64cbde,bcb8bed3236fce81cd5b966a435370ba,c3958c03e7b6908e78ca65d6563b3555,c53f4501f1dba5ecec6c90cfcc2152c2,c58075426e62c1f9da00343d6b1599a7,cb9405c9d1ffc30f045effa85b1e9e09,d13b4bcceae6608dbf68ce9ca22d0c45,db7dfb25749de8f86ac15552fec549ec,e1b74f93a071f3a34a553359c4fa7b1b,e4054144736985db7777f6f19790e2af,e9de6f22467dd06036280d1c89b6d407,ef896aab67cf49595a11632404eaa374,f5ab02ebcf782ede1b25fdb016628a44,f97e5b8c2fc931d61f9fd11ee9fbca57,fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="AWS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
AWS (Amazon Web Services) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
AWS is a cloud services platform that provides a variety of services including geofencing and location services through its Amazon Location Service.
AWS (Amazon Web Services) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a comprehensive cloud computing platform that provides a wide range of services including computing power, storage, and databases.

Amazon Web Services (AWS) provides cloud computing services, including serverless functions and logging capabilities for applications.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) provides cloud computing services and infrastructure, including the Amplify Console for application development.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs.
AWS, or Amazon Web Services, is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a comprehensive cloud computing platform provided by Amazon, offering a mix of infrastructure as a service (IaaS), platform as a service (PaaS), and software as a service (SaaS).
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.
Amazon Web Services (AWS) is a comprehensive cloud computing platform that provides a wide range of services, including Amplify Data for application development.
AWS is a cloud computing platform that provides a variety of services including computing power, storage options, and networking capabilities for developers and businesses.
Amazon Web Services (AWS) is a cloud services platform that provides a variety of services including computing power, storage options, and networking capabilities.
Amazon Web Services (AWS) is a comprehensive cloud computing platform provided by Amazon, offering a wide range of services.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) provides cloud computing services that Amplify utilizes for backend resources like authentication and data storage.
AWS (Amazon Web Services) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
AWS (Amazon Web Services) is the cloud computing platform that hosts Amplify UI and provides various services for developers.
Amazon Web Services (AWS) is a comprehensive cloud computing platform provided by Amazon, offering a wide range of services including computing power, storage options, and networking capabilities.
Amazon Web Services (AWS) provides cloud computing services and infrastructure for developers and businesses.
Amazon Web Services (AWS) is a comprehensive cloud computing platform that provides a variety of services including computing power, storage options, and networking.
Amazon Web Services (AWS) provides cloud computing services and is the underlying platform for Amplify UI.
AWS (Amazon Web Services) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,0cc40988714324257eaa1d03994f3e39,1950a5e06a03170ed4dc66a00668ea47,1a7480fec8557ce9c8b1f2d342f6ec9b,21fafbece16fa47f1f530df2b5f0817b,22362693d17a745c23fe5e9a2beecbd9,25014b83cc85c29d210c21fb3ab4b816,2599c1b415576410d2f9b23f4299c4cb,3a87ecd12d97d86a3bbb406e93d2c8d2,3cdd6c81baa65bbde6eabfc399eb25b6,459eadcad7d141c2129458137d7d41d9,4fde2e7cc7218ba6b93e1b100e10fd38,515a9fba2517051a51ebb09f8a2c2b06,5f39324ac9e2fb1bb8b139c9b114f332,65ef73f546115ac23146d87cce61b9c8,69b8cbe6ad275c39fc40832d62145181,73680e5bf87090f014e7bd9d2b8e582a,7f29cbfbdd4aea2867cf6f65ba567185,8e6f8a08e3cdc9d85f1015001bcf93dc,9bfb7d7a715bed7eec92b32f7a175bf5,a651cbb3e4a31fb9c592893b86f2d855,ace34d6baa071fb6d6db3dcaaf3da1dc,b0e5a5345f8f86afeb8b60d97f953436,b394b4eeaf1a9df4b16937daeed33e3a,b453ff9e225c4008acb26b7c1bf321dd,b8276fb595f7138780baf2d76c97bb37,bcb8bed3236fce81cd5b966a435370ba,c3958c03e7b6908e78ca65d6563b3555,c58075426e62c1f9da00343d6b1599a7,cb9405c9d1ffc30f045effa85b1e9e09,db7dfb25749de8f86ac15552fec549ec,e1b74f93a071f3a34a553359c4fa7b1b,e8d59516a524ae342a9c7507d5bac243,e9de6f22467dd06036280d1c89b6d407,ef896aab67cf49595a11632404eaa374,f0814c1eeb2105aa085a8917000972a0,f2b0e5018ea1044f912de4effd351e65,f638e8457654aac7a4dfb0263d5f8275,fe0d633beeec623b33fe67087fc20b5c,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="AMAZON CODECATALYST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon CodeCatalyst is a service that helps developers build, test, and deploy applications on AWS.
Amazon CodeCatalyst is a service that helps developers create, build, and deploy applications on AWS, facilitating continuous integration and delivery.
Amazon CodeCatalyst is a service that helps developers automate their software development processes, including CI/CD pipelines.</data>
      <data key="d2">0cc40988714324257eaa1d03994f3e39,13036fcc04ff7a3a3d82cc055061ee52,3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </node>
    <node id="IAM POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">IAM Policy is a set of permissions that define what actions are allowed or denied on AWS resources.
An IAM policy is a set of permissions that define what actions are allowed or denied for a specific AWS resource.
IAM Policy is a set of rules that define permissions for actions on AWS resources, necessary for enabling Predictions features.
An IAM policy is a set of permissions that define what actions are allowed or denied for specific resources in AWS, used to manage access control.
An IAM Policy is a set of permissions that define what actions are allowed or denied on AWS resources.
IAM Policy is a set of permissions that define what actions are allowed on the geo resources.
IAM Policy is a set of permissions that define what actions are allowed or denied on AWS resources.
An IAM policy is a document that defines permissions for actions on AWS resources, allowing or denying access to specific actions.
IAM Policy is a set of rules that define permissions for AWS services, which is necessary for accessing Amazon Translate.
An IAM policy is a set of permissions that define what actions are allowed or denied on AWS resources, crucial for managing access to services like Amazon Rekognition.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926,3a87ecd12d97d86a3bbb406e93d2c8d2,53995557ff9014f83cedfd38268f5f7a,56488edd7cf127c0da3442fbce7f97db,58b2fdfd363cfa9a202cc5a6c3b3d77e,70363c8433b020965dc7ec11c063e460,89e3b86d249ae10742dcef7c4e2d582d,9bfb7d7a715bed7eec92b32f7a175bf5,bf926fe785180e6ba0afb391db266523,cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="CROSS-ACCOUNT DEPLOYMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-account deployments refer to the process of deploying applications across different AWS accounts, often involving multiple regions.
</data>
      <data key="d2">3a87ecd12d97d86a3bbb406e93d2c8d2,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="IAM PERMISSIONS BOUNDARY">
      <data key="d0">EVENT</data>
      <data key="d1">IAM Permissions Boundary is a feature that sets the maximum permissions that can be granted to IAM roles created by Amplify.</data>
      <data key="d2">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </node>
    <node id="BRANCH DEPLOYMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Branch deployments refer to the process of deploying backend resources during a fullstack deployment in Amplify.</data>
      <data key="d2">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </node>
    <node id="CLOUD SANDBOX DEPLOYMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Cloud sandbox deployments utilize local credentials to deploy resources in a controlled environment.</data>
      <data key="d2">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </node>
    <node id="ENVIRONMENT VARIABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Environment variables are used to configure settings for applications, such as disabling telemetry in Amplify.
Environment variables are dynamic values that can affect the way running processes will behave on a computer, often used to configure applications.</data>
      <data key="d2">3a87ecd12d97d86a3bbb406e93d2c8d2,c3958c03e7b6908e78ca65d6563b3555</data>
    </node>
    <node id="AMPLIFY GEN 2">
      <data key="d0" />
      <data key="d1">
Amplify Gen 2 is a client library framework designed to facilitate communication between frontend applications and backend services.
Amplify Gen 2 is a service that offers centralized management of secrets and environment variables for fullstack applications.
Amplify Gen 2 is an updated version of the Amplify platform that introduces new features and improvements for building applications.


Amplify Gen 2 refers to the second generation of AWS Amplify, which includes new features and improvements for building applications.
Amplify Gen 2 is a cloud development platform that uses a TypeScript-based, code-first developer experience for defining backends and supports various programming languages for client-side development.
Amplify Gen 2 is a version of AWS Amplify that provides enhanced features for managing Cognito Identity and User Pools.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901,3a87ecd12d97d86a3bbb406e93d2c8d2,6741df7802dff57e070b002915d9590a,6f6e767a35b75e1c7658fbbddd94a842,a054cee32c59ce9d304bb1f8716fbb7c,cb9405c9d1ffc30f045effa85b1e9e09,e1b74f93a071f3a34a553359c4fa7b1b,e4054144736985db7777f6f19790e2af,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="YAML">
      <data key="d0">EVENT</data>
      <data key="d1">YAML is a human-readable data serialization standard that is often used for configuration files and data exchange between languages with different data structures.
YAML is a human-readable data serialization format often used for configuration files, including build specifications in AWS Amplify.</data>
      <data key="d2">0cc40988714324257eaa1d03994f3e39,361aaf651685ae2e9407ab27dc8138b3</data>
    </node>
    <node id="CURL">
      <data key="d0">EVENT</data>
      <data key="d1">cURL is a command-line tool used for transferring data with URLs, often used in webhooks to trigger actions in applications.
Curl is a command-line tool used for transferring data with URLs, often used in scripts to interact with APIs.
CURL is a command-line tool used for transferring data with URLs, often used in scripts to interact with web services.
Curl is a command-line tool used for transferring data to and from a server using various protocols, often used for testing APIs.
Curl is a command-line tool used for transferring data with URLs, supporting various protocols including HTTP, HTTPS, FTP, and more.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,0cc40988714324257eaa1d03994f3e39,13036fcc04ff7a3a3d82cc055061ee52,361aaf651685ae2e9407ab27dc8138b3,f0814c1eeb2105aa085a8917000972a0</data>
    </node>
    <node id="IAM ROLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An IAM role is an AWS identity with specific permissions that can be assumed by users or services to perform actions in AWS.
An IAM role is an AWS identity with specific permissions that can be assumed by users or services to perform actions on AWS resources.
IAM Role is a set of permissions that define what actions are allowed on AWS resources.
An IAM role is an AWS identity with specific permissions that can be assumed by AWS services to perform actions on behalf of the user.
IAM Role is a set of permissions that define what actions are allowed and what resources can be accessed in AWS services.
An IAM role is an AWS identity with specific permissions that can be assumed by users or services to perform actions on AWS resources.</data>
      <data key="d2">0cc40988714324257eaa1d03994f3e39,3e8319ba39b8ba21d17ce5e988924ff2,5f39324ac9e2fb1bb8b139c9b114f332,ad25e8455b3a65969a17cb69a66a58ac,f97e5b8c2fc931d61f9fd11ee9fbca57,fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="CROSS-ACCOUNT DEPLOYMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-account deployment refers to the process of deploying resources across different AWS accounts, often for security and organizational purposes.</data>
      <data key="d2">0cc40988714324257eaa1d03994f3e39</data>
    </node>
    <node id="AMPLIFY CONSOLE">
      <data key="d0" />
      <data key="d1">
The Amplify Console is a web-based interface for managing and deploying applications built with AWS Amplify.
The Amplify console is a web interface for managing AWS Amplify applications, including settings for hosting and previews.
The Amplify Console is a web-based interface for managing and deploying applications built with AWS Amplify.

The Amplify console is a web-based interface for managing AWS Amplify applications, including deployment and resource management.
The Amplify console is a web interface for managing AWS Amplify applications, including settings for branch deployments and build configurations.
The Amplify Console is a continuous deployment and hosting service for modern web apps, providing a streamlined workflow for deploying applications on AWS.
The Amplify Console is a continuous deployment and hosting service for modern web apps, providing a user-friendly interface for managing applications and their resources.
The Amplify Console is a user-friendly interface for managing backend GraphQL API data of applications, allowing real-time creation and updates of application data.

The Amplify Console is a continuous deployment and hosting service for web applications, providing a user-friendly interface for managing applications.
The Amplify Console is a web-based interface for managing and deploying applications built with AWS Amplify.

The Amplify Console is a service that provides a continuous deployment and hosting service for web applications.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7,0cc40988714324257eaa1d03994f3e39,119c44bcb05c001f48d12d86b105f1bf,13036fcc04ff7a3a3d82cc055061ee52,148529b8881659161220567b7aef9513,23f821c071cb4c4cf183f5aac596db35,361aaf651685ae2e9407ab27dc8138b3,7040175c91fe86a908046a9b485b0410,a054cee32c59ce9d304bb1f8716fbb7c,b3ba0d2a5daf3ce8f284099dd931ef14,c143d279740f3e9c59920d2a6720240e,db7dfb25749de8f86ac15552fec549ec,dcf0763f48070d41b43f528c6ac2928a,e8d59516a524ae342a9c7507d5bac243,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="AWS AMPLIFY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and deployment.
AWS Amplify is a development platform for building and deploying fullstack applications with CI/CD capabilities.
AWS Amplify is a platform that enables developers to build and deploy fullstack applications with features like hosting, authentication, and APIs.
AWS Amplify is a development platform that enables developers to build and deploy fullstack applications with ease, allowing for separate frontend and backend teams to work independently.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.

AWS Amplify is a platform that provides tools and services for building and deploying fullstack applications, including branch deployments and CI/CD pipelines.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for CI/CD, secret management, and environment management.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a fully managed CI/CD and hosting service for fast, secure, and reliable static and server-side rendered apps that scale with your business.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for backend and frontend development.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform that provides tools and services to build scalable web and mobile applications, including UI components and backend services.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services to integrate various AWS services into applications.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various services including PubSub for real-time messaging.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, which includes PubSub as one of its services.
AWS Amplify is a development platform that enables developers to build scalable mobile and web applications powered by AWS services.
AWS Amplify is a development platform that enables developers to build scalable applications powered by AWS services, including AI and machine learning capabilities.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes various AI/ML services.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications using cloud services, including AI and ML capabilities.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development, including REST APIs.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various services including API management and authentication.
AWS Amplify is a development platform that enables developers to build scalable web and mobile applications using AWS services.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including in-app messaging capabilities.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for in-app messaging and analytics.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes features for integrating various AWS services.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS, including features for authentication, APIs, and storage.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.

AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including features for managing maps and geolocation services.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform that provides APIs and UI components for building web applications, including location services and maps.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various services including analytics and geolocation features.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various services including analytics and session tracking.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including analytics features.
AWS Amplify is a development platform that enables developers to build scalable mobile and web applications powered by AWS services.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend services and user authentication.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development, including authentication and data storage.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and deployment.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend development and integration with AWS services.
AWS Amplify is a development platform that enables developers to build and connect applications with backend services, including scheduling functions.
AWS Amplify is a development platform for building and connecting web and mobile applications, providing tools for backend functions, hosting, and more.
AWS Amplify is a development platform that enables developers to build and deploy applications quickly and efficiently using cloud services.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for backend development, including functions and storage management.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend services including storage management.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various services including storage management and authentication.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and data management.
AWS Amplify is a set of tools and services for building scalable mobile and web applications, providing backend services and hosting.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for backend development and deployment.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes features like GraphQL APIs and DynamoDB integration.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for backend and frontend development.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend development, including authentication, data storage, and file management.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend services and storage solutions.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for API generation, storage, and authentication.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for backend development and real-time subscriptions.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which integrates with various AWS services including Amazon Translate.
AWS Amplify is a set of tools and services that enables mobile and web developers to build scalable full-stack applications powered by AWS.


AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for backend development and data management.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and deployment.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend and frontend development.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend and frontend development.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for backend development and data management.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and deployment.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and data modeling.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend development and data modeling.
AWS Amplify is a development platform that provides tools and services for building scalable mobile and web applications.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for real-time data and subscriptions.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for creating, updating, and deleting application data.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for data management and API integration.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and API integration.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for backend development and deployment.

AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for backend development and authentication.
AWS Amplify is a development platform that enables developers to build scalable mobile and web applications, providing tools for backend services, including authentication and resource management.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, data storage, and more.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various services including authentication and data management.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for managing users and authentication.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for authentication, data storage, and more.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including authentication features.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including authentication features.
AWS Amplify is a development platform for building secure and scalable applications, providing tools for authentication, storage, and more.
AWS Amplify is a development platform for building secure and scalable applications, providing tools for authentication and other backend services.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, data storage, and more.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications, including authentication features like TOTP setup and MFA preferences.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes features for authentication and backend resources.
AWS Amplify is a development platform that enables developers to build and connect applications to AWS resources, providing features like authentication, data storage, and server-side rendering.
AWS Amplify is a development platform that enables developers to build scalable applications powered by AWS services.
AWS Amplify is a development platform for building secure and scalable fullstack applications, providing backend services and tools for developers.
AWS Amplify is a collection of cloud services and libraries for fullstack application development, providing frontend libraries, UI components, backend building, and frontend hosting.
AWS Amplify is a development platform that enables frontend developers to build and deploy cloud-powered fullstack applications easily.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.

AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools for storage, authentication, and more.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.

AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.

AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various services including authentication and storage.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools for authentication, storage, and APIs.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications, including authentication features.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for backend configuration and user authentication.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components including the Rating component.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.

AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components including ToggleButton.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services for building scalable mobile and web applications, which includes the SelectField component.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes UI components like SliderField.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform from Amazon Web Services that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, which includes UI components like PhoneNumberField.
AWS Amplify is a development platform from Amazon Web Services that provides tools and services for building scalable web and mobile applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various UI components including the Phone Number Field.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications, including UI components like DropZone.
AWS Amplify is a development platform for building secure, scalable mobile and web applications.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and theming capabilities.
AWS Amplify is a development platform for building secure, scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications.
AWS Amplify is a development platform that provides tools and services for building scalable web and mobile applications.

AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a set of tools and services for building scalable mobile and web applications, including UI components like Breadcrumbs.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing various UI components and tools for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, which includes UI components like Alert.


AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform for building secure, scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a development platform for building secure and scalable mobile and web applications, providing tools and services for developers.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.
AWS Amplify is a development platform provided by Amazon Web Services that allows developers to build scalable applications with ease, offering features like authentication, hosting, and UI components.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,03d87ab96921db9c36cf9cc05fe0b7a7,0540b18a392d2ccc8d9b4915eed9acfe,05d21cc14ac859e5fc2002038fa7f6f7,079ee4d85f6e400435d903fa9074f9e6,08a1975a88b44b2b7444141367047ba8,0bc7a3343cc71a51f8039854d57f5778,0cd205bf5fe0ebe4aec3529e4d44191c,0d99e36510e5c37bedf99c81e8533dd1,0dfb84288d523f687fe010cdbeb5603e,0e5a9687dbee50e7916d42244a756478,0ec7a9a4173bab4434075d5564d2a4c2,12c9fa6332d9cd62a8cbe8be18fd540e,12ed2a0e7657f4c4359e7bea38b9bc13,13036fcc04ff7a3a3d82cc055061ee52,148529b8881659161220567b7aef9513,162dda357807004bc0720c9422f45783,195fa68e405624fc5cbe7eeb5767c2ef,1b140f417545903391f0e28ef4baf7c2,1bafd8792486c2e570d8aa0cb40189b9,1d0207e2e11503628d08eefd24849d93,1e3e9559f0cf793e96c48297529ec161,1e46ce5bc3a6e1fa6bece36f86a46f80,1ef9b6a9263edfd718636bcbc29f4a72,2089dc10de2cb83a2c70a5f87b8d2dc2,21ba26eef933ca84de0597d8f7c58f7e,2299dbfce715caaaef2102de232e50aa,229e08ddbc773881c8e1ca68ba06dea8,23f821c071cb4c4cf183f5aac596db35,24ec8a10e8f41cfaeb32d036093e3bdf,26dcbf3b494b9d9117cffa213b39f7cf,2730827c3a62362c95c2900ff92e0e93,287574c9a7234d49dcc89de08710c55e,290d8b37bd253372b8a78b79be1eca98,2e537c711e153c043f8d08b926e4ba86,2fa22e032f66ea7c5422792329c30589,3188b79ca82feb7410b45f4162ba4317,322dba5659c945a3d1a5389a738aee99,328c2850836c2ef976fb8009ef3c5dd9,32ab448d1972668cba4e2c467ff116a8,33e451e77f5bd710301d6408bbd2825d,353184f9ee9fe27f7425aaec76c8a30a,361aaf651685ae2e9407ab27dc8138b3,374f53811273c5cffe3558d227a0e4ec,381ec0f23fc914011f1ec53f51485442,3871391b5e9d42efc3d1226580d587a0,3874fd589ed63023667cf58323875d95,393aa2365a84cbbbeaa882f89f100b89,395cfdedbdcedba18201a608511b9cc3,3a9b26a380534d4aa1f17290c51aea24,3bcd47a467bca8030037be27b1ae1b3e,3c1da97b232e76bcfabe7b7c980f2a33,3c34af088a28c5276b514cfdf986b3d6,3d5a944087b6833d97ac18648a394224,3e8319ba39b8ba21d17ce5e988924ff2,41deb762c8966a1fa15f960e2fa31753,453096a495a2eae0cd2491664604b080,45b6a1301b66ba89019d5c3ffc7ad54f,45bc04c1106dd47dcfb887084a04fd7b,480e2412619ad09a750dc16a3f8ceab3,4c20122de1ca69ecf45662867d268049,4ccaaec02cfc4169e423aaf4ce28263f,4d25b33f699aef8a075e8858bf0ad630,4ef2269a1b7af8535395e8de5c20722d,4f10f73a5698de38e9d0cd15643d69c1,502c34bc5ff7e00594c0a0d9df58834d,515a9fba2517051a51ebb09f8a2c2b06,52087f54ba341fa48453f206aca85fa0,52545707508fac3ea71aa1d62f6d0cb6,53995557ff9014f83cedfd38268f5f7a,56553341236a20419cc336c60c2bed04,582ef60010150eb5b063d4e027797a77,58b2fdfd363cfa9a202cc5a6c3b3d77e,58b4ec0bb9e980cc17fe0b3178671c95,5b0d50411f54d1ef65278d02161d11d7,5b2747800197a072e6dc22c54876eb35,5c179d6063f8fca2e1ae95779d7f3ffc,5c2098e04771d356430a7ff2887e471b,5c7c1b8a3cde0fc5a186b912ceba73bb,5dced807ee929bcba98d82ba0000fe33,60d9151920f9b881f34c958c0c5d770b,61cf173fbdd2221f3bcf1bc2a4df1840,62ae6b676bb61efbc2ce17791b2ac999,62d6f0f965da0c44ef157072fc13a2ef,63bae3a149e50b7452962f7bdd8724ea,6450bdd7941ff60e85c4d4acc9a73b25,6634963e5bc3eae8755d15393e4c9b71,6c6ccd5699a21bd365fb1e2dc13bd5da,6cbd446a7960622a6472bb28c61d77e7,6d2eda5548d1401141ba1fcc7bcbbdba,6edc6c7e13a23d971e48b75724b50d5f,6f492ac78ca89b7028399a30a24b9dc6,6f6e767a35b75e1c7658fbbddd94a842,70306783d146ca14e7ca1a0332337b3c,70363c8433b020965dc7ec11c063e460,7040175c91fe86a908046a9b485b0410,710de2c1f4693d893bae10139553994d,72f7bd8a9eb9039eabf2d7d1ff4c9601,7562010f59ffaae90af6b15498cde84b,758d7b22f173e12c1857a365834df542,7668a790c01b22add1e76afc928004db,7925e036e2025ccae5e0f72fe8f556ac,7a771747e08d74ceb8c258bc5a658d6d,7fea5fbe98eba1d68851892af6df2407,818fcb4044a83bd6eead8a24e57319ad,856c945b28eacce9c83378e56652fee3,868b364b65a596f02a214b12ca0cbb6a,877a7ccbdb63a00477117db13eba1534,887a21d9d2a5307a38fd1a7f57ebffa7,89e3b86d249ae10742dcef7c4e2d582d,8aece6e31757222174fd611077ca4f6d,8b2761fb86513e3cf4d313a43b80f9fc,8c8075430684b38bdd1c6ce9fc9f7205,8d0e14288c93ab458cda0d9179f522a7,92bcd3df485df362e04da4f60878ff3b,93e4ae7768c14468bccb3caa2eb8fb2b,9435f5063dc16afb92c8c68706b77d2b,94a4bc63d08f1f8dd8fa4630608aee68,95c47d77c6b1c1b930bbbff2c9d1facf,960cd708b2617651d0d7b1a22712d9fa,98fcf483b563a8d8b54ee85b2f6fa533,9939322ca44e243575243bddd27bc126,9939e974ca8f24b6b7f34bbf89addb7e,995b90fa5ccd54a921a730cc91487965,9bcc9002428492e349dade67bf61476e,9d1ecd9e6b4e4bc832178b9ae1a06e8d,a05256700be9b39d3c9098982e0fa5d4,a054cee32c59ce9d304bb1f8716fbb7c,a3d37007c833039158d1e1720cb62466,a3d633e1c801de300a4724738b7290c3,a405b9f832ed918dd2c0ed33bb2b5808,a407fa7a377db0b8cb08ded22609f5e2,a45591637d0b47a7bce4ac92c8eb5ea6,a525cbfc03ba1b986f30ce2280067dda,a5e50f469dd57f00c706f3dcd5894c37,aba5b97fa8a2f6114a40b1d94fc276b2,aed1999377a9138038f56696b28a18c4,aef551a2d82854ae79259d42c965502f,afa4163fc1d3fab31d1294afed0bcc86,b13ba75bb69bab84cc548bc3c7fdf65d,b3ba0d2a5daf3ce8f284099dd931ef14,b48f64ddd27370c0d0a93447e796c6b3,b4caad819b3245d1c7c01c198437baa1,b817095066fd625d69ee8fbf3cb0804d,bc4893f2f489d14f0975fa64ffca1df8,bcd2d66297bc7f44d44a249af2225403,bf926fe785180e6ba0afb391db266523,c143d279740f3e9c59920d2a6720240e,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c6562553adf4b52a1a6eec1a462e147f,c6c993134aa9ac5f833c8bf4d26c0dbd,c760e7dac2a9e84cc56dd76bcd9dd97c,cb861a02338e7cf7786d791829706a53,cdb9cece1cdfc7e4c7f3d3e429e564b5,cf54383d0ee2ab32d2ea7410ca6c6418,d26ffe8f4908cd05e7882cd4223c3490,d2da95c5361020f00b8857bfa61b4378,d449796d977ece5e8fa1202c70599e55,d479485461737c6760b5fb421f0541ea,d4d0ea2c5ed830460edee88a18f0b2b2,d55e7e869df5fbcfa36109914fcb2499,d5671c2494c6418a266da35fff705101,d700fb2336ddc0a563736b65003c9d4f,d7f9d6d81c47c8666bdbe05c89629447,d862c0095587db23ca9388fe047e5de4,d8d35bb9ab00c5657d67d2362a6bbd10,d8db439b4e3e9430a8842e7c634c7e85,d9a272b23f1d5cf3e9a9c6a2c79923b8,dc6390225fe3f0ac45fe499769223228,dcf0763f48070d41b43f528c6ac2928a,ddb5fb3e8db548d41829f366a360c2b7,de818dec85e98671fc18154ccd8eaf7d,df66d576a32835aae9d3957800932b5f,df84fd0c2737b715a0714932e9cfa24e,e28baad4e7d7ca8e43254a705cbf687f,e33823d803dfc43e2ab84d0208782223,e3c6466a080dbad6e05f99bda0212547,e63f52e89ed09d5d6307bfccfa46aec9,e6f9ca43dfb29c7478264e5ebadfca37,e7727282a239fcb7a1e69d029f0709ba,e8bb64825eb8da944e09e46a90be853c,e9839e578f896e0d269ce78abd50bae3,e98b8a475f381672c863e04f0c9164d4,e99506740df57dd0a465425dd334652b,eb0ab8a0b2738dcfb761cbfe242d18c4,eb94ca06f4734af403132b3cde36904b,ed2556eb80070ec113486cef81f33019,f0a75595032bbb539a5844dc72a00955,f0c17549b011af117faf3f7556948996,f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5,f54cf521a7080b38d9c0fe773d50ade8,f5bfba3eb957f9e621d0b55561a5f466,f60714d5063669648e44d7d6036396c3,f840bfd5a371f4a008e95cb3caeb95d6,f98c0fd002ba589c06bf3b605fe3f189,fa4079c109c67561ad52ce2f338d0fa0,fc0b23383bad27c21e52b0c819eb7874,fc6e2a28447409d2b0f12296647c9470,fca72cef7aaa748346e02aa5f929c2c1,fe0d633beeec623b33fe67087fc20b5c,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="AMPLIFY DATA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Data is a construct within AWS Amplify that simplifies the development of GraphQL APIs using AppSync.
Amplify Data is a part of AWS Amplify that provides a way to manage and interact with data in applications.


Amplify Data is a part of AWS Amplify that allows developers to connect their applications to various data sources, including DynamoDB.
Amplify Data refers to the data management capabilities provided by AWS Amplify for applications, including connecting to various data sources.



Amplify Data is a service within AWS Amplify that allows developers to perform CRUD operations on data models with fully-typed API requests.
Amplify Data is a feature of AWS Amplify that allows developers to build real-time APIs and databases using TypeScript to define data models.
Amplify Data is a service that allows developers to create and manage APIs and databases for their applications, providing real-time data subscriptions and various data management capabilities.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,23f821c071cb4c4cf183f5aac596db35,4fde2e7cc7218ba6b93e1b100e10fd38,61cf173fbdd2221f3bcf1bc2a4df1840,856c945b28eacce9c83378e56652fee3,a525cbfc03ba1b986f30ce2280067dda,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,d7f9d6d81c47c8666bdbe05c89629447,e8bb64825eb8da944e09e46a90be853c,f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="AMPLIFY AUTH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Auth is a construct within AWS Amplify that provides authentication and authorization functionalities for applications.

Amplify Auth is a service that provides user authentication and management capabilities for applications built with AWS Amplify.



Amplify Auth is a part of AWS Amplify that provides authentication and authorization capabilities for applications.
Amplify Auth is a service that provides authentication and authorization capabilities for applications built with AWS Amplify.

Amplify Auth is a service within AWS Amplify that provides authentication capabilities for applications.
Amplify Auth is a service that interacts with Amazon Cognito to provide authentication and user management features for applications.
Amplify Auth is a service powered by Amazon Cognito that provisions and supports user registration, authentication, account recovery, and other operations for applications.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,2089dc10de2cb83a2c70a5f87b8d2dc2,3bedaf75477c620e5f8469d8d96cfae3,5f39324ac9e2fb1bb8b139c9b114f332,758d7b22f173e12c1857a365834df542,9bcc9002428492e349dade67bf61476e,9eb555df7127fa0fdbcf9a8ef6d80287,a45591637d0b47a7bce4ac92c8eb5ea6,aba5b97fa8a2f6114a40b1d94fc276b2,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,d55e7e869df5fbcfa36109914fcb2499,df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="AMPLIFY OUTPUTS">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify outputs refer to the configuration file generated by AWS Amplify that contains backend outputs such as data endpoints and authentication metadata.
Amplify outputs refer to the generated files and configurations that are created during the build process of an Amplify app.
Amplify outputs is a JSON file generated by AWS Amplify that contains configuration and information about the backend application.
Amplify outputs are the generated configurations and resources that AWS Amplify creates for applications.
Amplify Outputs refers to the configuration and data outputs generated by AWS Amplify for use in applications, including map settings.
Amplify Outputs are the configuration settings generated by the Amplify CLI that are used to set up the backend services in an application.
Amplify Outputs is a generated file that contains configuration details such as API endpoints and authentication settings for the Amplify project.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7,2089dc10de2cb83a2c70a5f87b8d2dc2,361aaf651685ae2e9407ab27dc8138b3,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c6c993134aa9ac5f833c8bf4d26c0dbd,cf54383d0ee2ab32d2ea7410ca6c6418,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </node>
    <node id="AMPLIFY BACKEND">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Backend is a service that allows developers to define and manage backend resources for their applications using AWS services.
</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf,c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </node>
    <node id="AMPLIFY GRAPHQL API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify GraphQL API is a service that allows developers to build and manage GraphQL APIs easily within the AWS Amplify framework.
Amplify GraphQL API is a service that allows developers to build and manage GraphQL APIs easily, integrating with various AWS services.</data>
      <data key="d2">b3ba0d2a5daf3ce8f284099dd931ef14,c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </node>
    <node id="AMPLIFY DATA MODELING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Data Modeling refers to the practices and tools provided by AWS Amplify for defining and managing data structures in applications.</data>
      <data key="d2">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </node>
    <node id="AMPLIFY CLI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify CLI is a command-line tool that helps developers create and manage AWS Amplify projects and resources.</data>
      <data key="d2">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </node>
    <node id="S3 BUCKET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An S3 Bucket is a storage resource in AWS used to store and retrieve any amount of data at any time, often used in conjunction with Amplify for file storage.
Amazon S3 (Simple Storage Service) is a scalable object storage service for data backup, archiving, and analytics.
An S3 bucket is a storage resource in Amazon Web Services (AWS) that allows users to store and retrieve any amount of data at any time.
An S3 bucket is a storage resource in Amazon Web Services (AWS) that is used to store data, including analytics data from Amazon Data Firehose.

An S3 bucket is a storage resource in Amazon Web Services (AWS) that allows users to store and retrieve any amount of data at any time.
An S3 bucket is a storage resource in AWS that allows users to store and retrieve any amount of data at any time from anywhere on the web.
An S3 bucket is a storage resource in Amazon Web Services that allows users to store and retrieve any amount of data at any time.
S3 Bucket is a storage service provided by Amazon Web Services for storing and retrieving any amount of data at any time.
An S3 Bucket is a storage resource in Amazon Web Services used to store and retrieve any amount of data at any time.
An S3 bucket is a storage container in Amazon S3 where data can be stored and retrieved, often used in applications built with AWS Amplify.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926,016d827d48ddcc5775cc4ae54a479429,1ef9b6a9263edfd718636bcbc29f4a72,344b01eb184403f029e31d4621f1ea1f,3c34af088a28c5276b514cfdf986b3d6,5f39324ac9e2fb1bb8b139c9b114f332,7f29cbfbdd4aea2867cf6f65ba567185,b0e5a5345f8f86afeb8b60d97f953436,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c6c993134aa9ac5f833c8bf4d26c0dbd,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="CDK CONSTRUCTS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </node>
    <node id="AMAZON PINPOINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Pinpoint is a service that allows developers to engage with their users through targeted push notifications, emails, and SMS messages.
Amazon Pinpoint is a service that helps developers engage with their users through targeted messaging and notifications.
Amazon Pinpoint is a service that allows developers to engage with their users through targeted messaging campaigns across multiple channels.
Amazon Pinpoint is a service that helps businesses engage with their customers by sending targeted messages and notifications.
Amazon Pinpoint is a service that enables businesses to engage with their customers through targeted messaging across multiple channels, including in-app messaging.
Amazon Pinpoint is a service that enables businesses to engage with their customers by sending targeted messages and tracking user engagement.
Amazon Pinpoint is a service that helps businesses engage with their customers by sending targeted messages and tracking user interactions.
Amazon Pinpoint is a service that allows developers to send targeted messages to users and track user engagement in applications.
Amazon Pinpoint is a service that helps businesses engage with their customers by sending targeted messages and tracking user engagement metrics.
Amazon Pinpoint is a flexible and scalable outbound and inbound marketing communications service.
Amazon Pinpoint is a flexible and scalable outbound and inbound marketing communications service.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901,381ec0f23fc914011f1ec53f51485442,53995557ff9014f83cedfd38268f5f7a,58b4ec0bb9e980cc17fe0b3178671c95,5c179d6063f8fca2e1ae95779d7f3ffc,62ae6b676bb61efbc2ce17791b2ac999,6d2eda5548d1401141ba1fcc7bcbbdba,7925e036e2025ccae5e0f72fe8f556ac,bcb8bed3236fce81cd5b966a435370ba,c5584ae5a7b745fdc8fdf8e55b1277a0,d5671c2494c6418a266da35fff705101</data>
    </node>
    <node id="AMAZON COGNITO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile applications.
Amazon Cognito is a service that provides user authentication and management for web and mobile applications, allowing developers to create user pools and manage user profiles.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps, integrating with AWS IoT and PubSub.

Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides user authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a user authentication service that integrates with AWS Amplify to manage user identities and authentication flows.
Amazon Cognito is a user authentication service that provides user pools and identity pools for managing user identities and access.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps, supporting various external identity providers.
Amazon Cognito is a service that provides user sign-up, sign-in, and access control, allowing developers to manage user authentication and authorization.
Amazon Cognito is a robust user directory service that handles user authentication and management for applications.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service provided by AWS for user authentication and management, integrated into Amplify for app authentication.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778,0e727375fce4c7491422878d0979b901,1ef9b6a9263edfd718636bcbc29f4a72,280c36ab0ae3dc66fffd099a273b96ab,3bedaf75477c620e5f8469d8d96cfae3,5b2747800197a072e6dc22c54876eb35,5b9454881a44ee34d198e3403f5388af,5c179d6063f8fca2e1ae95779d7f3ffc,710de2c1f4693d893bae10139553994d,7925e036e2025ccae5e0f72fe8f556ac,856c945b28eacce9c83378e56652fee3,8e6f8a08e3cdc9d85f1015001bcf93dc,9d1ecd9e6b4e4bc832178b9ae1a06e8d,a45591637d0b47a7bce4ac92c8eb5ea6,bc4893f2f489d14f0975fa64ffca1df8,d55e7e869df5fbcfa36109914fcb2499,d8db439b4e3e9430a8842e7c634c7e85,dcf0763f48070d41b43f528c6ac2928a,de818dec85e98671fc18154ccd8eaf7d,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="USER POOL">
      <data key="d0">EVENT</data>
      <data key="d1">A User Pool is a user directory in Amazon Cognito that helps manage user sign-up and sign-in services.
A User Pool is a user directory in Amazon Cognito that helps manage user sign-up and sign-in services for applications.
A User Pool is a user directory that helps manage sign-up and sign-in services for mobile or web applications.
User Pool is an authentication method in Amplify that allows users to log in and manage their accounts.
A user pool in AWS Cognito is a user directory that helps manage sign-up and sign-in services for mobile and web applications.
A user pool is a user directory in Amazon Cognito that helps manage sign-up and sign-in services for mobile and web applications.
A user pool is a user directory that helps manage sign-up and sign-in services for mobile and web applications.
A User Pool is a user directory in Amazon Cognito that helps manage sign-up and sign-in services for applications.
A user pool is a user directory that helps manage sign-up and sign-in services for mobile and web applications.
A user pool is a user directory in Amazon Cognito that helps manage sign-up and sign-in services for users.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901,119c44bcb05c001f48d12d86b105f1bf,2e537c711e153c043f8d08b926e4ba86,328c2850836c2ef976fb8009ef3c5dd9,3bedaf75477c620e5f8469d8d96cfae3,5b2747800197a072e6dc22c54876eb35,6a2f21642257c922b2659f7bb932521a,7925e036e2025ccae5e0f72fe8f556ac,8c8075430684b38bdd1c6ce9fc9f7205,e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="IDENTITY POOL">
      <data key="d0">EVENT</data>
      <data key="d1">An Identity Pool in Amazon Cognito allows users to obtain temporary AWS credentials to access other AWS services.
An identity pool is a feature of Amazon Cognito that provides AWS credentials to users so they can access other AWS services.
An identity pool is a service that provides AWS credentials to users so they can access other AWS services.
An Identity Pool in Amazon Cognito allows users to obtain temporary AWS credentials to access other AWS services.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901,2e537c711e153c043f8d08b926e4ba86,5b2747800197a072e6dc22c54876eb35,8c8075430684b38bdd1c6ce9fc9f7205</data>
    </node>
    <node id="PASSWORD POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">A Password Policy defines the rules for user passwords in Amazon Cognito, including requirements for length and complexity.
Password policy defines the rules and requirements for user passwords in Amazon Cognito, including length and complexity requirements.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901,7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="OAUTH">
      <data key="d0">EVENT</data>
      <data key="d1">OAuth is an open standard for access delegation commonly used for token-based authentication and authorization in applications.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901</data>
    </node>
    <node id="IDENTITY PROVIDERS">
      <data key="d0">EVENT</data>
      <data key="d1">Identity Providers are services that allow users to authenticate using their existing accounts from platforms like Google, Facebook, and others.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901</data>
    </node>
    <node id="REDIRECT SIGN IN URI">
      <data key="d0">EVENT</data>
      <data key="d1">Redirect Sign In URIs are the URLs to which users are redirected after signing in through an identity provider.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901</data>
    </node>
    <node id="REDIRECT SIGN OUT URI">
      <data key="d0">EVENT</data>
      <data key="d1">Redirect Sign Out URIs are the URLs to which users are redirected after signing out from an application.</data>
      <data key="d2">0e727375fce4c7491422878d0979b901</data>
    </node>
    <node id="AWS REGION">
      <data key="d0">GEO</data>
      <data key="d1">AWS Region is a geographical area where Amazon Web Services resources are located.
AWS Region is a geographical area where AWS has data centers, allowing users to deploy applications and services closer to their end-users.
AWS Region refers to a geographical area where AWS has data centers, allowing users to deploy applications and services closer to their end-users.
An AWS Region is a geographical area where AWS has data centers, allowing users to deploy resources in specific locations.</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf,56488edd7cf127c0da3442fbce7f97db,c5584ae5a7b745fdc8fdf8e55b1277a0,c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="AMAZON LOCATION SERVICE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Location Service provides location-based services such as maps, geofencing, and location search.
Amazon Location Service provides solutions for common use cases related to location services and is integrated with AWS Amplify for easy access to its APIs.
Amazon Location Service is a service that provides location-based functionalities, allowing developers to add maps, geocoding, and tracking capabilities to their applications.
Amazon Location Service is a service that provides location-based functionalities such as maps, geocoding, and geofencing for applications.
Amazon Location Service provides geolocation services, including geofencing and mapping capabilities for applications.
Amazon Location Service provides mapping resources and services for applications, allowing developers to integrate maps into their applications.
Amazon Location Service is a service that provides location-based features such as maps, geocoding, and tracking for applications.
Amazon Location Service provides mapping and location-based services for applications, enabling features like location search and map display.
Amazon Location Service is a service that provides location data and geolocation capabilities for applications.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,53995557ff9014f83cedfd38268f5f7a,6450bdd7941ff60e85c4d4acc9a73b25,a651cbb3e4a31fb9c592893b86f2d855,bf926fe785180e6ba0afb391db266523,c5584ae5a7b745fdc8fdf8e55b1277a0,cf54383d0ee2ab32d2ea7410ca6c6418,de818dec85e98671fc18154ccd8eaf7d,df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="BUCKET NAME">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bucket Name refers to a storage location in Amazon S3 where data can be stored and retrieved.</data>
      <data key="d2">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </node>
    <node id="NOTIFICATIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Notifications are messages sent to users through various channels, managed by services like Amazon Pinpoint.</data>
      <data key="d2">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </node>
    <node id="STORAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Storage refers to the services and resources used to store data, such as Amazon S3.
Storage in AWS Amplify refers to the management of files and data within the application backend, allowing users to upload, delete, and manage files.
Storage refers to the service within AWS Amplify that allows users to manage files and data in a cloud storage bucket.
Storage is a resource in AWS Amplify that allows applications to store and retrieve files, such as images and documents.

Storage in the context of Amplify refers to the management of data storage resources, allowing applications to read and write data securely.
Storage refers to the resources used to back up raw events consumed by the OpenSearch pipeline, typically involving S3 Buckets.
Storage refers to the resources defined for data storage, such as S3 buckets, within the AWS CDK application.
Storage is a category in AWS Amplify that provides solutions for storing and retrieving data in applications.</data>
      <data key="d2">23f821c071cb4c4cf183f5aac596db35,502c34bc5ff7e00594c0a0d9df58834d,57f05fa9d96242d8c2cb2869e13f9e1c,6741df7802dff57e070b002915d9590a,6980c90f0a7a58894d9518accd2ab5dd,6c6ccd5699a21bd365fb1e2dc13bd5da,c5584ae5a7b745fdc8fdf8e55b1277a0,f97e5b8c2fc931d61f9fd11ee9fbca57,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="GEOFENCE COLLECTIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Geofence Collections are used to visualize virtual perimeters for location-based services in Amazon Location Service.</data>
      <data key="d2">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </node>
    <node id="SEARCH INDICES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Search Indices are used for location search capabilities, allowing users to search by places, addresses, and coordinates.</data>
      <data key="d2">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </node>
    <node id="AWS APPSYNC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS AppSync is a serverless backend for mobile, web, and enterprise applications that enables developers to build scalable applications with real-time data synchronization and offline capabilities.
AWS AppSync is a serverless backend for mobile, web, and enterprise applications that enables developers to build scalable applications with real-time data and offline capabilities.
AWS AppSync is a service that simplifies the development of GraphQL APIs by handling data synchronization and real-time updates.
AWS AppSync is a serverless backend for mobile, web, and enterprise applications that enables real-time data queries and synchronization.
AWS AppSync is a service that enables the creation of GraphQL APIs, which Amplify uses for real-time data management.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e,280c36ab0ae3dc66fffd099a273b96ab,290d8b37bd253372b8a78b79be1eca98,4189c0e92cbda0cbd95165143d5ba488,8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="AWS PINPOINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Pinpoint is a flexible and scalable outbound and inbound marketing communications service that enables businesses to engage with their customers through various channels.</data>
      <data key="d2">280c36ab0ae3dc66fffd099a273b96ab</data>
    </node>
    <node id="AWS CLOUD DEVELOPMENT KIT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
The AWS Cloud Development Kit (AWS CDK) is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
AWS Cloud Development Kit (CDK) is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
AWS CDK is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926,08e6487bb4d09a90bdb8439d2afb618d,119c44bcb05c001f48d12d86b105f1bf,280c36ab0ae3dc66fffd099a273b96ab,6741df7802dff57e070b002915d9590a,c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="NODE MODULES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Node Modules are directories that contain JavaScript packages that can be used in Node.js applications, including those built with AWS Amplify.</data>
      <data key="d2">280c36ab0ae3dc66fffd099a273b96ab</data>
    </node>
    <node id="AMAZON S3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon S3 is a scalable object storage service offered by AWS, designed for data storage and retrieval.
Amazon S3 is a scalable storage service used to store and retrieve any amount of data at any time, often used in conjunction with AWS services.
Amazon S3 is a scalable object storage service offered by AWS for data storage and retrieval.
Amazon S3 is a scalable storage service provided by Amazon Web Services that allows users to store and retrieve any amount of data at any time from anywhere on the web.
Amazon S3 is a scalable storage service that allows users to store and retrieve any amount of data at any time.
Amazon S3 is a scalable storage service provided by AWS for storing and retrieving any amount of data at any time.
Amazon S3 is a scalable storage service provided by Amazon Web Services for storing and retrieving any amount of data at any time.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2,1ef9b6a9263edfd718636bcbc29f4a72,515a9fba2517051a51ebb09f8a2c2b06,5c7c1b8a3cde0fc5a186b912ceba73bb,5f39324ac9e2fb1bb8b139c9b114f332,70363c8433b020965dc7ec11c063e460,c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="BUCKETSTACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BucketStack is a stack defined in the AWS CDK that manages the lifecycle of an S3 bucket.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="N/A">
      <data key="d0">EVENT</data>
      <data key="d1">The process of deploying a backend alongside a frontend's development server using the npx ampx sandbox command.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="CLI COMMANDS">
      <data key="d0">EVENT</data>
      <data key="d1">CLI commands are instructions used in the command line interface to interact with AWS services and manage resources.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="NPX AMPX SANDBOX">
      <data key="d0">EVENT</data>
      <data key="d1">npx ampx sandbox is a command that enables developers to deploy their backend alongside their frontend's development server in a personal cloud sandbox.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="NPX AMPX SANDBOX DELETE">
      <data key="d0">EVENT</data>
      <data key="d1">npx ampx sandbox delete is a command used to remove an active cloud sandbox environment.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="NPX AMPX SANDBOX SECRET">
      <data key="d0">EVENT</data>
      <data key="d1">npx ampx sandbox secret is a command for managing backend secrets used in the personal cloud sandbox.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="AWS CLI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CLI is a unified tool to manage AWS services from the command line, allowing users to control multiple AWS services through scripts.
The AWS Command Line Interface (CLI) is a unified tool to manage AWS services from the command line.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2,c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="AWS PROFILE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Profile is a named set of configuration settings that define how the AWS CLI interacts with AWS services.</data>
      <data key="d2">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </node>
    <node id="AWS CDK">
      <data key="d0" />
      <data key="d1">
The AWS Cloud Development Kit (CDK) is an open-source software development framework that allows developers to define cloud application resources using familiar programming languages.
The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
AWS Cloud Development Kit (CDK) is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
AWS CDK (Cloud Development Kit) is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
AWS CDK is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
AWS CDK (Cloud Development Kit) is a software development framework for defining cloud infrastructure in code.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f,3e8319ba39b8ba21d17ce5e988924ff2,405cec78205a77ac97466698654060ca,459eadcad7d141c2129458137d7d41d9,57f05fa9d96242d8c2cb2869e13f9e1c,6f6e767a35b75e1c7658fbbddd94a842,bcb8bed3236fce81cd5b966a435370ba,c53f4501f1dba5ecec6c90cfcc2152c2,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="CLOUDFORMATION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.
AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.
AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.</data>
      <data key="d2">6f6e767a35b75e1c7658fbbddd94a842,e1b74f93a071f3a34a553359c4fa7b1b,e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="LOGINWITHAMAZON_CLIENT_ID">
      <data key="d0">PERSON</data>
      <data key="d1">A specific identifier used for the Login with Amazon service, which allows users to log in to applications using their Amazon account.</data>
      <data key="d2">e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="AWS_PROFILE">
      <data key="d0">PERSON</data>
      <data key="d1">An environment variable used to specify which AWS profile to use when executing commands.</data>
      <data key="d2">e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="SECRET">
      <data key="d0">EVENT</data>
      <data key="d1">A secure piece of information that can be created, retrieved, and managed within the AWS Amplify sandbox environment.
A secret is a piece of information that is kept hidden from others, often used in the context of securing sensitive data such as database connection strings.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47,e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="SANDBOX">
      <data key="d0">EVENT</data>
      <data key="d1">A personal cloud environment provided by AWS Amplify for testing and development purposes.
The sandbox is a local development environment in Amplify where developers can test features and manage secrets without affecting production.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c,e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="AMPLIFY_APP_ID">
      <data key="d0">PERSON</data>
      <data key="d1">A unique identifier for an AWS Amplify application, used to manage and interact with the app's resources.
Amplify App ID is a unique identifier for an Amplify application used in deployment processes.</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52,e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="MY-OTHER-PROFILE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e9de6f22467dd06036280d1c89b6d407</data>
    </node>
    <node id="CDK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
CDK (Cloud Development Kit) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
The AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.
CDK refers to the Cloud Development Kit, which is a software development framework for defining cloud infrastructure in code and is mentioned in relation to various features in Gen 2.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b,4b1835219f538ab9f3ba5712dcb54610,6a2f21642257c922b2659f7bb932521a,b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </node>
    <node id="GRAPHQL">
      <data key="d0">EVENT</data>
      <data key="d1">GraphQL is a query language for APIs and a runtime for fulfilling those queries with existing data.
GraphQL is a query language for APIs and a runtime for fulfilling those queries with existing data.
GraphQL is a query language for APIs and a runtime for fulfilling those queries with existing data.
GraphQL is a query language for APIs and a runtime for fulfilling those queries with existing data, often used in conjunction with Amplify for data fetching.
GraphQL is a data query language for APIs and a runtime for fulfilling those queries with existing data, allowing clients to request only the data they need.
GraphQL is a query language for APIs and a runtime for fulfilling those queries with existing data.
GraphQL is a query language for APIs that allows clients to request only the data they need, and it is used in the context of the Amplify framework for data operations.
</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,1ef9b6a9263edfd718636bcbc29f4a72,21fafbece16fa47f1f530df2b5f0817b,374f53811273c5cffe3558d227a0e4ec,4fde2e7cc7218ba6b93e1b100e10fd38,c3958c03e7b6908e78ca65d6563b3555,d479485461737c6760b5fb421f0541ea,e1b74f93a071f3a34a553359c4fa7b1b</data>
    </node>
    <node id="CODEGEN">
      <data key="d0">EVENT</data>
      <data key="d1">Code generation is the process of automatically generating code from a higher-level description or model.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b</data>
    </node>
    <node id="STAGING">
      <data key="d0">EVENT</data>
      <data key="d1">Staging is a branch in version control systems where code is prepared for deployment to production.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b</data>
    </node>
    <node id="MODELGEN">
      <data key="d0">EVENT</data>
      <data key="d1">Model generation is a process in software development where data models are created based on the application's requirements.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b</data>
    </node>
    <node id="BRANCH">
      <data key="d0">EVENT</data>
      <data key="d1">A branch in version control systems represents an independent line of development, allowing for parallel work on different features or fixes.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b</data>
    </node>
    <node id="BACKEND">
      <data key="d0">EVENT</data>
      <data key="d1">The backend refers to the server-side part of an application that handles data processing, storage, and business logic, often interfacing with a database and APIs.
The backend refers to the server-side part of an application that handles data storage, business logic, and server-side processing.
</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b,ad25e8455b3a65969a17cb69a66a58ac,e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="SYSTEM">
      <data key="d0">EVENT</data>
      <data key="d1">The system refers to the underlying hardware and software environment in which applications run, including the operating system and installed software.</data>
      <data key="d2">21fafbece16fa47f1f530df2b5f0817b</data>
    </node>
    <node id="CUSTOM PIPELINES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom pipelines refer to the tailored CI/CD workflows that integrate various services for deploying applications.
Custom pipelines allow for tailored CI/CD processes in AWS Amplify, enabling developers to define specific workflows for their applications.</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="AMPLIFY APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An Amplify app is a project created in AWS Amplify that can include both frontend and backend components for web and mobile applications.
</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52,361aaf651685ae2e9407ab27dc8138b3</data>
    </node>
    <node id="BRANCH_NAME">
      <data key="d0">PERSON</data>
      <data key="d1">Branch name is a variable representing the name of the git branch being deployed in the CI/CD pipeline.</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52</data>
    </node>
    <node id="AWS CLOUDFORMATION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.</data>
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52</data>
    </node>
    <node id="CI/CD">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">13036fcc04ff7a3a3d82cc055061ee52</data>
    </node>
    <node id="FULLSTACK PREVIEWS">
      <data key="d0">EVENT</data>
      <data key="d1">Fullstack previews allow developers to set up ephemeral environments for testing features in isolation from production on every pull request.
Fullstack previews enable developers to create ephemeral environments for testing and previewing fullstack applications before deployment.</data>
      <data key="d2">361aaf651685ae2e9407ab27dc8138b3,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="DEV BRANCH">
      <data key="d0">GEO</data>
      <data key="d1">The dev branch is a branch in a version control system where developers can work on new features before merging them into the main branch.
The dev branch is a feature branch in Amplify where resources can be shared across other branches.
The dev branch is a version control branch used for development purposes in the AWS Amplify workflow.</data>
      <data key="d2">148529b8881659161220567b7aef9513,361aaf651685ae2e9407ab27dc8138b3,a054cee32c59ce9d304bb1f8716fbb7c</data>
    </node>
    <node id="MAIN BRANCH">
      <data key="d0">GEO</data>
      <data key="d1">The main branch is the primary branch in a version control system where the stable version of the code is maintained.
The main branch is the primary branch in a version control system where the stable version of the code resides.</data>
      <data key="d2">148529b8881659161220567b7aef9513,361aaf651685ae2e9407ab27dc8138b3</data>
    </node>
    <node id="PULL REQUEST">
      <data key="d0">EVENT</data>
      <data key="d1">A pull request is a method of submitting contributions to a software project, allowing for code review and discussion before merging changes.
A pull request is a method of submitting contributions to a project in version control, allowing for code review and discussion before merging.
</data>
      <data key="d2">148529b8881659161220567b7aef9513,155e5b639ff1fbe14e9b7c7375cf5e03,361aaf651685ae2e9407ab27dc8138b3</data>
    </node>
    <node id="AMPLIFY HOSTING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Hosting is a service provided by AWS Amplify that allows developers to host their web applications with features like continuous deployment and previews.
AWS Amplify Hosting is a service that provides fast and secure hosting for web applications with features like custom domains and continuous deployment.

Amplify Hosting is a fully managed web hosting service provided by AWS Amplify that supports various frameworks and offers CI/CD capabilities.</data>
      <data key="d2">1e46ce5bc3a6e1fa6bece36f86a46f80,361aaf651685ae2e9407ab27dc8138b3,8aece6e31757222174fd611077ca4f6d,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="MULTI-REPO-EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-repo-example is a project setup that demonstrates how to manage separate frontend and backend repositories using AWS Amplify.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="BACKEND-APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Backend-app is a project that contains backend-only code for deployment using AWS Amplify.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="AUTHENTICATOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Authenticator is a component provided by AWS Amplify that allows for user authentication in applications.
The Authenticator is a connected component in AWS Amplify that adds authentication flows to applications.
The Authenticator is a component from AWS Amplify that provides user authentication features for applications.
The Authenticator is a component in AWS Amplify that provides a customizable UI for user authentication, including sign-up and sign-in processes.
The Authenticator is a UI component provided by AWS Amplify for managing user authentication in applications.
The Authenticator is a component in AWS Amplify that provides authentication functionality for applications.
The Authenticator component is part of Amplify UI that provides authentication UI for applications.
Authenticator is a component from AWS Amplify that manages authentication states and user sessions in a React application.
The Authenticator is a component in Amplify UI that manages user authentication flows such as sign in, sign up, and password reset.
The Authenticator is a component of AWS Amplify that manages user authentication processes such as sign-in, sign-up, and password recovery.
Authenticator is a component of AWS Amplify that provides user authentication features, including sign-up and sign-in functionalities.
The Authenticator is a component that manages user authentication, including sign-up and sign-in processes.
The Authenticator is a component used for user authentication in applications, allowing users to sign in, sign up, and manage their accounts.
The Authenticator is a component in Amplify UI that manages user authentication processes such as sign in, sign up, and password reset.
The Authenticator is a component that adds complete authentication flows to applications with minimal boilerplate, part of the AWS Amplify UI for React.
The Authenticator is a component in AWS Amplify that allows users to sign in and manage their accounts within an application.
The Authenticator is a component in AWS Amplify that manages user authentication processes, including sign-in and sign-up.
The Authenticator is a component in AWS Amplify UI React that handles user sign-in and sign-up processes.
The Authenticator is a component in Amplify UI that allows developers to add authentication to their applications easily.
The Authenticator is a component of AWS Amplify that simplifies the process of adding authentication to applications, allowing for user sign-in and account creation.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7,1e46ce5bc3a6e1fa6bece36f86a46f80,24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,32ab448d1972668cba4e2c467ff116a8,353184f9ee9fe27f7425aaec76c8a30a,3cdd6c81baa65bbde6eabfc399eb25b6,4d25b33f699aef8a075e8858bf0ad630,4fde2e7cc7218ba6b93e1b100e10fd38,73680e5bf87090f014e7bd9d2b8e582a,793ee29fd3ae616dbc82df13c1d4f39b,7d1946ff469243c820fe74fd26b68cbd,94a4bc63d08f1f8dd8fa4630608aee68,9d1ecd9e6b4e4bc832178b9ae1a06e8d,a31ec7e4bd06590a0d36f19c433d4801,a5e50f469dd57f00c706f3dcd5894c37,abdfd668c78186087ff9da2146979893,c6c993134aa9ac5f833c8bf4d26c0dbd,cb861a02338e7cf7786d791829706a53,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="CURL COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">Curl command is a command-line tool used to trigger a build for the multi-repo-example app in the Amplify Console.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="BUILD-SPEC">
      <data key="d0">EVENT</data>
      <data key="d1">Build-spec is a configuration file used in AWS Amplify to define the build process for applications, including commands and settings for both backend and frontend.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="FRONTEND APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Frontend app refers to the client-side application that interacts with the backend services deployed using AWS Amplify.</data>
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="AMPLIFY DEPENDENCIES">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </node>
    <node id="ADMIN DASHBOARD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Admin Dashboard is a frontend application that connects to the shared backend in a monorepo setup.</data>
      <data key="d2">c143d279740f3e9c59920d2a6720240e</data>
    </node>
    <node id="MARKETING SITE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Marketing Site is another frontend application that connects to the shared backend in a monorepo setup.</data>
      <data key="d2">c143d279740f3e9c59920d2a6720240e</data>
    </node>
    <node id="MY-SHARED-BACKEND">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">My-Shared-Backend is the backend application that updates changes to the backend in a monorepo setup.</data>
      <data key="d2">c143d279740f3e9c59920d2a6720240e</data>
    </node>
    <node id="SCHEMA TYPE DEFINITIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Schema Type Definitions are used to provide strong typing and code completion for API calls in frontend applications.</data>
      <data key="d2">c143d279740f3e9c59920d2a6720240e</data>
    </node>
    <node id="AWS SYSTEMS MANAGER PARAMETER STORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Systems Manager Parameter Store is a service that stores secrets and environment variables securely.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </node>
    <node id="FOO">
      <data key="d0">PERSON</data>
      <data key="d1">Foo is a placeholder name used in examples for secret values in the Amplify documentation.
Foo is a placeholder name used in examples for setting and managing secrets in AWS Amplify.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="BAR">
      <data key="d0">PERSON</data>
      <data key="d1">Bar is another placeholder name used in examples for secret values in the Amplify documentation.
Bar is another placeholder name used in examples for setting and managing secrets in AWS Amplify.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="BUILD SETTINGS">
      <data key="d0">EVENT</data>
      <data key="d1">Build settings are configurations in the Amplify console that dictate how applications are built and deployed.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </node>
    <node id="REACT_APP_TEST_VARIABLE">
      <data key="d0">PERSON</data>
      <data key="d1">REACT_APP_TEST_VARIABLE is an example of an environment variable used in the Amplify documentation for managing application settings.</data>
      <data key="d2">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </node>
    <node id="FEATURE BRANCH">
      <data key="d0">GEO</data>
      <data key="d1">Feature branches are used in version control to develop new features in isolation before merging into the main branch.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="AMPLIFY.YML">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify.yml is a configuration file used in AWS Amplify to define build settings and deployment processes for applications.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="AMPLIFY CI/CD PIPELINE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify CI/CD pipeline is a continuous integration and continuous deployment service that automates the deployment of applications in AWS Amplify.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="STAGING BRANCH">
      <data key="d0">GEO</data>
      <data key="d1">The staging branch is a version control branch used for testing changes before they are merged into the main branch.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="BRANCH AUTO-DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Branch auto-detection is a feature in AWS Amplify that automatically connects branches in a repository for deployment.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="BRANCH AUTO-DISCONNECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Branch auto-disconnection is a feature in AWS Amplify that automatically removes connections to branches that have been deleted from the repository.</data>
      <data key="d2">148529b8881659161220567b7aef9513</data>
    </node>
    <node id="AWS SYSTEMS MANAGER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Systems Manager is a service that helps you automatically apply OS patches, update software, and manage configurations across your AWS resources.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="AMPLIFY CI/CD">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify CI/CD is a continuous integration and continuous deployment service that automates the build, test, and deployment of applications.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="PARAMETER STORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Parameter Store is a service that provides secure, hierarchical storage for configuration data management and secrets management.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="SECRET MANAGEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Secret management involves securely storing and managing sensitive information such as API keys and database credentials within AWS Amplify.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="SANDBOX ENVIRONMENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Sandbox environments are isolated environments created for testing and development purposes, allowing developers to experiment without affecting production.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="CLIENT CODEGEN">
      <data key="d0">EVENT</data>
      <data key="d1">Client code generation refers to the automatic generation of client-side code to interact with backend services in AWS Amplify applications.</data>
      <data key="d2">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </node>
    <node id="SANDBOX ENVIRONMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A sandbox environment is an isolated development space that allows developers to build, test, and iterate on applications without affecting production workloads.</data>
      <data key="d2">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </node>
    <node id="CLIENT CONFIG">
      <data key="d0">EVENT</data>
      <data key="d1">Client config refers to the configuration settings required for client applications to interact with backend services.</data>
      <data key="d2">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </node>
    <node id="CLOUD SANDBOX">
      <data key="d0">EVENT</data>
      <data key="d1">Cloud sandbox environments are isolated environments used for development and testing without affecting production systems.
A cloud sandbox is an isolated development environment provided by AWS Amplify for developers to build, test, and iterate on applications without affecting production.
Cloud Sandbox is the environment where changes to the Amplify backend resources are deployed and tested.
A cloud sandbox is an isolated environment in the cloud where developers can test and deploy their applications without affecting production systems.
A cloud sandbox is an isolated environment in the cloud where developers can test and deploy applications without affecting production systems.
The cloud sandbox is a separate backend environment provided by Amplify for developers to test changes without affecting the production environment.
The cloud sandbox is an isolated environment for testing and deploying applications without affecting the production database.
The cloud sandbox is a feature of Amplify that provides a separate backend environment for each developer for local development and testing.
The cloud sandbox is an isolated environment for testing and development without affecting the production database.</data>
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb,3cdd6c81baa65bbde6eabfc399eb25b6,7040175c91fe86a908046a9b485b0410,856c945b28eacce9c83378e56652fee3,bcd2d66297bc7f44d44a249af2225403,d5671c2494c6418a266da35fff705101,e4054144736985db7777f6f19790e2af,f0df8a5e739e43b9c43840817e1bd7d1,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="HOME CREATE FORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Home Create Form is a component used in Next.js applications to manage user input and form submissions.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="VALIDATION RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Validation rules are criteria set to ensure that the data entered into a form meets specific requirements before submission.
Validation rules are criteria set to ensure that user input meets specific requirements before being processed in forms.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161,bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="SUBMIT BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The submit button is an interactive element in a form that users click to send their input data for processing.
The Submit Button is a UI element that users click to submit their new password in the Change Password component.</data>
      <data key="d2">a5e50f469dd57f00c706f3dcd5894c37,bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="CLEAR BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The clear button is an interactive element in a form that users click to reset the form fields to their initial state.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="CANCEL BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The cancel button is an interactive element in a form that users click to dismiss the form without saving any data.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="ONCHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">The onChange event is triggered when the user modifies the input fields in a form, allowing for real-time data capture.
onChange is an event handler for the TextField that triggers when the value of the field changes.
onChange is a property that specifies a callback function to be executed when the SwitchField's state changes.
The onChange event handler is triggered when the value of an input element changes, allowing for real-time validation or updates.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,7a771747e08d74ceb8c258bc5a658d6d,bcd2d66297bc7f44d44a249af2225403,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="ONSUBMIT">
      <data key="d0">EVENT</data>
      <data key="d1">The onSubmit event is triggered when the user clicks the submit button, allowing for data processing before saving.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="ONSUCCESS">
      <data key="d0">EVENT</data>
      <data key="d1">The onSuccess event is triggered when form data is successfully saved, allowing for actions like hiding the form or redirecting the user.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="ONVALIDATE">
      <data key="d0">EVENT</data>
      <data key="d1">The onValidate event is triggered for custom validations after the onChange event, allowing for additional checks on user input.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="ONCANCEL">
      <data key="d0">EVENT</data>
      <data key="d1">The onCancel event is triggered when the user clicks the cancel button, allowing for actions like hiding the form or redirecting the user.</data>
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="FORM LIFECYCLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">bcd2d66297bc7f44d44a249af2225403</data>
    </node>
    <node id="FIGMA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Figma is a collaborative interface design tool that allows users to create and prototype user interfaces.
Figma is a web-based UI/UX design application that allows collaborative design and prototyping of user interfaces.
Figma is a design tool that allows users to create and collaborate on designs, which can be integrated with Amplify Studio to generate React code.
Figma is a web-based UI/UX design application that allows teams to collaborate on design projects in real-time and is integrated with AWS Amplify for visual component design.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161,1e46ce5bc3a6e1fa6bece36f86a46f80,7eb4739e8bed8bf13646d7e252c1ae14,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="VUE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vue is a progressive JavaScript framework for building user interfaces and single-page applications.
Vue is a progressive JavaScript framework for building user interfaces, designed to be incrementally adoptable.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="ANGULAR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Angular is a platform for building mobile and desktop web applications, developed by Google.
Angular is a platform and framework for building single-page client applications using HTML and TypeScript.
Angular is a platform for building mobile and desktop web applications, providing a framework for client-side development.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161,d26ffe8f4908cd05e7882cd4223c3490,fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="GATSBY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Gatsby is a React-based open-source framework for creating websites and apps.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161</data>
    </node>
    <node id="NUXT.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Nuxt.js is a framework for creating Vue.js applications with server-side rendering capabilities.
Nuxt.js is a framework for creating Universal Vue.js applications, providing server-side rendering and static site generation capabilities.
Nuxt.js is a framework for building server-side rendered applications using Vue.js, providing features like routing and API integration.
Nuxt.js is a framework based on Vue.js that enables server-side rendering and generating static websites for Vue-based applications.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161,22362693d17a745c23fe5e9a2beecbd9,4fde2e7cc7218ba6b93e1b100e10fd38,e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="FULLSTACK WORKFLOWS">
      <data key="d0">EVENT</data>
      <data key="d1">Fullstack workflows refer to the processes and tools used to develop both the front-end and back-end of web applications.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161</data>
    </node>
    <node id="AMPLIFY UI BUILDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify UI Builder is a tool that allows developers to create user interfaces for their applications using a visual interface and integrates with design tools like Figma.</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161</data>
    </node>
    <node id="AMPLIFY UI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify UI provides a set of pre-built components that can be used to build user interfaces in applications developed with AWS Amplify.

Amplify UI is a user interface library for React that provides components and theming capabilities for building web applications.
Amplify UI is a user interface library for React that provides components and design tokens for building applications.
Amplify UI is a user interface library for React that provides customizable components and themes for building applications.
Amplify UI is a library for building user interfaces in React, providing components like ThemeProvider to manage themes and color modes.
Amplify UI is a user interface library for React that provides components and theming capabilities for building applications.
Amplify UI is a user interface library for React that provides customizable components and themes for building web applications.
Amplify UI is a user interface library for React that provides design tokens for typography, colors, and other UI elements.
Amplify UI is a design system for React that provides a set of components and design tokens for building user interfaces.
Amplify UI is a user interface library that provides components and design tokens for building responsive web applications.

Amplify UI is a user interface library that provides components for building web applications with customizable themes and styles.
Amplify UI is a user interface library that provides components for building applications, including in-app messaging features.
Amplify UI provides a set of UI components for building applications with AWS services, including storage and geo functionalities.
Amplify UI is a set of components designed for managing account settings and user management flows in applications, requiring user authentication.
Amplify UI is a framework for building user interfaces in React, providing customizable components for authentication and other functionalities.
Amplify UI is a framework for building user interfaces in React, providing components like the Authenticator for user authentication.
Amplify UI is a user interface library for React that provides components for building web applications.
Amplify UI is a library for building user interfaces in React, providing components like Badge for developers.
Amplify UI is a framework for building user interfaces in React, providing components and tools for developers.
Amplify UI is a user interface library for React that provides components like Accordion and Card for building web applications.
Amplify UI is a user interface library for React that provides components for building web applications.
Amplify UI is a user interface library for React that provides components for building web applications.
Amplify UI is a library for building user interfaces in React, providing various components like SwitchField and StepperField.
Amplify UI is a user interface library for React that provides components for building web applications.
Amplify UI is a library for building user interfaces in React, providing components like SliderField and SearchField for developers.
Amplify UI is a framework for building user interfaces in React, providing components like RadioGroupField and SearchField for developers.
Amplify UI is a user interface library for React that provides components for building web applications, including form fields like PhoneNumberField and RadioGroupField.
Amplify UI is a user interface library for React that provides components for building web applications, including forms and input fields.
Amplify UI is a user interface library for React that provides components for building accessible and responsive web applications.
Amplify UI is a user interface library for React that provides components for building web applications, including buttons and checkbox fields.
Amplify UI is a library that provides components for building user interfaces in React applications, including Autocomplete and Tabs.
Amplify UI is a user interface library for React that provides components for building applications, including menus and tabs.
Amplify UI is a library for building user interfaces in React, providing components like Link and Breadcrumbs for navigation and styling.
Amplify UI is a library for building user interfaces in React, providing components like Message for user feedback.
Amplify UI is a library for building user interfaces in React, providing components like Placeholder and Loader for enhanced user experience during content loading.
Amplify UI is a library for building user interfaces in React, providing components like Alert and View for developers to use in their applications.
Amplify UI is a library for building user interfaces in React, providing components like View and Text for developers to use in their applications.
Amplify UI is a framework for building user interfaces in React, providing various components like Text and ScrollView for developers.
Amplify UI is a user interface library for React that provides components for building responsive web applications.
Amplify UI is a framework for building user interfaces in React, providing components like Image and Icon for developers.
Amplify UI is a library for building user interfaces in React, providing components like Heading for semantic section headings.
Amplify UI is a library for building user interfaces in React, providing components like Divider and Heading for organizing content and styling.
Amplify UI is a library for building user interfaces in React, providing various components for organizing content and enhancing user experience.
Amplify UI is a user interface library for React that provides components for building web applications with AWS services.
Amplify UI is a user interface library that provides components for building applications with a focus on internationalization and accessibility.
Amplify UI provides a set of components that follow accessibility best practices and guidelines for building accessible applications.
Amplify UI is a library that provides UI components for building applications with AWS Amplify and React.
Amplify UI is a library designed for building user interfaces in React applications, particularly with Next.js.
Amplify UI is a framework designed to integrate with React for building user interfaces, including components like buttons and forms.
Amplify UI is an open-source UI library that simplifies UI development by providing connected components for workflows like authentication and dynamic data, along with customizable themes.
Amplify UI is a collection of accessible, themeable, performant React components that can connect directly to the cloud and help developers build user interfaces quickly.
</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,06fd00c0023b38a04bba794fae7ed356,0f0c3a1733d9928c7207a0931e147afe,155e5b639ff1fbe14e9b7c7375cf5e03,18256f324d7f8fc0edac5bbf717bf76d,1a2c25b18b52cc9adff7a263b890a3b5,1d9edaeddd47c47bbc0bda9363e7b2e5,1e3e9559f0cf793e96c48297529ec161,1e46ce5bc3a6e1fa6bece36f86a46f80,3012140364ff4dc93ce2fc057a65a7bf,32ab448d1972668cba4e2c467ff116a8,3357299f904d0dd5b40c967c28b75149,3bf357b72dac2808e7ba2223ab2c4745,40ccefaf714c8eadcebd508c051c9190,4bc06a4de4b3d3bcc2e2a060955740c8,4c20122de1ca69ecf45662867d268049,515a9fba2517051a51ebb09f8a2c2b06,51eb03a68a36f040cb248c3d2430e43a,52fc958abba47a16871f909ed3cc2d5a,56553341236a20419cc336c60c2bed04,5aa64e0729b8afd73930cdaf5ff7a8aa,6264f18714899ee18445e9c4535f5ff2,64488fb4232e09664566b2ee3c00394a,6634963e5bc3eae8755d15393e4c9b71,6dcdf6dcf7b1c6d0a0969f9399986850,6e82a6e0427e12aef8dafce9907f3835,6f822244ad945944fb292c514cfddc13,717f3b1fb6a6ce86c291aca158771f33,73680e5bf87090f014e7bd9d2b8e582a,793ee29fd3ae616dbc82df13c1d4f39b,7eb4739e8bed8bf13646d7e252c1ae14,818fcb4044a83bd6eead8a24e57319ad,85d9171dd6e70ffdb5803e227ecacbc4,877a7ccbdb63a00477117db13eba1534,88cf0bb9f01e55013ddfc8434b5c4f40,9939e974ca8f24b6b7f34bbf89addb7e,a016f0f03b4482ba0b2bdfb5ed16bd77,a5e50f469dd57f00c706f3dcd5894c37,a8cc34c06c7b64595006afc28abc0ae2,ac0c424efc84163fec05823d42352599,aca6ad21122c65a602020d055257d45c,b0fc4cd8b01ddce0c70025c48b34ca98,b394b4eeaf1a9df4b16937daeed33e3a,b4caad819b3245d1c7c01c198437baa1,b8276fb595f7138780baf2d76c97bb37,b9eb6db49e67c5d8dd0f95139d465c50,bf223ba92c40347202f7dcf0e841b2ed,c7af2749681510be539a408772ae1755,d26ffe8f4908cd05e7882cd4223c3490,da8a5f647964e74661f5f6b0ad4f6a74,e3c4629b893f38a9c103147f3ea608f3,e685aa3f2fe14219814513a176eea47f,f2b0e5018ea1044f912de4effd351e65,f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="SANITIZE USER INPUT">
      <data key="d0">EVENT</data>
      <data key="d1">Sanitizing user input involves cleaning and validating data entered by users to prevent errors and security vulnerabilities.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">1e3e9559f0cf793e96c48297529ec161</data>
    </node>
    <node id="STORAGE MANAGER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Storage Manager is a component in AWS Amplify that allows users to upload files to an Amazon S3 bucket.
The Storage Manager is a component used in AWS Amplify for managing file uploads and storage, allowing users to upload files with unique S3 keys to prevent overwriting.
The Storage Manager is a UI component in AWS Amplify that allows users to upload files easily from their applications.
The Storage Manager is a component of AWS Amplify that allows users to manage file uploads and storage in the cloud.
Storage Manager is a component that manages file uploads and storage in applications.

Storage Manager is a component in Amplify UI that manages file uploads and displays their status.
The Storage Manager is a component of AWS Amplify that allows users to upload and manage files in the cloud.
The Storage Manager is a component in the AWS Amplify UI that manages file uploads and storage settings for applications.
The Storage Manager is a component used for managing file uploads to Amazon S3, allowing users to upload, process, and manage files with customizable options.
The Storage Manager is a component that handles file uploads and management within the application, allowing users to upload images and manage their files effectively.
The Storage Manager is a component in the AWS Amplify UI for React that manages file uploads and storage operations.
Storage Manager is a component in AWS Amplify UI for React that enables users to upload files to cloud storage.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,1ceae74b49c1b621d815e85b8ca49988,2299dbfce715caaaef2102de232e50aa,32ab448d1972668cba4e2c467ff116a8,3d5a944087b6833d97ac18648a394224,515a9fba2517051a51ebb09f8a2c2b06,5c7c1b8a3cde0fc5a186b912ceba73bb,63bae3a149e50b7452962f7bdd8724ea,6534102a2bcab0d166b971b8fc0e8eb1,afa4163fc1d3fab31d1294afed0bcc86,d5db54aea339e57737c40468d9473a13,d700fb2336ddc0a563736b65003c9d4f,ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="S3">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon S3 is a scalable storage service provided by AWS for storing and retrieving any amount of data.
Amazon S3 (Simple Storage Service) is a scalable object storage service for data backup, archiving, and analytics, used in conjunction with AWS Amplify for file storage.
Amazon S3 (Simple Storage Service) is a scalable object storage service for data backup, archiving, and analytics.
Amazon S3 is a scalable object storage service for data backup, archiving, and analytics.
Amazon S3 (Simple Storage Service) is a scalable object storage service for data backup, archiving, and analytics.
Amazon S3 (Simple Storage Service) is a scalable object storage service used for storing and retrieving any amount of data at any time.
Amazon S3 (Simple Storage Service) is an object storage service that offers industry-leading scalability, data availability, security, and performance.
S3 is Amazon's Simple Storage Service, used for storing and retrieving any amount of data at any time.
S3 is a scalable storage service provided by AWS, used for storing and retrieving any amount of data, including song files and cover art.
Amazon S3 (Simple Storage Service) is a scalable object storage service offered by AWS for data storage and retrieval.
Amazon S3 (Simple Storage Service) is an object storage service that offers industry-leading scalability, data availability, security, and performance.
S3 (Simple Storage Service) is a scalable storage service provided by Amazon Web Services for storing and retrieving any amount of data.
Amazon S3 (Simple Storage Service) is an object storage service that offers industry-leading scalability, data availability, security, and performance.
S3 (Simple Storage Service) is a scalable object storage service provided by Amazon Web Services, used for backup and data storage.
Amazon S3 is a scalable storage service for storing and retrieving any amount of data at any time.
Amazon S3 (Simple Storage Service) is a scalable object storage service for data backup, archiving, and analytics.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,1bafd8792486c2e570d8aa0cb40189b9,22362693d17a745c23fe5e9a2beecbd9,2299dbfce715caaaef2102de232e50aa,32ab448d1972668cba4e2c467ff116a8,3d5a944087b6833d97ac18648a394224,3e8319ba39b8ba21d17ce5e988924ff2,57f05fa9d96242d8c2cb2869e13f9e1c,63bae3a149e50b7452962f7bdd8724ea,9bfb7d7a715bed7eec92b32f7a175bf5,ad25e8455b3a65969a17cb69a66a58ac,afa4163fc1d3fab31d1294afed0bcc86,d2da95c5361020f00b8857bfa61b4378,df66d576a32835aae9d3957800932b5f,e3c6466a080dbad6e05f99bda0212547,f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="AGENT CONTACT FORM">
      <data key="d0">EVENT</data>
      <data key="d1">Agent Contact Form is a form component that validates and submits data related to real estate agents.</data>
      <data key="d2">afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="PRODUCT FORM">
      <data key="d0">EVENT</data>
      <data key="d1">Product Form is a form component that handles product data submission and validation in a structured format.</data>
      <data key="d2">afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="VALIDATION RESPONSE">
      <data key="d0">EVENT</data>
      <data key="d1">Validation Response is a structured response indicating whether a form input has passed validation checks, including error messages if applicable.</data>
      <data key="d2">afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="PIANO">
      <data key="d0">PERSON</data>
      <data key="d1">Piano is an example of a product that can be included in a product form for data submission and management.</data>
      <data key="d2">afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="FORM BUILDER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">afa4163fc1d3fab31d1294afed0bcc86</data>
    </node>
    <node id="TODO CREATE FORM">
      <data key="d0">EVENT</data>
      <data key="d1">The Todo Create Form is a user interface component in AWS Amplify that allows users to create new todo items, including customization options for input fields.</data>
      <data key="d2">3d5a944087b6833d97ac18648a394224</data>
    </node>
    <node id="FORM SUBMISSION">
      <data key="d0">EVENT</data>
      <data key="d1">Form submission is an event that occurs when a user submits a form, triggering validation and data processing in the application.
Form Submission is the process of sending user input data to a server for processing, often triggered by a button click.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,3d5a944087b6833d97ac18648a394224</data>
    </node>
    <node id="VALIDATION TASKS">
      <data key="d0">EVENT</data>
      <data key="d1">Validation tasks are processes that check user input for errors before form submission, ensuring data integrity and correctness.</data>
      <data key="d2">3d5a944087b6833d97ac18648a394224</data>
    </node>
    <node id="INITIAL VALUES">
      <data key="d0">EVENT</data>
      <data key="d1">Initial values refer to the default data set in a form before any user interaction, providing a starting point for user input.</data>
      <data key="d2">3d5a944087b6833d97ac18648a394224</data>
    </node>
    <node id="OVERRIDES PROP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The overrides prop is a feature in AWS Amplify that allows developers to customize the properties of form components, enhancing user interface flexibility.</data>
      <data key="d2">3d5a944087b6833d97ac18648a394224</data>
    </node>
    <node id="TEXTFIELD">
      <data key="d0" />
      <data key="d1">
TextField is a component in the Amplify UI for React that allows users to input text content with various customization options.
TextField is a component in AWS Amplify that allows users to input text data in a form.
TextField is a component from the AWS Amplify UI React library used for user input in forms.
TextField is a UI component in AWS Amplify that allows users to input text, with customizable styling options.
TextField is a component in React that allows users to input text data, often used in forms.
TextField is a component in AWS Amplify UI that allows users to input text, often used within forms for user data entry.

TextField is a component in Amplify UI that allows users to input text, requiring proper labeling for accessibility.</data>
      <data key="d2">12c9fa6332d9cd62a8cbe8be18fd540e,3d5a944087b6833d97ac18648a394224,5b0d50411f54d1ef65278d02161d11d7,72f7bd8a9eb9039eabf2d7d1ff4c9601,7a771747e08d74ceb8c258bc5a658d6d,7fea5fbe98eba1d68851892af6df2407,98fcf483b563a8d8b54ee85b2f6fa533,b9eb6db49e67c5d8dd0f95139d465c50,cb861a02338e7cf7786d791829706a53</data>
    </node>
    <node id="TODOCREATEFORM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TodoCreateForm is a component in the AWS Amplify UI library that allows users to create and manage todo items in a connected form.</data>
      <data key="d2">a05256700be9b39d3c9098982e0fa5d4</data>
    </node>
    <node id="SELECTFIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SelectField is a component that allows users to select an option from a dropdown menu in a form.
SelectField is a component in Amplify UI that allows users to select options from a dropdown menu.
SelectField is a component in Amplify UI that allows users to select an option from a dropdown menu.
SelectField is a component used in React applications for selecting options from a dropdown menu.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,40ccefaf714c8eadcebd508c051c9190,a05256700be9b39d3c9098982e0fa5d4,e33823d803dfc43e2ab84d0208782223</data>
      <data key="d3">ORGANIZATION</data>
    </node>
    <node id="AUTOCOMPLETEFIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AutocompleteField is a component that provides suggestions to users as they type in a form input.</data>
      <data key="d2">a05256700be9b39d3c9098982e0fa5d4</data>
    </node>
    <node id="RADIOGROUPFIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">RadioGroupField is a component that allows users to select one option from a set of choices in a form.
RadioGroupField is a component that allows users to select a single option from a list of mutually exclusive options in a form.
RadioGroupField is a component in AWS Amplify UI that allows users to select one option from a set of choices.
RadioGroupField is a component that allows users to select one option from a set of radio buttons, with customizable themes and styles.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589,6f822244ad945944fb292c514cfddc13,a05256700be9b39d3c9098982e0fa5d4,bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="VALIDATIONTASKS">
      <data key="d0">EVENT</data>
      <data key="d1">Validation tasks are processes that check the input data for errors before submission in a form.</data>
      <data key="d2">a05256700be9b39d3c9098982e0fa5d4</data>
    </node>
    <node id="OVERRIDES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Overrides are customizations applied to components to change their default behavior or appearance.</data>
      <data key="d2">a05256700be9b39d3c9098982e0fa5d4</data>
    </node>
    <node id="AMAZON Q DEVELOPER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Q Developer is a generative AI-powered conversational assistant designed to help users understand and build AWS applications.
Amazon Q Developer is a tool that provides inline code suggestions and assists in defining schemas for applications using AWS services.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd,fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="VISUAL STUDIO CODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Visual Studio Code is a source-code editor developed by Microsoft that includes support for debugging, syntax highlighting, and version control.
Visual Studio Code is a source-code editor developed by Microsoft that supports development in TypeScript and JavaScript.</data>
      <data key="d2">6741df7802dff57e070b002915d9590a,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="JETBRAINS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JetBrains is a software development company known for creating integrated development environments (IDEs) for various programming languages.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="UI COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">UI components are reusable pieces of code that represent parts of a user interface in web applications.
UI components are reusable building blocks for user interfaces, which Amplify UI provides to help developers create applications efficiently.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="ACCOUNT SETTINGS">
      <data key="d0">EVENT</data>
      <data key="d1">Account Settings components are standalone components that facilitate user management flows in applications.
Account Settings is a component in the AWS Amplify UI for React that allows users to manage their account settings, including deleting their account.
Account Settings is a component that allows users to manage their account settings, including changing passwords and deleting users.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a,a5e50f469dd57f00c706f3dcd5894c37,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="FORM UI">
      <data key="d0">EVENT</data>
      <data key="d1">Form UI refers to the user interface elements that allow users to input data in web applications.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="DATA MODEL">
      <data key="d0">EVENT</data>
      <data key="d1">A data model defines the structure of data in applications, which can be used to generate forms in AWS Amplify.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="REACT FORM">
      <data key="d0">EVENT</data>
      <data key="d1">React forms are components in React applications that allow users to input and submit data.</data>
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="FORM GENERATION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </node>
    <node id="AWS TOOLKIT FOR VISUAL STUDIO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The AWS Toolkit for Visual Studio is an extension that helps developers build and manage applications on Amazon Web Services using Visual Studio.</data>
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="TROUBLESHOOT &quot;CANNOT FIND MODULE $AMPLIFY/ENV/&lt;FUNCTION-NAME&gt;&quot;">
      <data key="d0">EVENT</data>
      <data key="d1">An event related to troubleshooting an error encountered when deploying an Amplify Gen 2 app, specifically regarding module resolution in the frontend build.</data>
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="TROUBLESHOOT CONFIGURATION ERRORS">
      <data key="d0">EVENT</data>
      <data key="d1">An event that addresses issues related to missing configurations or errors when using AWS Amplify in a project.</data>
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="VUE.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Vue.js is a progressive JavaScript framework used for building user interfaces and single-page applications.</data>
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="NUXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Nuxt is a framework based on Vue.js that is used for building server-rendered applications and static websites.</data>
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="VISUAL STUDIO">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">fc52bbb050ae304015ed1c6202d9c35b</data>
    </node>
    <node id="AWS CLOUDSHELL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS CloudShell is a browser-based shell that provides a command-line interface to manage AWS resources.</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf</data>
    </node>
    <node id="CDKTOOLKIT">
      <data key="d0">EVENT</data>
      <data key="d1">CDKToolkit is a stack in AWS CloudFormation that is used to manage AWS CDK applications.</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf</data>
    </node>
    <node id="CLOUD FORMATION">
      <data key="d0">EVENT</data>
      <data key="d1">CloudFormation is a service that helps model and set up AWS resources so that they can be managed as a single unit, known as a stack.
AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.
AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources so that you can spend less time managing those resources and more time focusing on your applications.</data>
      <data key="d2">119c44bcb05c001f48d12d86b105f1bf,6741df7802dff57e070b002915d9590a,d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="CUSTOM RESOURCES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom resources in AWS Amplify allow developers to integrate any AWS service into an Amplify backend, providing flexibility and customization beyond standard offerings.
Custom Resources are user-defined resources in cloud environments that allow for tailored functionality and integration with existing services.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc,6f6e767a35b75e1c7658fbbddd94a842</data>
    </node>
    <node id="CUSTOM SECURITY RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom security rules allow developers to implement specific security measures tailored to their applications within the AWS Amplify framework.</data>
      <data key="d2">6f6e767a35b75e1c7658fbbddd94a842</data>
    </node>
    <node id="REDIS CACHE">
      <data key="d0">EVENT</data>
      <data key="d1">Redis cache is an in-memory data structure store used as a database, cache, and message broker, which can be integrated into AWS Amplify applications for improved performance.</data>
      <data key="d2">6f6e767a35b75e1c7658fbbddd94a842</data>
    </node>
    <node id="AWS FARGATE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Fargate is a serverless compute engine for containers that works with Amazon ECS and EKS, allowing developers to run containers without managing servers.</data>
      <data key="d2">6f6e767a35b75e1c7658fbbddd94a842</data>
    </node>
    <node id="AMAZON SQS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables decoupling and scaling microservices, distributed systems, and serverless applications.
Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables decoupling and scaling of microservices, distributed systems, and serverless applications.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98,6f6e767a35b75e1c7658fbbddd94a842</data>
    </node>
    <node id="AMAZON SNS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Simple Notification Service (SNS) is a fully managed messaging service for both application-to-application and application-to-person communication.
Amazon SNS is a messaging service that allows the publishing of messages to topics for distribution to subscribers.
Amazon Simple Notification Service (SNS) is a fully managed messaging service for both application-to-application and application-to-person communication.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98,6f6e767a35b75e1c7658fbbddd94a842,898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="AMAZON SES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon SES is a cloud-based email sending service designed to help businesses send marketing, notification, and transactional emails.</data>
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="LAMBDA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the compute resources for you.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources for you.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,1950a5e06a03170ed4dc66a00668ea47,1bafd8792486c2e570d8aa0cb40189b9,856c945b28eacce9c83378e56652fee3,898474c2db3e19ba76a4ee18b9b1f4cb,d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="CUSTOM NOTIFICATIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Custom Notifications is a CDK construct that integrates AWS services to publish messages and send emails.
Custom Notifications is a resource within AWS Amplify that allows developers to manage notifications for their applications.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef,898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="PUBLISHER">
      <data key="d0">PERSON</data>
      <data key="d1">The Publisher is a Lambda function that publishes messages to the Amazon SNS topic.</data>
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="EMAILER">
      <data key="d0">PERSON</data>
      <data key="d1">The Emailer is a Lambda function that processes messages from the SNS topic and sends emails via Amazon SES.</data>
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="SOURCE ADDRESS">
      <data key="d0">PERSON</data>
      <data key="d1">The Source Address is the email address used for sending emails through Amazon SES, specified in the Custom Notifications construct.</data>
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="TOPIC ARN">
      <data key="d0">PERSON</data>
      <data key="d1">The Topic ARN is the Amazon Resource Name that uniquely identifies the SNS topic, used by the Publisher Lambda function to publish messages.</data>
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="SNS TOPIC">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </node>
    <node id="DYNAMODB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DynamoDB is a fully managed NoSQL database service provided by AWS, which is often used in conjunction with AWS Amplify for data storage.

DynamoDB is a fully managed NoSQL database service provided by AWS that supports key-value and document data structures.
DynamoDB is a fully managed NoSQL database service provided by AWS that offers fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services that offers fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by AWS, designed for high availability and scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services (AWS) that supports key-value and document data structures.
Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.
Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services, designed for high availability and scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services, designed for high availability and scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services that offers fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services, which supports key-value and document data structures.
DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by AWS that supports key-value and document data structures.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services, used for storing and retrieving data in applications.
Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.
DynamoDB is a fully managed NoSQL database service provided by AWS, which can be connected to Amplify Data for data storage and management.
DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services, mentioned in the context of data storage and migration.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,0540b18a392d2ccc8d9b4915eed9acfe,195fa68e405624fc5cbe7eeb5767c2ef,1bafd8792486c2e570d8aa0cb40189b9,3e8319ba39b8ba21d17ce5e988924ff2,4189c0e92cbda0cbd95165143d5ba488,4b1835219f538ab9f3ba5712dcb54610,57f05fa9d96242d8c2cb2869e13f9e1c,7f29cbfbdd4aea2867cf6f65ba567185,856c945b28eacce9c83378e56652fee3,a3d633e1c801de300a4724738b7290c3,ad25e8455b3a65969a17cb69a66a58ac,b3ba0d2a5daf3ce8f284099dd931ef14,d8db439b4e3e9430a8842e7c634c7e85,df66d576a32835aae9d3957800932b5f,e8bb64825eb8da944e09e46a90be853c,f97e5b8c2fc931d61f9fd11ee9fbca57,fc6e2a28447409d2b0f12296647c9470,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="BACKUP VAULT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Backup Vault is a resource in AWS Backup that stores backup data securely and allows for recovery of AWS resources.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="BACKUP PLAN">
      <data key="d0">EVENT</data>
      <data key="d1">Backup Plan is a scheduled event in AWS Backup that defines how and when backups are created for AWS resources.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="BACKUP PLAN RULE">
      <data key="d0">EVENT</data>
      <data key="d1">Backup Plan Rule is a specific rule within a Backup Plan that dictates the retention and scheduling of backups.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="POINT-IN-TIME RECOVERY">
      <data key="d0">EVENT</data>
      <data key="d1">Point-in-Time Recovery is a feature in DynamoDB that allows users to restore their tables to any point in time within the last 35 days.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="AWS BACKUP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Backup is a centralized backup service that automates and centralizes backups across AWS services, including DynamoDB.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="CLOUD DEVELOPMENT KIT (CDK)">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Cloud Development Kit (CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.</data>
      <data key="d2">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </node>
    <node id="PUBSUB">
      <data key="d0">EVENT</data>
      <data key="d1">PubSub is a category in AWS Amplify that provides connectivity with cloud-based message-oriented middleware for real-time interactive experiences.
PubSub is a service that allows applications to subscribe to and publish messages to topics, facilitating real-time communication between components.
PubSub is a messaging pattern that allows for the exchange of messages between different parts of an application, enabling real-time communication.
PubSub is a messaging pattern that allows applications to communicate asynchronously, often used for real-time updates and interactions.
PubSub is a messaging pattern that allows for real-time communication between different parts of an application, often used in serverless architectures.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6,5c179d6063f8fca2e1ae95779d7f3ffc,89e3b86d249ae10742dcef7c4e2d582d,d8db439b4e3e9430a8842e7c634c7e85,f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="AWS IOT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS IoT is a cloud platform that enables connected devices to interact with cloud applications and other devices, supporting PubSub functionality.</data>
      <data key="d2">d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="IAM POLICIES">
      <data key="d0">EVENT</data>
      <data key="d1">IAM policies are used in AWS to define permissions for users and services, necessary for allowing access to AWS IoT services.
IAM Policies are used in AWS to define permissions for users and services, ensuring secure access to resources like Storage and Data.</data>
      <data key="d2">502c34bc5ff7e00594c0a0d9df58834d,d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="AWS CONSOLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The AWS Console is a web-based interface for managing AWS services, including AWS IoT and Amplify, allowing users to configure and monitor their resources.
The AWS Console is a web-based interface for managing AWS services and resources.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7,d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="TOPICS">
      <data key="d0">EVENT</data>
      <data key="d1">Topics in the context of PubSub refer to the channels through which messages are published and subscribed, enabling real-time communication between applications.</data>
      <data key="d2">d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="CLOUD SERVICES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cloud services refer to a range of services provided over the internet, including computing power, storage, and databases, which are essential for modern application development.</data>
      <data key="d2">d8db439b4e3e9430a8842e7c634c7e85</data>
    </node>
    <node id="MQTT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MQTT is a lightweight messaging protocol used for small sensors and mobile devices optimized for high-latency or unreliable networks.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6</data>
    </node>
    <node id="CONNECTION STATE CHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">Connection State Change is an event that indicates a change in the connection status of the PubSub service, which can affect message delivery.
Connection State Change is an event that indicates changes in the subscription connection status in AWS Amplify.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6,61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </node>
    <node id="HUB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hub is a utility in AWS Amplify that listens for events and can be used to monitor the connection state of the PubSub service.
Hub is a local eventing system in AWS Amplify that allows monitoring of connection states and subscription events.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6,61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </node>
    <node id="TOPIC">
      <data key="d0">EVENT</data>
      <data key="d1">A topic is a channel in the PubSub service to which messages are published and from which subscribers receive messages.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6</data>
    </node>
    <node id="SUBSCRIBE">
      <data key="d0">EVENT</data>
      <data key="d1">Subscribe is an action that allows a user or application to start receiving messages from a specified topic in the PubSub service.

Subscribe is a label used in CheckboxField components to indicate an option for users to opt-in to newsletters or updates.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,52545707508fac3ea71aa1d62f6d0cb6,a407fa7a377db0b8cb08ded22609f5e2</data>
    </node>
    <node id="UNSUBSCRIBE">
      <data key="d0">EVENT</data>
      <data key="d1">Unsubscribe is an action that stops the reception of messages from a specified topic in the PubSub service.</data>
      <data key="d2">52545707508fac3ea71aa1d62f6d0cb6</data>
    </node>
    <node id="AMAZON LEX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Lex is a service for building conversational interfaces into any application using voice and text.</data>
      <data key="d2">89e3b86d249ae10742dcef7c4e2d582d</data>
    </node>
    <node id="INTERACTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Interactions is a feature of AWS Amplify that allows developers to integrate AI-powered chatbots into their applications.
Interactions is a feature of AWS Amplify that enables the integration of AI-powered chatbots into web and mobile applications.</data>
      <data key="d2">89e3b86d249ae10742dcef7c4e2d582d,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="AWSIOTPROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWSIoTProvider is a service that allows applications to connect to AWS IoT services for real-time data processing and communication.</data>
      <data key="d2">89e3b86d249ae10742dcef7c4e2d582d</data>
    </node>
    <node id="USER INPUT">
      <data key="d0">EVENT</data>
      <data key="d1">User input refers to the data or commands provided by a user to an application, often used to trigger responses or actions.
User Input refers to any data or commands entered by a user into a software application, often triggering specific actions or responses.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98,89e3b86d249ae10742dcef7c4e2d582d</data>
    </node>
    <node id="CHATBOT">
      <data key="d0">EVENT</data>
      <data key="d1">A chatbot is a software application designed to simulate conversation with human users, especially over the Internet.
A chatbot is a software application used to conduct an online chat conversation via text or text-to-speech, often powered by AI.</data>
      <data key="d2">89e3b86d249ae10742dcef7c4e2d582d,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="PREDICTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Predictions is a category within AWS Amplify that allows developers to implement AI/ML features such as sentiment analysis and object detection in their applications.
Predictions is a service provided by AWS Amplify that enables machine learning capabilities such as entity detection, text translation, and image recognition.
Predictions is a feature of AWS Amplify that provides AI/ML capabilities such as text translation, transcription, and text-to-speech.
Predictions is a feature of AWS Amplify that provides AI and ML capabilities for applications, including text-to-speech, transcription, and translation.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,70363c8433b020965dc7ec11c063e460,aed1999377a9138038f56696b28a18c4,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="IAM ROLES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">IAM roles are used in AWS to define permissions for users and services, ensuring secure access to resources.
IAM roles are used in AWS to define permissions for users and services to access resources securely.
IAM Roles are a feature of AWS Identity and Access Management that allow you to define a set of permissions for making AWS service requests.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6,aed1999377a9138038f56696b28a18c4,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="AMPLIFY CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify configuration is a setup process that initializes AWS Amplify in an application, allowing it to interact with AWS services.
Amplify configuration is the process of setting up the Amplify library with the necessary parameters to connect to AWS services.
Amplify Configuration refers to the setup process in which the AWS Amplify framework is configured to connect to various AWS services, enabling functionalities like authentication, storage, and data management.
Amplify Configuration is a setup file that contains the necessary configuration settings for AWS Amplify services in an application.</data>
      <data key="d2">95c47d77c6b1c1b930bbbff2c9d1facf,aed1999377a9138038f56696b28a18c4,b0e5a5345f8f86afeb8b60d97f953436,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="AI/ML PREDICTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">AI/ML Predictions refers to the use of artificial intelligence and machine learning to analyze data and make predictions based on that data.
AI/ML Predictions involve using machine learning algorithms to analyze data and make predictions, often integrated into applications for personalized experiences.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc,fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="SENTIMENT ANALYSIS">
      <data key="d0">EVENT</data>
      <data key="d1">Sentiment analysis is a process of determining the emotional tone behind a series of words, used to understand the attitudes, opinions, and emotions expressed in text.</data>
      <data key="d2">fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="OBJECT DETECTION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">fe0d633beeec623b33fe67087fc20b5c</data>
    </node>
    <node id="COGNITO IDENTITY POOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cognito Identity Pool is a service that provides authentication and authorization for users in AWS applications.
Cognito Identity Pool is a service that provides authentication and authorization for users in AWS applications, integrating with AWS Amplify for user management.
</data>
      <data key="d2">502c34bc5ff7e00594c0a0d9df58834d,70363c8433b020965dc7ec11c063e460,cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="PATH TO PHOTO">
      <data key="d0">EVENT</data>
      <data key="d1">Path to Photo is a reference to the location of an image file in storage, used as input for the Predictions service.</data>
      <data key="d2">70363c8433b020965dc7ec11c063e460</data>
    </node>
    <node id="LANDMARKS">
      <data key="d0">EVENT</data>
      <data key="d1">Landmarks are specific points of interest detected in an image, such as facial features, used in conjunction with Predictions for analysis.</data>
      <data key="d2">70363c8433b020965dc7ec11c063e460</data>
    </node>
    <node id="CELEBRITY DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Celebrity Detection is a feature of the Predictions service that identifies well-known individuals in images.</data>
      <data key="d2">70363c8433b020965dc7ec11c063e460</data>
    </node>
    <node id="IMAGEARRAYBUFFER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">70363c8433b020965dc7ec11c063e460</data>
    </node>
    <node id="TEXT TO SPEECH">
      <data key="d0">EVENT</data>
      <data key="d1">Text to speech is a feature that converts text input into spoken audio output.
Text to Speech is a process that converts written text into spoken words using speech synthesis technology.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </node>
    <node id="TRANSCRIBE AUDIO TO TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Transcribe audio to text is a feature that converts audio recordings into written text.
Transcribe Audio to Text is a process that converts spoken language into written text, often used for creating transcripts of audio recordings.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </node>
    <node id="TRANSLATE LANGUAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Translate language is a feature that translates text from one language to another.
Translate Language is a process that converts text from one language to another, facilitating communication across language barriers.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </node>
    <node id="AMPLIFY LIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify library is a set of JavaScript libraries that enable developers to integrate AWS services into their applications easily.
The Amplify library is a collection of tools and services that help developers build applications with AWS services.

The Amplify Library is a collection of tools and libraries that help developers connect their applications to AWS services, including APIs and authentication.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2,8c8075430684b38bdd1c6ce9fc9f7205,aed1999377a9138038f56696b28a18c4,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </node>
    <node id="OUTPUTS">
      <data key="d0">EVENT</data>
      <data key="d1">Outputs refer to the results generated by the AWS Amplify services, such as predictions and translations.
Outputs refer to the configuration settings that are generated and can be used to configure other services in AWS Amplify.
</data>
      <data key="d2">53995557ff9014f83cedfd38268f5f7a,aed1999377a9138038f56696b28a18c4,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="STACK">
      <data key="d0" />
      <data key="d1">
A Stack is a collection of AWS resources that you can manage as a single unit in AWS CloudFormation.
A Stack in AWS refers to a collection of AWS resources that you can manage as a single unit, often used in the context of AWS CloudFormation.
A Stack in AWS CDK represents a collection of AWS resources that you can manage as a single unit.
A Stack in AWS CDK represents a collection of AWS resources that are created, updated, or deleted together as a single unit.</data>
      <data key="d2">3e8319ba39b8ba21d17ce5e988924ff2,57f05fa9d96242d8c2cb2869e13f9e1c,6a2f21642257c922b2659f7bb932521a,ad25e8455b3a65969a17cb69a66a58ac,aed1999377a9138038f56696b28a18c4</data>
    </node>
    <node id="AMAZON POLLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Polly is a service that turns text into lifelike speech, allowing developers to create applications that can speak.
Amazon Polly is a text-to-speech (TTS) service offered by AWS that uses advanced deep learning technologies to convert written text into lifelike speech.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="IDENTIFY TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Identify Text is a process that recognizes and extracts text from images and documents using optical character recognition technology.
Identify Text is a custom query function that utilizes the Rekognition Service to detect and return text from images uploaded to an S3 bucket.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="IDENTIFY ENTITIES">
      <data key="d0">EVENT</data>
      <data key="d1">Identify Entities is a process that detects and classifies entities such as people, places, and organizations from text or images.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429</data>
    </node>
    <node id="LABEL OBJECTS">
      <data key="d0">EVENT</data>
      <data key="d1">Label Objects is a process that identifies and categorizes objects within images, often used in image recognition applications.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429</data>
    </node>
    <node id="INTERPRET SENTIMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Interpret Sentiment is a process that analyzes text to determine the emotional tone behind it, categorizing it as positive, negative, or neutral.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429</data>
    </node>
    <node id="API GATEWAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon API Gateway is a service that enables developers to create, publish, maintain, monitor, and secure APIs at any scale.
API Gateway is a service provided by AWS that allows developers to create, publish, maintain, monitor, and secure APIs at any scale.
Amazon API Gateway is a service that allows developers to create, publish, maintain, monitor, and secure APIs at any scale.
Amazon API Gateway is a service that allows developers to create, publish, maintain, monitor, and secure APIs at any scale.
Amazon API Gateway is a service for creating, publishing, maintaining, monitoring, and securing APIs at any scale.
</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,3871391b5e9d42efc3d1226580d587a0,459eadcad7d141c2129458137d7d41d9,65ef73f546115ac23146d87cce61b9c8,f0814c1eeb2105aa085a8917000972a0,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="AMPLIFY LIBRARIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Libraries are a set of tools provided by AWS Amplify to facilitate the integration of cloud services into applications.
</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,4ccaaec02cfc4169e423aaf4ce28263f</data>
    </node>
    <node id="AUDIO BUFFER">
      <data key="d0" />
      <data key="d1">
Audio Buffer is a temporary storage area for audio data that is used for playback in the application.</data>
      <data key="d2">016d827d48ddcc5775cc4ae54a479429,6980c90f0a7a58894d9518accd2ab5dd</data>
    </node>
    <node id="API ENDPOINT">
      <data key="d0">EVENT</data>
      <data key="d1">API endpoint is a specific URL where an API can be accessed by a client application to perform operations such as retrieving or sending data.
An API endpoint is a specific URL where an API can be accessed by clients to perform operations like creating, updating, or deleting resources.
An API endpoint is a specific URL where an API can be accessed by clients, allowing for communication between different software applications.
An API endpoint is a specific URL where an application can access resources or services, such as the Amazon Polly service for text-to-speech.</data>
      <data key="d2">1b140f417545903391f0e28ef4baf7c2,3c34af088a28c5276b514cfdf986b3d6,9bfb7d7a715bed7eec92b32f7a175bf5,f0814c1eeb2105aa085a8917000972a0</data>
    </node>
    <node id="ITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">Items refer to the resources that can be managed and manipulated through the API, such as creating, retrieving, updating, or deleting items in a database.
Items refer to the resources being managed and manipulated through the REST API, such as creating, fetching, updating, or deleting data.
Items are the elements contained within the Cart model, representing the products or goods associated with a customer's cart.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6,3871391b5e9d42efc3d1226580d587a0,f0814c1eeb2105aa085a8917000972a0</data>
    </node>
    <node id="REST API">
      <data key="d0" />
      <data key="d1">
REST API is an architectural style for designing networked applications, allowing communication between client and server.
A REST API is an architectural style for designing networked applications, allowing communication between client and server using HTTP requests.
A REST API is an application programming interface that adheres to the principles of Representational State Transfer, allowing interaction with web services.
A REST API is an application programming interface that adheres to the REST architectural style, allowing interaction with web services.
REST API is an architectural style for designing networked applications, allowing communication between client and server using HTTP requests.</data>
      <data key="d2">1b140f417545903391f0e28ef4baf7c2,381ec0f23fc914011f1ec53f51485442,3871391b5e9d42efc3d1226580d587a0,459eadcad7d141c2129458137d7d41d9,f0814c1eeb2105aa085a8917000972a0,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="PUT REQUEST">
      <data key="d0">EVENT</data>
      <data key="d1">A PUT request is an HTTP method used to send data to a server to create or update a resource.</data>
      <data key="d2">1b140f417545903391f0e28ef4baf7c2</data>
    </node>
    <node id="DELETE REQUEST">
      <data key="d0">EVENT</data>
      <data key="d1">A DELETE request is an HTTP method used to request the removal of a resource from a server.</data>
      <data key="d2">1b140f417545903391f0e28ef4baf7c2</data>
    </node>
    <node id="POST CALL">
      <data key="d0">EVENT</data>
      <data key="d1">The POST call is an operation that sends data to the REST API to create a new item, as shown in the example with the message 'Mow the lawn'.</data>
      <data key="d2">3871391b5e9d42efc3d1226580d587a0</data>
    </node>
    <node id="GET CALL">
      <data key="d0">EVENT</data>
      <data key="d1">The GET call is an operation that retrieves data from the REST API, allowing access to the items stored in the API.</data>
      <data key="d2">3871391b5e9d42efc3d1226580d587a0</data>
    </node>
    <node id="API ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">An API Error is an instance that occurs when a REST API call fails, providing details about the error response from the server.</data>
      <data key="d2">3871391b5e9d42efc3d1226580d587a0</data>
    </node>
    <node id="DELETE CALL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3871391b5e9d42efc3d1226580d587a0</data>
    </node>
    <node id="MYAPI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MyApi is a function defined to handle API requests in the AWS Amplify framework.</data>
      <data key="d2">6a2f21642257c922b2659f7bb932521a</data>
    </node>
    <node id="AWS LAMBDA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources for you.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources for you.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless computing service that runs code in response to events and automatically manages the computing resources required by that code.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.</data>
      <data key="d2">1ef9b6a9263edfd718636bcbc29f4a72,23f821c071cb4c4cf183f5aac596db35,290d8b37bd253372b8a78b79be1eca98,3538ba83bb1b1b6801c4b0e5bc962812,60aaa13e30275fbe0d56cac47de824c2,6a2f21642257c922b2659f7bb932521a,8aece6e31757222174fd611077ca4f6d,9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="APIGATEWAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">API Gateway is a service that enables developers to create, publish, maintain, monitor, and secure APIs at any scale.</data>
      <data key="d2">6a2f21642257c922b2659f7bb932521a</data>
    </node>
    <node id="IAM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">IAM (Identity and Access Management) is a web service that helps you securely control access to AWS services and resources for your users.
AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS services and resources for your users.
IAM (Identity and Access Management) is a service that helps you securely control access to AWS services and resources for your users.
AWS Identity and Access Management (IAM) enables you to manage access to AWS services and resources securely.

IAM (Identity and Access Management) is a web service that helps you securely control access to AWS services and resources for your users.
AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS services and resources for your users.
IAM (Identity and Access Management) is a web service that helps you securely control access to AWS services and resources for your users.
AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS services and resources for your users.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,0cd205bf5fe0ebe4aec3529e4d44191c,2e537c711e153c043f8d08b926e4ba86,344b01eb184403f029e31d4621f1ea1f,459eadcad7d141c2129458137d7d41d9,57f05fa9d96242d8c2cb2869e13f9e1c,6a2f21642257c922b2659f7bb932521a,9435f5063dc16afb92c8c68706b77d2b,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="HTTP API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">HTTP API is a managed service that allows developers to create and manage APIs for their applications.</data>
      <data key="d2">6a2f21642257c922b2659f7bb932521a</data>
    </node>
    <node id="CORS SETTINGS">
      <data key="d0">EVENT</data>
      <data key="d1">CORS settings are configurations that determine how resources can be shared across different origins in web applications.</data>
      <data key="d2">6a2f21642257c922b2659f7bb932521a</data>
    </node>
    <node id="HANDLER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A handler is a function that processes incoming requests and returns responses in serverless applications.
The handler is the entry point function in an AWS Lambda function that processes incoming events and executes the defined logic.</data>
      <data key="d2">6a2f21642257c922b2659f7bb932521a,8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="LAMBDA FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the compute resources for you.
A Lambda Function is a serverless compute service that runs code in response to events, such as invoking the Generate Haiku Function.
AWS Lambda is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources.
LAMBDA FUNCTION is a serverless compute service that runs code in response to events, often used in conjunction with Amazon Cognito for user authentication flows.</data>
      <data key="d2">405cec78205a77ac97466698654060ca,459eadcad7d141c2129458137d7d41d9,710de2c1f4693d893bae10139553994d,d7f9d6d81c47c8666bdbe05c89629447</data>
    </node>
    <node id="COGNITO USER POOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cognito User Pools is a user directory service that helps manage sign-up and sign-in services for web and mobile apps.</data>
      <data key="d2">459eadcad7d141c2129458137d7d41d9</data>
    </node>
    <node id="COGNITO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Cognito is an AWS service that provides authentication, authorization, and user management for web and mobile applications.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Cognito is a service provided by AWS that handles user authentication and access control for applications.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Cognito is an Amazon Web Services (AWS) service that provides user authentication, authorization, and user management for web and mobile applications.
Cognito is a service provided by AWS that handles user authentication and access control for applications.
Amazon Cognito is a service that provides authentication, authorization, and user management for web and mobile apps.
Cognito is an AWS service that provides authentication, authorization, and user management for web and mobile apps.
Cognito is an AWS service that provides authentication, authorization, and user management for web and mobile apps.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,1a7480fec8557ce9c8b1f2d342f6ec9b,2e537c711e153c043f8d08b926e4ba86,328c2850836c2ef976fb8009ef3c5dd9,3874fd589ed63023667cf58323875d95,4ccaaec02cfc4169e423aaf4ce28263f,758d7b22f173e12c1857a365834df542,8c8075430684b38bdd1c6ce9fc9f7205,995b90fa5ccd54a921a730cc91487965,f5bfba3eb957f9e621d0b55561a5f466,f98c0fd002ba589c06bf3b605fe3f189,fa4079c109c67561ad52ce2f338d0fa0,fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="AUTHORIZATION TYPE">
      <data key="d0">EVENT</data>
      <data key="d1">Authorization Type defines the method of authentication used for API requests, such as IAM or Cognito.</data>
      <data key="d2">f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">A Policy in AWS defines permissions for actions on resources, allowing or denying access based on specified conditions.
A policy in AWS IAM defines permissions for actions on resources, allowing or denying access to users and services.</data>
      <data key="d2">9435f5063dc16afb92c8c68706b77d2b,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="POLICY STATEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A Policy Statement is a component of an IAM policy that specifies the permissions for a particular action on a resource.
A policy statement is a component of an IAM policy that defines specific permissions for actions on resources.
A Policy Statement is a set of permissions that define what actions are allowed or denied on specific resources in AWS.
Policy Statement defines the permissions and actions allowed for AWS resources in the context of the application.</data>
      <data key="d2">405cec78205a77ac97466698654060ca,9435f5063dc16afb92c8c68706b77d2b,cb9405c9d1ffc30f045effa85b1e9e09,f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="API REST POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">API Rest Policy is a specific IAM policy created to allow access to the API resources defined in the application.</data>
      <data key="d2">f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="AUTHENTICATED USER IAM ROLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Authenticated User IAM Role is a role assigned to users who have signed in, allowing them to access specific AWS resources.</data>
      <data key="d2">f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="UNAUTHENTICATED USER IAM ROLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Unauthenticated User IAM Role is a role assigned to users who have not signed in, providing limited access to AWS resources.</data>
      <data key="d2">f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="LAMBDA INTEGRATION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f5bfba3eb957f9e621d0b55561a5f466</data>
    </node>
    <node id="CUSTOM AUTHORIZATION TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">A custom authorization token is a security measure used to authenticate requests made to APIs.</data>
      <data key="d2">381ec0f23fc914011f1ec53f51485442</data>
    </node>
    <node id="CAMPAIGN">
      <data key="d0">EVENT</data>
      <data key="d1">A campaign in the context of Amazon Pinpoint refers to a marketing initiative designed to send messages to users through various channels.</data>
      <data key="d2">381ec0f23fc914011f1ec53f51485442</data>
    </node>
    <node id="SEGMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A segment is a group of users defined by specific criteria for targeted messaging in campaigns.</data>
      <data key="d2">381ec0f23fc914011f1ec53f51485442</data>
    </node>
    <node id="IN-APP MESSAGING">
      <data key="d0">EVENT</data>
      <data key="d1">In-app messaging is a feature that allows applications to send messages to users while they are using the app.
In-App Messaging is a feature of Amplify that allows developers to send messages to users within their applications based on specific events or criteria.
In-App Messaging is a feature that allows applications to send messages to users within the app, triggered by specific events or user actions.
In-App Messaging is a feature of Amazon Pinpoint that allows developers to send targeted messages to users within their applications.
In-App Messaging is a feature that allows applications to send messages to users while they are using the app, often powered by services like Amazon Pinpoint.
In-App Messaging is a feature that allows applications to display contextually relevant messages to users based on their interactions within the app.
In-App Messaging is a feature that allows applications to send messages to users while they are using the app, enhancing user engagement.

In-App Messaging is a feature that allows applications to display messages to users within the app interface.</data>
      <data key="d2">1d0207e2e11503628d08eefd24849d93,381ec0f23fc914011f1ec53f51485442,3a9b26a380534d4aa1f17290c51aea24,56488edd7cf127c0da3442fbce7f97db,5c179d6063f8fca2e1ae95779d7f3ffc,62ae6b676bb61efbc2ce17791b2ac999,65ef73f546115ac23146d87cce61b9c8,877a7ccbdb63a00477117db13eba1534,e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="ANALYTICS TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">An analytics trigger is an event that initiates the sending of in-app messages based on user interactions or behaviors.</data>
      <data key="d2">381ec0f23fc914011f1ec53f51485442</data>
    </node>
    <node id="CONFLICT HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">A conflict handler is a function that determines how to resolve conflicts when multiple in-app messages meet certain criteria.</data>
      <data key="d2">65ef73f546115ac23146d87cce61b9c8</data>
    </node>
    <node id="MESSAGE RECEIVED">
      <data key="d0">EVENT</data>
      <data key="d1">Message received is an event that triggers when an in-app message is received by the application.
</data>
      <data key="d2">58b4ec0bb9e980cc17fe0b3178671c95,65ef73f546115ac23146d87cce61b9c8</data>
    </node>
    <node id="MESSAGE DISPLAYED">
      <data key="d0">EVENT</data>
      <data key="d1">Message displayed is an event that triggers when an in-app message is shown to the user.
The event that occurs when a message is displayed to the user in the application.</data>
      <data key="d2">58b4ec0bb9e980cc17fe0b3178671c95,65ef73f546115ac23146d87cce61b9c8</data>
    </node>
    <node id="MESSAGE DISMISSED">
      <data key="d0">EVENT</data>
      <data key="d1">Message dismissed is an event that triggers when a user dismisses an in-app message.
The event that occurs when a user dismisses a message in the application.</data>
      <data key="d2">58b4ec0bb9e980cc17fe0b3178671c95,65ef73f546115ac23146d87cce61b9c8</data>
    </node>
    <node id="MESSAGE ACTION TAKEN">
      <data key="d0">EVENT</data>
      <data key="d1">Message action taken is an event that triggers when a user interacts with an in-app message, such as clicking a button.
The event that occurs when a user takes action on a message, such as clicking a button or link within the message.</data>
      <data key="d2">58b4ec0bb9e980cc17fe0b3178671c95,65ef73f546115ac23146d87cce61b9c8</data>
    </node>
    <node id="MESSAGE INTERACTION">
      <data key="d0">EVENT</data>
      <data key="d1">Message interaction events include actions such as message received, displayed, dismissed, and action taken by the user.</data>
      <data key="d2">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </node>
    <node id="MYCAMPAIGN">
      <data key="d0">EVENT</data>
      <data key="d1">MyCampaign is a specific messaging initiative created within Amazon Pinpoint to engage a targeted audience segment with tailored messages.</data>
      <data key="d2">62ae6b676bb61efbc2ce17791b2ac999</data>
    </node>
    <node id="MYSEGMENT">
      <data key="d0">EVENT</data>
      <data key="d1">MySegment is a defined group of users within Amazon Pinpoint that the campaign targets for in-app messaging.</data>
      <data key="d2">62ae6b676bb61efbc2ce17791b2ac999</data>
    </node>
    <node id="SYNC MESSAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Sync messages is a process that updates in-app messages on users' devices to ensure they are current and relevant.
Sync Messages is a function that synchronizes remote in-app messages with the user's application state.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24,62ae6b676bb61efbc2ce17791b2ac999</data>
    </node>
    <node id="DISPATCH EVENT">
      <data key="d0">EVENT</data>
      <data key="d1">Dispatch_event is a function used to programmatically trigger an in-app message display based on specific criteria.</data>
      <data key="d2">62ae6b676bb61efbc2ce17791b2ac999</data>
    </node>
    <node id="PINPOINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Pinpoint is a service that enables targeted messaging and analytics for applications, allowing developers to engage users through various channels including in-app messaging.
Pinpoint is an AWS service that allows developers to engage with their users through targeted push notifications and in-app messaging campaigns.</data>
      <data key="d2">56488edd7cf127c0da3442fbce7f97db,df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="REACT NATIVE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Native is a framework for building native applications using React, enabling developers to create mobile apps for iOS and Android using JavaScript.
React Native is a framework for building native applications using React, allowing developers to use the same codebase for both iOS and Android.</data>
      <data key="d2">56488edd7cf127c0da3442fbce7f97db,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="IN-APP MESSAGING UI">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">56488edd7cf127c0da3442fbce7f97db</data>
    </node>
    <node id="TRACKER">
      <data key="d0">EVENT</data>
      <data key="d1">A Tracker is a resource provisioned in Amazon Location Service that allows for tracking the position of devices.</data>
      <data key="d2">df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="DEVICE POSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Device Position refers to the location data of a device that can be updated and retrieved using the Amazon Location Service APIs.</data>
      <data key="d2">df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="AWS SDK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The AWS SDK is a collection of tools and libraries that allow developers to interact with AWS services programmatically.
The AWS SDK is a collection of tools that allow developers to interact with AWS services programmatically.
AWS SDK is a collection of tools and libraries that allow developers to interact with AWS services programmatically.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,405cec78205a77ac97466698654060ca,df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="BATCH UPDATE DEVICE POSITION COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">Batch Update Device Position Command is an API command used to update the position of multiple devices in the Amazon Location Service.</data>
      <data key="d2">df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="GET DEVICE POSITION COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">Get Device Position Command is an API command used to retrieve the current position of a specific device in the Amazon Location Service.</data>
      <data key="d2">df84fd0c2737b715a0714932e9cfa24e</data>
    </node>
    <node id="GOOGLE MAPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Maps is a web mapping service developed by Google that provides users with various mapping functionalities, including satellite imagery, aerial photography, and real-time traffic conditions.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8</data>
    </node>
    <node id="AMPLIFY GEO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Geo is a service provided by AWS Amplify that offers APIs for location-based functionality, utilizing Amazon Location Service and designed to work with open-source mapping libraries like MapLibre.
Amplify Geo is a part of AWS Amplify that provides tools for integrating location services into applications.
Amplify Geo is a service within AWS Amplify that provides geolocation capabilities for applications.

Amplify Geo is a service provided by AWS Amplify that allows developers to integrate location-based features into their applications.
Amplify Geo is a module within AWS Amplify that provides capabilities for map data, location search, and geofencing.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,53995557ff9014f83cedfd38268f5f7a,60d9151920f9b881f34c958c0c5d770b,a651cbb3e4a31fb9c592893b86f2d855,cf54383d0ee2ab32d2ea7410ca6c6418,de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="MAPLIBRE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.
MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.
MapLibre is an open-source mapping library that provides geocoding and mapping functionalities for applications.
MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.
MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.
MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.
MapLibre is an open-source mapping library that allows developers to create interactive maps for web applications.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8,1a7480fec8557ce9c8b1f2d342f6ec9b,25014b83cc85c29d210c21fb3ab4b816,60d9151920f9b881f34c958c0c5d770b,a651cbb3e4a31fb9c592893b86f2d855,cf54383d0ee2ab32d2ea7410ca6c6418,de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="GOOGLE CLOUD CONSOLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Cloud Console is a web-based interface for managing Google Cloud services, including setting up APIs and creating API keys for Google Maps.</data>
      <data key="d2">08a1975a88b44b2b7444141367047ba8</data>
    </node>
    <node id="GOLDEN GATE BRIDGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Golden Gate Bridge is a famous suspension bridge located in San Francisco, California, known for its striking color and architectural significance.
The Golden Gate Bridge is a suspension bridge spanning the Golden Gate Strait, known for its iconic design and significance in San Francisco.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816,6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="GEOCODER">
      <data key="d0">EVENT</data>
      <data key="d1">A geocoder is a service that converts addresses into geographic coordinates, which can be used to place markers on a map.
Geocoder is a service that translates addresses into geographic coordinates and vice versa, used in mapping applications.
The Geocoder is an event that refers to the process of converting addresses into geographic coordinates, which is utilized in various search functionalities.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816,7f72914ddb8c7f39dd16b79005d4c30a,a651cbb3e4a31fb9c592893b86f2d855</data>
    </node>
    <node id="MARKER">
      <data key="d0">EVENT</data>
      <data key="d1">A marker is a visual element on a map that indicates a specific location, often used to highlight points of interest.
Marker is a component used in mapping applications to indicate a specific location on the map.
</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816,480e2412619ad09a750dc16a3f8ceab3,b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="POPUP">
      <data key="d0">EVENT</data>
      <data key="d1">A popup is an interactive element that appears when a user clicks on a marker, providing additional information about the location.
Popup is a component that displays information about a location when a marker is clicked in a mapping application.
Popup is a UI element that displays additional information about a marker when it is clicked, enhancing user interaction with the map.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816,480e2412619ad09a750dc16a3f8ceab3,b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="SEARCH COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The search component allows users to input queries to find locations on the map, enhancing user interaction and navigation.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816</data>
    </node>
    <node id="GEOCODER CONTROL">
      <data key="d0">EVENT</data>
      <data key="d1">The geocoder control is a user interface element that enables users to search for locations and addresses on the map.</data>
      <data key="d2">25014b83cc85c29d210c21fb3ab4b816</data>
    </node>
    <node id="GEOCODER COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The geocoder component is a feature of MapLibre that allows users to search for locations based on text input.</data>
      <data key="d2">de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="GEOFENCE COLLECTION">
      <data key="d0">EVENT</data>
      <data key="d1">A geofence collection is a resource in Amazon Location Service that allows users to manage geofences for location-based applications.

A Geofence Collection is a storage for one or multiple Geofences, allowing for organized management of geofencing data.</data>
      <data key="d2">1a7480fec8557ce9c8b1f2d342f6ec9b,bf926fe785180e6ba0afb391db266523,de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="AUTHENTICATED ROLE">
      <data key="d0">EVENT</data>
      <data key="d1">The authenticated role in Amazon Cognito grants signed-in users access to resources in applications.</data>
      <data key="d2">de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="UNAUTHENTICATED ROLE">
      <data key="d0">EVENT</data>
      <data key="d1">The unauthenticated role in Amazon Cognito allows unauthenticated users to access certain resources in applications.</data>
      <data key="d2">de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="ARN">
      <data key="d0">EVENT</data>
      <data key="d1">An Amazon Resource Name (ARN) is a unique identifier for AWS resources, used to specify resources in policies and API calls.
ARN (Amazon Resource Name) is a unique identifier for AWS resources, used in IAM policies to specify resources.</data>
      <data key="d2">9435f5063dc16afb92c8c68706b77d2b,de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="GEOSPATIAL ACTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Geospatial actions are operations that can be performed on geospatial data, such as getting map tiles or searching for places.</data>
      <data key="d2">de818dec85e98671fc18154ccd8eaf7d</data>
    </node>
    <node id="GEOFENCE">
      <data key="d0">EVENT</data>
      <data key="d1">A geofence is a virtual perimeter for a real-world geographic area, which can trigger actions when a device enters or exits the area.
A geofence is a virtual perimeter for a real-world geographic area, used in location-based services to trigger actions when a device enters or exits the area.
A geofence is a virtual perimeter for a real-world geographic area, used in location-based services to trigger actions when a device enters or exits the area.</data>
      <data key="d2">1a7480fec8557ce9c8b1f2d342f6ec9b,53995557ff9014f83cedfd38268f5f7a,5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GEOSPATIAL DATA">
      <data key="d0">EVENT</data>
      <data key="d1">Geospatial data refers to information that is associated with a specific location, which is essential for creating and managing geofences.</data>
      <data key="d2">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </node>
    <node id="GEOSPATIAL API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Geospatial API is part of the AWS Amplify framework that provides methods for managing geofences and geospatial data.</data>
      <data key="d2">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </node>
    <node id="CREATETIME">
      <data key="d0">EVENT</data>
      <data key="d1">CreateTime refers to the timestamp indicating when a geofence was created.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="UPDATETIME">
      <data key="d0">EVENT</data>
      <data key="d1">UpdateTime refers to the timestamp indicating when a geofence was last updated.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="CODE">
      <data key="d0">EVENT</data>
      <data key="d1">Code refers to the specific error code associated with a geofence operation failure.
A code is a numeric or alphanumeric string used for verification during the authentication process.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="GEOSAVEGEOFENCES">
      <data key="d0">EVENT</data>
      <data key="d1">Geo.saveGeofences is a function used to save geofences in the system.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GEOLISTGEOFENCES">
      <data key="d0">EVENT</data>
      <data key="d1">Geo.listGeofences is a function used to retrieve a list of geofences from a collection.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GEODELETEGEOFENCES">
      <data key="d0">EVENT</data>
      <data key="d1">Geo.deleteGeofences is a function used to delete one or multiple geofences from a collection.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GETGEOFENCE">
      <data key="d0">EVENT</data>
      <data key="d1">Geo.getGeofence is a function used to retrieve a single geofence from a collection.</data>
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GEOFENCEID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5dced807ee929bcba98d82ba0000fe33</data>
    </node>
    <node id="GEOCOLLECTION">
      <data key="d0">EVENT</data>
      <data key="d1">A Geofence Collection is a virtual perimeter for a real-world geographic area, containing points that define an area of interest.</data>
      <data key="d2">bf926fe785180e6ba0afb391db266523</data>
    </node>
    <node id="COGNITO USER POOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cognito User Pool is a user directory that helps manage sign-up and sign-in services for mobile and web applications.
Cognito User Pool is a user directory service provided by AWS that helps manage user sign-up, sign-in, and access control.</data>
      <data key="d2">bf926fe785180e6ba0afb391db266523,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="MAPLIBRE GL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MapLibre GL is an open-source map rendering library used for displaying maps in web applications.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="MAPLIBRE-GL-JS-AMPLIFY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">maplibre-gl-js-amplify is a library that simplifies the integration of MapLibre with AWS Amplify Geo services.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="HTML ELEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">HTML Element refers to the structure of a webpage that can be manipulated using JavaScript to display maps or other content.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="COORDINATE DATA">
      <data key="d0">EVENT</data>
      <data key="d1">Coordinate data refers to the longitude and latitude values used to specify locations on a map.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="MARKERS">
      <data key="d0">EVENT</data>
      <data key="d1">Markers are visual indicators placed on a map to denote specific locations or points of interest.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="CSS FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A CSS file is used to style HTML elements, including setting dimensions and appearance for map components.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="SOURCE NAME">
      <data key="d0">EVENT</data>
      <data key="d1">Source name is an arbitrary identifier used to manage layers and markers on a map in mapping libraries.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="MAP STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">Map styles refer to the different visual representations and themes that can be applied to maps.</data>
      <data key="d2">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </node>
    <node id="MYAMPLIFYGEOESRITOPOMAP">
      <data key="d0">EVENT</data>
      <data key="d1">myAmplifyGeoEsriTopographicMap is a specific map style available in the Amplify Geo service, designed for topographic visualization.</data>
      <data key="d2">60d9151920f9b881f34c958c0c5d770b</data>
    </node>
    <node id="DOM">
      <data key="d0">EVENT</data>
      <data key="d1">The Document Object Model (DOM) is a programming interface for web documents, allowing scripts to update the content, structure, and style of a document.
DOM (Document Object Model) is a programming interface for web documents, allowing scripts to update the content, structure, and style of a document.</data>
      <data key="d2">60d9151920f9b881f34c958c0c5d770b,b48f64ddd27370c0d0a93447e796c6b3</data>
    </node>
    <node id="MAPLIBREGL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MapLibre GL is a JavaScript library for interactive maps, allowing developers to create custom maps for web applications.</data>
      <data key="d2">60d9151920f9b881f34c958c0c5d770b</data>
    </node>
    <node id="MYAMPLIFYGEOESRISTREETMAP">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">60d9151920f9b881f34c958c0c5d770b</data>
    </node>
    <node id="GEOGRAPHIC COORDINATES">
      <data key="d0">GEO</data>
      <data key="d1">Geographic coordinates are a system that uses latitude and longitude to specify locations on the Earth's surface, such as the coordinates [-123.1187, 49.2819] used in the map configuration.</data>
      <data key="d2">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </node>
    <node id="MAP API">
      <data key="d0">EVENT</data>
      <data key="d1">Map API refers to the application programming interface that allows developers to interact with mapping services and integrate maps into their applications.</data>
      <data key="d2">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </node>
    <node id="GET AVAILABLE MAPS">
      <data key="d0">EVENT</data>
      <data key="d1">Get Available Maps is an API function that retrieves the list of maps currently provisioned in an Amplify project.</data>
      <data key="d2">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </node>
    <node id="GET DEFAULT MAP">
      <data key="d0">EVENT</data>
      <data key="d1">Get Default Map is an API function that retrieves the default map object configured in an Amplify project.</data>
      <data key="d2">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </node>
    <node id="LOCATION SEARCH">
      <data key="d0">EVENT</data>
      <data key="d1">Location search refers to the functionality that allows users to search for places or points of interest based on text, addresses, or geo-coordinates.
Location search refers to the capability of searching for places or addresses within a specified geographic area.</data>
      <data key="d2">53995557ff9014f83cedfd38268f5f7a,a651cbb3e4a31fb9c592893b86f2d855</data>
    </node>
    <node id="SEARCH INDEX">
      <data key="d0">EVENT</data>
      <data key="d1">A search index is a data structure that improves the speed of data retrieval operations on a database, particularly in location-based searches.
Search Index is a resource that organizes and optimizes data for efficient searching in geolocation services.)&lt;|COMPLETE|&gt;
A search index is a resource used in location services to facilitate searching for places based on various criteria.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,a651cbb3e4a31fb9c592893b86f2d855,f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="LOCATION SEARCH UI COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">A location search UI component is a user interface element that allows users to input search queries for locations on a map.</data>
      <data key="d2">a651cbb3e4a31fb9c592893b86f2d855</data>
    </node>
    <node id="GEOSERVICE">
      <data key="d0" />
      <data key="d1">
GeoService refers to the location-based services provided by AWS Amplify, allowing applications to search for places and coordinates.</data>
      <data key="d2">a651cbb3e4a31fb9c592893b86f2d855,f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="AMAZON GO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Go is a chain of cashier-less convenience stores operated by Amazon, utilizing advanced technology for shopping experiences.
Amazon Go is a chain of cashier-less convenience stores operated by Amazon, allowing customers to shop without traditional checkout lines.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="SEATTLE">
      <data key="d0">GEO</data>
      <data key="d1">Seattle is a major city in Washington state, known for its tech industry and as the location of several Amazon Go stores.
Seattle is a major city in Washington state, known for its tech industry and as the home of Amazon's headquarters.
Seattle is a city in Washington, USA, known for its tech industry and as the location of the provided user location data.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,bcb8bed3236fce81cd5b966a435370ba,f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="USA">
      <data key="d0">GEO</data>
      <data key="d1">The United States of America, where Amazon Go stores are located and where various search options can be applied.
The United States of America is a country located in North America, where Seattle and Amazon are based.
USA is a country in North America where Seattle is located.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,bcb8bed3236fce81cd5b966a435370ba,f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="SEARCH BY TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Search by Text is an event that allows users to find places and their coordinates based on free-form text input.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </node>
    <node id="SEARCH BY COORDINATES">
      <data key="d0">EVENT</data>
      <data key="d1">Search by Coordinates is an event that enables users to retrieve information about locations based on specific geographic coordinates.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </node>
    <node id="SEARCH FOR SUGGESTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Search for Suggestions is an event that allows users to receive recommendations for places based on partial text input.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </node>
    <node id="LONGITUDE">
      <data key="d0">GEO</data>
      <data key="d1">Longitude is a geographic coordinate that specifies the east-west position of a point on the Earth's surface.
Longitude is a geographic coordinate that specifies the east-west position of a point on the Earth's surface.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="LATITUDE">
      <data key="d0">GEO</data>
      <data key="d1">Latitude is a geographic coordinate that specifies the north-south position of a point on the Earth's surface.
Latitude is a geographic coordinate that specifies the north-south position of a point on the Earth's surface.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a,b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="SEARCH OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Search Options refer to the parameters and configurations that can be set to customize search results in geolocation services.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </node>
    <node id="COORDINATES POINT">
      <data key="d0">GEO</data>
      <data key="d1">Coordinates Point refers to a specific location defined by its longitude and latitude values.</data>
      <data key="d2">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </node>
    <node id="AMAZON 4-STAR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon 4-Star is a retail store concept by Amazon that sells products rated 4 stars and above, as well as trending items.</data>
      <data key="d2">f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="WASHINGTON">
      <data key="d0">GEO</data>
      <data key="d1">Washington is a state in the Pacific Northwest region of the United States, where Seattle is located.</data>
      <data key="d2">f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="GEOSEARCH">
      <data key="d0">EVENT</data>
      <data key="d1">GeoSearch refers to the process of searching for places, addresses, and coordinates using geographic data.</data>
      <data key="d2">f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="PLACEID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f54cf521a7080b38d9c0fe773d50ade8</data>
    </node>
    <node id="AMAZON LOCATION SERVICES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Location Services is a service that provides geolocation capabilities for applications, including maps and location search.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="HERE TECHNOLOGIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">HERE Technologies is a data provider for geocoding and mapping services, which can be used in applications that track or route assets.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="ESRI">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Esri is a geographic information system (GIS) software provider that offers mapping and spatial analysis tools.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="GEO STACK">
      <data key="d0">EVENT</data>
      <data key="d1">Geo Stack is a component created in the backend to manage geolocation resources and services.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="MYMAP">
      <data key="d0">EVENT</data>
      <data key="d1">MyMap is a location services map created within the geo stack, configured with a specific style and pricing plan.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="LOCATION SERVICE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Location Service is a feature of AWS Amplify that provides APIs for geocoding, reverse geocoding, and location searches.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="REQUESTBASEDUSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">RequestBasedUsage is a pricing plan for the Search Index that charges based on the number of requests made to the service.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="VECTORESRINAVIGATION">
      <data key="d0">EVENT</data>
      <data key="d1">VectorEsriNavigation is a style configuration for maps used in the AWS Amplify Geo service.</data>
      <data key="d2">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </node>
    <node id="GEOCODING">
      <data key="d0">EVENT</data>
      <data key="d1">Geocoding is the process of converting addresses into geographic coordinates, which can be used for mapping and location services.</data>
      <data key="d2">53995557ff9014f83cedfd38268f5f7a</data>
    </node>
    <node id="GEOCODE">
      <data key="d0">EVENT</data>
      <data key="d1">Geocode refers to the process of determining the latitude and longitude of a location based on its address.</data>
      <data key="d2">53995557ff9014f83cedfd38268f5f7a</data>
    </node>
    <node id="AMAZON PERSONALIZE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Personalize is a machine learning service that allows developers to create personalized recommendations for their users based on their interactions and preferences.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="AWS IDENTITY AND ACCESS MANAGEMENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS services and resources for your users.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="EVENT TRACKER">
      <data key="d0">EVENT</data>
      <data key="d1">An event tracker is a component in Amazon Personalize that records user interactions and events for analysis and recommendation generation.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="TRACKING ID">
      <data key="d0">EVENT</data>
      <data key="d1">A tracking ID is a unique identifier used to track events in Amazon Personalize, essential for linking user actions to their profiles.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="FLUSH EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Flush events is an operation that clears all recorded events from the buffer and sends them to the remote server for processing.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="MEDIAAUTOTRACK">
      <data key="d0">EVENT</data>
      <data key="d1">MediaAutoTrack is an event type in Amazon Personalize that automatically tracks media events such as Play, Pause, and Ended for HTML5 media elements.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="AMAZON DATA FIREHOSE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Data Firehose is a fully managed service that reliably loads streaming data into data lakes, data stores, and analytics services.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">Properties are additional data fields that can be included when recording events in Amazon Personalize, providing context about the event.</data>
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="USER ID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </node>
    <node id="KINESIS FIREHOSE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Kinesis Firehose is a fully managed service that automatically scales to match the throughput of your data and can deliver it to Amazon S3, Amazon Redshift, Amazon Elasticsearch Service, and Splunk.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f</data>
    </node>
    <node id="FIREHOSE">
      <data key="d0">EVENT</data>
      <data key="d1">Firehose is an event that refers to the process of streaming data to Amazon Kinesis Firehose for real-time processing.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f</data>
    </node>
    <node id="KINESIS STREAM">
      <data key="d0">EVENT</data>
      <data key="d1">Kinesis Stream is an event that refers to the process of sending analytics data to a Kinesis stream for real-time processing.
Kinesis Stream is a stream that collects and processes large amounts of data records in real-time.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f,60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="FIREHOSE ROLE">
      <data key="d0">PERSON</data>
      <data key="d1">The Firehose Role is an IAM role that is assumed by the Kinesis Firehose service to access resources such as S3 buckets.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f</data>
    </node>
    <node id="FIREHOSE POLICY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Firehose Policy is an IAM policy that grants permissions to users to write data to the Kinesis Firehose delivery stream.</data>
      <data key="d2">344b01eb184403f029e31d4621f1ea1f</data>
    </node>
    <node id="KINESIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Kinesis is a platform for streaming data on AWS, allowing real-time processing of large streams of data records.</data>
      <data key="d2">9435f5063dc16afb92c8c68706b77d2b</data>
    </node>
    <node id="PAGE VIEW">
      <data key="d0">EVENT</data>
      <data key="d1">A page view is an event that occurs when a user visits a page in a web application, tracked for analytics to understand user engagement.</data>
      <data key="d2">9435f5063dc16afb92c8c68706b77d2b</data>
    </node>
    <node id="STREAM">
      <data key="d0">EVENT</data>
      <data key="d1">A stream in Amazon Kinesis is a sequence of data records that can be processed in real-time.</data>
      <data key="d2">9435f5063dc16afb92c8c68706b77d2b</data>
    </node>
    <node id="SESSION TRACKING">
      <data key="d0">EVENT</data>
      <data key="d1">Session tracking is a feature that allows the monitoring of user interactions within a web application over a specific period.</data>
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="PAGE VIEW TRACKING">
      <data key="d0">EVENT</data>
      <data key="d1">Page view tracking is a method used to record when a user visits a specific page in a web application.</data>
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="DISABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Disable is a function in AWS Amplify that turns off analytics tracking in the application.</data>
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="ENABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Enable is a function in AWS Amplify that turns on analytics tracking in the application.</data>
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="PAGE EVENT TRACKING">
      <data key="d0">EVENT</data>
      <data key="d1">Page event tracking is a feature that allows tracking of user interactions with specific elements on a page.</data>
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="CONFIGUREAUTOTRACK">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </node>
    <node id="AMPLIFY ANALYTICS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Analytics is a feature of AWS Amplify that enables developers to collect analytics data for their applications.
</data>
      <data key="d2">bcb8bed3236fce81cd5b966a435370ba,d5671c2494c6418a266da35fff705101</data>
    </node>
    <node id="IDENTIFY USER">
      <data key="d0">EVENT</data>
      <data key="d1">Identify User is an API call that sends information about the current user to Amazon Pinpoint.</data>
      <data key="d2">bcb8bed3236fce81cd5b966a435370ba</data>
    </node>
    <node id="RECORD EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Record Events is a feature that allows developers to log custom events in their applications using Amplify Analytics.</data>
      <data key="d2">bcb8bed3236fce81cd5b966a435370ba</data>
    </node>
    <node id="USERPROFILE">
      <data key="d0">EVENT</data>
      <data key="d1">UserProfile is a data structure that includes information about the user, such as their name, email, location, and custom attributes.</data>
      <data key="d2">bcb8bed3236fce81cd5b966a435370ba</data>
    </node>
    <node id="CUSTOM PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Properties are additional user attributes that can be included in the UserProfile for analytics purposes.</data>
      <data key="d2">bcb8bed3236fce81cd5b966a435370ba</data>
    </node>
    <node id="ALBUM VISIT">
      <data key="d0">EVENT</data>
      <data key="d1">Album Visit is a custom event recorded in Amplify Analytics to track user interactions with music albums.</data>
      <data key="d2">d5671c2494c6418a266da35fff705101</data>
    </node>
    <node id="FLUSHEVENTS API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The flushEvents API is a method in Amplify Analytics that allows developers to manually send buffered events to the service.</data>
      <data key="d2">d5671c2494c6418a266da35fff705101</data>
    </node>
    <node id="ENGAGEMENT METRICS">
      <data key="d0">EVENT</data>
      <data key="d1">Engagement metrics are data points that measure user interactions and behaviors within an application, recorded through Amplify Analytics.</data>
      <data key="d2">d5671c2494c6418a266da35fff705101</data>
    </node>
    <node id="TODO">
      <data key="d0">EVENT</data>
      <data key="d1">Todo is a data model defined in Amplify that represents tasks with attributes like content, done status, and priority level.
A to-do item is a task that needs to be completed, which can be created, listed, and managed within the application.
A todo is a task or item that needs to be completed, often used in applications for task management.
Todo is a model defined in the schema that represents a task or item to be completed.
The Todo event represents a task or item that can be managed within the application, including attributes like content, completion status, and priority.
The Todo event refers to a task or item that needs to be completed, often used in project management and tracking applications.
The Todo table is a DynamoDB table that stores tasks or items to be completed, with specific attributes for tracking their status and details.
The Todo event refers to the specific table in DynamoDB that is being configured for data ingestion into OpenSearch.
A Todo is a model representing a task or item that needs to be completed, often used in applications for task management.
A Todo is a data model in the Amplify framework that represents a task or item to be completed, typically including fields for content and status.
A Todo is a task or item that a user can create, manage, and track in an application, often used in project management and personal organization.
A Todo is a task or item that a user can create, read, update, or delete in an application.
A Todo is a data model in AWS Amplify that represents a task or item that can be managed by users, including ownership and authorization settings.
Todo is a data model representing tasks or items that can be created, read, updated, or deleted by users.
Todo is a model in the schema that represents a task with content and a completion status.
Todo is a model used in applications to represent tasks or items that need to be completed.
Todo is an event model in AWS Amplify that allows users to create, update, and delete tasks in real-time through subscriptions.
A Todo is a task or item that can be created, updated, or deleted within the AWS Amplify application data model.
A Todo is an item in a task management system that can be created, updated, or deleted through the AWS Amplify Data client.
Todo is a model in AWS Amplify that represents tasks or items to be completed in an application.

A Todo is a task or item that needs to be completed, which can be created, updated, or deleted in the application.
A to-do item is a task that a user needs to complete, which is managed within the application.
The Todo represents individual tasks that users can create, manage, and delete in the application.</data>
      <data key="d2">0540b18a392d2ccc8d9b4915eed9acfe,287574c9a7234d49dcc89de08710c55e,2e537c711e153c043f8d08b926e4ba86,374f53811273c5cffe3558d227a0e4ec,3cdd6c81baa65bbde6eabfc399eb25b6,3e8319ba39b8ba21d17ce5e988924ff2,4fde2e7cc7218ba6b93e1b100e10fd38,55e07f6f599d31bd6bca8ce0ea6a1072,57f05fa9d96242d8c2cb2869e13f9e1c,61659c64fca58284b65ddb212f319f91,61cf173fbdd2221f3bcf1bc2a4df1840,81518acc3db43af0161d599284ff910e,8c8075430684b38bdd1c6ce9fc9f7205,92bcd3df485df362e04da4f60878ff3b,a525cbfc03ba1b986f30ce2280067dda,ad25e8455b3a65969a17cb69a66a58ac,b2d8cdaec278d34da4fff33772135cfc,c3958c03e7b6908e78ca65d6563b3555,d7f9d6d81c47c8666bdbe05c89629447,df66d576a32835aae9d3957800932b5f,e4054144736985db7777f6f19790e2af,f0df8a5e739e43b9c43840817e1bd7d1,f60714d5063669648e44d7d6036396c3,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="RESOURCE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Resource refers to the backend components defined in Amplify for managing data and authentication.
Resource refers to the files and configurations used in AWS Amplify to define functions and their behaviors.
Resource refers to the various components and services defined in the Amplify application, including storage and data handling capabilities.
Resources in Amplify refer to the various components and services that can be managed and deployed as part of an application.</data>
      <data key="d2">6980c90f0a7a58894d9518accd2ab5dd,8e6f8a08e3cdc9d85f1015001bcf93dc,b817095066fd625d69ee8fbf3cb0804d,e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="AUTHORIZATION RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Authorization rules in Amplify define the permissions and access levels for users interacting with data models.
Authorization rules define access permissions for different user types in AWS Amplify Storage.
Authorization rules in AWS Amplify determine access permissions for data models and subscription events based on user roles.
Authorization rules are security measures that define who can access specific resources and actions within an application, customizable in Amplify Data.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa,61cf173fbdd2221f3bcf1bc2a4df1840,e4054144736985db7777f6f19790e2af,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="RESOURCE FILE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Resource files in Amplify define the backend resources and their configurations for data and authentication.</data>
      <data key="d2">e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="VERIFICATION EMAIL">
      <data key="d0">EVENT</data>
      <data key="d1">Verification email is sent to users after they sign up, confirming their email address for account activation.
A verification email is sent to users during the sign-up process to confirm their ownership of the email address provided.</data>
      <data key="d2">dcf0763f48070d41b43f528c6ac2928a,e4054144736985db7777f6f19790e2af</data>
    </node>
    <node id="LOGOUT">
      <data key="d0">EVENT</data>
      <data key="d1">The Logout event is a user action that terminates the user's session and redirects them to the login page.</data>
      <data key="d2">f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="AUTHUSER">
      <data key="d0">PERSON</data>
      <data key="d1">AuthUser represents a user authenticated through the Amplify authentication system.
AuthUser is an interface representing a user authenticated through AWS Amplify, containing user details such as username and userId.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68,f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="CREDENTIALS">
      <data key="d0">PERSON</data>
      <data key="d1">Credentials are the authentication details required for a user to log in to the application.
Credentials are the authorization details required for accessing AWS services, including Storage and Data in AWS Amplify.
</data>
      <data key="d2">502c34bc5ff7e00594c0a0d9df58834d,964a73cbdb955691a9e116071187750f,f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="RUNWITHAMPLIFYSERVERCONTEXT">
      <data key="d0">EVENT</data>
      <data key="d1">runWithAmplifyServerContext is a function that allows server-side operations to be executed within the context of Amplify, facilitating access to Amplify services.
runWithAmplifyServerContext is a function that allows the use of Amplify APIs within isolated request contexts in a Next.js application.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2,f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="AUTHGETCURRENTUSERSERVER">
      <data key="d0">EVENT</data>
      <data key="d1">AuthGetCurrentUserServer is a function that retrieves the currently authenticated user on the server side, ensuring secure access to user data.</data>
      <data key="d2">f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="LOGINCOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Login component is a part of the application that handles user authentication and redirects users based on their login status.</data>
      <data key="d2">f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="LOGOUTCOMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Logout component is responsible for signing out users and redirecting them to the login page.</data>
      <data key="d2">f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="CONFIGUREAMPLIFY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f5ab02ebcf782ede1b25fdb016628a44</data>
    </node>
    <node id="CLOUDFRONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CloudFront is a content delivery network (CDN) service that accelerates the delivery of web content.
CloudFront is a content delivery network (CDN) service provided by Amazon Web Services that accelerates the delivery of websites, APIs, and other web assets.</data>
      <data key="d2">515a9fba2517051a51ebb09f8a2c2b06,81518acc3db43af0161d599284ff910e</data>
    </node>
    <node id="TODO MODEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Todo model defines the structure and attributes of to-do items within the application, including content and status.</data>
      <data key="d2">81518acc3db43af0161d599284ff910e</data>
    </node>
    <node id="AMPLIFY NEXT.JS ADAPTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify Next.js adapter allows developers to integrate AWS Amplify with Next.js applications for server-side rendering and API calls.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </node>
    <node id="FETCHAUTHSESSION">
      <data key="d0">EVENT</data>
      <data key="d1">fetchAuthSession is an API that checks the authentication session of users in a Next.js application using AWS Amplify.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </node>
    <node id="AMPLIFY SERVER CONTEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Server Context is a context used to manage server-side operations in Next.js applications using AWS Amplify.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </node>
    <node id="SIGN-IN ROUTE">
      <data key="d0">EVENT</data>
      <data key="d1">The sign-in route is a designated path in a web application where users can authenticate themselves to access protected resources.</data>
      <data key="d2">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </node>
    <node id="AUTH FETCH RESULT">
      <data key="d0">EVENT</data>
      <data key="d1">AuthFetchResult is an event that represents the result of an authentication API call made on the server side.</data>
      <data key="d2">ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </node>
    <node id="GET CURRENT USER">
      <data key="d0">EVENT</data>
      <data key="d1">GetCurrentUser is an event that retrieves the current signed-in user's data from the server.
An event that retrieves information about the currently authenticated user in the AWS Amplify system.</data>
      <data key="d2">ace34d6baa071fb6d6db3dcaaf3da1dc,ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="GET URL">
      <data key="d0">EVENT</data>
      <data key="d1">GetUrl is an event that retrieves a URL for a specified key from the Amplify Storage API.

Get URL is an operation in AWS Amplify that retrieves signed URLs for accessing files stored in the storage service.
Get URL is a function that retrieves a signed URL for accessing uploaded files securely.</data>
      <data key="d2">ace34d6baa071fb6d6db3dcaaf3da1dc,d2da95c5361020f00b8857bfa61b4378,d8d35bb9ab00c5657d67d2362a6bbd10,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="AMPLIFY STORAGE API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amplify Storage API allows users to manage and interact with storage resources in AWS, providing functionalities like file uploads and downloads.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="AMAZON KINESIS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Kinesis is a platform on AWS to collect, process, and analyze real-time, streaming data.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="S3 UPLOAD CONFIRMATION">
      <data key="d0">EVENT</data>
      <data key="d1">S3 Upload confirmation is an event that occurs when a file is successfully uploaded to Amazon S3, triggering a confirmation process.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="API (REST)">
      <data key="d0">EVENT</data>
      <data key="d1">API (REST) refers to a set of rules and conventions for building and interacting with web services, allowing applications to communicate over HTTP.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="DELETION PROTECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Deletion Protection is a feature that prevents accidental deletion of resources in cloud environments, ensuring data integrity and availability.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="BACKUP RESOURCES">
      <data key="d0">EVENT</data>
      <data key="d1">Backup Resources refer to the processes and tools used to create copies of data and applications to prevent data loss.</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="OVERRIDING RESOURCES">
      <data key="d0">EVENT</data>
      <data key="d1">Overriding Resources refers to the ability to modify or extend existing cloud resources to meet specific application needs.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </node>
    <node id="TODO TABLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Todo table is a sample database table used in the context of AWS Amplify and DynamoDB for managing to-do items.
The Todo table is an example of a data resource that can be managed within the Amplify Console, allowing users to create, update, and delete todo items.
The Todo table is a DynamoDB table used to store tasks with attributes like content, done status, and priority.</data>
      <data key="d2">1bafd8792486c2e570d8aa0cb40189b9,7f29cbfbdd4aea2867cf6f65ba567185,e8d59516a524ae342a9c7507d5bac243</data>
    </node>
    <node id="DYNAMODB STREAM">
      <data key="d0">EVENT</data>
      <data key="d1">DynamoDB Streams is a feature that captures changes to items in a DynamoDB table and can trigger AWS Lambda functions.</data>
      <data key="d2">1bafd8792486c2e570d8aa0cb40189b9</data>
    </node>
    <node id="ON UPLOAD HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">The onUpload handler is a Lambda function that processes events triggered by file uploads to S3, logging the object keys of uploaded files.
The on-upload handler is a function that is invoked when a file is uploaded to the storage bucket, processing the upload event.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2,1bafd8792486c2e570d8aa0cb40189b9</data>
    </node>
    <node id="ON UPLOAD TRIGGER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">1bafd8792486c2e570d8aa0cb40189b9</data>
    </node>
    <node id="DYNAMO DB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DynamoDB is a fully managed NoSQL database service provided by Amazon Web Services that offers fast and predictable performance with seamless scalability.
Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.</data>
      <data key="d2">2e537c711e153c043f8d08b926e4ba86,d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="CUSTOM MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Custom message is an AWS Lambda trigger that sends a custom email or phone verification message, or a multi-factor authentication (MFA) code.</data>
      <data key="d2">d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="GOOGLE RECAPTCHA">
      <data key="d0">EVENT</data>
      <data key="d1">Google reCAPTCHA is a service that protects websites from spam and abuse by requiring users to complete a challenge to prove they are human.
Google reCAPTCHA is a service that protects websites from spam and abuse by verifying that a user is human.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287,d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="CREATE AUTH CHALLENGE">
      <data key="d0">EVENT</data>
      <data key="d1">Create auth challenge is a trigger responsible for creating a reCAPTCHA challenge after a password is verified.</data>
      <data key="d2">d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="DEFINE AUTH CHALLENGE">
      <data key="d0">EVENT</data>
      <data key="d1">Define auth challenge is a trigger responsible for defining the authentication challenge flow in AWS Amplify.</data>
      <data key="d2">d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="CUSTOM MESSAGE TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">Custom message trigger is an AWS Lambda function that customizes the messages sent to users during authentication processes.</data>
      <data key="d2">d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="AUTH RESOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">Auth resource in AWS Amplify is a configuration that defines the authentication settings and triggers for an application.</data>
      <data key="d2">d55e7e869df5fbcfa36109914fcb2499</data>
    </node>
    <node id="DEFINE AUTH CHALLENGE TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The Define Auth Challenge Trigger is an AWS Lambda function that defines the authentication challenge for users.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="VERIFY AUTH CHALLENGE RESPONSE TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The Verify Auth Challenge Response Trigger is an AWS Lambda function that verifies the response to an authentication challenge.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="CREATE AUTH CHALLENGE TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The Create Auth Challenge Trigger is an AWS Lambda function that creates a custom authentication challenge for users.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="GOOGLE RECAPTCHA SECRET KEY">
      <data key="d0">PERSON</data>
      <data key="d1">The Google reCAPTCHA secret key is a credential used to verify reCAPTCHA responses in applications.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="CAPTCHA CHALLENGE">
      <data key="d0">EVENT</data>
      <data key="d1">The CAPTCHA Challenge is an authentication challenge that requires users to prove they are human by completing a CAPTCHA test.</data>
      <data key="d2">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </node>
    <node id="AMAZON KINESIS DATA STREAMS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Kinesis Data Streams is a service that allows for real-time processing of streaming data at scale, enabling applications to react to changes in data or system state without polling services.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="KINESIS FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">Kinesis Function is a Lambda function that processes records from a Kinesis data stream.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="KINESIS STREAM HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">Kinesis Stream Handler is a function that processes Kinesis stream events and handles the data records.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="KINESIS STREAM RECORD PAYLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">Kinesis Stream Record Payload is the data structure that represents a record in a Kinesis stream, containing the data and metadata for processing.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="BUFFER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Buffer is a global object in Node.js that allows for the manipulation of binary data.</data>
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="AWS LAMBDA POWERTOOLS LOGGER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">60aaa13e30275fbe0d56cac47de824c2</data>
    </node>
    <node id="PRE SIGN-UP">
      <data key="d0">EVENT</data>
      <data key="d1">The pre-sign-up event is a trigger in AWS Cognito that allows developers to run custom logic before a user is signed up, such as validating user attributes.</data>
      <data key="d2">758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="PRE TOKEN GENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">The pre-token generation event is a trigger in AWS Cognito that allows developers to modify the ID token before it is generated for a user.</data>
      <data key="d2">758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="USER PROFILE RECORD">
      <data key="d0">EVENT</data>
      <data key="d1">Creating a user profile record is an action that occurs after a user confirms their account, typically involving the creation of a record in a database to store user information.</data>
      <data key="d2">758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="BIRTHDATE">
      <data key="d0">PERSON</data>
      <data key="d1">Birthdate is an attribute used in user registration to determine the age of the user for compliance with age restrictions.
Birthdate is an input field for users to provide their date of birth during the sign-up process.</data>
      <data key="d2">758d7b22f173e12c1857a365834df542,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="PRE SIGN-UP TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The pre-sign-up trigger is a specific event in AWS Amplify that allows developers to execute custom logic before a user is signed up.
Pre sign-up trigger is a mechanism in AWS Amplify that allows validation of user attributes before sign-up is completed.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778,758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="PRE TOKEN GENERATION TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The pre-token generation trigger is a specific event in AWS Amplify that allows developers to modify the ID token before it is generated for a user.</data>
      <data key="d2">758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="POST CONFIRMATION TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The post confirmation trigger is an event in AWS Amplify that allows developers to perform actions after a user has confirmed their account.
The Post Confirmation Trigger is an event in AWS Cognito that executes a Lambda function after a user confirms their account.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,758d7b22f173e12c1857a365834df542</data>
    </node>
    <node id="USER ATTRIBUTES">
      <data key="d0">PERSON</data>
      <data key="d1">User attributes are pieces of information associated with a user account, such as email, phone number, and birthdate, used for authentication and personalization.
User attributes are the data points associated with a user in AWS Amplify, which can include standard and custom attributes.
</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778,758d7b22f173e12c1857a365834df542,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="POST CONFIRMATION">
      <data key="d0">EVENT</data>
      <data key="d1">Post Confirmation is a trigger in AWS Cognito that executes a Lambda function after a user confirms their account.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </node>
    <node id="USER PROFILE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">User Profile is a data model defined in AWS Amplify that stores user information such as email and profile owner.
A UserProfile model is created to store user-specific information and attributes upon account confirmation in AWS Amplify.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,dcf0763f48070d41b43f528c6ac2928a</data>
    </node>
    <node id="AUTHORIZATION RULE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An authorization rule in AWS Amplify defines the permissions and access control for user data and resources.
Authorization rules define the permissions and access controls for different models and fields within the database schema.
An Authorization Rule defines the permissions and access controls for different operations in AWS Amplify.
Authorization rules are conditions that determine whether a user has permission to perform certain actions on resources in an application.


Authorization rules are conditions that determine whether a user has permission to perform a specific action on an API.</data>
      <data key="d2">0cd205bf5fe0ebe4aec3529e4d44191c,0dfb84288d523f687fe010cdbeb5603e,1950a5e06a03170ed4dc66a00668ea47,287574c9a7234d49dcc89de08710c55e,856c945b28eacce9c83378e56652fee3,c3958c03e7b6908e78ca65d6563b3555,d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="POST-CONFIRMATION">
      <data key="d0">EVENT</data>
      <data key="d1">Post-confirmation is an event in AWS Cognito that triggers actions after a user confirms their account.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="PRE-SIGN-UP">
      <data key="d0">EVENT</data>
      <data key="d1">Pre-sign-up is an event in AWS Cognito that triggers actions before a user signs up for an account.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="EVERYONE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Everyone is a user group in AWS Cognito that allows all users to be added after they confirm their account.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="AMAZON.COM">
      <data key="d0">GEO</data>
      <data key="d1">Amazon.com is a domain that is allowed for user signups in the pre-sign-up trigger of AWS Cognito.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="POST-CONFIRMATION TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The post-confirmation trigger in AWS Amplify is an event that executes a function after a user successfully confirms their account.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="PRE-SIGN-UP TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The pre-sign-up trigger in AWS Amplify is an event that executes a function before a user signs up, allowing for validation of user attributes.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="ADMIN ADD USER TO GROUP COMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">The AdminAddUserToGroupCommand is a command in AWS SDK that adds a user to a specified group in AWS Cognito.</data>
      <data key="d2">328c2850836c2ef976fb8009ef3c5dd9</data>
    </node>
    <node id="AMPLIFY FUNCTIONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Functions is a service that allows developers to create serverless functions that can interact with other AWS resources.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d</data>
    </node>
    <node id="SNS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Simple Notification Service (SNS) is a fully managed messaging service for both application-to-application and application-to-person communication.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d</data>
    </node>
    <node id="WEEKLY DIGEST">
      <data key="d0">EVENT</data>
      <data key="d1">Weekly Digest is an event that triggers a Lambda function to send out a summary of activities or reports on a weekly basis.
The weekly digest is a scheduled function that generates a summary of top-performing posts every week.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,41deb762c8966a1fa15f960e2fa31753</data>
    </node>
    <node id="GENERATE MONTHLY REPORTS">
      <data key="d0">EVENT</data>
      <data key="d1">Generate Monthly Reports is a function that creates reports from data resources and stores them in S3.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d</data>
    </node>
    <node id="ENV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The env object in AWS Amplify is used to access environment variables that are configured for serverless functions.
The environment variable is a dynamic value that can be used to configure applications, often containing sensitive information like API keys and access tokens.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d,c3958c03e7b6908e78ca65d6563b3555</data>
    </node>
    <node id="PUTOBJECTCOMMAND">
      <data key="d0">EVENT</data>
      <data key="d1">PutObjectCommand is an AWS SDK command used to upload an object to an S3 bucket.</data>
      <data key="d2">08e6487bb4d09a90bdb8439d2afb618d</data>
    </node>
    <node id="SANDWICH">
      <data key="d0">EVENT</data>
      <data key="d1">The event of running the ampx sandbox to stream function logs directly to the terminal for debugging purposes.
The process of creating and managing a sandbox environment in AWS Amplify for testing and development purposes.</data>
      <data key="d2">69b8cbe6ad275c39fc40832d62145181,fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="AUTH TRIGGERS">
      <data key="d0">EVENT</data>
      <data key="d1">Auth triggers are specific functions in Amplify that are executed during authentication processes, such as pre-sign-up and post-confirmation.</data>
      <data key="d2">69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AUTH-POST-CONFIRMATION">
      <data key="d0">EVENT</data>
      <data key="d1">The auth-post-confirmation event occurs after a user has been confirmed, enabling additional actions to be taken post-verification.</data>
      <data key="d2">69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AUTH-PRE-AUTHENTICATION">
      <data key="d0">EVENT</data>
      <data key="d1">The auth-pre-authentication event is triggered before a user is authenticated, allowing for checks or modifications before the authentication process.</data>
      <data key="d2">69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AUTH-POST-AUTHENTICATION">
      <data key="d0">EVENT</data>
      <data key="d1">The auth-post-authentication event occurs after a user has been authenticated, allowing for actions to be taken after successful login.
Auth-post-authentication is a specific function that handles authentication events in AWS Amplify.</data>
      <data key="d2">41deb762c8966a1fa15f960e2fa31753,69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AMPLIFY_OUTPUTS.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">The amplify_outputs.json file is generated by Amplify to store output data related to the deployment and configuration of the application.
</data>
      <data key="d2">3cdd6c81baa65bbde6eabfc399eb25b6,69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AUTH-PRE-SIGN-UP">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">69b8cbe6ad275c39fc40832d62145181</data>
    </node>
    <node id="AMAZON EVENTBRIDGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon EventBridge is a serverless event bus service that makes it easy to connect applications using events.
Amazon EventBridge is a serverless event bus that simplifies how applications communicate with each other, acting as a central hub for events generated by various sources.
Amazon EventBridge is a serverless event bus service that makes it easy to connect applications using events, allowing for the integration of various AWS services and custom applications.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98,41deb762c8966a1fa15f960e2fa31753,df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="GENERATE REPORT">
      <data key="d0">EVENT</data>
      <data key="d1">The generate report function is scheduled to create reports on a weekly, monthly, or yearly basis.</data>
      <data key="d2">41deb762c8966a1fa15f960e2fa31753</data>
    </node>
    <node id="DRINK SOME WATER">
      <data key="d0">EVENT</data>
      <data key="d1">The drink some water function is scheduled to remind users to drink water every hour.
Drink Some Water is a scheduled function defined in AWS Amplify that reminds users to hydrate every hour.</data>
      <data key="d2">41deb762c8966a1fa15f960e2fa31753,b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="REMIND ME">
      <data key="d0">EVENT</data>
      <data key="d1">The remind me function is scheduled to send reminders at specific times throughout the week.</data>
      <data key="d2">41deb762c8966a1fa15f960e2fa31753</data>
    </node>
    <node id="FUNCTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Functions in AWS Amplify are serverless functions that can be scheduled to run at specified intervals.
Functions in AWS Amplify refer to the serverless functions that can be created and managed using AWS Lambda to perform specific tasks.
Functions is a category in AWS Amplify that allows developers to run backend code in response to events.</data>
      <data key="d2">1ef9b6a9263edfd718636bcbc29f4a72,41deb762c8966a1fa15f960e2fa31753,6741df7802dff57e070b002915d9590a</data>
    </node>
    <node id="SCHEDULING FUNCTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Scheduling functions allow developers to automate tasks at regular intervals using AWS Amplify.</data>
      <data key="d2">41deb762c8966a1fa15f960e2fa31753</data>
    </node>
    <node id="DEFINEFUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">DefineFunction is a method in AWS Amplify that allows developers to define serverless functions with specific configurations.</data>
      <data key="d2">b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="SCHEDULE">
      <data key="d0">EVENT</data>
      <data key="d1">Schedule refers to the timing configurations for functions in AWS Amplify, allowing for automated execution at specified intervals.</data>
      <data key="d2">b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="REMIND ME TO TAKE THE TRASH OUT">
      <data key="d0">EVENT</data>
      <data key="d1">Remind Me To Take The Trash Out is a scheduled function defined in AWS Amplify that triggers reminders on specific days of the week.</data>
      <data key="d2">b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="FUNCTION CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Function Configuration refers to the settings and parameters that define how a function operates within AWS Amplify.</data>
      <data key="d2">b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="AMPLIFY JOBS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">b817095066fd625d69ee8fbf3cb0804d</data>
    </node>
    <node id="SAY-HELLO">
      <data key="d0">EVENT</data>
      <data key="d1">The 'say-hello' function is an AWS Lambda function defined to respond to specific events and execute logic, returning a greeting message.</data>
      <data key="d2">8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="SECRET ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Secret access is a method to securely provide sensitive information, such as API keys, to functions without exposing them in plaintext.</data>
      <data key="d2">8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="API_ENDPOINT">
      <data key="d0">EVENT</data>
      <data key="d1">API_ENDPOINT is an environment variable that specifies the endpoint for an API, which can differ between deployment environments like staging and production.</data>
      <data key="d2">8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="BRANCH-SPECIFIC ENVIRONMENT VARIABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Branch-specific environment variables are configurations that differ based on the branch of the application being deployed, allowing for tailored settings in different environments.</data>
      <data key="d2">8aece6e31757222174fd611077ca4f6d</data>
    </node>
    <node id="SCHEMA">
      <data key="d0">EVENT</data>
      <data key="d1">A schema in AWS Amplify defines the structure of data models and their relationships, allowing for strongly typed queries and data management.
Schema defines the structure of data models used in the Amplify Data API, ensuring data consistency and integrity.

Schema refers to the structure that defines the organization of data in a database, including the types of data and the relationships between them.
The schema defines the structure of the data in the Amplify application, including types and relationships for the Post model.
A schema represents the structure of a database, including tables, fields, and relationships between them.
Schema refers to the structure that defines the organization of data in a database, including tables, fields, and relationships.
Schema refers to the structure of data models defined in AWS Amplify for managing data resources.
Schema refers to the structure of data in AWS Amplify, defining how data is organized and accessed in the application.
Schema refers to the structure of the data models used in the application, defining how data is organized and accessed.
Schema defines the structure and types of data used in the Amplify application.Schema is a structure in Amplify that defines the data model and relationships for the application.
Schema refers to the structure that defines the organization of data in the Amplify application, including types and relationships.
A schema defines the structure of data in a database or API, including the types of data and the relationships between them.
A schema defines the structure of data models in an application, including fields and their types, and is used to enforce data integrity and relationships.
A schema defines the structure of data in a database, including the types of data and the relationships between them.
A schema defines the structure of data in a database, including the types of data and the relationships between them.
A schema in AWS Amplify defines the structure of data models, including fields and their types, as well as authorization rules.
The schema is a structured definition of data models and their relationships, including authorization rules for access control.
Schema refers to the structure that defines the organization of data in a database, including the relationships between different data models.
A schema defines the structure of data models, including relationships between posts and persons in the system.
Schema is a structure that defines the organization of data in a database, including the types of data and relationships between them.
Schema refers to the structure that defines the organization of data in a database or application model.
Schema defines the structure of data models in AWS Amplify, allowing customization of fields and relationships.
A Schema defines the structure of data models in AWS Amplify, including fields and relationships between models.
Schema defines the structure of data models in AWS Amplify, allowing developers to specify how data is organized and accessed.
Schema refers to the structure that defines the data models used in AWS Amplify applications.
Schema refers to the structure of the data models defined in the Amplify Data resource, which dictates how data is organized and accessed.
A schema in Amplify Data defines the data models and custom queries, mutations, and subscriptions for the backend.
Schema refers to the structure of the data models used in the Amplify Data framework, defining how data is organized and accessed.

A schema in Amplify defines the structure of data models for applications, allowing for type validation and IntelliSense.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,0540b18a392d2ccc8d9b4915eed9acfe,07423380fe232270f2991cb99f038a6e,1950a5e06a03170ed4dc66a00668ea47,23f821c071cb4c4cf183f5aac596db35,287574c9a7234d49dcc89de08710c55e,2e537c711e153c043f8d08b926e4ba86,33e451e77f5bd710301d6408bbd2825d,374f53811273c5cffe3558d227a0e4ec,5acf474a9e428eea738206bbcbd17f29,61cf173fbdd2221f3bcf1bc2a4df1840,6980c90f0a7a58894d9518accd2ab5dd,6cbd446a7960622a6472bb28c61d77e7,7040175c91fe86a908046a9b485b0410,856c945b28eacce9c83378e56652fee3,8c8075430684b38bdd1c6ce9fc9f7205,8e6f8a08e3cdc9d85f1015001bcf93dc,92bcd3df485df362e04da4f60878ff3b,a3d633e1c801de300a4724738b7290c3,a525cbfc03ba1b986f30ce2280067dda,b2d8cdaec278d34da4fff33772135cfc,c3958c03e7b6908e78ca65d6563b3555,d2da95c5361020f00b8857bfa61b4378,d7f9d6d81c47c8666bdbe05c89629447,d8d35bb9ab00c5657d67d2362a6bbd10,e80ffe46586bd824e28fa24a230442db,e8bb64825eb8da944e09e46a90be853c,f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5,f60714d5063669648e44d7d6036396c3,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="AMPLIFY STORAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Storage is a service that allows users to manage file storage using Amazon S3 buckets, providing APIs for file operations.
Amplify Storage is a feature of the Amplify framework that allows developers to manage file storage and access in their applications.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9,5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="ACTIONS DROPDOWN">
      <data key="d0">EVENT</data>
      <data key="d1">The Actions dropdown is a user interface element that allows users to select various actions to perform on files in the storage system.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="COPY FILE">
      <data key="d0">EVENT</data>
      <data key="d1">Copying a file is an action that allows users to create a duplicate of a file in a specified location within the storage system.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="MOVE FILE">
      <data key="d0">EVENT</data>
      <data key="d1">Moving a file is an action that allows users to transfer a file from one location to another within the storage system.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="PERMISSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Permissions are rules that determine what actions a user or service can perform on AWS resources, such as S3 buckets.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="BUCKET POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">A bucket policy is a resource-based AWS Identity and Access Management (IAM) policy that specifies access permissions for an S3 bucket.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="COPY TO">
      <data key="d0">EVENT</data>
      <data key="d1">The Copy To action allows users to specify a destination folder for duplicating a file.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="MOVE TO">
      <data key="d0">EVENT</data>
      <data key="d1">The Move To action allows users to specify a destination folder for transferring a file.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="AMAZON S3 CONSOLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Amazon S3 console is a web-based interface for managing S3 buckets and their contents.</data>
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="STORAGE PAGE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </node>
    <node id="CORS POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">CORS Policy is a security feature that allows or restricts resources requested from another domain outside the domain from which the first resource was served.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="STORAGE EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Storage events are triggered actions that occur when files are uploaded or deleted in a storage service like Amazon S3.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="ON DELETE HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">The on-delete handler is a function that is invoked when a file is deleted from the storage bucket, processing the delete event.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="CROSS-ORIGIN RESOURCE SHARING">
      <data key="d0">EVENT</data>
      <data key="d1">Cross-Origin Resource Sharing (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="COPY API">
      <data key="d0">EVENT</data>
      <data key="d1">The copy API allows users to duplicate an existing file to a different path within the storage bucket in Amazon S3.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="REMOVE API">
      <data key="d0">EVENT</data>
      <data key="d1">The remove API is used to delete files from a storage bucket in Amazon S3, with access restrictions based on identity IDs.
The Remove API is a function in AWS Amplify that allows users to delete files from a storage bucket.</data>
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2,6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </node>
    <node id="USERFILES BUCKET">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </node>
    <node id="LIST API">
      <data key="d0">EVENT</data>
      <data key="d1">The List API is a function in AWS Amplify that enables users to retrieve a list of files stored in a specific path without downloading them.</data>
      <data key="d2">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </node>
    <node id="ALBUM">
      <data key="d0">GEO</data>
      <data key="d1">Album is a virtual directory structure used in AWS Amplify Storage to organize files, such as images.
An album in the context of AWS Amplify refers to a collection of files stored in a specific path within the storage service.</data>
      <data key="d2">6c6ccd5699a21bd365fb1e2dc13bd5da,960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="PHOTOS">
      <data key="d0">GEO</data>
      <data key="d1">Photos is a virtual directory within AWS Amplify Storage where image files are stored and organized.
Photos refer to image files that are stored and managed within the AWS Amplify storage service.</data>
      <data key="d2">6c6ccd5699a21bd365fb1e2dc13bd5da,960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="SUBPATH STRATEGY">
      <data key="d0">EVENT</data>
      <data key="d1">Subpath strategy is an option in AWS Amplify Storage that allows users to include or exclude files from subdirectories when listing files.</data>
      <data key="d2">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </node>
    <node id="FILESYSTEM">
      <data key="d0">EVENT</data>
      <data key="d1">Filesystem is a structure used to represent the organization of files and folders in a nested object format within AWS Amplify Storage.</data>
      <data key="d2">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </node>
    <node id="IDENTITY ID">
      <data key="d0" />
      <data key="d1">
Identity ID is a unique identifier assigned to a user in AWS Cognito, used to manage user sessions and access.
Identity ID is a unique identifier for a user in AWS Cognito, used to manage user data and access.

</data>
      <data key="d2">32ab448d1972668cba4e2c467ff116a8,515a9fba2517051a51ebb09f8a2c2b06,5c7c1b8a3cde0fc5a186b912ceba73bb,6c6ccd5699a21bd365fb1e2dc13bd5da,964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="SINGAPORE">
      <data key="d0">GEO</data>
      <data key="d1">Singapore is a sovereign city-state and island country in Southeast Asia, known for its advanced economy and vibrant culture.</data>
      <data key="d2">960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="GET PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">Get Properties is an API call in AWS Amplify that allows users to view the properties and metadata of an individual file stored in the service.</data>
      <data key="d2">960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="TRANSFER ACCELERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Transfer Acceleration is a feature in AWS that speeds up the transfer of files to and from Amazon S3, which can be utilized in AWS Amplify.
Transfer Acceleration is a feature that speeds up the upload and download of files to and from Amazon S3.
Transfer Acceleration is a feature that speeds up file uploads to Amazon S3 by using Amazon CloudFront's globally distributed edge locations.
Transfer acceleration is a feature of Amazon S3 that speeds up file uploads from around the world into S3 buckets.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa,5c7c1b8a3cde0fc5a186b912ceba73bb,63bae3a149e50b7452962f7bdd8724ea,960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="DOWNLOAD FILES">
      <data key="d0">EVENT</data>
      <data key="d1">Download Files refers to the process of retrieving files from the AWS Amplify storage service for local use.</data>
      <data key="d2">960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="STORAGE IMAGE REACT UI COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Storage Image React UI Component is a feature in AWS Amplify that allows developers to display images stored in the cloud within their applications.</data>
      <data key="d2">960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="LIST">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">960cd708b2617651d0d7b1a22712d9fa</data>
    </node>
    <node id="LINK TO STORAGE FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The link to a storage file is a generated URL that allows users to access a specific file stored in a cloud service like AWS S3.</data>
      <data key="d2">63bae3a149e50b7452962f7bdd8724ea</data>
    </node>
    <node id="DOWNLOAD DATA API">
      <data key="d0">EVENT</data>
      <data key="d1">The Download Data API is a function in AWS Amplify that allows users to download files from storage.</data>
      <data key="d2">63bae3a149e50b7452962f7bdd8724ea</data>
    </node>
    <node id="FILE NAME">
      <data key="d0">EVENT</data>
      <data key="d1">File name refers to the name assigned to a file, which is used to identify and access it in storage systems.
File Name refers to the name of a file displayed in UI components.</data>
      <data key="d2">63bae3a149e50b7452962f7bdd8724ea,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="PROGRESS CALLBACK">
      <data key="d0">EVENT</data>
      <data key="d1">A progress callback is a function that tracks the progress of file uploads or downloads, providing real-time updates to users.</data>
      <data key="d2">63bae3a149e50b7452962f7bdd8724ea</data>
    </node>
    <node id="FILE UPLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">File upload is an event that occurs when a user selects a file to be uploaded to a server or cloud storage.
File Upload is the process of transferring a file from a local system to a remote server or cloud storage, in this case, uploading images to an S3 bucket for processing.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa,b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="UPLOAD DATA">
      <data key="d0">EVENT</data>
      <data key="d1">Upload Data is an event that refers to the process of transferring files from a local device to cloud storage.
Upload Data is a function in AWS Amplify that uploads files to the storage service.
Upload Data is an operation in AWS Amplify that allows users to upload files to the storage service associated with a record.
</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa,d2da95c5361020f00b8857bfa61b4378,d8d35bb9ab00c5657d67d2362a6bbd10,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="FILE READER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileReader is a web API that allows web applications to asynchronously read the contents of files stored on the user's computer.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa</data>
    </node>
    <node id="MULTIPART UPLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">Multipart upload is a method of uploading large files to Amazon S3 in smaller, manageable parts, allowing for more efficient uploads.</data>
      <data key="d2">2299dbfce715caaaef2102de232e50aa</data>
    </node>
    <node id="IDENTITY POOL ID">
      <data key="d0">PERSON</data>
      <data key="d1">Identity Pool ID is a unique identifier for users in AWS Cognito, allowing for user authentication and access control in applications.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="PICTURE SUBMISSIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Picture submissions refer to the process of users uploading images to a designated storage path in the Amplify Storage system.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="AMAZON S3 BUCKET">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An Amazon S3 bucket is a storage container in AWS S3 where files are stored and managed.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="FILE PATH ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">File path access refers to the rules and permissions set for accessing files stored in the Amplify Storage system.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="PROFILE PICTURES">
      <data key="d0">EVENT</data>
      <data key="d1">Profile pictures are images uploaded by users that are stored in the Amplify Storage system.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="GUESTS">
      <data key="d0">PERSON</data>
      <data key="d1">Guests are users who have limited access to view profile pictures in the Amplify Storage system.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="AUTHENTICATED USERS">
      <data key="d0">PERSON</data>
      <data key="d1">Authenticated users are users who have logged in and have broader access to upload and manage files in the Amplify Storage system.</data>
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="AMPLIFY TEAM DRIVE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">22362693d17a745c23fe5e9a2beecbd9</data>
    </node>
    <node id="USE NUXT APP">
      <data key="d0">EVENT</data>
      <data key="d1">The useNuxtApp() composable is a function in Nuxt.js that allows developers to access the Nuxt application context, including plugins and services.</data>
      <data key="d2">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </node>
    <node id="PLUGINS DIRECTORY">
      <data key="d0">GEO</data>
      <data key="d1">The plugins directory in a Nuxt.js application is where developers can register plugins that enhance the functionality of their applications.</data>
      <data key="d2">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </node>
    <node id="SERVER CONTEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Server context refers to the environment in which server-side code runs, allowing for isolated API calls and data fetching in Nuxt.js applications.</data>
      <data key="d2">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </node>
    <node id="TANSTACK QUERY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TanStack Query is a library for managing server state in React applications, providing features like caching and optimistic updates.
TanStack Query is a library for managing server state in React applications, providing hooks for data fetching and caching.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080,e80ffe46586bd824e28fa24a230442db</data>
    </node>
    <node id="AMPLIFY DATA API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Data API is a service that allows developers to interact with data in a serverless environment, providing CRUD operations for data models.</data>
      <data key="d2">e80ffe46586bd824e28fa24a230442db</data>
    </node>
    <node id="REAL ESTATE PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">Real Estate Properties refers to a list of items that can be retrieved and manipulated through the Amplify Data API.</data>
      <data key="d2">e80ffe46586bd824e28fa24a230442db</data>
    </node>
    <node id="USEQUERY HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The useQuery hook is a function provided by TanStack Query that allows components to fetch data and manage loading and error states.</data>
      <data key="d2">e80ffe46586bd824e28fa24a230442db</data>
    </node>
    <node id="USEMUTATION HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The useMutation hook is a function provided by TanStack Query that allows components to perform create, update, or delete operations on data.</data>
      <data key="d2">e80ffe46586bd824e28fa24a230442db</data>
    </node>
    <node id="REAL ESTATE PROPERTY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Real Estate Property is a data model defined in the Amplify Data API representing individual properties in the real estate market.
Real Estate Property refers to a specific property record being managed and updated within the application.
Real Estate Property refers to the properties being managed and updated through the application.
An event that involves the listing, creation, updating, or deletion of real estate properties in the application.
Real Estate Property is a type of asset that is being managed, updated, and deleted in the application context.
</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e,453096a495a2eae0cd2491664604b080,6cbd446a7960622a6472bb28c61d77e7,b79fdaa9cac2c2fbf9ccc392ed341f6e,e80ffe46586bd824e28fa24a230442db,e8d59516a524ae342a9c7507d5bac243</data>
    </node>
    <node id="TANSTACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TanStack is a collection of open-source libraries for building data-driven applications, including React Query for data fetching and state management.</data>
      <data key="d2">6cbd446a7960622a6472bb28c61d77e7</data>
    </node>
    <node id="QUERY CLIENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Query Client is a part of TanStack that manages the caching and synchronization of data in the application, allowing for efficient data fetching and state management.
Query Client is an instance of the QueryClient class used to manage and cache server state in TanStack Query.
A client that manages queries and mutations for fetching and updating real estate properties.
Query Client is a tool used to manage and cache data for real estate properties in the application.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e,453096a495a2eae0cd2491664604b080,6cbd446a7960622a6472bb28c61d77e7,b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="REAL ESTATE PROPERTY ID">
      <data key="d0">PERSON</data>
      <data key="d1">The Real Estate Property ID is a unique identifier used to reference specific real estate property records in the application.
Real Estate Property ID is a unique identifier for each real estate property in the application.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e,6cbd446a7960622a6472bb28c61d77e7</data>
    </node>
    <node id="GLOBAL LOADING INDICATOR">
      <data key="d0">EVENT</data>
      <data key="d1">Global Loading Indicator is a component that displays a loading state when queries are fetching data.
A component that displays a loading indicator when data is being fetched in the application.
The Global Loading Indicator is a UI component that shows a loading state while data is being fetched or processed in the application.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080,b79fdaa9cac2c2fbf9ccc392ed341f6e,e8d59516a524ae342a9c7507d5bac243</data>
    </node>
    <node id="REACT QUERY DEVTOOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Query Devtools is a tool for inspecting and debugging queries in React applications using TanStack Query.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="MUTATION">
      <data key="d0">EVENT</data>
      <data key="d1">Mutation refers to the operation of modifying data, such as deleting or updating a real estate property in the application.
An event that represents the process of creating, updating, or deleting a real estate property.
A mutation is a request to modify data in a database, typically used in the context of APIs to create, update, or delete records.
Mutation is an operation in Amplify that allows clients to modify data in the backend.
A mutation is an operation that modifies data in a database or API, allowing for the creation, updating, or deletion of records.
Mutation refers to the operation of modifying data in a database or application model, often triggering updates to subscriptions.
</data>
      <data key="d2">0540b18a392d2ccc8d9b4915eed9acfe,07423380fe232270f2991cb99f038a6e,453096a495a2eae0cd2491664604b080,a525cbfc03ba1b986f30ce2280067dda,b79fdaa9cac2c2fbf9ccc392ed341f6e,c3958c03e7b6908e78ca65d6563b3555,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="USE QUERY CLIENT">
      <data key="d0">EVENT</data>
      <data key="d1">Use Query Client is a hook that allows components to access the query client instance for managing server state.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="USE MUTATION">
      <data key="d0">EVENT</data>
      <data key="d1">Use Mutation is a hook that allows components to perform mutations on server data, such as creating, updating, or deleting records.
A hook that allows the application to perform create, update, or delete operations on real estate properties.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080,b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="ON MUTATE">
      <data key="d0">EVENT</data>
      <data key="d1">On Mutate is a callback function that is executed when a mutation is initiated, allowing for optimistic updates.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="ON ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">On Error is a callback function that is executed if a mutation fails, allowing for error handling and recovery.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="ON SETTLED">
      <data key="d0">EVENT</data>
      <data key="d1">On Settled is a callback function that is executed after a mutation is either successful or has failed, allowing for final state updates.</data>
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="REAL ESTATE PROPERTY DETAILS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">453096a495a2eae0cd2491664604b080</data>
    </node>
    <node id="REAL ESTATE PROPERTY DETAIL VIEW">
      <data key="d0">EVENT</data>
      <data key="d1">An event that displays the details of a specific real estate property.
Real Estate Property Detail View is an event where the details of a specific real estate property are displayed to the user.
The Real Estate Property Detail View is a component that displays detailed information about a specific real estate property selected by the user.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e,b79fdaa9cac2c2fbf9ccc392ed341f6e,e8d59516a524ae342a9c7507d5bac243</data>
    </node>
    <node id="USE QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">A hook that allows the application to fetch data from the real estate properties API.</data>
      <data key="d2">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="IS LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">A state that indicates whether the application is currently loading data from the API.</data>
      <data key="d2">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="IS SUCCESS">
      <data key="d0">EVENT</data>
      <data key="d1">A state that indicates whether the data fetching operation was successful.</data>
      <data key="d2">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="IS ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">A state that indicates whether there was an error during the data fetching operation.</data>
      <data key="d2">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </node>
    <node id="UPDATE MUTATION">
      <data key="d0">EVENT</data>
      <data key="d1">Update Mutation is an event that handles the updating of real estate property details in the application.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="DELETE MUTATION">
      <data key="d0">EVENT</data>
      <data key="d1">Delete Mutation is an event that handles the deletion of a real estate property from the application.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="NEW REAL ESTATE PROPERTY">
      <data key="d0">EVENT</data>
      <data key="d1">New Real Estate Property refers to the creation of a new property entry in the application.</data>
      <data key="d2">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </node>
    <node id="DATA MANAGER">
      <data key="d0">EVENT</data>
      <data key="d1">The Data Manager is a feature within the Amplify Console that allows users to manage application data, including creating, updating, and deleting records.
The Data Manager is a feature in the Amplify console that allows users to manage and view data stored in their application's backend.
The Data Manager is a feature in the Amplify Console that allows users to view and manage the data in their applications.</data>
      <data key="d2">db7dfb25749de8f86ac15552fec549ec,e8d59516a524ae342a9c7507d5bac243,fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="SERVER-SIDE RUNTIMES">
      <data key="d0">EVENT</data>
      <data key="d1">Server-side runtimes refer to the environments where server-side code is executed, such as in Next.js applications.</data>
      <data key="d2">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </node>
    <node id="X-RAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS X-Ray is a service that helps developers analyze and debug production applications, providing insights into performance and issues.</data>
      <data key="d2">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </node>
    <node id="TIME-TO-LIVE">
      <data key="d0">EVENT</data>
      <data key="d1">Time-to-live (TTL) is a feature in DynamoDB that automatically deletes items after a specified time period, helping manage data lifecycle.</data>
      <data key="d2">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </node>
    <node id="PROVISIONED THROUGHOUT">
      <data key="d0">EVENT</data>
      <data key="d1">Provisioned throughput is a setting in DynamoDB that specifies the number of reads and writes per second for a table, allowing for performance optimization.</data>
      <data key="d2">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </node>
    <node id="AMAZON DYNAMODB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.
Amazon DynamoDB is a NoSQL database service provided by AWS, used by Amplify for data storage.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="SERVER CLIENT">
      <data key="d0">EVENT</data>
      <data key="d1">A server client is a data client generated for server-side operations in Next.js, allowing interaction with APIs and data sources.</data>
      <data key="d2">f307707abfeb56b5061ee3f77f2b7cb5</data>
    </node>
    <node id="APPSYNC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AppSync is a serverless backend for mobile, web, and enterprise applications that enables developers to build and manage GraphQL APIs.
AWS AppSync is a serverless backend for mobile, web, and enterprise applications that enables developers to build scalable applications with real-time data and offline capabilities.
AWS AppSync is a serverless backend for mobile, web, and enterprise applications that enables real-time data queries and synchronization.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,ef896aab67cf49595a11632404eaa374,fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="CHRIS">
      <data key="d0">PERSON</data>
      <data key="d1">Chris is a user who created a post using the Amplify Data client in the example provided.
Chris is the author of the content in the document, likely a contributor or developer involved in the AWS Amplify project.
Chris is the author of a post in the example provided, demonstrating how to use the addPost mutation.</data>
      <data key="d2">00766f255251029b8dd88d45d83f125e,ef896aab67cf49595a11632404eaa374,fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="POSTTABLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">00766f255251029b8dd88d45d83f125e</data>
    </node>
    <node id="PUTITEM">
      <data key="d0">EVENT</data>
      <data key="d1">PutItem is a request operation in DynamoDB that creates a new item or replaces an old item with a new item.</data>
      <data key="d2">fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="UPDATEITEM">
      <data key="d0">EVENT</data>
      <data key="d1">UpdateItem is a request operation in DynamoDB that modifies an existing item's attributes.</data>
      <data key="d2">fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="DELETEITEM">
      <data key="d0">EVENT</data>
      <data key="d1">DeleteItem is a request operation in DynamoDB that deletes a single item from a table.</data>
      <data key="d2">fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="SCAN">
      <data key="d0">EVENT</data>
      <data key="d1">Scan is a request operation in DynamoDB that examines every item in a table and returns all data attributes by default.</data>
      <data key="d2">fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="SYNC">
      <data key="d0">EVENT</data>
      <data key="d1">Sync is a request operation in DynamoDB that retrieves all results from a table and only the data altered since the last query.</data>
      <data key="d2">fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="BATCHGETITEM">
      <data key="d0">EVENT</data>
      <data key="d1">BatchGetItem is a request operation in DynamoDB that retrieves multiple items from one or more tables in a single request.)&lt;|COMPLETE|&gt;
BatchGetItem is a request operation in DynamoDB that retrieves multiple items from one or more tables.</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488,fc6e2a28447409d2b0f12296647c9470</data>
    </node>
    <node id="MYSQL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MySQL is an open-source relational database management system based on SQL (Structured Query Language).
MySQL is an open-source relational database management system that is widely used for web applications and data storage.
MySQL is a widely used open-source relational database management system that does not support time zone offsets in date time or timestamp fields.
MySQL is an open-source relational database management system that can be integrated with Amplify Data for application data management.
MySQL is an open-source relational database management system mentioned in the context of support in Gen 2.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47,4189c0e92cbda0cbd95165143d5ba488,4b1835219f538ab9f3ba5712dcb54610,e8bb64825eb8da944e09e46a90be853c,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="POSTGRESQL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PostgreSQL is an open-source relational database management system emphasizing extensibility and SQL compliance.
PostgreSQL is an advanced open-source relational database management system known for its robustness and support for complex queries.
PostgreSQL is an advanced open-source relational database management system that supports date time or timestamp values with an offset.
PostgreSQL is an advanced open-source relational database that can be connected to Amplify Data for managing application data.
PostgreSQL is an open-source relational database management system mentioned in the context of support in Gen 2.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47,4189c0e92cbda0cbd95165143d5ba488,4b1835219f538ab9f3ba5712dcb54610,e8bb64825eb8da944e09e46a90be853c,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="BATCHDELETEITEM">
      <data key="d0">EVENT</data>
      <data key="d1">BatchDeleteItem is a request operation in DynamoDB that deletes multiple items from one or more tables.</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488</data>
    </node>
    <node id="BATCHPUTITEM">
      <data key="d0">EVENT</data>
      <data key="d1">BatchPutItem is a request operation in DynamoDB that puts multiple items into one or more tables.</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488</data>
    </node>
    <node id="TRANSACTGETITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">TransactGetItems is a request operation in DynamoDB that retrieves multiple items in a single transaction.</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488</data>
    </node>
    <node id="TRANSACTWRITEITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">TransactWriteItems is a request operation in DynamoDB that writes multiple items in a single transaction.</data>
      <data key="d2">4189c0e92cbda0cbd95165143d5ba488</data>
    </node>
    <node id="VPC">
      <data key="d0">GEO</data>
      <data key="d1">A Virtual Private Cloud (VPC) is a private cloud hosted within a public cloud, allowing users to create isolated networks for their resources.
A Virtual Private Cloud (VPC) is a private network within the AWS cloud that allows users to define their own network configuration.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47,3538ba83bb1b1b6801c4b0e5bc962812</data>
    </node>
    <node id="SQL_CONNECTION_STRING">
      <data key="d0">EVENT</data>
      <data key="d1">A connection string used to connect to a SQL database, containing information such as hostname, port, username, password, and database name.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47</data>
    </node>
    <node id="SCHEMA.SQL.TS">
      <data key="d0">EVENT</data>
      <data key="d1">The schema.sql.ts file is a TypeScript representation of the database schema generated from the database connection information.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47</data>
    </node>
    <node id="AMPLIFY SANDBOX">
      <data key="d0">EVENT</data>
      <data key="d1">The Amplify sandbox is a testing environment provided by Amplify for validating data resources and configurations before deployment.</data>
      <data key="d2">1950a5e06a03170ed4dc66a00668ea47</data>
    </node>
    <node id="SQL LAMBDA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SQL Lambda is a function created by Amplify that allows querying and writing data to a database from an API.</data>
      <data key="d2">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </node>
    <node id="UPDATER LAMBDA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Updater Lambda is a function that automatically keeps the SQL Lambda up-to-date by managing its Lambda Layers.</data>
      <data key="d2">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </node>
    <node id="COMMENT">
      <data key="d0">EVENT</data>
      <data key="d1">A Comment is a data model that represents feedback or discussion related to a Note in the database.</data>
      <data key="d2">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </node>
    <node id="NOTE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </node>
    <node id="DEBUG MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Debug Mode is an operational state that allows developers to see actual SQL errors instead of generic errors from underlying API responses.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="SQL LAMBDA FUNCTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The SQL Lambda Function is an AWS Lambda function that interacts with SQL databases, following a specific naming convention for identification.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="NEXJS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Next.js is a React framework that enables server-side rendering and generating static websites for React-based web applications.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="VARCHAR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Varchar is a variable-length string data type in SQL that can store character strings of varying lengths up to a specified limit.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="TINYTEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tinytext is a string data type in SQL that can store very small strings, up to 255 characters.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="TEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Text is a data type in SQL used to store large amounts of text data, typically up to 65,535 characters.

Text refers to the written input that is processed by the ConvertTextToSpeech function to generate audio output.
Text is a component used to display text content in the UI.
Text is a UI component in Amplify UI that can be styled with typography properties.
Text is a UI component in Amplify UI used to display textual content, which can vary in style based on the theme applied.
Text is a UI component in Amplify UI used to display textual content within an application.
The Text component is used to display text content in Amplify UI applications.
Text is a component in Amplify UI used for displaying text content in the user interface.
The Text component is used to display textual content within the UI, providing information and instructions to users.
The Text component in AWS Amplify UI is used to display text content within applications.
Text is a component in Amplify UI used to display text content within other components like Card and Accordion.
Text is a component in the AWS Amplify UI React library used for displaying text elements in a user interface.

Text is a component used to display text content in the AWS Amplify UI library.
Text is a component used in user interfaces to display information and instructions to users.
A component used to display text in the user interface
Text is a component in AWS Amplify UI React used for displaying text with customizable styles.
Text is a UI component used to display text content, which can include labels, descriptions, and other textual information.
Text is a UI component used to display text content in the AWS Amplify UI React library, often styled for emphasis or clarity.
Text is a UI component used to display text content in various styles and formats within the application.
Text is a component in React used to display text content, allowing for various styling options.
Text is a component in AWS Amplify UI that displays text content, often used for labels or instructions within forms.
Text is a component in Amplify UI used to display text in an interface, rendering a &lt;p&gt; element by default.
Text is a component in Amplify UI that displays text with various styling options, including variations for different contexts like primary, secondary, and error.
Text is a UI component that displays textual information in web applications, often styled and formatted for better readability.
Text is a component in Amplify UI used to display text content within the user interface.
The Text primitive in Amplify UI is used to display simple strings of text in an interface.
Text is a component from the @aws-amplify/ui-react library used to display text in applications.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,12c9fa6332d9cd62a8cbe8be18fd540e,18256f324d7f8fc0edac5bbf717bf76d,1a2c25b18b52cc9adff7a263b890a3b5,1ceae74b49c1b621d815e85b8ca49988,1d9edaeddd47c47bbc0bda9363e7b2e5,229e08ddbc773881c8e1ca68ba06dea8,26dcbf3b494b9d9117cffa213b39f7cf,3bf357b72dac2808e7ba2223ab2c4745,3c34af088a28c5276b514cfdf986b3d6,56553341236a20419cc336c60c2bed04,5b0d50411f54d1ef65278d02161d11d7,5c2098e04771d356430a7ff2887e471b,6264f18714899ee18445e9c4535f5ff2,6980c90f0a7a58894d9518accd2ab5dd,6edc6c7e13a23d971e48b75724b50d5f,717f3b1fb6a6ce86c291aca158771f33,72f7bd8a9eb9039eabf2d7d1ff4c9601,868b364b65a596f02a214b12ca0cbb6a,9939e974ca8f24b6b7f34bbf89addb7e,a405b9f832ed918dd2c0ed33bb2b5808,b13ba75bb69bab84cc548bc3c7fdf65d,b8276fb595f7138780baf2d76c97bb37,e3c4629b893f38a9c103147f3ea608f3,e7727282a239fcb7a1e69d029f0709ba,e8bb64825eb8da944e09e46a90be853c,e9839e578f896e0d269ce78abd50bae3,e99506740df57dd0a465425dd334652b,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="MEDIUMTEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Mediumtext is a data type in SQL that can store text strings up to 16,777,215 characters.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="LONGTEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Longtext is a data type in SQL that can store very large text strings, up to 4,294,967,295 characters.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="GEOMETRY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Geometry is a data type in SQL used to store geometric data such as points, lines, and polygons.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="POINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Point is a geometric data type in SQL that represents a single location in a two-dimensional space.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="LINESTRING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Linestring is a geometric data type in SQL that represents a sequence of points connected by straight lines.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="GEOMETRYCOLLECTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GeometryCollection is a data type in SQL that can store a collection of different geometric shapes.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="SMALLINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Smallint is a numeric data type in SQL that can store small integer values, typically ranging from -32,768 to 32,767.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="MEDIUMINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Mediumint is a numeric data type in SQL that can store medium-sized integer values, typically ranging from -8,388,608 to 8,388,607.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="INT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Int is a numeric data type in SQL that can store standard integer values, typically ranging from -2,147,483,648 to 2,147,483,647.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="INTEGER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Integer is a synonym for the int data type in SQL, used to store whole numbers.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="TINYINT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tinyint is a numeric data type in SQL that can store very small integer values, typically ranging from 0 to 255.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="FLOAT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Float is a numeric data type in SQL that can store floating-point numbers, allowing for decimal values.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="DOUBLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Double is a numeric data type in SQL that can store double-precision floating-point numbers, allowing for more precision than float.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="DECIMAL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Decimal is a numeric data type in SQL that can store exact numeric values with a specified precision and scale.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="DEC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dec is a synonym for the decimal data type in SQL, used to store exact numeric values.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="NUMERIC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Numeric is a synonym for the decimal data type in SQL, used to store exact numeric values.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="BINARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Binary is a data type in SQL used to store binary data, such as images or files.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="VARBINARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Varbinary is a variable-length binary data type in SQL that can store binary data of varying lengths.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="TINYBLOB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tinyblob is a binary data type in SQL that can store very small binary objects, up to 255 bytes.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="MEDIUMBLOB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Mediumblob is a binary data type in SQL that can store binary objects up to 16,777,215 bytes.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="LONGBLOB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Longblob is a binary data type in SQL that can store very large binary objects, up to 4,294,967,295 bytes.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="BOOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bool is a data type in SQL that can store boolean values, typically represented as true or false.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="BIT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Bit is a numeric data type in SQL that can store a single bit value, typically 0 or 1.</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="ENUM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Enum is a data type in SQL that allows for a predefined set of values for a column.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">e8bb64825eb8da944e09e46a90be853c</data>
    </node>
    <node id="SONG">
      <data key="d0">EVENT</data>
      <data key="d1">A song is a record created in the application that can be associated with a file, such as cover art, and is managed through the Amplify Data client.
Song is a data model representing a musical piece, including attributes like name and cover art.</data>
      <data key="d2">502c34bc5ff7e00594c0a0d9df58834d,d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="CRUD">
      <data key="d0">EVENT</data>
      <data key="d1">CRUD refers to the Create, Read, Update, and Delete operations that can be performed on records in the Amplify Data client.
CRUD stands for Create, Read, Update, Delete, which are the four basic operations for managing data in applications, often implemented in AWS Amplify.</data>
      <data key="d2">1ef9b6a9263edfd718636bcbc29f4a72,502c34bc5ff7e00594c0a0d9df58834d</data>
    </node>
    <node id="AMPLIFY DATA CLIENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">502c34bc5ff7e00594c0a0d9df58834d</data>
    </node>
    <node id="SRC/APP.TSX">
      <data key="d0">EVENT</data>
      <data key="d1">src/App.tsx is a code file that contains examples of how to interact with AWS Amplify's API and storage services.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="PHOTOALBUM">
      <data key="d0">EVENT</data>
      <data key="d1">PhotoAlbum is a data model in AWS Amplify that allows users to create records associated with multiple image files.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="CURRENTSONG">
      <data key="d0">PERSON</data>
      <data key="d1">CurrentSong is a variable representing the song currently being processed in the application.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="SIGNED URL">
      <data key="d0">EVENT</data>
      <data key="d1">A signed URL is a secure link that allows access to a specific resource in AWS, typically used for downloading files.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="REMOVE">
      <data key="d0">EVENT</data>
      <data key="d1">Remove is a function in AWS Amplify that deletes a specified file from storage.
Remove is an operation in AWS Amplify that deletes files from storage and can be associated with records in the application.
Remove is a function that handles the removal of file associations from the song records in the application.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378,d8d35bb9ab00c5657d67d2362a6bbd10,ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="GENERATE CLIENT">
      <data key="d0">EVENT</data>
      <data key="d1">Generate Client is a function in AWS Amplify that creates a client instance for interacting with the API.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="AUTH MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Auth Mode is a parameter that specifies the authentication method used when accessing AWS services.</data>
      <data key="d2">d2da95c5361020f00b8857bfa61b4378</data>
    </node>
    <node id="PHOTO ALBUM">
      <data key="d0">EVENT</data>
      <data key="d1">A Photo Album is a record that can contain multiple images and is managed through the AWS Amplify platform.</data>
      <data key="d2">ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="CURRENT PHOTO ALBUM">
      <data key="d0">PERSON</data>
      <data key="d1">Current Photo Album refers to the specific instance of a photo album that is being manipulated or accessed in the application.</data>
      <data key="d2">ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="IMAGE PATHS">
      <data key="d0">EVENT</data>
      <data key="d1">Image Paths are the file paths associated with images in a photo album, used to retrieve and manage images in AWS Amplify storage.</data>
      <data key="d2">ffefc5d1a6af5c09544184c9c18a3567</data>
    </node>
    <node id="CREATE SONG WITH IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Create Song With Image is a function that creates a new song record and associates an uploaded image with it.</data>
      <data key="d2">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="ADD NEW IMAGE TO SONG">
      <data key="d0">EVENT</data>
      <data key="d1">Add New Image To Song is a function that updates an existing song record to associate a new image with it.</data>
      <data key="d2">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="GET IMAGE FOR CURRENT SONG">
      <data key="d0">EVENT</data>
      <data key="d1">Get Image For Current Song is a function that retrieves the image associated with the currently selected song.</data>
      <data key="d2">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="REMOVE IMAGE FROM SONG">
      <data key="d0">EVENT</data>
      <data key="d1">Remove Image From Song is a function that removes the image association from the current song record while keeping the song data intact.</data>
      <data key="d2">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="DELETE IMAGE FOR CURRENT SONG">
      <data key="d0">EVENT</data>
      <data key="d1">Delete Image For Current Song is a function that removes both the image association and the image file from storage for the current song.</data>
      <data key="d2">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </node>
    <node id="CLIENTSCHEMA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ClientSchema is a type used in AWS Amplify to define the structure of data models and their relationships in the backend.
ClientSchema is a type that defines the structure of the data schema used in the Amplify application, ensuring type safety and consistency.
ClientSchema is a type that represents the schema for the client-side data model in Amplify.
ClientSchema is a type that represents the schema for the client-side data structure in the Amplify framework.
ClientSchema is a type that represents the schema used by the client in the application for data management.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc,61659c64fca58284b65ddb212f319f91,6980c90f0a7a58894d9518accd2ab5dd,7040175c91fe86a908046a9b485b0410,f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="CHANNEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Channel is a data model in AWS Amplify that manages the names of channels for PubSub messaging.
Channel is a model in Amplify that manages communication between different parts of an application.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e,f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="COVER ART">
      <data key="d0">EVENT</data>
      <data key="d1">Cover Art is the image associated with a song, which can be added, updated, or removed in the application.</data>
      <data key="d2">f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="CURRENT SONG">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f0c17549b011af117faf3f7556948996</data>
    </node>
    <node id="PUBLISH">
      <data key="d0">EVENT</data>
      <data key="d1">Publish is an event in Amplify that allows users to send messages to a specified channel.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e</data>
    </node>
    <node id="RECEIVE">
      <data key="d0">EVENT</data>
      <data key="d1">Receive is an event in Amplify that allows users to subscribe to messages from a specified channel.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e</data>
    </node>
    <node id="RECEIVE.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Receive.js is a file in Amplify that defines handlers for subscription events.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e</data>
    </node>
    <node id="SUBSCRIPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Subscription is an operation in Amplify that allows clients to listen for real-time updates from the backend.
A subscription is a mechanism that allows clients to receive real-time updates from a server when data changes, often used in GraphQL APIs.
Subscription is a feature that allows the server to send data updates to clients in real-time based on certain events or changes.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e,a525cbfc03ba1b986f30ce2280067dda,c3958c03e7b6908e78ca65d6563b3555</data>
    </node>
    <node id="CUSTOM TYPE">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Type is a user-defined data type in Amplify that is not backed by a database table.</data>
      <data key="d2">07423380fe232270f2991cb99f038a6e</data>
    </node>
    <node id="PUBLISH.JS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">07423380fe232270f2991cb99f038a6e</data>
    </node>
    <node id="HTTP DATASOURCE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An HTTP Data Source is a configuration in Amplify that allows integration with external REST APIs.</data>
      <data key="d2">ef896aab67cf49595a11632404eaa374</data>
    </node>
    <node id="CUSTOM QUERIES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom queries are user-defined queries in Amplify that allow for specific data retrieval from the backend.</data>
      <data key="d2">ef896aab67cf49595a11632404eaa374</data>
    </node>
    <node id="MUTATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Mutations are operations that modify data in the backend, such as adding, updating, or deleting records.</data>
      <data key="d2">ef896aab67cf49595a11632404eaa374</data>
    </node>
    <node id="AMAZON TRANSLATE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Translate is a neural machine translation service provided by Amazon Web Services (AWS) that uses advanced deep learning technologies for fast and high-quality language translation.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="AMAZON WEB SERVICES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments.
Amazon Web Services (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6,58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="TRANSLATE API">
      <data key="d0">EVENT</data>
      <data key="d1">The Translate API is a service that allows applications to perform language translation using Amazon Translate's capabilities.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="TRANSLATE.JS">
      <data key="d0">EVENT</data>
      <data key="d1">Translate.js is a custom file created to define resolvers for the translation process in the AWS Amplify application.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="MAIN.TSX">
      <data key="d0">EVENT</data>
      <data key="d1">Main.tsx is the entry point of the application where the AWS Amplify configuration is loaded to enable the use of AWS services.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="MULTILINGUAL SUPPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Multilingual support refers to the capability of applications to communicate in multiple languages, which is enabled by Amazon Translate.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="REAL-TIME TRANSLATION">
      <data key="d0">EVENT</data>
      <data key="d1">Real-time translation is a feature of Amazon Translate that allows for immediate translation of dynamic content.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="BATCH TRANSLATION">
      <data key="d0">EVENT</data>
      <data key="d1">Batch translation is a feature of Amazon Translate that allows for the translation of larger volumes of text at once.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="PAY-AS-YOU-GO PRICING MODEL">
      <data key="d0">EVENT</data>
      <data key="d1">The pay-as-you-go pricing model is a cost-effective approach used by Amazon Translate, allowing users to pay only for the services they use.</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="APPLICATIONS AND SERVICES">
      <data key="d0">EVENT</data>
      <data key="d1">Applications and services refer to the various software solutions that can integrate Amazon Translate to provide translation capabilities.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </node>
    <node id="AMAZON REKOGNITION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Rekognition is an advanced machine learning service provided by Amazon Web Services (AWS) that allows developers to incorporate image and video analysis into their applications, offering features like object detection, text recognition, and facial analysis.
Amazon Rekognition is a service provided by AWS that uses machine learning to recognize objects, people, text, scenes, and activities in images, as well as to detect inappropriate content.
Amazon Rekognition is a service that provides image and video analysis, including facial recognition and liveness detection.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965,9bfb7d7a715bed7eec92b32f7a175bf5,b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="REKOGNITION DATA SOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">The Rekognition Data Source is an HTTP Data Source configured to interact with the Amazon Rekognition service for image analysis.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="QUICKSTART GUIDE">
      <data key="d0">EVENT</data>
      <data key="d1">The Quickstart guide provides instructions for setting up projects using AWS Amplify and integrating various AWS services.
The Quickstart guide provides instructions for setting up projects that integrate Amazon Polly, helping developers get started quickly.
The Quickstart guide is a set of instructions designed to help users quickly set up and start using AWS services and features.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6,9bfb7d7a715bed7eec92b32f7a175bf5,df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="IMAGE ANALYSIS">
      <data key="d0">EVENT</data>
      <data key="d1">Image analysis refers to the process of extracting meaningful information from images, which is a key feature of Amazon Rekognition.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="TEXT DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Text detection is a feature of Amazon Rekognition that identifies and extracts text from images and videos.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="FACIAL ANALYSIS">
      <data key="d0">EVENT</data>
      <data key="d1">Facial analysis is a capability of Amazon Rekognition that allows for the detection and analysis of human faces in images and videos.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="CONTENT MODERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Content moderation is a feature of Amazon Rekognition that helps identify inappropriate or objectionable content in images and videos.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="OBJECT AND SCENE DETECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Object and scene detection is a functionality of Amazon Rekognition that identifies various objects and scenes within images and videos.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="FUNCTION HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">The function handler is a piece of code that processes requests and responses in AWS Lambda functions, often used in conjunction with AWS services like Amazon Rekognition.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="STORAGE RESOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">A storage resource in AWS refers to the configuration and management of data storage solutions, such as S3 buckets, for applications.</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="DATA SOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">A data source in AWS refers to a connection to a service or database that provides data for applications, such as the Rekognition Data Source for image analysis.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </node>
    <node id="REKOGNITION SERVICE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Rekognition Service is a specific service within AWS that allows users to analyze images and videos for various attributes, including text detection.</data>
      <data key="d2">b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="REACT APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A React app is a web application built using React, a JavaScript library for building user interfaces, which in this context is used to interact with AWS services.</data>
      <data key="d2">b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="CUSTOM QUERY">
      <data key="d0">EVENT</data>
      <data key="d1">A Custom Query is a user-defined function in AWS Amplify that allows developers to create specific queries to interact with data sources, such as invoking the Rekognition Service for text detection.
</data>
      <data key="d2">0dfb84288d523f687fe010cdbeb5603e,b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="TEXT RECOGNITION">
      <data key="d0">EVENT</data>
      <data key="d1">Text Recognition is the process of identifying and extracting text from images using machine learning technologies, as performed by the Amazon Rekognition service.</data>
      <data key="d2">b0e5a5345f8f86afeb8b60d97f953436</data>
    </node>
    <node id="POLLY CLIENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Polly Client is a component of the AWS SDK that allows developers to interact with the Amazon Polly service to convert text to speech.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="LIFELIKE SPEECH">
      <data key="d0">EVENT</data>
      <data key="d1">Lifelike speech refers to the realistic and natural-sounding speech produced by Amazon Polly's text-to-speech technology.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="TEXT-TO-SPEECH">
      <data key="d0">EVENT</data>
      <data key="d1">Text-to-speech (TTS) is a technology that converts written text into spoken words, enabling applications to have voice interactions.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="DEEP LEARNING TECHNOLOGIES">
      <data key="d0">EVENT</data>
      <data key="d1">Deep learning technologies are a subset of machine learning that use neural networks with many layers to analyze various factors of data.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="AUDIO CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">Audio content refers to any content that is delivered in an audio format, such as speech or music, often used for accessibility purposes.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="VISUALLY IMPAIRED">
      <data key="d0">PERSON</data>
      <data key="d1">Visually impaired individuals are those who have a partial or total inability to see, often benefiting from audio content for accessibility.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="E-LEARNING EXPERIENCES">
      <data key="d0">EVENT</data>
      <data key="d1">E-learning experiences are educational experiences delivered through electronic means, often enhanced by interactive elements like voice.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="SPEECH CAPABILITIES">
      <data key="d0">EVENT</data>
      <data key="d1">Speech capabilities refer to the ability of applications to produce spoken language from written text, facilitated by services like Amazon Polly.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="SPEECH SYNTHESIS MARKUP LANGUAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Speech Synthesis Markup Language (SSML) is a markup language used to control aspects of speech synthesis, allowing for customization of voice output.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="SPEECH MARKS">
      <data key="d0">EVENT</data>
      <data key="d1">Speech marks are timing information generated during speech synthesis that can be used to synchronize audio with other media.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="PAY-AS-YOU-GO PRICING">
      <data key="d0">EVENT</data>
      <data key="d1">Pay-as-you-go pricing is a billing model used by Amazon Polly that allows users to pay only for the resources they consume, making it cost-effective.</data>
      <data key="d2">3c34af088a28c5276b514cfdf986b3d6</data>
    </node>
    <node id="AMAZON BEDROCK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Bedrock is a fully managed service that simplifies the use of foundation models for generative AI development, offering a selection of high-performing models from leading AI companies.
Amazon Bedrock is a service that provides access to foundation models for various applications, including generative AI capabilities.</data>
      <data key="d2">405cec78205a77ac97466698654060ca,6980c90f0a7a58894d9518accd2ab5dd</data>
    </node>
    <node id="CONVERTTEXTTOSPEECH">
      <data key="d0">EVENT</data>
      <data key="d1">ConvertTextToSpeech is a function that converts text input into speech audio output, allowing users to synthesize spoken words from written text.</data>
      <data key="d2">6980c90f0a7a58894d9518accd2ab5dd</data>
    </node>
    <node id="POLLY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Polly is a service that turns text into lifelike speech, allowing developers to create applications that talk and build entirely new categories of speech-enabled products.</data>
      <data key="d2">6980c90f0a7a58894d9518accd2ab5dd</data>
    </node>
    <node id="ANTHROPIC">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Anthropic is a company that develops AI models, including Claude 3 Haiku, which is used for generating content.</data>
      <data key="d2">405cec78205a77ac97466698654060ca</data>
    </node>
    <node id="CLAUDE 3 HAIKU">
      <data key="d0">EVENT</data>
      <data key="d1">Claude 3 Haiku is a generative AI model developed by Anthropic, designed to create haikus based on user prompts.</data>
      <data key="d2">405cec78205a77ac97466698654060ca</data>
    </node>
    <node id="BEDROCKRUNTIMECLIENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">BedrockRuntimeClient is a client used to interact with the Bedrock service, allowing invocation of AI models.</data>
      <data key="d2">405cec78205a77ac97466698654060ca</data>
    </node>
    <node id="GENERATE HAIKU FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">The Generate Haiku Function is a custom lambda function that invokes the Claude 3 Haiku model to generate haikus based on user input.</data>
      <data key="d2">405cec78205a77ac97466698654060ca</data>
    </node>
    <node id="MODEL ID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">405cec78205a77ac97466698654060ca</data>
    </node>
    <node id="ORDERSTATUSCHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">OrderStatusChange is a custom type representing an order status change event, including fields for order ID, status, and message.
OrderStatusChange is a custom event type that indicates a change in the status of an order, such as pending, shipped, or delivered.
OrderStatusChange is a custom type that includes details about an order's status change, such as orderId, status, and message.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98,31c31b4a395fff86f3ced612876d11dc,61659c64fca58284b65ddb212f319f91</data>
    </node>
    <node id="FORMEVENT">
      <data key="d0">EVENT</data>
      <data key="d1">FormEvent is a type representing an event triggered by a form submission in a web application, typically containing user input data.</data>
      <data key="d2">290d8b37bd253372b8a78b79be1eca98</data>
    </node>
    <node id="EVENTBRIDGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon EventBridge is a serverless event bus service that makes it easy to connect applications using events.
EventBridge is a serverless event bus service that makes it easy to connect applications using events.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc,61659c64fca58284b65ddb212f319f91</data>
    </node>
    <node id="ORDERSTATUS">
      <data key="d0">EVENT</data>
      <data key="d1">OrderStatus is an enumeration that defines the possible statuses of an order, including OrderPending, OrderShipped, and OrderDelivered.</data>
      <data key="d2">61659c64fca58284b65ddb212f319f91</data>
    </node>
    <node id="ORDERID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">61659c64fca58284b65ddb212f319f91</data>
    </node>
    <node id="CFNRULE">
      <data key="d0">EVENT</data>
      <data key="d1">The CfnRule construct is used to create an EventBridge rule that routes events to the AppSync API.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="APPSYNC API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The AppSync API is a managed service that allows developers to build scalable applications with real-time data and offline capabilities.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="PUBLISHORDERFROMEVENTBRIDGE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom mutation that is invoked when an event is received by the EventBridge rule.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="PUBLISHORDERTOEVENTBRIDGE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom mutation that publishes events to the EventBridge from its resolver.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="ONORDERSTATUSCHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom subscription that can be triggered by EventBridge or by a client invoking a mutation.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="MYLIBRARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">MyLibrary is a defined data source schema that includes custom queries and mutations for managing order statuses.</data>
      <data key="d2">31c31b4a395fff86f3ced612876d11dc</data>
    </node>
    <node id="AMPLIFY API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Amplify API is a set of tools and services that enables developers to build scalable full-stack applications powered by AWS.</data>
      <data key="d2">df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="OPENSEARCH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon OpenSearch Service is a managed service that simplifies the deployment, operation, and scaling of OpenSearch and Elasticsearch clusters in the cloud.
OpenSearch is a search and analytics engine that allows for real-time data exploration and analysis.
OpenSearch is an open-source search and analytics suite derived from Elasticsearch, designed for real-time data ingestion and search capabilities.
OpenSearch is an open-source search and analytics suite derived from Elasticsearch, designed for large-scale data search and analysis.
OpenSearch is a search and analytics engine that is used for ingesting and querying data from various sources, including DynamoDB and S3.
OpenSearch is a search and analytics engine that allows for real-time data ingestion and querying.
OpenSearch is an open-source search and analytics suite derived from Elasticsearch, mentioned in relation to data search capabilities.</data>
      <data key="d2">3e8319ba39b8ba21d17ce5e988924ff2,4b1835219f538ab9f3ba5712dcb54610,57f05fa9d96242d8c2cb2869e13f9e1c,7f29cbfbdd4aea2867cf6f65ba567185,ad25e8455b3a65969a17cb69a66a58ac,df66d576a32835aae9d3957800932b5f,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="CUSTOM BUSINESS LOGIC">
      <data key="d0">EVENT</data>
      <data key="d1">Custom business logic refers to the specific rules and processes defined by developers to handle data and events within an application.</data>
      <data key="d2">df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="DYNAMODB STREAMS">
      <data key="d0">EVENT</data>
      <data key="d1">DynamoDB Streams is a feature that captures changes to items in a DynamoDB table and allows applications to respond to these changes in real-time.</data>
      <data key="d2">df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="OPENSEARCH INGESTION">
      <data key="d0">EVENT</data>
      <data key="d1">OpenSearch Ingestion is a process that synchronizes data between DynamoDB and OpenSearch, enabling real-time data updates and insights.</data>
      <data key="d2">df66d576a32835aae9d3957800932b5f</data>
    </node>
    <node id="DATA STACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Data Stack refers to the collection of resources and services used to manage and analyze data in the backend.
The Data Stack refers to the collection of AWS services and resources used to manage and process data within an application.</data>
      <data key="d2">7f29cbfbdd4aea2867cf6f65ba567185,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="OPENSEARCH INTEGRATION PIPELINE">
      <data key="d0">EVENT</data>
      <data key="d1">OpenSearch Integration Pipeline is a process that allows data to be ingested into OpenSearch from various sources like DynamoDB and S3.
An OpenSearch Integration Pipeline is a data processing pipeline that ingests data from DynamoDB into OpenSearch for search and analytics.</data>
      <data key="d2">7f29cbfbdd4aea2867cf6f65ba567185,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="ROLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Role is a set of permissions that define what actions are allowed on AWS resources, specifically for services like OpenSearch and DynamoDB.</data>
      <data key="d2">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Events refer to the data points that are processed and stored in the OpenSearch pipeline for analysis and search capabilities.</data>
      <data key="d2">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="OPENSEARCH DOMAIN">
      <data key="d0" />
      <data key="d1">

The OpenSearch Domain is a managed service that allows users to deploy and manage OpenSearch clusters for search and analytics.

</data>
      <data key="d2">3e8319ba39b8ba21d17ce5e988924ff2,57f05fa9d96242d8c2cb2869e13f9e1c,7f29cbfbdd4aea2867cf6f65ba567185,ad25e8455b3a65969a17cb69a66a58ac,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </node>
    <node id="OPENSEARCH INGESTION SERVICE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The OpenSearch Ingestion Service (OSIS) is a service that facilitates the ingestion of data into OpenSearch pipelines.</data>
      <data key="d2">ad25e8455b3a65969a17cb69a66a58ac</data>
    </node>
    <node id="OPENSEARCH PIPELINE">
      <data key="d0">EVENT</data>
      <data key="d1">The OpenSearch Pipeline refers to a series of processing steps that data goes through before being indexed in OpenSearch.</data>
      <data key="d2">ad25e8455b3a65969a17cb69a66a58ac</data>
    </node>
    <node id="INDEX MAPPING">
      <data key="d0">EVENT</data>
      <data key="d1">Index Mapping defines how documents and their fields are stored and indexed in OpenSearch, allowing for efficient data retrieval.</data>
      <data key="d2">ad25e8455b3a65969a17cb69a66a58ac</data>
    </node>
    <node id="OPENSEARCH INTEGRATION PIPELINE ROLE">
      <data key="d0">PERSON</data>
      <data key="d1">The OpenSearch Integration Pipeline Role is an IAM role that allows the OpenSearch service to access other AWS services and resources.</data>
      <data key="d2">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </node>
    <node id="TABLE ARN">
      <data key="d0">PERSON</data>
      <data key="d1">The Table ARN (Amazon Resource Name) uniquely identifies the Todo table in DynamoDB, allowing for specific resource access.</data>
      <data key="d2">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </node>
    <node id="TABLE NAME">
      <data key="d0">PERSON</data>
      <data key="d1">The Table Name refers to the name assigned to the Todo table in DynamoDB for identification and access purposes.</data>
      <data key="d2">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </node>
    <node id="REGION">
      <data key="d0">GEO</data>
      <data key="d1">The Region specifies the geographical area where the AWS resources, such as DynamoDB and OpenSearch, are deployed.
Region refers to the geographical area where the Face Liveness Detector service is deployed, in this case, 'us-east-1'.
The region "us-east-1" refers to a specific geographical area in which AWS services are hosted, impacting latency and data sovereignty.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b,57f05fa9d96242d8c2cb2869e13f9e1c,95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </node>
    <node id="REMOVAL POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">Removal Policy defines the behavior of AWS resources when they are deleted, such as retaining or deleting the resource.</data>
      <data key="d2">3e8319ba39b8ba21d17ce5e988924ff2</data>
    </node>
    <node id="CLOUDWATCH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CloudWatch is a monitoring and observability service for AWS cloud resources and applications.</data>
      <data key="d2">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </node>
    <node id="LOG GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">A log group in CloudWatch is a group of log streams that share the same retention, monitoring, and access control settings.</data>
      <data key="d2">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </node>
    <node id="ECHO HANDLER">
      <data key="d0">EVENT</data>
      <data key="d1">The Echo Handler is a custom function defined in AWS Amplify that processes requests and returns a response based on the input content.</data>
      <data key="d2">0dfb84288d523f687fe010cdbeb5603e</data>
    </node>
    <node id="CLIENT SCHEMA">
      <data key="d0">EVENT</data>
      <data key="d1">The Client Schema defines the structure and types of data that can be queried or mutated in AWS Amplify applications.
Client Schema refers to the structure of data as it is defined for use in client applications, often generated from a backend schema.
A client schema is a type definition that describes the data models and their relationships in a client application, allowing for type-safe interactions with the backend.</data>
      <data key="d2">0dfb84288d523f687fe010cdbeb5603e,c3958c03e7b6908e78ca65d6563b3555,d7f9d6d81c47c8666bdbe05c89629447</data>
    </node>
    <node id="CUSTOM MUTATION">
      <data key="d0">EVENT</data>
      <data key="d1">A Custom Mutation is a user-defined request that modifies backend data in AWS Amplify.</data>
      <data key="d2">0dfb84288d523f687fe010cdbeb5603e</data>
    </node>
    <node id="DATA CLIENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Data Client in AWS Amplify is an interface that allows developers to interact with the backend services, including executing queries and mutations.
A data client is a component that interacts with a data source, such as a database or API, to perform operations like querying or mutating data.
The Data client in AWS Amplify is used to interact with the backend data schema, allowing for operations like create, read, update, and delete.</data>
      <data key="d2">0dfb84288d523f687fe010cdbeb5603e,92bcd3df485df362e04da4f60878ff3b,c3958c03e7b6908e78ca65d6563b3555</data>
    </node>
    <node id="CREDENTIALS PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A credentials provider is a service or component that supplies authentication credentials to applications, enabling secure access to resources.
A custom credentials provider is a mechanism that allows applications to obtain AWS credentials directly from Cognito Federated Identities, facilitating secure access to AWS resources.</data>
      <data key="d2">c3958c03e7b6908e78ca65d6563b3555,ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="DATA ACCESS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c3958c03e7b6908e78ca65d6563b3555</data>
    </node>
    <node id="CUSTOM AUTHORIZATION RULE">
      <data key="d0">EVENT</data>
      <data key="d1">A custom authorization rule is a user-defined rule that determines access permissions for specific actions in an application, often implemented using AWS Lambda functions.</data>
      <data key="d2">d7f9d6d81c47c8666bdbe05c89629447</data>
    </node>
    <node id="AUTHORIZATION TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">An authorization token is a string used to verify the identity of a user or application, granting access to specific resources or actions.
An authorization token is a piece of data that is used to authenticate a user or application to access a service or resource.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea,d7f9d6d81c47c8666bdbe05c89629447</data>
    </node>
    <node id="CRUD OPERATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">CRUD operations refer to the four basic functions of persistent storage: Create, Read, Update, and Delete, which are essential for managing data in applications.
CRUD operations refer to the basic functions of Create, Read, Update, and Delete that can be performed on data in a database.
CRUD operations refer to the four basic functions of persistent storage: Create, Read, Update, and Delete.
CRUD operations refer to the Create, Read, Update, and Delete actions that can be performed on data models in AWS Amplify.
CRUD operations refer to the four basic functions of persistent storage: Create, Read, Update, and Delete.
CRUD operations refer to the basic functions of create, read, update, and delete that can be performed on data models in Amplify applications.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e,2e537c711e153c043f8d08b926e4ba86,8c8075430684b38bdd1c6ce9fc9f7205,8e6f8a08e3cdc9d85f1015001bcf93dc,d7f9d6d81c47c8666bdbe05c89629447,fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="OPENID CONNECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OpenID Connect is an authorization protocol that allows clients to verify the identity of users based on the authentication performed by an authorization server.
OpenID Connect is an authentication layer on top of the OAuth 2.0 protocol that allows clients to verify the identity of users.
OpenID Connect is an authentication layer on top of the OAuth 2.0 protocol, allowing clients to verify the identity of users based on the authentication performed by an authorization server.</data>
      <data key="d2">8c8075430684b38bdd1c6ce9fc9f7205,d479485461737c6760b5fb421f0541ea,fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="USER GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">User groups are collections of users that can be assigned specific permissions and roles within an application, often used for access control.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="API ID">
      <data key="d0">EVENT</data>
      <data key="d1">API ID is a unique identifier for an API in AWS services, used to manage and reference the API.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="ACCOUNT ID">
      <data key="d0">EVENT</data>
      <data key="d1">Account ID is a unique identifier for an AWS account, used for billing and resource management.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="REQUEST ID">
      <data key="d0">EVENT</data>
      <data key="d1">Request ID is a unique identifier for a specific request made to an API, used for tracking and debugging purposes.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="CLIENT ID">
      <data key="d0">EVENT</data>
      <data key="d1">Client ID is a unique identifier for an application that is used in OAuth and OpenID Connect protocols to identify the application making the request.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="OIDC AUTHORIZATION MODE">
      <data key="d0">EVENT</data>
      <data key="d1">OIDC authorization mode is a configuration setting that specifies the use of OpenID Connect for user authentication and authorization in applications.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="TOKEN EXPIRY">
      <data key="d0">EVENT</data>
      <data key="d1">Token expiry refers to the duration for which an authorization token is valid before it needs to be refreshed or reissued.</data>
      <data key="d2">d479485461737c6760b5fb421f0541ea</data>
    </node>
    <node id="LEADERSHIP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Leadership refers to a user group within Amazon Cognito that can be granted specific access rights in applications.</data>
      <data key="d2">2e537c711e153c043f8d08b926e4ba86</data>
    </node>
    <node id="SALARY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">2e537c711e153c043f8d08b926e4ba86</data>
    </node>
    <node id="HIGHLIGHTED CODE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Highlighted code examples are snippets of code that demonstrate how to implement specific functionality in an application.</data>
      <data key="d2">8c8075430684b38bdd1c6ce9fc9f7205</data>
    </node>
    <node id="USERPOOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">User Pool is a user directory that helps manage sign-up and sign-in services for mobile and web applications.
A User Pool is a user directory in Amazon Cognito that helps manage user sign-up and sign-in, as well as user profiles and authentication.
UserPool is a service that manages user accounts and authentication for applications.
A UserPool is a user directory in Amazon Cognito that helps manage user sign-up and sign-in.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e,7040175c91fe86a908046a9b485b0410,73680e5bf87090f014e7bd9d2b8e582a,f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="IDENTITYPOOL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Identity Pool is a service that provides temporary AWS credentials to users, allowing them to access AWS services directly.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e</data>
    </node>
    <node id="PUBLIC API KEY">
      <data key="d0">EVENT</data>
      <data key="d1">A public API key allows unauthenticated users to access certain data in AWS Amplify applications.
The public API key is a credential that allows access to the API, enabling operations like create, read, update, and delete on data models.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e,b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="AUTHENTICATED">
      <data key="d0">EVENT</data>
      <data key="d1">Authenticated access allows any signed-in user to access data in AWS Amplify applications, differing from owner-based access.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e</data>
    </node>
    <node id="GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">Groups in AWS Amplify are used to manage permissions for a specific set of users, allowing for group-based access control.</data>
      <data key="d2">287574c9a7234d49dcc89de08710c55e</data>
    </node>
    <node id="USERPOOLS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">UserPools is a service that provides user authentication and authorization capabilities for applications.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="OIDC AUTHORIZATION MODES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">OIDC authorization modes are methods for authenticating users using OpenID Connect, allowing for secure access to applications.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="GLOBAL AUTHORIZATION RULE">
      <data key="d0">EVENT</data>
      <data key="d1">The global authorization rule is a set of permissions applied to all data models that do not have a specific model-level authorization rule.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="MODEL-LEVEL AUTHORIZATION RULE">
      <data key="d0">EVENT</data>
      <data key="d1">Model-level authorization rules are permissions applied to all fields of a specific data model, controlling access based on user roles.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="FIELD-LEVEL AUTHORIZATION RULE">
      <data key="d0">EVENT</data>
      <data key="d1">Field-level authorization rules strictly define permissions for individual fields within a model, overriding model-level rules.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="NON-MODEL AUTHORIZATION RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Non-model authorization rules apply to types added to the schema without using a model, such as queries and mutations.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="DYNAMIC AUTHORIZATION RULES">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic authorization rules are permissions that depend on user attributes, but are not supported for non-model types.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="TS WARNINGS">
      <data key="d0">EVENT</data>
      <data key="d1">TS warnings are alerts generated during TypeScript validation checks to prevent unsupported authorization rules from being deployed.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="SANDWICH DEPLOYMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Sandwich deployment refers to the process of deploying code in a way that ensures all components are compatible and functional.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="EMPLOYEE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Employee is a data model that represents individuals working within an organization, including their personal information.</data>
      <data key="d2">b2d8cdaec278d34da4fff33772135cfc</data>
    </node>
    <node id="PUBLIC DATA ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Public data access refers to the authorization strategy that allows everyone to access the API, which is protected by an API key.</data>
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="OWNER AUTHORIZATION STRATEGY">
      <data key="d0">EVENT</data>
      <data key="d1">The owner authorization strategy restricts operations on a record to only the record's owner, ensuring that only the creator can modify or delete it.</data>
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="MULTI-USER DATA ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-user data access allows a defined set of users to access a record, enabling collaborative features in applications.</data>
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="SIGNED-IN USER DATA ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">The signed-in user data access strategy restricts record access to only authenticated users, enhancing security for sensitive data.</data>
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="CUSTOM DATA ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Custom data access allows developers to define specific rules for data access using Lambda functions, providing flexibility in authorization.</data>
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="AUTHORIZATION STRATEGY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">fa4079c109c67561ad52ce2f338d0fa0</data>
    </node>
    <node id="MEMBER">
      <data key="d0">PERSON</data>
      <data key="d1">A Member is a model in the AWS Amplify framework that belongs to a Team and represents an individual associated with that Team.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="DATA MODELING">
      <data key="d0">EVENT</data>
      <data key="d1">Data modeling is the process of creating a data model to structure and organize data in a database, including defining relationships between different data models.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="RELATIONAL FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">Relational fields are attributes in a data model that establish relationships between different models, allowing for data retrieval based on those relationships.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="MANY-TO-MANY">
      <data key="d0">EVENT</data>
      <data key="d1">Many-to-many is a type of relationship in data modeling where multiple records in one model can relate to multiple records in another model.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="ONE-TO-MANY">
      <data key="d0">EVENT</data>
      <data key="d1">One-to-many is a type of relationship in data modeling where a single record in one model can relate to multiple records in another model.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="ONE-TO-ONE">
      <data key="d0">EVENT</data>
      <data key="d1">One-to-one is a type of relationship in data modeling where a single record in one model relates to a single record in another model.</data>
      <data key="d2">33e451e77f5bd710301d6408bbd2825d</data>
    </node>
    <node id="CART">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Cart is a model that holds items and is associated with a Customer through a one-to-one relationship.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </node>
    <node id="CUSTOMER">
      <data key="d0">PERSON</data>
      <data key="d1">The Customer is a model representing individuals who can have a Cart associated with them.
Customer is a data model in AWS Amplify that represents a user with attributes like name, phone number, and account representative ID.
</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6,92bcd3df485df362e04da4f60878ff3b,a3d633e1c801de300a4724738b7290c3</data>
    </node>
    <node id="TAG">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Tag is a model that can be associated with multiple Posts through a many-to-many relationship.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </node>
    <node id="PERSON">
      <data key="d0" />
      <data key="d1">
A person is an individual who can author or edit posts in the system, identified by their name and date of birth.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6,5acf474a9e428eea738206bbcbd17f29</data>
    </node>
    <node id="SELECTION_SET">
      <data key="d0">EVENT</data>
      <data key="d1">The selectionSet is a parameter used to specify which fields to retrieve from the models when querying data.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </node>
    <node id="RENE">
      <data key="d0">PERSON</data>
      <data key="d1">Rene is a Customer who has been created in the system, representing an individual with a Cart.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </node>
    <node id="IAN">
      <data key="d0">PERSON</data>
      <data key="d1">Ian is another Customer who has been created in the system, representing an individual who can have a Cart.</data>
      <data key="d2">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </node>
    <node id="EDITOR">
      <data key="d0">PERSON</data>
      <data key="d1">An editor is a person who reviews and modifies posts created by authors in the system.</data>
      <data key="d2">5acf474a9e428eea738206bbcbd17f29</data>
    </node>
    <node id="ACCOUNT REPRESENTATIVE">
      <data key="d0">PERSON</data>
      <data key="d1">An account representative is a person responsible for managing customer accounts and relationships within a company.</data>
      <data key="d2">a3d633e1c801de300a4724738b7290c3</data>
    </node>
    <node id="NAME">
      <data key="d0">EVENT</data>
      <data key="d1">Name is a data attribute in the Customer model that represents the customer's name.
name is a property that defines the name of the SwitchField, which is submitted with the form as a name/value pair.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,a3d633e1c801de300a4724738b7290c3</data>
    </node>
    <node id="ID">
      <data key="d0">EVENT</data>
      <data key="d1">ID is a unique identifier for the Customer model, ensuring each customer can be distinctly recognized.</data>
      <data key="d2">a3d633e1c801de300a4724738b7290c3</data>
    </node>
    <node id="PHONE NUMBER">
      <data key="d0" />
      <data key="d1">


Phone Number is an attribute that can be used for user authentication and account recovery in the Authenticator component.
Phone Number is an input field within the PhoneNumberField component where users can enter their phone number.

A PHONE NUMBER is a sequence of digits assigned to a telephone line for making and receiving calls.
Phone Number is an input field where users can enter their phone number, which is part of the Phone Number Field component.
A placeholder for a phone number, typically used for contact purposes in various contextsA placeholder for a phone number, typically used for contact purposes in various contexts)&lt;|COMPLETE|&gt;
A phone number is a sequence of digits assigned to a telephone line for communication purposes.



</data>
      <data key="d2">0108c0e942cd9aa8c65a9711baef8140,079ee4d85f6e400435d903fa9074f9e6,322dba5659c945a3d1a5389a738aee99,4f10f73a5698de38e9d0cd15643d69c1,582ef60010150eb5b063d4e027797a77,62d6f0f965da0c44ef157072fc13a2ef,6f822244ad945944fb292c514cfddc13,a31ec7e4bd06590a0d36f19c433d4801,a3d633e1c801de300a4724738b7290c3,a405b9f832ed918dd2c0ed33bb2b5808,b13ba75bb69bab84cc548bc3c7fdf65d,e98b8a475f381672c863e04f0c9164d4,f40486f74b21c76bdd626978117ceeaf,f6950f876be731f8e045d9b1bbcf4960</data>
    </node>
    <node id="AWSURL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWSURL is a schema that defines a valid URL format for AWS services, ensuring it adheres to specific rules regarding the schema and path parts.</data>
      <data key="d2">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </node>
    <node id="AWSIPADDRESS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWSIPAddress is a schema that validates IPv4 and IPv6 addresses, ensuring they follow the correct format and can include an optional CIDR suffix.</data>
      <data key="d2">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </node>
    <node id="LOCATION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Location is a custom type defined in the schema that includes latitude and longitude as float values.</data>
      <data key="d2">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </node>
    <node id="PRIVACYSETTING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PrivacySetting is an enum type that defines the privacy settings available for posts, including PRIVATE, FRIENDS_ONLY, and PUBLIC.</data>
      <data key="d2">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </node>
    <node id="MY COMPONENT">
      <data key="d0">PERSON</data>
      <data key="d1">My Component is a React functional component that manages a list of todos and subscribes to real-time updates.</data>
      <data key="d2">a525cbfc03ba1b986f30ce2280067dda</data>
    </node>
    <node id="OBSERVEQUERY">
      <data key="d0">EVENT</data>
      <data key="d1">ObserveQuery is a method used in Amplify Data to fetch and listen for real-time updates to a list of data.</data>
      <data key="d2">a525cbfc03ba1b986f30ce2280067dda</data>
    </node>
    <node id="REAL-TIME EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Real-time events in AWS Amplify allow clients to receive updates when data changes occur, such as creation, updates, or deletions.</data>
      <data key="d2">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </node>
    <node id="DYNAMIC GROUP AUTHORIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic group authorization is a method in AWS Amplify that allows users to be authorized based on their membership in multiple groups.</data>
      <data key="d2">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </node>
    <node id="COLLECTION">
      <data key="d0">EVENT</data>
      <data key="d1">A Collection is a model in AWS Amplify that groups multiple Customers together, allowing for organized management of related data.</data>
      <data key="d2">92bcd3df485df362e04da4f60878ff3b</data>
    </node>
    <node id="CANCEL">
      <data key="d0">EVENT</data>
      <data key="d1">Cancel is an operation in AWS Amplify that allows users to abort ongoing mutation requests, preventing further processing of the request.</data>
      <data key="d2">0540b18a392d2ccc8d9b4915eed9acfe</data>
    </node>
    <node id="PAGINATION">
      <data key="d0">EVENT</data>
      <data key="d1">Pagination is a process in data management that allows users to navigate through large sets of data in manageable chunks.
Pagination is a UI component in AWS Amplify that allows users to navigate through large sets of data by dividing it into pages.
Pagination is a user interface element that allows users to navigate through a set of pages of content.
Pagination is a user interface event that allows users to navigate through multiple pages of content.</data>
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13,70306783d146ca14e7ca1a0332337b3c,e685aa3f2fe14219814513a176eea47f,f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="NEXTTOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">NextToken is a string used in pagination to indicate the starting point for the next set of results in AWS Amplify queries.</data>
      <data key="d2">f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="LIMIT">
      <data key="d0">EVENT</data>
      <data key="d1">Limit is a parameter that restricts the number of results returned in a query in AWS Amplify applications.</data>
      <data key="d2">f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="PAGINATION HOOK">
      <data key="d0">EVENT</data>
      <data key="d1">The pagination hook in AWS Amplify UI helps manage the user experience for navigating through paginated data.</data>
      <data key="d2">f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="AMAZON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon is the parent company of AWS, which provides the AWS Amplify platform for application development.
Amazon is an e-commerce and cloud computing company that is included in the authentication options for both Gen 1 and Gen 2.
Amazon is a multinational technology company that focuses on e-commerce, cloud computing, digital streaming, and artificial intelligence, and is the parent company of AWS.
Amazon is a company that sells various products, including artworks like 'Liquid'.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,4b1835219f538ab9f3ba5712dcb54610,721fd770afdaa7d57e5db2f788e375b2,f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="FILTERS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f60714d5063669648e44d7d6036396c3</data>
    </node>
    <node id="AUTHORIZATION MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Authorization Mode determines how requests to the backend API are authorized, affecting security and access control for data operations.
Authorization mode defines the method by which a user is authenticated to access an API, such as API Key, Amazon Cognito user pool, or IAM roles.</data>
      <data key="d2">856c945b28eacce9c83378e56652fee3,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </node>
    <node id="REAL-TIME API">
      <data key="d0">EVENT</data>
      <data key="d1">A real-time API allows for immediate data updates and notifications, enabling applications to respond to changes as they happen.
A real-time API allows for immediate data updates and interactions, enabling features like live data feeds in applications built with Amplify.</data>
      <data key="d2">374f53811273c5cffe3558d227a0e4ec,856c945b28eacce9c83378e56652fee3</data>
    </node>
    <node id="AMPLIFY DATA RESOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Data Resource is a configuration file that defines the data models and operations for the backend in AWS Amplify.</data>
      <data key="d2">856c945b28eacce9c83378e56652fee3</data>
    </node>
    <node id="HUB MODULE">
      <data key="d0">EVENT</data>
      <data key="d1">The Hub Module is a component of Amplify that allows developers to subscribe to various events, such as authentication events, to trigger specific actions in their applications.</data>
      <data key="d2">ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="APPLICATION DATA">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ffcb01253860f700475794fd46c77ad9</data>
    </node>
    <node id="CUSTOM CREDENTIALS PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A custom provider created to manage AWS credentials for federated sign-in through various platforms like Facebook and Google.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="FACEBOOK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Facebook is a social media platform that allows users to connect and share content, and it provides an API for authentication and login services.
Facebook is a social media platform that provides an external identity provider for authentication through Facebook Login.

Facebook is a social media and technology company that provides a platform for social networking and offers sign-in options for AWS Amplify.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,4b1835219f538ab9f3ba5712dcb54610,5b9454881a44ee34d198e3403f5388af,964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="AWS COGNITO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Cognito is a service that provides user authentication, authorization, and management for web and mobile applications.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="SESSION TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">A session token is part of the credentials returned by AWS Cognito, used to maintain a user's session after authentication.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="EXPIRATION">
      <data key="d0">EVENT</data>
      <data key="d1">Expiration refers to the time limit after which the credentials obtained from AWS Cognito are no longer valid.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="FACEBOOK APP ID">
      <data key="d0">PERSON</data>
      <data key="d1">The Facebook App ID is a unique identifier for applications created on the Facebook platform, used for authentication purposes.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="GOOGLE CLIENT ID">
      <data key="d0">PERSON</data>
      <data key="d1">The Google Client ID is a unique identifier for applications that use Google services for authentication.</data>
      <data key="d2">964a73cbdb955691a9e116071187750f</data>
    </node>
    <node id="LAMBDA TRIGGERS">
      <data key="d0">EVENT</data>
      <data key="d1">Lambda Triggers are events that allow developers to run custom code in response to specific actions in Amazon Cognito, such as user sign-up or sign-in.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="ROUTE53">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Route 53 is a scalable domain name system (DNS) web service designed to provide highly reliable and cost-effective domain registration and DNS routing.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="CLIENTMETADATA">
      <data key="d0">EVENT</data>
      <data key="d1">ClientMetadata is an optional attribute that can be passed to Cognito Lambda triggers to implement additional validations around authentication.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="SIGNIN">
      <data key="d0">EVENT</data>
      <data key="d1">SignIn is an authentication process where users provide credentials to access their accounts in an application.
SignIn is an event that represents the action of a user logging into the application through the Authenticator.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35,abdfd668c78186087ff9da2146979893</data>
    </node>
    <node id="FETCHAUTHSSESSION">
      <data key="d0">EVENT</data>
      <data key="d1">FetchAuthSession is a method in AWS Amplify that retrieves the current user's authentication session, including credentials.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="TOKEN PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A Token Provider is a custom authentication mechanism that supplies tokens for accessing services, often used in conjunction with OIDC Auth.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="SIGNUP VERIFICATION METHOD">
      <data key="d0">EVENT</data>
      <data key="d1">SignUp Verification Method refers to the process by which new users confirm their identity, often through email or SMS verification.</data>
      <data key="d2">5b2747800197a072e6dc22c54876eb35</data>
    </node>
    <node id="AMAZON SIMPLE EMAIL SERVICE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon SES is a cloud-based email sending service designed to help digital marketers and application developers send marketing, notification, and transactional emails.</data>
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="SMS">
      <data key="d0">PERSON</data>
      <data key="d1">SMS (Short Message Service) is a text messaging service component of most telephone, internet, and mobile device systems.
Short Message Service (SMS) is a method of communication used for sending verification codes during the authentication process.
Short Message Service (SMS) is a method used in multi-factor authentication to send authentication codes to users via text messages.
Short Message Service (SMS) is a text messaging service used for sending verification codes as part of the MFA process.</data>
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac,9bcc9002428492e349dade67bf61476e,d4d0ea2c5ed830460edee88a18f0b2b2,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </node>
    <node id="DEVELOPER">
      <data key="d0">PERSON</data>
      <data key="d1">Developer refers to individuals or teams who build applications using AWS Amplify and its associated services.</data>
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="PRODUCTION ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Production access is the status that allows AWS accounts to send emails and SMS messages beyond the limitations of the sandbox environment.</data>
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="EMAIL SENDING ACCOUNT">
      <data key="d0">EVENT</data>
      <data key="d1">Email sending account refers to the configuration that determines how emails are sent from Amazon Cognito, including the use of verified email addresses.</data>
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="AUTH RESOURCES">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7925e036e2025ccae5e0f72fe8f556ac</data>
    </node>
    <node id="TRIGGERS">
      <data key="d0">EVENT</data>
      <data key="d1">Triggers in AWS Amplify allow developers to customize the authentication lifecycle by executing specific logic at various points in the user authentication process.
Triggers are functions that allow developers to customize the authentication flow in AWS Amplify, enabling specific actions during user authentication events.</data>
      <data key="d2">dcf0763f48070d41b43f528c6ac2928a,f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="MANAGE USERS">
      <data key="d0">EVENT</data>
      <data key="d1">Manage Users is a set of actions in AWS Cognito that grants CRUD (Create, Read, Update, Delete) access to users in the User Pool, allowing administrators to manage user accounts effectively.</data>
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="MANAGE GROUP MEMBERSHIP">
      <data key="d0">EVENT</data>
      <data key="d1">Manage Group Membership is a permission set in AWS Cognito that allows administrators to add or remove users from groups, which helps in organizing users based on roles or permissions.</data>
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="MANAGE PASSWORD RECOVERY">
      <data key="d0">EVENT</data>
      <data key="d1">Manage Password Recovery is a permission in AWS Cognito that allows administrators to reset user passwords, ensuring users can regain access to their accounts when needed.</data>
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="LIST USERS">
      <data key="d0">EVENT</data>
      <data key="d1">List Users is an action in AWS Cognito that grants permission to list users and their basic details in the User Pool, aiding in user management and oversight.</data>
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="RESET USER PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Reset User Password is an action in AWS Cognito that allows administrators to reset any user's password, facilitating account recovery and security management.</data>
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="ADD USER TO GROUP">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">f98c0fd002ba589c06bf3b605fe3f189</data>
    </node>
    <node id="USER MANAGEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">User management refers to the processes involved in creating, managing, and maintaining user accounts and their attributes within an application.</data>
      <data key="d2">dcf0763f48070d41b43f528c6ac2928a</data>
    </node>
    <node id="EMAIL CUSTOMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Email customization involves modifying the default email templates sent to users during the authentication process to align with the application's branding.</data>
      <data key="d2">dcf0763f48070d41b43f528c6ac2928a</data>
    </node>
    <node id="ADMINS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ADMINS is a user group within AWS Amplify that has special permissions to perform certain actions, such as adding users to groups.</data>
      <data key="d2">bc4893f2f489d14f0975fa64ffca1df8</data>
    </node>
    <node id="DEVICE">
      <data key="d0">EVENT</data>
      <data key="d1">A device refers to any hardware used by users to access applications, which can be tracked, remembered, or forgotten in the context of AWS Amplify.</data>
      <data key="d2">bc4893f2f489d14f0975fa64ffca1df8</data>
    </node>
    <node id="USER AUTHENTICATION">
      <data key="d0">EVENT</data>
      <data key="d1">User authentication is the process of verifying the identity of a user attempting to access an application, which is managed through AWS Amplify and Amazon Cognito.</data>
      <data key="d2">bc4893f2f489d14f0975fa64ffca1df8</data>
    </node>
    <node id="MFA">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-Factor Authentication (MFA) is a security feature that requires users to provide two or more verification factors to gain access to an application.
Multi-Factor Authentication (MFA) is a security feature that requires users to provide two or more verification factors to gain access to their accounts.
Multi-Factor Authentication (MFA) is a security mechanism that requires more than one form of verification to access an account.
MFA stands for Multi-Factor Authentication, a security measure that requires more than one form of verification, and is supported in both Gen 1 and Gen 2.</data>
      <data key="d2">4b1835219f538ab9f3ba5712dcb54610,4f10f73a5698de38e9d0cd15643d69c1,bc4893f2f489d14f0975fa64ffca1df8,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="COGNITO IDENTITY PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Cognito Identity Provider is a service provided by AWS that allows developers to manage user authentication and access control for applications.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">A password is a secret word or phrase used to authenticate a user and grant access to their account.
A password is a secret word or phrase used by a user to authenticate their identity during sign-in.
Password is a secret word or phrase that a user must enter to gain access to their account on the AWS Amplify platform.
Password is a required field for user authentication, representing the secret word or phrase used to gain access to the account.
Password is a secure credential used by users to authenticate themselves in the Authenticator component.
Password is a secret word or phrase that users create to secure their accounts in the Authenticator component.
Password is a required field in the form that collects user passwords.
Password is a type of input field that requires users to enter a secret string of characters, typically hidden for security.
Password is a field in the FormData object that represents the secret key used by a user to authenticate themselves.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,73680e5bf87090f014e7bd9d2b8e582a,7a771747e08d74ceb8c258bc5a658d6d,9d1ecd9e6b4e4bc832178b9ae1a06e8d,a31ec7e4bd06590a0d36f19c433d4801,aba5b97fa8a2f6114a40b1d94fc276b2,cb861a02338e7cf7786d791829706a53,e9839e578f896e0d269ce78abd50bae3</data>
    </node>
    <node id="RESET PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Reset Password is an event that allows users to recover access to their accounts by changing their password.
The Reset Password event is a follow-up process that allows users to set a new password after requesting a reset.
Reset Password is an event that occurs after a user has requested to change their password, typically involving a confirmation code.
Reset Password is an event that enables users to change their password after requesting a reset.
Reset Password is an event that allows users to change their password, typically after forgetting it.
Reset Password is an event that enables users to recover their accounts by resetting their passwords through the Authenticator component.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a,73680e5bf87090f014e7bd9d2b8e582a,793ee29fd3ae616dbc82df13c1d4f39b,7d1946ff469243c820fe74fd26b68cbd,aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="UPDATE PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Update Password is an event that allows users to change their current password to a new one while logged in.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="ADMIN ADD USER TO GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">Admin Add User to Group is an event that allows administrators to add users to specific groups within the authentication system.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="RESET PASSWORD API">
      <data key="d0">EVENT</data>
      <data key="d1">The Reset Password API is a function that enables users to initiate the process of recovering their password by sending a reset code.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="CONFIRM RESET PASSWORD API">
      <data key="d0">EVENT</data>
      <data key="d1">The Confirm Reset Password API is a function that allows users to confirm their new password after receiving a reset code.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="UPDATE PASSWORD API">
      <data key="d0">EVENT</data>
      <data key="d1">The Update Password API is a function that allows users to change their current password to a new one while logged in.</data>
      <data key="d2">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </node>
    <node id="AUTH EVENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Auth events are occurrences during the authentication process, such as sign-in and sign-out, that can trigger specific actions in the application.
Auth events are specific occurrences related to user authentication processes, such as sign-in, sign-out, and token refresh events.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317,4ccaaec02cfc4169e423aaf4ce28263f</data>
    </node>
    <node id="AMPLIFY HUB">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Hub is a service within AWS Amplify that allows applications to listen to and respond to authentication events in real-time.
</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317,4ccaaec02cfc4169e423aaf4ce28263f</data>
    </node>
    <node id="DELETE USER API">
      <data key="d0">EVENT</data>
      <data key="d1">The Delete User API is an action that allows users to programmatically delete their accounts from the application.</data>
      <data key="d2">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </node>
    <node id="GDPR">
      <data key="d0">EVENT</data>
      <data key="d1">GDPR (General Data Protection Regulation) is a regulation that requires applications to manage user data and privacy, including account deletion.</data>
      <data key="d2">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </node>
    <node id="JANE DOE">
      <data key="d0">PERSON</data>
      <data key="d1">Jane Doe is a user example in the AWS Amplify documentation, demonstrating how to manage user attributes during sign-up.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="SIGN-UP API">
      <data key="d0">EVENT</data>
      <data key="d1">The sign-up API is a function in AWS Amplify that allows users to create new accounts and define user attributes during the process.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="FETCH USER ATTRIBUTES API">
      <data key="d0">EVENT</data>
      <data key="d1">The fetch user attributes API is a function in AWS Amplify that retrieves user attributes for personalization and account management.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="UPDATE USER ATTRIBUTE API">
      <data key="d0">EVENT</data>
      <data key="d1">The update user attribute API is a function in AWS Amplify that allows users to create or update existing user attributes.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="HUB.LISTEN">
      <data key="d0">EVENT</data>
      <data key="d1">The Hub.listen function is a method in AWS Amplify that allows developers to listen for specific events in their application, such as authentication events.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="TOKEN REFRESH">
      <data key="d0">EVENT</data>
      <data key="d1">Token refresh is an event that occurs when authentication tokens are refreshed to maintain user sessions in AWS Amplify.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="TOKEN REFRESH FAILURE">
      <data key="d0">EVENT</data>
      <data key="d1">Token refresh failure is an event that indicates an error occurred while attempting to refresh authentication tokens in AWS Amplify.</data>
      <data key="d2">3188b79ca82feb7410b45f4162ba4317</data>
    </node>
    <node id="JON DOE">
      <data key="d0">PERSON</data>
      <data key="d1">Jon Doe is a user whose attributes are being verified and updated in the system.</data>
      <data key="d2">ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="CONFIRM ATTRIBUTE">
      <data key="d0">EVENT</data>
      <data key="d1">An event that requires user confirmation for attribute updates in the AWS Amplify system.</data>
      <data key="d2">ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="DELETE USER ATTRIBUTES">
      <data key="d0">EVENT</data>
      <data key="d1">An event that allows the deletion of one or more user attributes in the AWS Amplify system.</data>
      <data key="d2">ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="FETCH AUTH SESSION">
      <data key="d0">EVENT</data>
      <data key="d1">An event that retrieves the user's session details and tokens in the AWS Amplify system.</data>
      <data key="d2">ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="SIGN OUT">
      <data key="d0">EVENT</data>
      <data key="d1">An event that allows a user to sign out of their session in the AWS Amplify system.
Sign out is an event that occurs when a user logs out of their session in an application.
The sign out action allows users to log out of the application, terminating their session.
Sign Out is an event triggered when the user chooses to log out of the application.
Sign Out is an event where a user logs out of their account on the AWS Amplify platform.
Sign Out is an event that occurs when a user logs out of their account in an application.
Sign Out is an action that allows users to log out of the application.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,3cdd6c81baa65bbde6eabfc399eb25b6,7d1946ff469243c820fe74fd26b68cbd,9bcc9002428492e349dade67bf61476e,abdfd668c78186087ff9da2146979893,cb861a02338e7cf7786d791829706a53,ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="USER ATTRIBUTE VERIFICATION CODE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ddb5fb3e8db548d41829f366a360c2b7</data>
    </node>
    <node id="SIGN IN">
      <data key="d0">EVENT</data>
      <data key="d1">Sign in is an event that occurs when a user logs into an application, often requiring authentication.
The Sign In event is part of the authentication process where users enter their credentials to access their accounts.
Sign In is an event where a user enters their credentials to access their account on the AWS Amplify platform.
Sign In is an event where users log into their accounts using their credentials.
The Sign In event refers to the process where an existing user logs into the system using their credentials through the Authenticator component.
Sign In is an event that occurs when a user successfully logs into their account using the Authenticator component.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,353184f9ee9fe27f7425aaec76c8a30a,793ee29fd3ae616dbc82df13c1d4f39b,9bcc9002428492e349dade67bf61476e,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="MULTI-FACTOR AUTHENTICATION">
      <data key="d0">EVENT</data>
      <data key="d1">Multi-factor authentication is an event that requires users to provide two or more verification factors to gain access to an application.
Multi-factor authentication (MFA) is a security process that requires users to provide multiple forms of verification to gain access to an account.
Multi-factor authentication is a security feature in Amplify Auth that requires users to provide two or more verification factors to gain access to their accounts.
Multi-Factor Authentication (MFA) is a security process that requires users to provide two or more verification factors to gain access to a resource, enhancing security.</data>
      <data key="d2">9bcc9002428492e349dade67bf61476e,a45591637d0b47a7bce4ac92c8eb5ea6,db7dfb25749de8f86ac15552fec549ec,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </node>
    <node id="SIGN IN API">
      <data key="d0">EVENT</data>
      <data key="d1">The sign in API is a method provided by AWS Amplify to authenticate users with their credentials.</data>
      <data key="d2">9bcc9002428492e349dade67bf61476e</data>
    </node>
    <node id="CONFIRM SIGN IN">
      <data key="d0">EVENT</data>
      <data key="d1">Confirm sign in is an event that occurs when additional verification is required during the sign-in process.</data>
      <data key="d2">9bcc9002428492e349dade67bf61476e</data>
    </node>
    <node id="TOTP">
      <data key="d0">EVENT</data>
      <data key="d1">Time-based One-Time Password (TOTP) is a method of authentication that generates a temporary code for user verification.
Time-based One-Time Password (TOTP) is a method used in multi-factor authentication to provide a temporary code for user verification.
Time-based One-Time Password (TOTP) is a method for multi-factor authentication that generates short-lived passwords for secure sign-in.
Time-based One-Time Password (TOTP) is an authentication method that generates a temporary code for user verification during the login process.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1,9bcc9002428492e349dade67bf61476e,d4d0ea2c5ed830460edee88a18f0b2b2,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </node>
    <node id="USER_PASSWORD_AUTH">
      <data key="d0">EVENT</data>
      <data key="d1">USER_PASSWORD_AUTH is an authentication flow that sends user credentials to the backend without applying SRP encryption, used for migrating users to Cognito.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="CUSTOM_WITH_SRP">
      <data key="d0">EVENT</data>
      <data key="d1">CUSTOM_WITH_SRP is an authentication flow that allows for a series of challenge and response cycles that can be customized to meet different requirements.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="CUSTOM_WITHOUT_SRP">
      <data key="d0">EVENT</data>
      <data key="d1">CUSTOM_WITHOUT_SRP is an authentication flow that requires a password when calling signIn and allows for custom challenges.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="SIGN_IN">
      <data key="d0">EVENT</data>
      <data key="d1">SIGN_IN is the process of authenticating a user in the application, which can involve various authentication flows.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="SIGN_UP">
      <data key="d0">EVENT</data>
      <data key="d1">SIGN_UP is the process of registering a new user in the application, enabling them to create an account.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="AUTO SIGN-IN">
      <data key="d0">EVENT</data>
      <data key="d1">AUTO SIGN-IN is an API in AWS Amplify that automatically signs in a user based on previous sign-up confirmation.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="VERIFICATION CODE">
      <data key="d0">EVENT</data>
      <data key="d1">VERIFICATION CODE is a code sent to a user's phone or email to confirm their account during the sign-up process.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="VERIFICATION LINK">
      <data key="d0">EVENT</data>
      <data key="d1">VERIFICATION LINK is a link sent to a user's phone or email that allows them to confirm their account during the sign-up process.</data>
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="SIGN_IN WITH REDIRECT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">710de2c1f4693d893bae10139553994d</data>
    </node>
    <node id="SIGN-UP">
      <data key="d0">EVENT</data>
      <data key="d1">The sign-up event is a process where a new user creates an account in the backend using the signUp() API provided by AWS Amplify.</data>
      <data key="d2">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </node>
    <node id="CONFIRM SIGN-UP">
      <data key="d0">EVENT</data>
      <data key="d1">The confirm sign-up event is a process where a user verifies their account by entering a confirmation code sent to their email or phone number.</data>
      <data key="d2">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </node>
    <node id="SIGN-IN">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </node>
    <node id="JSON WEB TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">JSON Web Tokens (JWT) are used for securely transmitting information between parties as a JSON object, often used in authentication processes.</data>
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="ACCESS TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">An access token is a credential that can be used by an application to access resources on behalf of a user.</data>
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="ID TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">An ID token is a type of token that contains user identity information and is intended for use within the frontend application.</data>
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="NICKNAME">
      <data key="d0">PERSON</data>
      <data key="d1">A nickname is an additional user attribute that can be specified in Amplify Auth for user identification.</data>
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="CREDENTIAL">
      <data key="d0">EVENT</data>
      <data key="d1">Credentials are the information used to authenticate a user, such as access tokens and ID tokens in the context of Amazon Cognito.</data>
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="JWT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3bedaf75477c620e5f8469d8d96cfae3</data>
    </node>
    <node id="HELLO">
      <data key="d0">PERSON</data>
      <data key="d1">Hello is a user with an email address associated with the Cognito service, likely a test or example user.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="BROWSER LOCAL STORAGE">
      <data key="d0">GEO</data>
      <data key="d1">Browser local storage is a web storage mechanism that allows websites to store data in a user's browser.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="COOKIE STORAGE">
      <data key="d0">GEO</data>
      <data key="d1">Cookie storage is a method of storing data in the browser's cookies, which can persist across sessions.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="SESSION STORAGE">
      <data key="d0">GEO</data>
      <data key="d1">Session storage is a web storage mechanism that allows data to be stored for the duration of the page session.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="CUSTOM STORAGE">
      <data key="d0">GEO</data>
      <data key="d1">Custom storage refers to user-defined mechanisms for storing data, allowing for tailored data management solutions.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="TOKEN REVOCATION">
      <data key="d0">EVENT</data>
      <data key="d1">Token revocation is the process of invalidating authentication tokens to ensure that users are signed out from all devices.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="KEYVALUESTORAGEINTERFACE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">KeyValueStorageInterface is an interface in AWS Amplify that allows developers to implement custom storage mechanisms for user tokens.</data>
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="TOKEN MANAGEMENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3874fd589ed63023667cf58323875d95</data>
    </node>
    <node id="LOGIN WITH AMAZON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Login with Amazon is an external identity provider that allows users to sign in using their Amazon account credentials.Login with Amazon is an external authentication method that allows users to sign in to applications using their Amazon account credentials.</data>
      <data key="d2">5b9454881a44ee34d198e3403f5388af</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="SIGN IN WITH APPLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sign in with Apple is an external authentication method that allows users to sign in to applications using their Apple ID credentials.Sign in with Apple is an external identity provider that allows users to authenticate using their Apple ID.</data>
      <data key="d2">5b9454881a44ee34d198e3403f5388af</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="DEVELOPER ACCOUNT">
      <data key="d0">PERSON</data>
      <data key="d1">A developer account is an account created by a developer to access and manage applications on external identity provider platforms like Facebook and Google.</data>
      <data key="d2">5b9454881a44ee34d198e3403f5388af</data>
    </node>
    <node id="EXTERNAL IDENTITY PROVIDERS">
      <data key="d0">EVENT</data>
      <data key="d1">External identity providers are services that allow users to authenticate using their existing accounts from other platforms, such as Facebook, Google, and Amazon.
External identity providers are third-party services that can be used for user authentication in Amplify Auth, such as Google, Facebook, and Amazon.</data>
      <data key="d2">5b9454881a44ee34d198e3403f5388af,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="GOOGLE SIGN-IN">
      <data key="d0">EVENT</data>
      <data key="d1">Google Sign-In is an external authentication method that allows users to sign in to applications using their Google account credentials.</data>
      <data key="d2">5b9454881a44ee34d198e3403f5388af</data>
    </node>
    <node id="FACEBOOK LOGIN">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">5b9454881a44ee34d198e3403f5388af</data>
    </node>
    <node id="MICROSOFT ENTRAID">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Microsoft EntraID is an identity provider that allows users to authenticate using their Microsoft accounts.</data>
      <data key="d2">162dda357807004bc0720c9422f45783</data>
    </node>
    <node id="MICROSOFT ENTRAIDSAML">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Microsoft EntraIDSAML is a SAML-based identity provider for authentication services.</data>
      <data key="d2">162dda357807004bc0720c9422f45783</data>
    </node>
    <node id="SIGNINWITHREDIRECT">
      <data key="d0">EVENT</data>
      <data key="d1">SignInWithRedirect is an API method used to initiate sign-in with an external identity provider in AWS Amplify.</data>
      <data key="d2">162dda357807004bc0720c9422f45783</data>
    </node>
    <node id="AUTHENTICATOR COMPONENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Authenticator component in AWS Amplify simplifies the process of adding authentication to applications.</data>
      <data key="d2">162dda357807004bc0720c9422f45783</data>
    </node>
    <node id="MYWEBSITE.COM">
      <data key="d0">GEO</data>
      <data key="d1">Mywebsite.com is a placeholder domain used in examples for callback and logout URLs in the authentication process.</data>
      <data key="d2">162dda357807004bc0720c9422f45783</data>
    </node>
    <node id="SAML">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SAML (Security Assertion Markup Language) is an open standard for exchanging authentication and authorization data between parties, particularly between an identity provider and a service provider.
SAML stands for Security Assertion Markup Language, a standard for single sign-on and is mentioned in relation to Gen 2's support.</data>
      <data key="d2">162dda357807004bc0720c9422f45783,4b1835219f538ab9f3ba5712dcb54610</data>
    </node>
    <node id="OIDC">
      <data key="d0" />
      <data key="d1">
OIDC stands for OpenID Connect, an authentication layer on top of OAuth 2.0, which is supported in Gen 2.</data>
      <data key="d2">162dda357807004bc0720c9422f45783,4b1835219f538ab9f3ba5712dcb54610</data>
    </node>
    <node id="GUEST ACCESS">
      <data key="d0">EVENT</data>
      <data key="d1">Guest access allows users to interact with certain features of an application without needing to sign in, providing a way to use the app anonymously.
Guest access allows users to access services without needing to sign in, providing a way for unauthenticated users to interact with the application.</data>
      <data key="d2">a45591637d0b47a7bce4ac92c8eb5ea6,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </node>
    <node id="AUTH SESSION">
      <data key="d0">EVENT</data>
      <data key="d1">The auth session in AWS Amplify is a process that manages user authentication states and credentials.</data>
      <data key="d2">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </node>
    <node id="CONFIRMSIGNUP API">
      <data key="d0">EVENT</data>
      <data key="d1">The confirmSignUp API is an event in AWS Amplify that verifies a user account after sign-up by sending a one-time password to the user's phone number or email.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1</data>
    </node>
    <node id="CONFIRMSIGNIN API">
      <data key="d0">EVENT</data>
      <data key="d1">The confirmSignIn API is an event in AWS Amplify that is called when a user provides a confirmation code sent to their phone number during sign-in.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1</data>
    </node>
    <node id="UPDATE_MFA_PREFERENCE API">
      <data key="d0">EVENT</data>
      <data key="d1">The updateMFAPreference API is an event in AWS Amplify that records the multi-factor authentication type as enabled for a user.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1</data>
    </node>
    <node id="GOOGLE AUTHENTICATOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Google Authenticator is an application that generates TOTP codes for multi-factor authentication.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1</data>
    </node>
    <node id="MICROSOFT AUTHENTICATOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Microsoft Authenticator is an application that generates TOTP codes for multi-factor authentication.</data>
      <data key="d2">4f10f73a5698de38e9d0cd15643d69c1</data>
    </node>
    <node id="AUTHENTICATOR APP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An Authenticator app is a mobile application that generates TOTP codes for two-factor authentication.</data>
      <data key="d2">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="SETUP URI">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </node>
    <node id="PHONE">
      <data key="d0">EVENT</data>
      <data key="d1">Phone is a method of user sign-in that can be configured in AWS Amplify for authentication purposes.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="USERNAMES">
      <data key="d0">EVENT</data>
      <data key="d1">Usernames are attributes used for display purposes in AWS Amplify, allowing users to sign in with an email or phone number.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="CUSTOM ATTRIBUTES">
      <data key="d0">EVENT</data>
      <data key="d1">Custom attributes in AWS Amplify are unique attributes that can be configured for user sign-up, such as tenant ID or display name.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="DISPLAY NAME">
      <data key="d0">EVENT</data>
      <data key="d1">Display name is a custom attribute that can be configured in AWS Amplify, allowing users to have a preferred name shown in the application.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="SIGN-IN API">
      <data key="d0">EVENT</data>
      <data key="d1">The sign-in API is a method provided by AWS Amplify for users to authenticate and access their accounts.</data>
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="TENANT ID">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0bc7a3343cc71a51f8039854d57f5778</data>
    </node>
    <node id="GEN 1">
      <data key="d0">EVENT</data>
      <data key="d1">Gen 1 refers to the first generation of AWS Amplify services, which is being transitioned to Gen 2 for enhanced capabilities.
Gen 1 refers to the first generation of a product or service that is currently receiving support for high-priority bugs and essential security updates.
Gen 1 refers to the first generation of Amplify, which had a different approach to provisioning infrastructure compared to Gen 2.
Gen 1 refers to the first generation of Amplify's backend services, which had a different approach to data management and required explicit code generation.</data>
      <data key="d2">4b1835219f538ab9f3ba5712dcb54610,6741df7802dff57e070b002915d9590a,8e6f8a08e3cdc9d85f1015001bcf93dc,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="GEN 2">
      <data key="d0">EVENT</data>
      <data key="d1">Gen 2 is the second generation of AWS Amplify services, offering improved features and capabilities for application development.
Gen 2 refers to the second generation of a product or service that offers enhanced capabilities and features compared to Gen 1.
Gen 2 refers to the second generation of Amplify's backend services, which includes improvements in data management and authentication features.</data>
      <data key="d2">4b1835219f538ab9f3ba5712dcb54610,8e6f8a08e3cdc9d85f1015001bcf93dc,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="USER GROUPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">User groups are collections of users in Amplify Auth that can be managed together for permissions and access control.</data>
      <data key="d2">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="TOKENS AND CREDENTIALS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tokens and credentials are used in Amplify applications to authenticate users and manage sessions securely.</data>
      <data key="d2">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </node>
    <node id="AMPLIFY CLIENT LIBRARIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify client libraries provide developers with the tools to connect applications to AWS resources easily.</data>
      <data key="d2">1ef9b6a9263edfd718636bcbc29f4a72</data>
    </node>
    <node id="VISUAL CONFIGURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Visual configuration refers to the user-friendly interface provided by AWS Amplify for setting up and managing backend resources.</data>
      <data key="d2">1ef9b6a9263edfd718636bcbc29f4a72</data>
    </node>
    <node id="SIGN IN FUNCTION">
      <data key="d0">EVENT</data>
      <data key="d1">The signIn function is a method in the AWS Amplify library that allows users to authenticate using their credentials.</data>
      <data key="d2">fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="AMPLIFY CLIENT LIBRARY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">fca72cef7aaa748346e02aa5f929c2c1</data>
    </node>
    <node id="IAM IDENTITY CENTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">IAM Identity Center is a service that allows users to manage access to AWS resources and set up Single Sign-On (SSO) for their teams.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="CLOUDSHELL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CloudShell is a browser-based shell that provides a command-line interface for managing AWS resources directly from the AWS Management Console.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="AMPLIFY ADMIN">
      <data key="d0">PERSON</data>
      <data key="d1">Amplify Admin is a user role created within AWS to manage Amplify permissions and access to AWS resources.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="PERMISSION SET">
      <data key="d0">EVENT</data>
      <data key="d1">A permission set in AWS is a collection of policies that define what actions a user can perform on AWS resources.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="TEMPORARY CREDENTIALS">
      <data key="d0">EVENT</data>
      <data key="d1">Temporary credentials are short-term access keys that allow users to access AWS resources securely.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="SINGLE SIGN-ON (SSO)">
      <data key="d0">EVENT</data>
      <data key="d1">Single Sign-On (SSO) is an authentication process that allows a user to access multiple applications with one set of login credentials.
</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7,db7dfb25749de8f86ac15552fec549ec</data>
    </node>
    <node id="MANAGED POLICY">
      <data key="d0">EVENT</data>
      <data key="d1">A managed policy is a standalone policy that can be attached to multiple users, groups, or roles in AWS.</data>
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="AWS ORGANIZATIONS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c58075426e62c1f9da00343d6b1599a7</data>
    </node>
    <node id="TO-DO APPLICATION">
      <data key="d0">EVENT</data>
      <data key="d1">The To-do application is a sample project created to demonstrate the capabilities of AWS Amplify and Next.js for building fullstack applications.</data>
      <data key="d2">db7dfb25749de8f86ac15552fec549ec</data>
    </node>
    <node id="AWS MANAGEMENT CONSOLE">
      <data key="d0">EVENT</data>
      <data key="d1">The AWS Management Console is a web-based interface for managing AWS services, allowing users to configure and monitor their cloud resources.</data>
      <data key="d2">db7dfb25749de8f86ac15552fec549ec</data>
    </node>
    <node id="BOOTSTRAPPING">
      <data key="d0">EVENT</data>
      <data key="d1">Bootstrapping is the initial setup process required to prepare an AWS account for use with AWS Amplify, enabling resource deployment.</data>
      <data key="d2">db7dfb25749de8f86ac15552fec549ec</data>
    </node>
    <node id="DEPLOYMENT BRANCH">
      <data key="d0">EVENT</data>
      <data key="d1">The deployment branch is a specific branch in a version control system that is used to deploy applications to a live environment.</data>
      <data key="d2">db7dfb25749de8f86ac15552fec549ec</data>
    </node>
    <node id="TODO LIST">
      <data key="d0">EVENT</data>
      <data key="d1">A to-do list is a list of tasks or items that need to be completed, often used for personal organization and productivity.</data>
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb</data>
    </node>
    <node id="AUTHENTICATOR UI">
      <data key="d0">EVENT</data>
      <data key="d1">The Authenticator UI is a user interface component that manages user authentication processes in applications.</data>
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb</data>
    </node>
    <node id="LOCAL DEVELOPMENT ENVIRONMENT">
      <data key="d0">EVENT</data>
      <data key="d1">The local development environment is a setup on a developer's machine to build and test applications before deployment.</data>
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb</data>
    </node>
    <node id="PER-USER AUTHORIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Per-user authorization is a security measure that ensures users can only access their own data within the application.</data>
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb</data>
    </node>
    <node id="DELETED FUNCTIONALITY">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">2599c1b415576410d2f9b23f4299c4cb</data>
    </node>
    <node id="REPOSITORY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A repository is a storage location for software packages, where developers can manage their code and collaborate on projects.</data>
      <data key="d2">fc0b23383bad27c21e52b0c819eb7874</data>
    </node>
    <node id="PAGES/INDEX.TSX">
      <data key="d0">GEO</data>
      <data key="d1">The pages/index.tsx file is a key component of the application where the main functionality and UI are defined.</data>
      <data key="d2">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </node>
    <node id="DELETE FUNCTIONALITY">
      <data key="d0">EVENT</data>
      <data key="d1">The delete functionality allows users to remove tasks from their to-do list within the application.</data>
      <data key="d2">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </node>
    <node id="CREATE TODO">
      <data key="d0">EVENT</data>
      <data key="d1">The createTodo function enables users to add new tasks to their to-do list.</data>
      <data key="d2">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </node>
    <node id="AUTH BACKEND">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The auth backend is a pre-configured authentication service that supports various login mechanisms for the application.</data>
      <data key="d2">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </node>
    <node id="AUTHENTICATION TOKEN">
      <data key="d0">PERSON</data>
      <data key="d1">An authentication token is a piece of data that verifies a user's identity and allows them to access the application securely.</data>
      <data key="d2">7040175c91fe86a908046a9b485b0410</data>
    </node>
    <node id="DATASTORE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DataStore is a feature of AWS Amplify that provides a programming model for leveraging shared and distributed data without needing to manage the underlying infrastructure.</data>
      <data key="d2">6741df7802dff57e070b002915d9590a</data>
    </node>
    <node id="CHAT APP">
      <data key="d0">EVENT</data>
      <data key="d1">A chat app is an example application that can be built using Amplify, showcasing its data management capabilities.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="UI COMPONENT LIBRARY">
      <data key="d0">EVENT</data>
      <data key="d1">The UI component library in Amplify provides pre-built components for quickly building user interfaces in web applications.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="AUTHENTICATION SETTINGS">
      <data key="d0">EVENT</data>
      <data key="d1">Authentication settings in Amplify allow developers to configure user sign-in, registration flows, and multi-factor authentication.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="AMPLIFY AUTHENTICATOR COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Amplify Authenticator component is a pre-built UI component that simplifies the integration of authentication flows in applications.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="LOCATION SERVICES">
      <data key="d0">EVENT</data>
      <data key="d1">Amazon Location Services is a feature that can be added to Amplify applications for mapping and location-based functionalities.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="CUSTOM DOMAINS">
      <data key="d0">EVENT</data>
      <data key="d1">Custom domains are settings in Amplify that allow developers to configure their applications to use personalized web addresses.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="SEED DATA GENERATION">
      <data key="d0">EVENT</data>
      <data key="d1">Seed data generation is a feature in Amplify that allows developers to populate their databases with initial data for testing and development.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="FILE UPLOAD CAPABILITIES">
      <data key="d0">EVENT</data>
      <data key="d1">File upload capabilities in Amplify enable users to upload files to the application, enhancing its functionality.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="DEPLOYED RESOURCES">
      <data key="d0">EVENT</data>
      <data key="d1">Deployed resources are the various components and services that have been launched as part of an Amplify application.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="TYPED CLIENT INSTANCE">
      <data key="d0">EVENT</data>
      <data key="d1">A typed client instance is generated by Amplify to facilitate type-safe interactions with data models in applications.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="CHAT">
      <data key="d0">EVENT</data>
      <data key="d1">Chat refers to a data model in the chat app example, representing a conversation that can contain multiple messages.</data>
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="AMPLIFY GEN 2 CONSOLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </node>
    <node id="LOCATIONMAPSTACK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">LocationMapStack is a resource within AWS Amplify that helps manage location-based functionalities in applications.</data>
      <data key="d2">e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="CRUD FORMS">
      <data key="d0">EVENT</data>
      <data key="d1">CRUD forms are user interface elements that allow users to create, read, update, and delete data in applications.</data>
      <data key="d2">e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="PER-DEVELOPER CLOUD SANDBOXES">
      <data key="d0">EVENT</data>
      <data key="d1">Per-developer cloud sandboxes are environments that allow developers to iterate quickly during application development.</data>
      <data key="d2">e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="FULLSTACK APPLICATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Fullstack applications are web applications that include both frontend and backend components, often deployed together.</data>
      <data key="d2">e3c6466a080dbad6e05f99bda0212547</data>
    </node>
    <node id="STYLED COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Styled Components is a CSS-in-JS library that allows developers to create styled React components using actual CSS code.</data>
      <data key="d2">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </node>
    <node id="JSS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">JSS is a library for writing CSS in JavaScript, allowing for dynamic styling of components in React applications.</data>
      <data key="d2">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </node>
    <node id="APHRODITE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Aphrodite is a CSS-in-JS library that allows developers to write styles in JavaScript and apply them to React components.</data>
      <data key="d2">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </node>
    <node id="CSS IN JS">
      <data key="d0">EVENT</data>
      <data key="d1">CSS in JS refers to a styling approach where CSS is written within JavaScript files, allowing for dynamic styling of components in web applications.</data>
      <data key="d2">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </node>
    <node id="AMPLIFY THEMING">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Theming is a system that allows developers to customize the look and feel of Amplify UI components using CSS variables and styling props.</data>
      <data key="d2">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </node>
    <node id="STYLE PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">Style Props are specific properties that can be applied to Amplify UI components to customize their appearance directly within the component's code.
Style Props are features in Amplify UI that allow users to modify the styles of components without needing to write CSS.

Style props are properties that can be passed to CheckboxField components in AWS Amplify to customize their appearance.
Style props are properties that can be used to apply inline styles to components in Amplify UI.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03,5aa64e0729b8afd73930cdaf5ff7a8aa,a407fa7a377db0b8cb08ded22609f5e2,b0fc4cd8b01ddce0c70025c48b34ca98,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">Alert is a component in Amplify UI that displays important messages to users and can be styled using style props.
Alert is a component in AWS Amplify that displays brief messages to attract user attention without interrupting their tasks, with various styles for different types of notifications.
An alert is a message that provides information to the user, often used in user interfaces to convey important notifications or warnings.
An Alert is a component in Amplify UI that displays important messages to users, with variations for different types of notifications such as info, success, warning, and error.
An Alert component in Amplify UI displays brief, important messages to attract user attention without interrupting tasks.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03,3bcd47a467bca8030037be27b1ae1b3e,c7af2749681510be539a408772ae1755,e28baad4e7d7ca8e43254a705cbf687f,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="FLEX">
      <data key="d0">EVENT</data>
      <data key="d1">Flex is a layout component in Amplify UI that allows for flexible arrangement of child components.
Flex is a component in Amplify UI that allows for flexible layouts, enabling responsive design through direction and alignment properties.
The Flex is a layout component that allows for flexible arrangement of child components in the Storage Manager, enabling responsive design.
Flex is a layout component in AWS Amplify UI that provides a flexible box layout for arranging child components.
Flex is a layout component used in the user interface to create flexible and responsive designs in React applications.
Flex is a layout component in Amplify UI that allows for flexible arrangement of child components.
The Flex component in AWS Amplify UI is used for creating flexible layouts in web applications, allowing for responsive design.
Flex is a layout component in Amplify UI that allows for flexible arrangement of child components.
Flex is a layout component used in AWS Amplify UI to arrange child components in a flexible manner.


Flex is a layout component in the Amplify UI for React that helps in arranging child components in a flexible manner.
Flex is a layout component in AWS Amplify that helps in arranging child components in a flexible manner.
Flex is a layout component from the AWS Amplify UI React library that allows for flexible and responsive design.
Flex is a layout component in the AWS Amplify UI library that allows for flexible and responsive design.
Flex is a layout component in AWS Amplify UI React that allows for flexible and responsive design in applications.
Flex is a layout component used in AWS Amplify UI to arrange child components in a flexible manner.
Flex is a layout component in the AWS Amplify UI that allows for flexible arrangement of child components in a column or row.
Flex is a layout component used in user interfaces to arrange elements in a flexible manner, often used in conjunction with AWS Amplify components.
Flex is a layout component that allows for flexible arrangement of UI elements in a column or row format.
A layout component that allows for flexible arrangement of elements in a user interface, often used in web development.
A layout component that allows for flexible arrangement of child elements in a form
Flex is a layout component that allows for flexible arrangement of child components in a responsive manner.
Flex is a layout component that allows for flexible arrangement of child components in a responsive manner.

Flex is a layout component in AWS Amplify UI that provides a flexible box layout, allowing for responsive design of UI elements.

The Flex component is a layout component that arranges its children in a flexible box layout, allowing for responsive design.
Flex is a layout component used in the AWS Amplify UI React library to arrange child components in a flexible manner.
Flex is a layout component that allows for flexible and responsive design in web applications, enabling the arrangement of child components in a row or column.
Flex is a layout component in the Amplify UI library that allows for flexible arrangement of child components like buttons and checkboxes.
Flex is a layout component in AWS Amplify UI React that provides a flexible way to arrange child components.
Flex is a layout component in AWS Amplify that allows for flexible and responsive design in user interfaces.

Flex is a layout component that allows for flexible and responsive design in user interfaces.


Flex is a layout component in AWS Amplify that allows for flexible and responsive design of user interfaces.
Flex is a layout component in Amplify UI that arranges its children in a flexible box layout, allowing for responsive design.
Flex is a layout component that allows for flexible and responsive design in web applications, enabling elements to adjust based on screen size.
Flex is a layout component in Amplify UI that allows for flexible and responsive design in React applications.
</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,0d99e36510e5c37bedf99c81e8533dd1,0f0c3a1733d9928c7207a0931e147afe,155e5b639ff1fbe14e9b7c7375cf5e03,1ceae74b49c1b621d815e85b8ca49988,21ba26eef933ca84de0597d8f7c58f7e,229e08ddbc773881c8e1ca68ba06dea8,26dcbf3b494b9d9117cffa213b39f7cf,27665866f8a25b886ee05eef06c3054c,2fa22e032f66ea7c5422792329c30589,3357299f904d0dd5b40c967c28b75149,3bf357b72dac2808e7ba2223ab2c4745,45bc04c1106dd47dcfb887084a04fd7b,4ef2269a1b7af8535395e8de5c20722d,52fc958abba47a16871f909ed3cc2d5a,582ef60010150eb5b063d4e027797a77,5b0d50411f54d1ef65278d02161d11d7,6264f18714899ee18445e9c4535f5ff2,6edc6c7e13a23d971e48b75724b50d5f,72f7bd8a9eb9039eabf2d7d1ff4c9601,7668a790c01b22add1e76afc928004db,7a771747e08d74ceb8c258bc5a658d6d,7fea5fbe98eba1d68851892af6df2407,85d9171dd6e70ffdb5803e227ecacbc4,868b364b65a596f02a214b12ca0cbb6a,8b2761fb86513e3cf4d313a43b80f9fc,8d0e14288c93ab458cda0d9179f522a7,98fcf483b563a8d8b54ee85b2f6fa533,a3d37007c833039158d1e1720cb62466,a407fa7a377db0b8cb08ded22609f5e2,b0fc4cd8b01ddce0c70025c48b34ca98,b48f64ddd27370c0d0a93447e796c6b3,c6562553adf4b52a1a6eec1a462e147f,c7af2749681510be539a408772ae1755,d449796d977ece5e8fa1202c70599e55,d700fb2336ddc0a563736b65003c9d4f,d862c0095587db23ca9388fe047e5de4,d9a272b23f1d5cf3e9a9c6a2c79923b8,da8a5f647964e74661f5f6b0ad4f6a74,ddc8b27b83cca7d4613a25a5e5a519c9,e28baad4e7d7ca8e43254a705cbf687f,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="GRID">
      <data key="d0">EVENT</data>
      <data key="d1">Grid is a layout component in Amplify UI that enables the arrangement of components in a grid format.
Grid is a layout component that arranges child elements in a grid format.
Grid is a layout event that organizes content in a structured format using CSS Grid properties.
Grid is a layout component in Amplify UI that helps in arranging elements in a structured manner, enhancing the user interface design.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03,b9eb6db49e67c5d8dd0f95139d465c50,e685aa3f2fe14219814513a176eea47f,e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="ISSUE">
      <data key="d0">EVENT</data>
      <data key="d1">An issue is a way to track tasks, enhancements, and bugs for a project, allowing contributors to discuss and manage work.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </node>
    <node id="THEME OBJECT">
      <data key="d0">EVENT</data>
      <data key="d1">The Theme object in Amplify UI contains design tokens that can be used to maintain consistent styling across components.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </node>
    <node id="DESIGN TOKEN">
      <data key="d0">EVENT</data>
      <data key="d1">Design tokens are variables that store design decisions, such as colors and spacing, to ensure consistency in UI design.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </node>
    <node id="DYNAMIC UPDATES">
      <data key="d0">EVENT</data>
      <data key="d1">Dynamic updates refer to the ability to change the theme or styles of components in real-time, such as switching between light and dark modes.</data>
      <data key="d2">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </node>
    <node id="VIEW">
      <data key="d0">EVENT</data>
      <data key="d1">View is a container component that can hold other components and is used for layout purposes.
View is a component in Amplify UI used to create layout containers that can adapt styles based on screen size.
View is a component used in the application to structure the layout and display content, often used in conjunction with the Authenticator.
The View component in AWS Amplify UI is a container that can hold other components and is used for layout purposes.
View is a component in the AWS Amplify UI React library that serves as a container for other components, allowing for layout and styling.
View is a component used to create a container for other components in AWS Amplify UI React, allowing for layout and styling.
View is a component in Amplify UI that serves as a container for other components, allowing for layout and styling.
View is a container component in AWS Amplify UI React that allows for layout and styling of child components.
View is a foundational component in Amplify UI that serves as a container for other components, allowing for flexible layout and styling options.
View is a foundational component in Amplify UI that renders a &lt;div&gt; by default and can be customized to render other HTML elements.
View is the foundational component for Amplify UI primitives, rendering a &lt;div&gt; by default and supporting styling via props.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8,56553341236a20419cc336c60c2bed04,868b364b65a596f02a214b12ca0cbb6a,abdfd668c78186087ff9da2146979893,b0fc4cd8b01ddce0c70025c48b34ca98,b4caad819b3245d1c7c01c198437baa1,c6562553adf4b52a1a6eec1a462e147f,c7af2749681510be539a408772ae1755,d9a272b23f1d5cf3e9a9c6a2c79923b8,e3c4629b893f38a9c103147f3ea608f3,e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="POSITION STYLING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">A demonstration of how to apply position styles to a view and button component in a UI framework.</data>
      <data key="d2">e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="SIZE STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">A demonstration of how to apply size styles to a view component in a UI framework.</data>
      <data key="d2">e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="SHADOW STYLING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">A demonstration of how to apply shadow styles to a button component in a UI framework.
Shadow Styling Example is a demonstration of how to apply shadow styles to a button component in Amplify UI.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e,e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="MARGIN AND PADDING STYLING EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e7727282a239fcb7a1e69d029f0709ba</data>
    </node>
    <node id="CSS VARIABLES">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Variables are used in Amplify UI to customize the look and feel of components.
CSS Variables are used in theming to allow for dynamic styling of components in the AWS Amplify UI.

CSS Variables are used to define custom styles for the Pagination component globally or locally.
CSS variables are used in Amplify UI to customize the styling of components globally or locally.
CSS Variables are used in Amplify UI to define and manage styles across components.
CSS Variables are used to define reusable values in stylesheets, allowing for easier theme customization in applications.
CSS Variables are used to define reusable values for styling components, allowing for easy theme customization in Amplify UI.
CSS Variables are used in AWS Amplify UI to customize the styling of components globally, allowing for consistent design across the application.
CSS Variables are used to define custom styles for components, allowing for consistent theming across the application.
CSS Variables are used to define reusable values for styling components in the Amplify UI library.
CSS Variables are used in AWS Amplify to customize the styling of CheckboxField components globally.
CSS Variables are used to define custom properties that can be reused throughout the styling of the Tabs components.
CSS Variables are used to define reusable values for styling components in AWS Amplify UI React.
CSS Variables are used to define custom properties for styling components in Amplify UI, allowing for dynamic theming.
CSS Variables are used in Amplify UI to customize the styling of components globally, allowing developers to set consistent design attributes.
CSS Variables are used in Amplify UI to define reusable values for styling components.
CSS variables are entities used in styling to create reusable values that can be applied throughout a stylesheet, enhancing maintainability and flexibility.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,12ed2a0e7657f4c4359e7bea38b9bc13,4c20122de1ca69ecf45662867d268049,52fc958abba47a16871f909ed3cc2d5a,5b0d50411f54d1ef65278d02161d11d7,6f822244ad945944fb292c514cfddc13,7668a790c01b22add1e76afc928004db,85d9171dd6e70ffdb5803e227ecacbc4,88cf0bb9f01e55013ddfc8434b5c4f40,9939e974ca8f24b6b7f34bbf89addb7e,a407fa7a377db0b8cb08ded22609f5e2,aef551a2d82854ae79259d42c965502f,b48f64ddd27370c0d0a93447e796c6b3,c6562553adf4b52a1a6eec1a462e147f,c7af2749681510be539a408772ae1755,d700fb2336ddc0a563736b65003c9d4f,e3c4629b893f38a9c103147f3ea608f3,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="SHADOW STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">Shadow Styles are examples of how to apply shadow effects to UI components in Amplify UI.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="TYPOGRAPHY STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">Typography Styles are examples of how to apply typography effects to UI components in Amplify UI.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="TYPOGRAPHY STYLING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Typography Styling Example is a demonstration of how to apply typography styles to a text component in Amplify UI.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="SHADOW THEME TOKEN EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Shadow Theme Token Example shows how to use design tokens from the theme object to apply shadow styles.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="TYPOGRAPHY THEME TOKEN EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Typography Theme Token Example shows how to use design tokens from the theme object to apply typography styles.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="SHADOW TOKEN NAME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Shadow Token Name Example demonstrates how to use a design token name to apply shadow styles to a button.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="TYPOGRAPHY TOKEN NAME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Typography Token Name Example demonstrates how to use a design token name to apply typography styles to a text component.</data>
      <data key="d2">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </node>
    <node id="COLOR PALETTES">
      <data key="d0">EVENT</data>
      <data key="d1">Color palettes are collections of colors used in design, often specified in HSL format for web development.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PINK-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of pink with HSL value hsl(340, 90%, 85%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PINK-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of pink with HSL value hsl(340, 70%, 70%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PINK-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of pink with HSL value hsl(340, 50%, 50%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PINK-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of pink with HSL value hsl(340, 95%, 30%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PINK-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of pink with HSL value hsl(340, 100%, 20%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-10).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-100).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-20).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-40).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-60).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-80).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PRIMARY-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value var(--amplify-colors-teal-90).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 95%, 95%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 100%, 15%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 85%, 85%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 70%, 70%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 50%, 50%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 95%, 30%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-PURPLE-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value hsl(300, 100%, 20%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 75%, 95%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 100%, 15%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 75%, 85%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 75%, 75%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 50%, 50%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 95%, 30%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-RED-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of red with HSL value hsl(0, 100%, 20%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-10).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-100).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-20).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-40).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-60).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-80).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SECONDARY-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of purple with HSL value var(--amplify-colors-purple-90).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SHADOW-PRIMARY">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of shadow with HSL value hsla(210, 50%, 10%, 0.25).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SHADOW-SECONDARY">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of shadow with HSL value hsla(210, 50%, 10%, 0.15).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-SHADOW-TERTIARY">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of shadow with HSL value hsla(210, 50%, 10%, 0.05).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 75%, 95%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 100%, 15%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 75%, 85%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 70%, 70%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 50%, 50%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 95%, 30%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TEAL-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of teal with HSL value hsl(190, 100%, 20%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-TRANSPARENT">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a transparent color.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-WHITE">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing the color white with HSL value hsl(0, 0%, 100%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-10">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 75%, 95%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 100%, 15%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-20">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 75%, 85%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-40">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 75%, 75%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-60">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 50%, 50%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-80">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 95%, 30%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COLORS-YELLOW-90">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify color variable representing a specific shade of yellow with HSL value hsl(60, 100%, 20%).</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-BACKGROUND-COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the background color of an accordion component.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-ITEM-BORDER-COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the border color of an accordion item.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-ITEM-BORDER-RADIUS">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the border radius of an accordion item.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-ITEM-BORDER-STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the border style of an accordion item.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-ITEM-BORDER-WIDTH">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the border width of an accordion item.</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="AMPLIFY-COMPONENTS-ACCORDION-ITEM-CONTENT-COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify component variable representing the content color of an accordion item.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">b5ba1f149a354e2b301e24778d64cbde</data>
    </node>
    <node id="BADGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Badge is a UI component used to display notifications or status indicators, often used in conjunction with other elements.
Badge is a color-coded element used to display a status or message about an item in the Amplify UI for React.
Badge is a UI component in AWS Amplify that displays a small piece of information, often used to indicate status or category.
Badge is a component in Amplify UI that displays a small count or status indicator, often used to show notifications or updates.</data>
      <data key="d2">70306783d146ca14e7ca1a0332337b3c,919c09d2956ed4ab195e7a6898f39063,a016f0f03b4482ba0b2bdfb5ed16bd77,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </node>
    <node id="BREADCRUMBS">
      <data key="d0">EVENT</data>
      <data key="d1">Breadcrumbs are a navigational aid that allows users to keep track of their locations within applications or websites.
The Breadcrumbs component is a navigation list that visualizes the information architecture of a website and indicates the user's current location in the hierarchy.
Breadcrumbs is a UI component used for navigation in web applications, allowing users to track their location within a site and navigate back to previous pages.

The Breadcrumbs component visualizes the information architecture of a website and the user's current place in the hierarchy.</data>
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89,6e82a6e0427e12aef8dafce9907f3835,88cf0bb9f01e55013ddfc8434b5c4f40,919c09d2956ed4ab195e7a6898f39063,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="CHECKBOX">
      <data key="d0">EVENT</data>
      <data key="d1">Checkbox is a UI component that allows users to make a binary choice, often used in forms and settings.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="PAGINATION BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">Pagination buttons are UI elements that allow users to navigate through pages of content in a user interface.)&lt;|COMPLETE|&gt;("entity"</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY SPACE MEDIUM">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Space Medium is a predefined spacing variable used to maintain consistent padding in UI components.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COLORS BORDER PRIMARY">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Border Primary is a color variable used for the primary border color in UI components.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY BORDER WIDTHS MEDIUM">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Border Widths Medium is a variable that defines the medium width for borders in UI components.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY OPACITIES 100">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Opacities 100 is a variable that defines full opacity for UI elements.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY TIME SHORT">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Time Short is a variable that defines a short duration for animations and transitions in UI components.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS TEXT COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Text Color is a variable that defines the default text color for UI components.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX ALIGN ITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Align Items is a property that defines the alignment of items within a checkbox component.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX BUTTON ALIGN ITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Button Align Items is a property that defines the alignment of items within the checkbox button.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX BUTTON BEFORE BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Button Before Border Color is a property that defines the border color of the checkbox button before it is interacted with.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX BUTTON DISABLED BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Button Disabled Border Color is a property that defines the border color of the checkbox button when it is disabled.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX ICON BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Icon Background Color is a property that defines the background color of the checkbox icon.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOX LABEL COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkbox Label Color is a property that defines the color of the label associated with the checkbox.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS CHECKBOXFIELD ALIGN CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Checkboxfield Align Content is a property that defines the alignment of content within a checkbox field.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS COLLECTION SEARCH BUTTON COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Collection Search Button Color is a property that defines the color of the search button in a collection component.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS COLLECTION SEARCH BUTTON DISABLED BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Collection Search Button Disabled Background Color is a property that defines the background color of the search button when it is disabled.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS COLLECTION SEARCH BUTTON FOCUS BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Collection Search Button Focus Background Color is a property that defines the background color of the search button when it is focused.</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS COLLECTION SEARCH BUTTON HOVER BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Components Collection Search Button Hover Background Color is a property that defines the background color of the search button when hovered over.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">b2f8fbd1f0a4b6ad7a5e2b164c14eccb</data>
    </node>
    <node id="AMPLIFY COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Components is a design system that provides various UI components and styles for building applications.


Amplify Components is a design system that provides various UI components and styles for building user interfaces.
Amplify Components is a company that provides UI components and tools for building applications.
</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f,6534102a2bcab0d166b971b8fc0e8eb1,6f3ebecb177d34e1aee592a1e38dc5e5,b70fb65718552c87abf647b6a6ff79e7,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FONT SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Font size is a property that defines the size of text in UI components, affecting readability and design.
Font sizes are measurements that determine the size of text displayed in UI components.
Font Size is a property that defines the size of text in UI components.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="GAP">
      <data key="d0">EVENT</data>
      <data key="d1">Gap is a property that defines the spacing between elements in UI components, contributing to layout and design aesthetics.
Gaps are spaces between UI components that help in layout and design consistency.
Gap refers to the space between UI components in a layout.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Border color is a property that defines the color of the borders around UI components, impacting visual design.
Border Color defines the color of the borders applied to components in Amplify UI.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="BORDER RADIUS">
      <data key="d0">EVENT</data>
      <data key="d1">Border radius is a property that defines the roundness of the corners of UI components, affecting their appearance.
Border Radius is a property that defines the roundness of the corners of UI components.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="BORDER STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Border style is a property that defines the style of the borders around UI components, such as solid or dashed.
Border Style refers to the visual style of borders applied to components in Amplify UI.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="BORDER WIDTH">
      <data key="d0">EVENT</data>
      <data key="d1">Border width is a property that defines the thickness of the borders around UI components, influencing their visibility.
Border Width specifies the thickness of the borders applied to components in Amplify UI.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="DISABLED BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled background color is a property that defines the background color of UI components when they are not interactive.
Disabled Background Color refers to the background color of a UI component when it is not interactive.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DISABLED BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled border color is a property that defines the color of the borders around UI components when they are not interactive.
Disabled Border Color refers to the border color of a UI component when it is not interactive.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DISABLED COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled color is a property that defines the color of text in UI components when they are not interactive.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="ERROR BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Error border color is a property that defines the color of the borders around UI components when there is an error state.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="ERROR COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Error color is a property that defines the color of text in UI components when there is an error state.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FOCUS BORDER COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Focus border color is a property that defines the color of the borders around UI components when they are focused or active.
Focus Border Color refers to the border color of a UI component when it is focused by the user.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FOCUS BOX SHADOW">
      <data key="d0">EVENT</data>
      <data key="d1">Focus box shadow is a property that defines the shadow effect around UI components when they are focused, enhancing visibility.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="LINE HEIGHT">
      <data key="d0">EVENT</data>
      <data key="d1">Line height is a property that defines the vertical spacing between lines of text in UI components, affecting readability.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="OUTLINE COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Outline color is a property that defines the color of the outline around UI components, impacting their visibility and design.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="OUTLINE OFFSET">
      <data key="d0">EVENT</data>
      <data key="d1">Outline offset is a property that defines the distance of the outline from the component, affecting its appearance.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="OUTLINE STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Outline style is a property that defines the style of the outline around UI components, such as solid or dotted.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="OUTLINE WIDTH">
      <data key="d0">EVENT</data>
      <data key="d1">Outline width is a property that defines the thickness of the outline around UI components, influencing their visibility.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="OVERLAY FOCUS BOX SHADOW">
      <data key="d0">EVENT</data>
      <data key="d1">Overlay focus box shadow is a property that defines the shadow effect around UI components when they are focused, enhancing their appearance.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="PADDING">
      <data key="d0">EVENT</data>
      <data key="d1">Padding is a property that defines the space between the content of a UI component and its border, affecting layout.
Padding refers to the space between the content of a UI component and its border.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="TRANSITION DURATION">
      <data key="d0">EVENT</data>
      <data key="d1">Transition duration is a property that defines the time it takes for UI components to change from one state to another, affecting user experience.
Transition durations specify the time it takes for UI components to animate between states.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5,c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="FIELD GROUP GAP">
      <data key="d0">EVENT</data>
      <data key="d1">Field group gap is a property that defines the spacing between groups of fields in UI components, contributing to layout.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD GROUP OUTER ALIGN ITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">Field group outer align items is a property that defines the alignment of items within a field group, affecting layout.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD GROUP VERTICAL ALIGN ITEMS">
      <data key="d0">EVENT</data>
      <data key="d1">Field group vertical align items is a property that defines the vertical alignment of items within a field group, affecting layout.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD MESSAGES DESCRIPTION COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Field messages description color is a property that defines the color of descriptive messages in UI components, impacting readability.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD MESSAGES DESCRIPTION FONT SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Field messages description font size is a property that defines the size of descriptive messages in UI components, affecting readability.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD MESSAGES DESCRIPTION FONT STYLE">
      <data key="d0">EVENT</data>
      <data key="d1">Field messages description font style is a property that defines the style of descriptive messages in UI components, impacting their appearance.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD MESSAGES ERROR COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Field messages error color is a property that defines the color of error messages in UI components, impacting visibility.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELD MESSAGES ERROR FONT SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Field messages error font size is a property that defines the size of error messages in UI components, affecting readability.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELDSET BACKGROUND COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Fieldset background color is a property that defines the background color of fieldset components, impacting their appearance.</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="FIELDSET BORDER RADIUS">
      <data key="d0">EVENT</data>
      <data key="d1">Fieldset border radius is a property that defines the roundness of the corners of fieldset components, affecting their appearance.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </node>
    <node id="COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Color refers to the various color schemes and styles used in Amplify's components for user interface design.
Colors are visual attributes used in UI components to enhance aesthetics and user experience.
Color refers to the visual attribute of UI components that can be customized in applications.</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="BACKGROUND">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Background refers to the background color and styling options available in Amplify's components for user interface design.
Backgrounds are visual elements that provide context and style to UI components.
Background refers to the visual area behind UI components that can be customized in applications.
BACKGROUND refers to the various background color settings in Amplify UI components, allowing customization of the background appearance.</data>
      <data key="d2">1a2c25b18b52cc9adff7a263b890a3b5,37ea4ea73ecb3370ad928dc71b30f77f,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="BORDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Border refers to the border styles and attributes used in Amplify's components for user interface design.
Borders are lines that define the edges of UI components, enhancing their visibility and structure.
Border refers to the outline or edge of UI components that can be styled in applications.</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f,c1a6031416f64c80a84765d33eb17be4,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="SHADOW">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Shadow refers to the shadow effects that can be applied to components in Amplify for visual depth.</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </node>
    <node id="RADIUS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Radius refers to the border radius styles used in Amplify's components for rounded corners.</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </node>
    <node id="SPACE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Space refers to the spacing utilities provided by Amplify for layout and design consistency.</data>
      <data key="d2">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </node>
    <node id="SUCCESS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Success refers to the styling and design elements used in Amplify's components to indicate successful actions.
A type of message indicating a successful operation or action within the Amplify system.
A success event indicates that a file has been successfully uploaded, allowing for further actions to be taken.
Success is an event that occurs when the user account is successfully deleted, triggering the onSuccess callback.
A Success alert in Amplify UI indicates that an operation has been completed successfully, providing positive feedback to the user.</data>
      <data key="d2">35f3b0ff8ac0afd0bab73f2b8a1595ce,37ea4ea73ecb3370ad928dc71b30f77f,530b644b2b2dcf37b1cde4a8c015083a,5c7c1b8a3cde0fc5a186b912ceba73bb,c7af2749681510be539a408772ae1755</data>
    </node>
    <node id="WARNING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Warning refers to the styling and design elements used in Amplify's components to indicate warnings.
A type of message indicating a warning or caution regarding a potential issue within the Amplify system.
A Warning is a type of alert in Amplify UI that notifies users of potential issues that may require attention but are not critical.</data>
      <data key="d2">35f3b0ff8ac0afd0bab73f2b8a1595ce,37ea4ea73ecb3370ad928dc71b30f77f,c7af2749681510be539a408772ae1755</data>
    </node>
    <node id="SEARCH FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">Search fields are UI components that enable users to input text to search for specific content.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="SELECT">
      <data key="d0">EVENT</data>
      <data key="d1">Select components are dropdown menus that allow users to choose one or more options from a list.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="TRANSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Transitions are animations that occur when UI components change states, enhancing user interaction.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="CURSOR">
      <data key="d0">EVENT</data>
      <data key="d1">Cursor styles indicate the type of interaction available to users when hovering over UI components.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="JUSTIFY CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">Justify content is a CSS property that aligns items within a container, affecting layout.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="LABEL">
      <data key="d0">EVENT</data>
      <data key="d1">Labels are text elements that describe the purpose of UI components, aiding user understanding.
label is a required property that displays text next to the SwitchField, providing context for the user.
Label is a descriptor for the StepperField component that provides context to the user about the purpose of the field.
Label is a descriptive text associated with the SelectField component, indicating the purpose of the field to the user.
Label is a component that provides a description for the input field, ensuring accessibility for users.
Label is a UI component that represents a caption for a form control, enhancing accessibility and usability.
Label is a component in the Amplify UI library that provides accessible labels for form inputs.
The Label component is used to provide a description for form elements, enhancing accessibility and user experience.
Label primitive in Amplify UI enables captioning of user interface items for better accessibility.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,5c2098e04771d356430a7ff2887e471b,9939322ca44e243575243bddd27bc126,c1a6031416f64c80a84765d33eb17be4,d862c0095587db23ca9388fe047e5de4,da8a5f647964e74661f5f6b0ad4f6a74,e33823d803dfc43e2ab84d0208782223,e3c4629b893f38a9c103147f3ea608f3,e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="LEGEND">
      <data key="d0">EVENT</data>
      <data key="d1">Legends are descriptive elements that provide context for groups of related UI components.
Legend is a nested element within the Fieldset that provides a label for the grouped elements, enhancing accessibility for screen readers.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7,c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="RATING">
      <data key="d0">EVENT</data>
      <data key="d1">Rating components allow users to evaluate items, typically represented by stars or other symbols.
Rating is a component in Amplify UI that allows users to rate items, with a default rating of 3.5 out of 5 in the example provided.
Rating is a component in AWS Amplify that displays a read-only star rating of a product or service.
Rating is a component that allows users to provide a score or rating, typically represented visually with stars or similar icons.
Rating is a measure of the quality of Efe Kurnaz's artwork, currently at 4.8 out of 5 based on 445 reviews.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,4d25b33f699aef8a075e8858bf0ad630,52fc958abba47a16871f909ed3cc2d5a,aca6ad21122c65a602020d055257d45c,c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="DISABLED">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled states indicate that a UI component is not currently interactive or available for use.
Disabled is a state of the StepperField that prevents user interaction, making it non-editable.
Disabled is a selectable choice within a disabled RadioGroupField in AWS Amplify UI.
Disabled is a state of a button that prevents user interaction, indicating that the action cannot be performed at that moment.
Disabled is a state indicating that a checkbox cannot be interacted with by the user.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,2fa22e032f66ea7c5422792329c30589,8b2761fb86513e3cf4d313a43b80f9fc,9939322ca44e243575243bddd27bc126,c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="ACTIVE">
      <data key="d0">EVENT</data>
      <data key="d1">Active states indicate that a UI component is currently selected or in use.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="HOVER">
      <data key="d0">EVENT</data>
      <data key="d1">Hover states indicate visual changes that occur when a user places their cursor over a UI component.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="FOCUS">
      <data key="d0">EVENT</data>
      <data key="d1">Focus states indicate that a UI component is currently selected for interaction, often highlighted visually.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="PRIMARY">
      <data key="d0">EVENT</data>
      <data key="d1">Primary styles are the main visual themes applied to UI components, often indicating their importance.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="SECONDARY">
      <data key="d0">EVENT</data>
      <data key="d1">Secondary styles are alternative visual themes applied to UI components, indicating lesser importance.
Secondary refers to a color palette used in design, often as a complementary set of colors to the primary palette.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c,c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="TERTIARY">
      <data key="d0">EVENT</data>
      <data key="d1">Tertiary styles are additional visual themes applied to UI components, often used for less prominent elements.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="FIELD CONTROL">
      <data key="d0">EVENT</data>
      <data key="d1">Field controls are UI elements that allow users to input or select data, such as text fields or dropdowns.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="FIELDSET">
      <data key="d0">EVENT</data>
      <data key="d1">Fieldsets are groups of related UI components, often used to organize forms and improve usability.
Fieldset is a UI component used to group related form fields, often accompanied by a legend for context.
Fieldset is a component in React used to group related form fields, enhancing the organization of forms.
Fieldset is a component in AWS Amplify UI that groups related elements within a form, enhancing accessibility and organization of form controls.
Fieldsets in Amplify UI are used to group related form fields for better organization.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7,5c2098e04771d356430a7ff2887e471b,72f7bd8a9eb9039eabf2d7d1ff4c9601,c1a6031416f64c80a84765d33eb17be4,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="OUTLINE">
      <data key="d0">EVENT</data>
      <data key="d1">Outlines are visual borders that define the shape and boundaries of UI components, enhancing clarity.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="OFFSET">
      <data key="d0">EVENT</data>
      <data key="d1">Offsets are spacing adjustments that position UI components relative to their normal placement.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="WIDTH">
      <data key="d0">EVENT</data>
      <data key="d1">Widths define the horizontal size of UI components, affecting layout and design.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="HEIGHT">
      <data key="d0">EVENT</data>
      <data key="d1">Heights define the vertical size of UI components, affecting layout and design.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="TRANSITION PROPERTY">
      <data key="d0">EVENT</data>
      <data key="d1">Transition properties define which aspects of a UI component will animate during state changes.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="RADIO GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">Radio groups are collections of radio buttons that allow users to select one option from multiple choices.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON ACTIVE">
      <data key="d0">EVENT</data>
      <data key="d1">Active buttons indicate that an action is currently being performed, often visually distinguished.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON DISABLED">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled buttons indicate that an action cannot be performed, often grayed out or unclickable.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON FOCUS">
      <data key="d0">EVENT</data>
      <data key="d1">Focused buttons indicate that they are currently selected for interaction, often highlighted.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON HOVER">
      <data key="d0">EVENT</data>
      <data key="d1">Hovered buttons indicate visual changes when a user places their cursor over them, enhancing interactivity.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">Error buttons indicate that an action has failed or encountered a problem, often displayed with visual cues.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON OUTLINE">
      <data key="d0">EVENT</data>
      <data key="d1">Outlined buttons have a border but no background, often used for secondary actions.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON PRIMARY">
      <data key="d0">EVENT</data>
      <data key="d1">Primary buttons are the main call-to-action buttons, often visually distinct to attract attention.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SECONDARY">
      <data key="d0">EVENT</data>
      <data key="d1">Secondary buttons are alternative actions, often less visually prominent than primary buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON TERTIARY">
      <data key="d0">EVENT</data>
      <data key="d1">Tertiary buttons are the least prominent actions, often used for less important tasks.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SMALL">
      <data key="d0">EVENT</data>
      <data key="d1">Small buttons are compact versions of standard buttons, used for space-saving in UI design.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON LARGE">
      <data key="d0">EVENT</data>
      <data key="d1">Large buttons are oversized versions of standard buttons, often used for emphasis.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON RADIO">
      <data key="d0">EVENT</data>
      <data key="d1">Radio buttons are a type of button that allows users to select one option from a set.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SELECT">
      <data key="d0">EVENT</data>
      <data key="d1">Select buttons allow users to choose from a dropdown list of options.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SEARCH">
      <data key="d0">EVENT</data>
      <data key="d1">Search buttons initiate a search action, often paired with search fields.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON RATING">
      <data key="d0">EVENT</data>
      <data key="d1">Rating buttons allow users to provide feedback or evaluations, often represented visually.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON LEGEND">
      <data key="d0">EVENT</data>
      <data key="d1">Legend buttons provide context or descriptions for groups of related buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON GAP">
      <data key="d0">EVENT</data>
      <data key="d1">Gap buttons create spacing between buttons for improved layout and usability.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON JUSTIFY">
      <data key="d0">EVENT</data>
      <data key="d1">Justify buttons align multiple buttons within a container for a cohesive layout.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON CURSOR">
      <data key="d0">EVENT</data>
      <data key="d1">Cursor buttons indicate the type of interaction available when hovering over buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON FONT SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">Font size buttons adjust the text size within buttons for readability.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON BACKGROUND">
      <data key="d0">EVENT</data>
      <data key="d1">Background buttons define the visual style of buttons, enhancing aesthetics.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON BORDER">
      <data key="d0">EVENT</data>
      <data key="d1">Border buttons define the edges of buttons, enhancing visibility and structure.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON TRANSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Transition buttons animate changes in button states for a smoother user experience.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON DISABLED STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled state buttons indicate that an action cannot be performed, often grayed out.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON ACTIVE STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Active state buttons indicate that an action is currently being performed, often visually distinguished.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON FOCUS STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Focus state buttons indicate that they are currently selected for interaction, often highlighted.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON HOVER STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Hover state buttons indicate visual changes when a user places their cursor over them.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON ERROR STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Error state buttons indicate that an action has failed or encountered a problem, often displayed with visual cues.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON OUTLINE STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Outlined state buttons have a border but no background, often used for secondary actions.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON PRIMARY STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Primary state buttons are the main call-to-action buttons, often visually distinct to attract attention.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SECONDARY STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Secondary state buttons are alternative actions, often less visually prominent than primary buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON TERTIARY STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Tertiary state buttons are the least prominent actions, often used for less important tasks.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SMALL STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Small state buttons are compact versions of standard buttons, used for space-saving in UI design.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON LARGE STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Large state buttons are oversized versions of standard buttons, often used for emphasis.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON RADIO STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Radio state buttons are a type of button that allows users to select one option from a set.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SELECT STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Select state buttons allow users to choose from a dropdown list of options.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON SEARCH STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Search state buttons initiate a search action, often paired with search fields.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON RATING STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Rating state buttons allow users to provide feedback or evaluations, often represented visually.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON LEGEND STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Legend state buttons provide context or descriptions for groups of related buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON GAP STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Gap state buttons create spacing between buttons for improved layout and usability.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON JUSTIFY STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Justify state buttons align multiple buttons within a container for a cohesive layout.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON CURSOR STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Cursor state buttons indicate the type of interaction available when hovering over buttons.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON FONT SIZE STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Font size state buttons adjust the text size within buttons for readability.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON BACKGROUND STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Background state buttons define the visual style of buttons, enhancing aesthetics.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON BORDER STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Border state buttons define the edges of buttons, enhancing visibility and structure.</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="BUTTON TRANSITION STATE">
      <data key="d0">EVENT</data>
      <data key="d1">Transition state buttons animate changes in button states for a smoother user experience.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">c1a6031416f64c80a84765d33eb17be4</data>
    </node>
    <node id="DROPDOWN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dropdown is a UI component that allows users to select an option from a list.
Dropdown is a component that allows users to select an option from a list in the AWS Amplify UI for React.
Dropdown is an interactive UI element that allows users to select an option from a list, often used in conjunction with Breadcrumbs for additional navigation options.</data>
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89,d5db54aea339e57737c40468d9473a13,e6f9ca43dfb29c7478264e5ebadfca37</data>
    </node>
    <node id="INPUT FIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Input Field is a UI element that allows users to enter data into an application.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="TEXT ALIGN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Text Align is a property that defines the alignment of text within UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DROPDOWN TEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dropdown Text refers to the text displayed in a dropdown UI component.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE LIST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File List is a UI component that displays a list of files that can be managed or uploaded.
The File List is a component that displays files managed by the Storage Manager in the Amplify framework.</data>
      <data key="d2">6534102a2bcab0d166b971b8fc0e8eb1,d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="TEXT COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Text Color refers to the color of the text displayed in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="STROKE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Stroke refers to the outline of shapes or components in UI design.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DROPZONE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dropzone is a UI area where users can drag and drop files for upload.
The DropZone is a UI area in the Storage Manager where users can drag and drop files for upload.
The DropZone component allows users to capture files through drag and drop functionality in web applications.
DropZone is a component in the AWS Amplify UI React library that allows users to drag and drop files for upload.
DropZone is a component from the AWS Amplify UI for React that allows users to drag and drop images for upload.
The Dropzone component captures files from users with drag and drop functionality in Amplify UI.</data>
      <data key="d2">7668a790c01b22add1e76afc928004db,d5db54aea339e57737c40468d9473a13,d700fb2336ddc0a563736b65003c9d4f,d862c0095587db23ca9388fe047e5de4,e3c4629b893f38a9c103147f3ea608f3,e6f9ca43dfb29c7478264e5ebadfca37</data>
    </node>
    <node id="TEXT ALIGNMENT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Text Alignment refers to the positioning of text within a UI component.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE SIZE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Size refers to the amount of data contained in a file, often displayed in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="ACTIVE BACKGROUND COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Active Background Color refers to the background color of a UI component when it is in an active state.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="HOVER BACKGROUND COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hover Background Color refers to the background color of a UI component when a user hovers over it.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FOCUS BACKGROUND COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Focus Background Color refers to the background color of a UI component when it is focused by the user.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="ACTIVE BORDER COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Active Border Color refers to the border color of a UI component when it is in an active state.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="HOVER BORDER COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hover Border Color refers to the border color of a UI component when a user hovers over it.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="ACTIVE TEXT COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Active Text Color refers to the text color of a UI component when it is in an active state.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DISABLED TEXT COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Disabled Text Color refers to the text color of a UI component when it is not interactive.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="HOVER TEXT COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Hover Text Color refers to the text color of a UI component when a user hovers over it.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FOCUS TEXT COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Focus Text Color refers to the text color of a UI component when it is focused by the user.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DROPZONE TEXT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dropzone Text refers to the text displayed in a dropzone UI component.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="DROPZONE ICON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Dropzone Icon refers to the icon displayed in a dropzone UI component.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE IMAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Image refers to the visual representation of a file in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE BACKGROUND COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Background Color refers to the background color of a file representation in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE BORDER COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Border Color refers to the border color of a file representation in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE BORDER RADIUS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Border Radius refers to the roundness of the corners of a file representation in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE BORDER STYLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Border Style refers to the style of the border of a file representation in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE BORDER WIDTH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Border Width refers to the thickness of the border of a file representation in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE IMAGE BACKGROUND COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Image Background Color refers to the background color of the image representation of a file in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE IMAGE BORDER RADIUS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Image Border Radius refers to the roundness of the corners of the image representation of a file in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE IMAGE COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Image Color refers to the color of the image representation of a file in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE NAME COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Name Color refers to the color of the text displaying the file name in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE SIZE COLOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File Size Color refers to the color of the text displaying the file size in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE LIST FLEX DIRECTION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File List Flex Direction refers to the layout direction of the file list in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="FILE LIST GAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">File List Gap refers to the space between items in the file list in UI components.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="LOADER STROKE EMPTY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Loader Stroke Empty refers to the color of the loader when it is not filled.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="LOADER STROKE FILLED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Loader Stroke Filled refers to the color of the loader when it is filled.</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="LOADER STROKE LINECAP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Loader Stroke Linecap refers to the shape of the ends of the loader's stroke.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">d5db54aea339e57737c40468d9473a13</data>
    </node>
    <node id="ICON PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Icon Provider is a component in Amplify UI that allows customization of icons used in various UI components.
IconsProvider is a component in AWS Amplify that allows customization of icons used in various UI components.
An Icon Provider is a service or component that supplies icons for use in applications, allowing for customization and integration of various icon sets.</data>
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7,06fd00c0023b38a04bba794fae7ed356,a3d37007c833039158d1e1720cb62466</data>
    </node>
    <node id="DEMO">
      <data key="d0">EVENT</data>
      <data key="d1">Demo refers to a demonstration of the features and components available in Amplify UI for users.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356</data>
    </node>
    <node id="PASSWORDFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">PasswordField is a component in Amplify UI that allows users to enter passwords securely, with visibility options.
PasswordField is a component that allows users to input passwords with full password manager support, enhancing user experience in forms.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="SEARCHFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">SearchField is a component in Amplify UI that allows users to input search queries.
SearchField is a component in Amplify UI that accepts query text for search and provides various props for customization.
SearchField is a component provided by AWS Amplify UI React for creating search input fields in applications.
SearchField is a component that provides a user interface for searching, allowing users to input search queries.</data>
      <data key="d2">06fd00c0023b38a04bba794fae7ed356,a8cc34c06c7b64595006afc28abc0ae2,b48f64ddd27370c0d0a93447e796c6b3,bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="DEFAULT DARK MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Default Dark Mode is a feature in Amplify UI that allows applications to use a predefined dark theme.</data>
      <data key="d2">717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="SYSTEM DARK MODE">
      <data key="d0">EVENT</data>
      <data key="d1">System Dark Mode is a feature that allows applications to automatically adjust to the user's operating system preference for dark mode.</data>
      <data key="d2">717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="CUSTOM DARK MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Dark Mode allows developers to define their own dark mode settings and overrides within the ThemeProvider.</data>
      <data key="d2">717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="COLOR MODE">
      <data key="d0">EVENT</data>
      <data key="d1">Color Mode refers to the setting that determines whether the application uses light, dark, or system themes.</data>
      <data key="d2">717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="TOGGLE BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">Toggle Button is a UI component that allows users to switch between different options, such as light and dark modes in the ThemeProvider.
The Toggle Button is a UI element within the Toggle Button Group that enables users to select a specific language for the application.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="TOGGLE BUTTON GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">Toggle Button Group is a component that groups multiple Toggle Buttons together, allowing for exclusive selection of options like color modes.
</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,717f3b1fb6a6ce86c291aca158771f33</data>
    </node>
    <node id="CUSTOM THEME">
      <data key="d0">EVENT</data>
      <data key="d1">A custom theme in Amplify UI allows developers to define their own styling and design tokens for components.
Custom Theme is an event that allows users to define their own design tokens and styles for the UI components.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a,b8276fb595f7138780baf2d76c97bb37</data>
    </node>
    <node id="HEADING">
      <data key="d0">EVENT</data>
      <data key="d1">A Heading is a UI component in Amplify UI used to define the title or heading of a section.
The Heading component is used to display titles or headings in Amplify UI applications.
Heading is a component in Amplify UI that represents a title or section header in the user interface.
The Heading component in AWS Amplify UI is used to create headings of various levels for structuring content.
Heading is a component used to display titles or section headings in a user interface.
Heading is a component in Amplify UI that renders semantic section heading text representing six levels, from h1 to h6.
Heading is a component in Amplify UI used to define titles and headings in a user interface, with various levels for hierarchy.
The Heading component in Amplify UI is used for semantic purposes, mapping to an &lt;h*&gt; tag for better content structure.</data>
      <data key="d2">0f0c3a1733d9928c7207a0931e147afe,18256f324d7f8fc0edac5bbf717bf76d,1a2c25b18b52cc9adff7a263b890a3b5,3357299f904d0dd5b40c967c28b75149,6264f18714899ee18445e9c4535f5ff2,868b364b65a596f02a214b12ca0cbb6a,b8276fb595f7138780baf2d76c97bb37,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="COLORS">
      <data key="d0">EVENT</data>
      <data key="d1">The Colors section of Amplify UI discusses the color palette used in the UI components, defined by hue, saturation, and lightness.</data>
      <data key="d2">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </node>
    <node id="RADIIS">
      <data key="d0">EVENT</data>
      <data key="d1">RADIIS refers to the various settings for border radius in Amplify UI components, allowing customization of the corners of UI elements.</data>
      <data key="d2">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </node>
    <node id="BORDER WIDTHS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </node>
    <node id="AMPLIFY COLORS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Colors is a company that specializes in color palettes and design systems for various applications.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="NEUTRAL">
      <data key="d0">EVENT</data>
      <data key="d1">Neutral is a color palette that includes shades that are not overly vibrant, often used to balance other colors in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="RED">
      <data key="d0">EVENT</data>
      <data key="d1">Red is a color palette that includes various shades of red, used for emphasis and attention in design.
Red is a color theme option available for buttons in the AWS Amplify UI for React.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c,e6f9ca43dfb29c7478264e5ebadfca37</data>
    </node>
    <node id="ORANGE">
      <data key="d0">EVENT</data>
      <data key="d1">Orange is a color palette that includes various shades of orange, often used to convey warmth and enthusiasm in design.

Orange is a fruit of various citrus species in the family Rutaceae.
Orange is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c,4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228,dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="YELLOW">
      <data key="d0">EVENT</data>
      <data key="d1">Yellow is a color palette that includes various shades of yellow, typically associated with happiness and energy in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="GREEN">
      <data key="d0">EVENT</data>
      <data key="d1">Green is a color palette that includes various shades of green, often used to represent nature and tranquility in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="TEAL">
      <data key="d0">EVENT</data>
      <data key="d1">Teal is a color palette that includes various shades of teal, often used for a calming and sophisticated effect in design.
</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c,f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="AMPLIFY COLORS NEUTRAL">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Neutral refers to a specific color palette that includes various neutral shades, used to create balance in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS RED">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Red refers to a specific color palette that includes various shades of red, used to create emphasis in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS ORANGE">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Orange refers to a specific color palette that includes various shades of orange, used to convey warmth in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS YELLOW">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Yellow refers to a specific color palette that includes various shades of yellow, often used to evoke feelings of happiness in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS GREEN">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Green refers to a specific color palette that includes various shades of green, often used to represent nature in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS TEAL">
      <data key="d0">EVENT</data>
      <data key="d1">Amplify Colors Teal refers to a specific color palette that includes various shades of teal, used for a calming effect in design.</data>
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="AMPLIFY COLORS PURPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">0da6e011044a4da218e7ece5a6f2460c</data>
    </node>
    <node id="TYPOGRAPHY">
      <data key="d0">EVENT</data>
      <data key="d1">Typography refers to the style and appearance of printed matter, which is a key aspect of the Amplify UI design system.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="HEADING TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Heading Text is an example of a text element that can be styled using Amplify UI's typography tokens.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="FONT WEIGHTS">
      <data key="d0">EVENT</data>
      <data key="d1">Font Weights are design tokens that define the thickness of characters in typography, used in Amplify UI.
Font Weights in Amplify UI specify the weight of the fonts used in the design system.</data>
      <data key="d2">18256f324d7f8fc0edac5bbf717bf76d,f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="FONT SIZES">
      <data key="d0">EVENT</data>
      <data key="d1">Font Sizes are design tokens that define the size of text elements in typography, used in Amplify UI.
</data>
      <data key="d2">18256f324d7f8fc0edac5bbf717bf76d,f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="BLUE">
      <data key="d0">EVENT</data>
      <data key="d1">Blue is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="PURPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Purple is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="PINK">
      <data key="d0">EVENT</data>
      <data key="d1">Pink is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.
Pink is a background color option that can be applied to the DropZone component in the AWS Amplify UI for React.</data>
      <data key="d2">e6f9ca43dfb29c7478264e5ebadfca37,f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="BLACK">
      <data key="d0">EVENT</data>
      <data key="d1">Black is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="WHITE">
      <data key="d0">EVENT</data>
      <data key="d1">White is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="TRANSPARENT">
      <data key="d0">EVENT</data>
      <data key="d1">Transparent is a color used in the Amplify UI design system, represented by specific HSL values for styling purposes.</data>
      <data key="d2">f2b0e5018ea1044f912de4effd351e65</data>
    </node>
    <node id="DEFAULT THEME">
      <data key="d0">EVENT</data>
      <data key="d1">The Default Theme in Amplify UI defines the base palette, typography, and sizing used throughout the design system.
Default Theme is the standard theme provided by Amplify UI, which can be extended or overridden by custom themes.
The Default theme in Amplify UI provides a set of predefined styles and tokens for components.</data>
      <data key="d2">18256f324d7f8fc0edac5bbf717bf76d,877a7ccbdb63a00477117db13eba1534,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="BASE TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Base Tokens in Amplify UI are the foundational design tokens that define properties such as color, font size, and spacing.
Base Tokens is an interface that defines the structure for various design tokens such as colors, fonts, and spacing in Amplify UI.</data>
      <data key="d2">18256f324d7f8fc0edac5bbf717bf76d,f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="LINE HEIGHTS">
      <data key="d0">EVENT</data>
      <data key="d1">Line Heights in Amplify UI determine the spacing between lines of text in the design system.</data>
      <data key="d2">18256f324d7f8fc0edac5bbf717bf76d</data>
    </node>
    <node id="RESPONSIVE DESIGN">
      <data key="d0">EVENT</data>
      <data key="d1">Responsive Design is a design approach that ensures web applications look good on all devices by using flexible layouts and media queries.
Responsive design is an approach to web design that makes web pages render well on a variety of devices and window or screen sizes, which Amplify UI supports through its components.</data>
      <data key="d2">b0fc4cd8b01ddce0c70025c48b34ca98,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="BREAKPOINTS">
      <data key="d0">EVENT</data>
      <data key="d1">Breakpoints are specific screen widths that define how a responsive design adapts to different devices, such as mobile and desktop.
Breakpoints are specific points in responsive design that allow developers to define how the application layout should change based on the screen size.</data>
      <data key="d2">877a7ccbdb63a00477117db13eba1534,b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </node>
    <node id="TIME">
      <data key="d0">EVENT</data>
      <data key="d1">Time is a concept used in responsive design to indicate when styles change based on the viewport size.</data>
      <data key="d2">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </node>
    <node id="CSS CUSTOM PROPERTIES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">CSS Custom Properties are variables in CSS that can be used to store values for styling, such as those generated from design tokens in Amplify UI.</data>
      <data key="d2">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </node>
    <node id="THEME">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A theme in Amplify UI is a collection of design tokens and styles that can be applied to components to maintain a consistent look and feel across an application.
Theme is a configuration that customizes the appearance of components in an application, including tables.
Theme is a configuration that allows customization of the appearance of components in the Amplify UI for React.
Theme refers to the customizable appearance settings for the Pagination component in AWS Amplify.


A theme is a set of design tokens that customize the appearance of the StepperField component.
Theme is a configuration that customizes the appearance of UI components in an application.
Theme refers to the customization of the appearance of components in AWS Amplify applications, allowing developers to define styles and tokens.
Theme refers to the overall design and style applied to the PhoneNumberField component, affecting its visual presentation.
Theme in AWS Amplify UI allows customization of the appearance of components, enabling developers to create a consistent look and feel across their applications.
Theme is a configuration that customizes the appearance of components in the AWS Amplify UI React library.
Theme refers to the overall design and styling applied to UI components, allowing customization of colors, fonts, and other visual aspects.
Theme refers to a set of design tokens that define the visual style of components in AWS Amplify UI React.
Theme refers to the overall design and style applied to components in a user interface, allowing for customization of appearance.
Theme in AWS Amplify refers to the customization options available for UI components, allowing developers to define styles and appearance for their applications.
A theme in the context of alerts refers to the customization of the appearance and styling of alert components in an application.
The theme in Amplify UI allows customization of the appearance of Heading components and other UI elements.
Theme is a configuration object in Amplify UI that defines the styling and appearance of components throughout the application.
Theme refers to a set of design tokens and styles that define the visual appearance of UI components in a consistent manner.</data>
      <data key="d2">0108c0e942cd9aa8c65a9711baef8140,0f0c3a1733d9928c7207a0931e147afe,12ed2a0e7657f4c4359e7bea38b9bc13,395cfdedbdcedba18201a608511b9cc3,3bcd47a467bca8030037be27b1ae1b3e,3bf357b72dac2808e7ba2223ab2c4745,5b0d50411f54d1ef65278d02161d11d7,6264f18714899ee18445e9c4535f5ff2,6e82a6e0427e12aef8dafce9907f3835,7668a790c01b22add1e76afc928004db,887a21d9d2a5307a38fd1a7f57ebffa7,8b2761fb86513e3cf4d313a43b80f9fc,9939322ca44e243575243bddd27bc126,a016f0f03b4482ba0b2bdfb5ed16bd77,ac0c424efc84163fec05823d42352599,b0fc4cd8b01ddce0c70025c48b34ca98,b48f64ddd27370c0d0a93447e796c6b3,c6562553adf4b52a1a6eec1a462e147f,e28baad4e7d7ca8e43254a705cbf687f,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="USEBREAKPOINTVALUE">
      <data key="d0">EVENT</data>
      <data key="d1">useBreakpointValue is a hook in Amplify UI that allows components to adapt their styles based on the current breakpoint.</data>
      <data key="d2">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </node>
    <node id="CLOUD">
      <data key="d0">GEO</data>
      <data key="d1">The cloud refers to a network of remote servers hosted on the Internet to store, manage, and process data.
</data>
      <data key="d2">32ab448d1972668cba4e2c467ff116a8,d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="CLOUD STORAGE">
      <data key="d0">GEO</data>
      <data key="d1">Cloud storage refers to storing data on remote servers accessed via the Internet, allowing for scalable and flexible data management.</data>
      <data key="d2">32ab448d1972668cba4e2c467ff116a8</data>
    </node>
    <node id="FILEPICKER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FilePicker is a component that allows users to select files from their device for upload.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELIST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileList is a component that displays the list of files that are being uploaded.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELISTHEADER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileListHeader is the heading component that appears above the list of files in the FileList.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELISTFOOTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileListFooter is the footer component that appears below the list of files in the FileList.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="PROCESSFILE">
      <data key="d0">EVENT</data>
      <data key="d1">ProcessFile is an event that allows for processing or modifying files before they are uploaded.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="UPLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">Upload is an event that occurs when a file is being uploaded to the storage manager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="DROPZONEPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">DropZoneProps are the properties that define the behavior and appearance of the DropZone component in the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILEPICKERPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FilePickerProps are the properties that define the behavior and appearance of the FilePicker component in the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELISTPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileListProps are the properties that define the behavior and appearance of the FileList component in the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELISTHEADERPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileListHeaderProps are the properties that define the behavior and appearance of the FileListHeader component in the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="FILELISTFOOTERPROPS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FileListFooterProps are the properties that define the behavior and appearance of the FileListFooter component in the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="STORAGE_MANAGER_HANDLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">StorageManagerHandle is a reference to the imperative methods exposed by the StorageManager component.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="AUTOUPLOAD">
      <data key="d0">EVENT</data>
      <data key="d1">AutoUpload is a property that determines whether the upload starts automatically after a file is selected.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="MAXFILECOUNT">
      <data key="d0">EVENT</data>
      <data key="d1">MaxFileCount is a property that sets the maximum number of files that can be selected for upload at one time.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="MAXFILESIZE">
      <data key="d0">EVENT</data>
      <data key="d1">MaxFileSize is a property that sets the maximum file size that the uploader will accept in bytes.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="ACCEPTEDFILETYPES">
      <data key="d0">EVENT</data>
      <data key="d1">AcceptedFileTypes is a property that defines the types of files that can be uploaded through the StorageManager.</data>
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="CONTAINERPROPS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">ed2556eb80070ec113486cef81f33019</data>
    </node>
    <node id="PROCESS FILE">
      <data key="d0">EVENT</data>
      <data key="d1">The process file event is triggered when a file is being processed for upload, allowing for metadata to be added and other configurations to be set.</data>
      <data key="d2">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </node>
    <node id="FILES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Files refer to the digital documents or images that are being uploaded and managed through the Storage Manager component.</data>
      <data key="d2">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </node>
    <node id="DICTIONARY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The dictionary is an object that contains text strings for different languages, used to provide localized messages in the application.
The dictionary is an object that holds translations for different languages used in the FaceLivenessDetector's user interface.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="FILE PICKER">
      <data key="d0">EVENT</data>
      <data key="d1">The File Picker is a component that allows users to select files from their device for upload.
The File Picker is a component in the Storage Manager that allows users to select files for upload.
File picker is an event triggered to allow users to select files from their device, often used in conjunction with DropZone.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,7668a790c01b22add1e76afc928004db,d700fb2336ddc0a563736b65003c9d4f</data>
    </node>
    <node id="DROP ZONE">
      <data key="d0">EVENT</data>
      <data key="d1">The Drop Zone is an area in the UI where users can drag and drop files for upload.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988</data>
    </node>
    <node id="DIVIDER">
      <data key="d0">EVENT</data>
      <data key="d1">The Divider is a UI element that visually separates different sections of content within the Storage Manager.
Divider is a component used to visually separate sections in the Autocomplete menu, improving organization and readability.
Divider is a component used to separate items within a Menu for better organization and clarity.
Divider is a component in Amplify UI that helps organize content, separate sections, and establish visual rhythm in a user interface.
A Divider is a component in Amplify UI that creates separations in content to help organize and establish visual rhythm.</data>
      <data key="d2">1ceae74b49c1b621d815e85b8ca49988,6264f18714899ee18445e9c4535f5ff2,b4caad819b3245d1c7c01c198437baa1,d9a272b23f1d5cf3e9a9c6a2c79923b8,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="CLEAR FILES">
      <data key="d0">EVENT</data>
      <data key="d1">Clear Files is an event triggered by the Button component to clear the internal files state in the Storage Manager.</data>
      <data key="d2">d700fb2336ddc0a563736b65003c9d4f</data>
    </node>
    <node id="THEMING">
      <data key="d0">EVENT</data>
      <data key="d1">Theming refers to the process of customizing the appearance of UI components in AWS Amplify using the Theme Provider.</data>
      <data key="d2">d700fb2336ddc0a563736b65003c9d4f</data>
    </node>
    <node id="CUSTOM REF HANDLE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Custom Ref Handle is a feature in the Storage Manager that allows parent components to access methods like clearFiles.</data>
      <data key="d2">d700fb2336ddc0a563736b65003c9d4f</data>
    </node>
    <node id="STORAGE MANAGER COMPONENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">d700fb2336ddc0a563736b65003c9d4f</data>
    </node>
    <node id="MYTHEME">
      <data key="d0">EVENT</data>
      <data key="d1">MyTheme is a custom theme object that defines design tokens for colors, fonts, and other styling attributes.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="DESIGN TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Design Tokens are a way to store design decisions and are used to theme components in Amplify UI.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="BUTTON COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">Button Component is a UI element in Amplify UI that can be styled and themed using design tokens and CSS.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="TOKEN DEFINITIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Token Definitions refer to the structured way of defining design tokens for components in Amplify UI, including states and variations.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="FONT TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Font Tokens are defined in the fonts namespace of Amplify UI to allow the use of custom fonts in themes.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="PRIMARY FONT STACK">
      <data key="d0">EVENT</data>
      <data key="d1">Primary Font Stack is a collection of fonts defined in the theme for use in Amplify UI components.</data>
      <data key="d2">f6421de6d362747d50f273057f0bcb55</data>
    </node>
    <node id="AMAZON PIN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amazon Pin is a service that is part of AWS, used for sending messages and notifications to users.</data>
      <data key="d2">877a7ccbdb63a00477117db13eba1534</data>
    </node>
    <node id="CSS MEDIA QUERIES">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Media Queries are a feature of CSS that allows the application of styles based on the conditions such as viewport size.</data>
      <data key="d2">877a7ccbdb63a00477117db13eba1534</data>
    </node>
    <node id="MY THEME">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">877a7ccbdb63a00477117db13eba1534</data>
    </node>
    <node id="INAPPMESSAGINGPROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">InAppMessagingProvider is a component that provides the context for in-app messaging in React applications.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="INAPPMESSAGEDISPLAY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">InAppMessageDisplay is a component that handles the display and lifecycle of in-app messages in a React application.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="INAPPMSGPROVIDER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="MESSAGE COMPONENTS">
      <data key="d0">EVENT</data>
      <data key="d1">Message Components are functional UI components that render in-app message content within the application.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="BANNER MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Banner Message is a type of in-app message that can be displayed at the top, middle, or bottom of the application screen.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="CAROUSEL MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Carousel Message is a UI component that displays a series of messages in a carousel format, primarily for React Native applications.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="FULLSCREEN MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">FullScreen Message is a UI component that takes up the entire screen to display an in-app message.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="MODAL MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Modal Message is a UI component that displays an in-app message in a modal format, requiring user interaction to dismiss.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="USE IN-APP MESSAGING">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">useInAppMessaging is a hook that allows components to interact with the InAppMessagingContext directly.</data>
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="AMPLIFY IN-APP MESSAGING API">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3a9b26a380534d4aa1f17290c51aea24</data>
    </node>
    <node id="STORAGE IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Storage Image component allows users to load images from Amplify Storage in a React application.
Storage Image is a component in AWS Amplify UI for React that allows users to display images stored in Amazon S3.</data>
      <data key="d2">1d0207e2e11503628d08eefd24849d93,515a9fba2517051a51ebb09f8a2c2b06</data>
    </node>
    <node id="CUSTOM BANNER MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Custom Banner Message is a user-defined message displayed at the top of the application interface using Amplify's in-app messaging.</data>
      <data key="d2">1d0207e2e11503628d08eefd24849d93</data>
    </node>
    <node id="CUSTOM MODAL MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Custom Modal Message is a user-defined modal that displays messages in a modal format using Amplify's in-app messaging.</data>
      <data key="d2">1d0207e2e11503628d08eefd24849d93</data>
    </node>
    <node id="STYLES PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The Styles Prop is a feature that allows customization of the appearance of Amplify UI components.</data>
      <data key="d2">1d0207e2e11503628d08eefd24849d93</data>
    </node>
    <node id="FALLBACK IMAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Fallback Image is an alternative image displayed when the primary image fails to load in the StorageImage component.</data>
      <data key="d2">515a9fba2517051a51ebb09f8a2c2b06</data>
    </node>
    <node id="AMPLIFY UI GEO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify UI Geo is a framework that integrates Geo APIs and Amazon Location Service for building interactive map applications.</data>
      <data key="d2">b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="REACT-MAP-GL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">react-map-gl is an open-source library for rendering maps in React applications using Mapbox GL.</data>
      <data key="d2">b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="MAPVIEW">
      <data key="d0">EVENT</data>
      <data key="d1">MapView is a component that adds an interactive map to applications built with Amplify UI Geo.
MapView is a component that renders a map interface for displaying geographical data and markers.
MapView is a component used in React applications to render maps, often requiring specific configurations to function correctly.
MapView is a component from the @aws-amplify/ui-react-geo library used to display maps in applications.</data>
      <data key="d2">480e2412619ad09a750dc16a3f8ceab3,64488fb4232e09664566b2ee3c00394a,b453ff9e225c4008acb26b7c1bf321dd,e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="INITIAL VIEWPORT">
      <data key="d0">EVENT</data>
      <data key="d1">Initial Viewport is a property used in the MapView component to set the starting position and zoom level of the map.</data>
      <data key="d2">b453ff9e225c4008acb26b7c1bf321dd</data>
    </node>
    <node id="LOCATIONSEARCH">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">LocationSearch is a component that provides location search functionality powered by Amazon Location Service for the MapView component.
LocationSearch is a component that provides search results based on proximity and can be used independently of MapView.
LocationSearch is a component from the @aws-amplify/ui-react-geo library that allows users to search for locations on a map.</data>
      <data key="d2">480e2412619ad09a750dc16a3f8ceab3,995b90fa5ccd54a921a730cc91487965,e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="MORDOR">
      <data key="d0">GEO</data>
      <data key="d1">Mordor is a fictional location referenced in the context of a map animation feature within the application.</data>
      <data key="d2">480e2412619ad09a750dc16a3f8ceab3</data>
    </node>
    <node id="MAPLIBRE-GL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Maplibre-gl is a library for rendering maps in web applications, providing the underlying functionality for the MapView component.</data>
      <data key="d2">480e2412619ad09a750dc16a3f8ceab3</data>
    </node>
    <node id="SAN FRANCISCO">
      <data key="d0">GEO</data>
      <data key="d1">San Francisco is a city in California, used here as a reference point for proximity in the LocationSearch component.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="FACE LIVENESS DETECTOR">
      <data key="d0">EVENT</data>
      <data key="d1">Face Liveness Detector is a UI component that helps verify the authenticity of users by detecting spoof attempts using Amazon Rekognition technology.
Face Liveness Detector is a component in the AWS Amplify UI for React that verifies the liveliness of a user's face during authentication.
Face Liveness Detector is a component used for analyzing facial liveness in real-time applications, particularly in security and verification processes.
Face Liveness Detector is a component that verifies the presence of a live person during a face recognition process.
The Face Liveness Detector is a component of AWS Amplify that uses machine learning to verify the liveliness of a user's face during authentication.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b,530b644b2b2dcf37b1cde4a8c015083a,95c47d77c6b1c1b930bbbff2c9d1facf,995b90fa5ccd54a921a730cc91487965,c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="FACE LIVENESS TROUBLESHOOTING">
      <data key="d0">EVENT</data>
      <data key="d1">Face Liveness Troubleshooting refers to the process of resolving issues related to the FaceLivenessDetector component in the Amplify UI.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="LIVENESS UI">
      <data key="d0">EVENT</data>
      <data key="d1">Liveness UI is the user interface component that allows users to perform the Face Liveness check.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="AWS-EXPORTS.JS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">aws-exports.js is a configuration file used in web applications to set up AWS services, including Cognito.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="AMPLIFYCONFIGURATION.JSON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">amplifyconfiguration.json is a configuration file used in mobile applications to set up AWS services, including Cognito.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="FACE LIVENESS CHECK">
      <data key="d0">EVENT</data>
      <data key="d1">Face Liveness Check is the process of verifying that a user is real and not using a spoof to access services.</data>
      <data key="d2">995b90fa5ccd54a921a730cc91487965</data>
    </node>
    <node id="FACELIVENESSDETECTOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FaceLivenessDetector is a component that uses AWS services to perform face liveness checks in applications.
FaceLivenessDetector is a component used for verifying the liveness of a face in a digital environment, part of the AWS Amplify UI React library.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b,cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="REKOGNITION">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Rekognition is an AWS service that provides image and video analysis, including facial recognition capabilities.</data>
      <data key="d2">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="LIVENESSSTACK">
      <data key="d0">EVENT</data>
      <data key="d1">LivenessStack is a backend stack created to manage the liveness detection process in applications.</data>
      <data key="d2">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="AMPLIFY GEN 1">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Gen 1 is an earlier version of AWS Amplify used for application development and management.</data>
      <data key="d2">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="BACKEND.TS">
      <data key="d0">EVENT</data>
      <data key="d1">Backend.ts is a TypeScript file used to configure backend resources for the application.</data>
      <data key="d2">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="LIVENESS POLICY">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Liveness Policy is an inline policy created to allow authenticated users access to Rekognition services.</data>
      <data key="d2">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </node>
    <node id="DELETE USER">
      <data key="d0">EVENT</data>
      <data key="d1">Delete User is an event triggered when a user chooses to permanently delete their account from the app.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a</data>
    </node>
    <node id="DELETE USER COMPONENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Delete User Components are custom components that can override the default UI elements in the Delete User process.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a</data>
    </node>
    <node id="DELETE BUTTON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Delete Button is a UI element that allows users to confirm the deletion of their account.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a</data>
    </node>
    <node id="ERROR MESSAGE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Error Message is a UI element that displays alerts when there are errors during the account deletion process.
The Error Message component displays alerts for errors that occur during the password change process.
An error message is displayed when the StepperField component encounters a validation error.
Error Message is a notification displayed to users indicating that their input has not met the required validation criteria.
Error message is a notification displayed to inform the user of an issue with their input.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,530b644b2b2dcf37b1cde4a8c015083a,9939322ca44e243575243bddd27bc126,a5e50f469dd57f00c706f3dcd5894c37,e9839e578f896e0d269ce78abd50bae3</data>
    </node>
    <node id="WARNING VIEW">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Warning View is a UI element that prompts users to confirm their decision to delete their account.</data>
      <data key="d2">530b644b2b2dcf37b1cde4a8c015083a</data>
    </node>
    <node id="US-EAST-1">
      <data key="d0">GEO</data>
      <data key="d1">US-East-1 is an AWS region located in Northern Virginia, USA, where various AWS services are hosted.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="DARK THEME">
      <data key="d0">EVENT</data>
      <data key="d1">The dark theme is a visual style that changes the default colors of the FaceLivenessDetector to a darker palette for better visibility in low-light conditions.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="CUSTOMIZATION">
      <data key="d0">EVENT</data>
      <data key="d1">Customization refers to the process of modifying the FaceLivenessDetector's appearance and behavior to fit specific user needs or preferences.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="TOGGLEBUTTON">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ToggleButton is a component that allows users to switch between different options, such as language settings in the FaceLivenessDetector.
ToggleButton is a component that allows users to toggle the on/off state for some configuration in Amplify UI.
The ToggleButton is a UI component used in web applications for toggling between two states, often used for settings or options.
ToggleButton is a component in Amplify UI that allows users to toggle between two states, such as on and off.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,4c20122de1ca69ecf45662867d268049,7562010f59ffaae90af6b15498cde84b,8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="LANGUAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Language selection is an event that allows users to choose their preferred language for the FaceLivenessDetector interface.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="PHOTOSENSITIVITY WARNING">
      <data key="d0">EVENT</data>
      <data key="d1">Photosensitivity Warning is a notification displayed to users who may be sensitive to flashing lights during the FaceLivenessDetector check.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="ERROR VIEW">
      <data key="d0">EVENT</data>
      <data key="d1">Error View is a component that displays error messages to users if the FaceLivenessDetector encounters issues during operation.</data>
      <data key="d2">7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="TOGGLEBUTTONGROUP">
      <data key="d0" />
      <data key="d1">
ToggleButtonGroup is a component in Amplify UI that groups multiple ToggleButtons together for collective interaction.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,7562010f59ffaae90af6b15498cde84b</data>
    </node>
    <node id="CUSTOM ERROR VIEW">
      <data key="d0">EVENT</data>
      <data key="d1">A custom error view is a user-defined interface that displays error messages and options to retry actions in a user-friendly manner.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b</data>
    </node>
    <node id="SYSTEM CLOCK OFFSET">
      <data key="d0">EVENT</data>
      <data key="d1">System Clock Offset is a configuration that adjusts the time difference between the server and the user's device to ensure accurate timekeeping in applications.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b</data>
    </node>
    <node id="TENSORFLOW">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TensorFlow is an open-source machine learning framework that provides a comprehensive ecosystem for building and deploying machine learning models.
TensorFlow is an open-source platform for machine learning, providing a comprehensive ecosystem for building and deploying machine learning models.
TensorFlow is an open-source machine learning framework used for building and training machine learning models.</data>
      <data key="d2">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf,c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="CHANGE PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Change Password is a component that allows end users to update their account password securely.
Change Password is a specific event within the Account Settings component that allows users to update their password.</data>
      <data key="d2">a5e50f469dd57f00c706f3dcd5894c37,c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="MODEL.JSON">
      <data key="d0">EVENT</data>
      <data key="d1">Model.json is a configuration file used in machine learning models to define the architecture and parameters of the model.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="GROUP1-SHARD1OF1.BIN">
      <data key="d0">EVENT</data>
      <data key="d1">Group1-shard1of1.bin is a binary file that contains the weights and biases of a machine learning model, used in conjunction with model.json.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="TFJS-BACKEND-WASM">
      <data key="d0">EVENT</data>
      <data key="d1">TFJS Backend WASM is a WebAssembly backend for TensorFlow.js that allows for high-performance execution of machine learning models in web applications.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="TAR FILE">
      <data key="d0">EVENT</data>
      <data key="d1">A tar file is an archive file format used to combine multiple files into a single file for easier distribution and storage.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="BINARY PATH">
      <data key="d0">EVENT</data>
      <data key="d1">Binary path refers to the directory location where the WebAssembly (.wasm) files are stored for the Face Liveness Detector.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="FACE MODEL URL">
      <data key="d0">EVENT</data>
      <data key="d1">Face model URL is the link to the model.json file that defines the face detection model used in the Face Liveness Detector.</data>
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="TENSORFLOW JS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </node>
    <node id="CHANGE PASSWORD COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Change Password component is a part of the Amplify UI that allows users to change their passwords securely.</data>
      <data key="d2">a5e50f469dd57f00c706f3dcd5894c37</data>
    </node>
    <node id="PASSWORD FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">The Password Field is a UI component used for inputting passwords in the Change Password component.
Password Field is a component that allows users to input passwords with full password manager support, enhancing user experience in forms.
The PasswordField is a UI component that allows users to input a password, with features for showing/hiding the password and indicating requirements for password strength.
Password Field is a UI component that allows users to input a password securely, with features like validation and error handling.
Password Field is a UI component used for inputting passwords, featuring visibility toggles and error handling.
PasswordField allows users to input passwords, featuring full password manager support and an optional show/hide feature.</data>
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf,3357299f904d0dd5b40c967c28b75149,5c2098e04771d356430a7ff2887e471b,a5e50f469dd57f00c706f3dcd5894c37,e3c4629b893f38a9c103147f3ea608f3,e9839e578f896e0d269ce78abd50bae3</data>
    </node>
    <node id="FORGOT PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Forgot Password is an event that allows users to initiate a password recovery process through the Authenticator.
The Forgot Password event is a process that allows users to reset their password if they forget it.
Forgot Password is an event that allows users to reset their password if they cannot remember it.
Forgot Password is an event that allows users to recover their account access by resetting their password.
Forgot Password is an event that allows users to initiate the process of recovering their account access.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a,793ee29fd3ae616dbc82df13c1d4f39b,7d1946ff469243c820fe74fd26b68cbd,abdfd668c78186087ff9da2146979893</data>
    </node>
    <node id="USEAUTHENTICATOR">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">abdfd668c78186087ff9da2146979893</data>
    </node>
    <node id="SIGN UP">
      <data key="d0">EVENT</data>
      <data key="d1">The Sign Up event allows new users to create an account within the Amplify UI framework.
Sign Up is an event where a new user creates an account on the AWS Amplify platform.
Sign Up is an event where users create an account in the application, providing necessary information such as email and password.
The Sign Up event refers to the process where a new user registers by providing their information through the Authenticator component.</data>
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a,793ee29fd3ae616dbc82df13c1d4f39b,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="CODE DELIVERY DETAIL">
      <data key="d0">EVENT</data>
      <data key="d1">Code Delivery Detail is an event that provides information on where a confirmation sign-up code is sent to the user.</data>
      <data key="d2">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </node>
    <node id="VALIDATION ERRORS">
      <data key="d0">EVENT</data>
      <data key="d1">Validation Errors is an event that maps each error message to the respective input name during form validation in the authentication process.</data>
      <data key="d2">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </node>
    <node id="IS PENDING">
      <data key="d0">EVENT</data>
      <data key="d1">Is Pending is a state indicating whether a service API call is currently in progress during the authentication process.</data>
      <data key="d2">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </node>
    <node id="FORM FIELDS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </node>
    <node id="TERMS AND CONDITIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Terms and Conditions is an agreement that users must accept to use the application, often required during the sign-up process.
Terms and conditions are rules and guidelines that users must agree to before using a service or product.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,353184f9ee9fe27f7425aaec76c8a30a</data>
    </node>
    <node id="DEFAULT VALUES">
      <data key="d0">EVENT</data>
      <data key="d1">Default Values are the pre-set labels and text that can be customized in the application for user interface elements.</data>
      <data key="d2">353184f9ee9fe27f7425aaec76c8a30a</data>
    </node>
    <node id="SIGN UP PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">The Sign Up Page is a user interface where users can register for an account by providing their information.</data>
      <data key="d2">353184f9ee9fe27f7425aaec76c8a30a</data>
    </node>
    <node id="REGISTER">
      <data key="d0">EVENT</data>
      <data key="d1">Register is an event where users create a new account in the application.
Register is an event that occurs when a new user creates an account in an application.
Register is an event that allows new users to create an account in the Authenticator component.</data>
      <data key="d2">353184f9ee9fe27f7425aaec76c8a30a,73680e5bf87090f014e7bd9d2b8e582a,7d1946ff469243c820fe74fd26b68cbd</data>
    </node>
    <node id="FORMFIELDS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">FormFields is a prop that defines the order and attributes of input fields in the Authenticator component.
FormFields is a configuration object that defines the structure and customization options for the authentication forms.</data>
      <data key="d2">7d1946ff469243c820fe74fd26b68cbd,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="FAMILY NAME">
      <data key="d0">PERSON</data>
      <data key="d1">Family Name is an input field for users to provide their last name during the sign-up process.</data>
      <data key="d2">a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="PREFERRED USERNAME">
      <data key="d0">PERSON</data>
      <data key="d1">Preferred Username is an input field for users to choose a unique username during the sign-up process.</data>
      <data key="d2">a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="CONFIRM PASSWORD">
      <data key="d0">PERSON</data>
      <data key="d1">Confirm Password is an input field where users re-enter their password to ensure it matches the original entry during sign-up.
The Confirm Password field is a UI component that allows users to re-enter their new password to ensure it matches the original input.</data>
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="DIAL CODE">
      <data key="d0">PERSON</data>
      <data key="d1">Dial Code is a field that allows users to select their country code when entering their phone number during sign-up.
Dial codes are prefixes used in telephone numbers to indicate the country of the phone number.


A dial code is a prefix used to indicate the country or region of a phone number.
A dial code is a specific code used to initiate a phone call to a particular region or country, often included in phone number formats.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,52087f54ba341fa48453f206aca85fa0,62d6f0f965da0c44ef157072fc13a2ef,a31ec7e4bd06590a0d36f19c433d4801,a405b9f832ed918dd2c0ed33bb2b5808,e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="DIAL CODE LIST">
      <data key="d0">PERSON</data>
      <data key="d1">Dial Code List is a collection of international dialing codes available for users to choose from when entering their phone number.
Dial Code List is an array of country codes used in phone number input fields for user authentication.
The Dial Code List is an array of international dialing codes used as options in the dial code selector.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,7d1946ff469243c820fe74fd26b68cbd,a31ec7e4bd06590a0d36f19c433d4801</data>
    </node>
    <node id="CONFIRM SIGN UP">
      <data key="d0">EVENT</data>
      <data key="d1">Confirm Sign Up is an event that occurs when a user verifies their account after registration.</data>
      <data key="d2">7d1946ff469243c820fe74fd26b68cbd</data>
    </node>
    <node id="CONFIRM RESET PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">Confirm Reset Password is an event that occurs when a user finalizes their password reset process.</data>
      <data key="d2">7d1946ff469243c820fe74fd26b68cbd</data>
    </node>
    <node id="SETUP TOTP">
      <data key="d0">EVENT</data>
      <data key="d1">Setup TOTP is an event that allows users to configure Time-based One-Time Password for enhanced security.</data>
      <data key="d2">7d1946ff469243c820fe74fd26b68cbd</data>
    </node>
    <node id="SOCIAL PROVIDERS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Social Providers are third-party authentication services like Amazon, Facebook, and Google that can be integrated into the Authenticator for user sign-in.</data>
      <data key="d2">322dba5659c945a3d1a5389a738aee99</data>
    </node>
    <node id="CREATE ACCOUNT">
      <data key="d0">EVENT</data>
      <data key="d1">Create Account is an event that occurs when a new user registers for an account using the Authenticator component.</data>
      <data key="d2">322dba5659c945a3d1a5389a738aee99</data>
    </node>
    <node id="FORGOT YOUR PASSWORD?">
      <data key="d0">EVENT</data>
      <data key="d1">Forgot Your Password? is an event that allows users to recover their accounts if they forget their password while using the Authenticator component.</data>
      <data key="d2">322dba5659c945a3d1a5389a738aee99</data>
    </node>
    <node id="SIGN UP ATTRIBUTES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Sign Up Attributes are the specific fields required for user registration in the Authenticator component, such as email and password.</data>
      <data key="d2">322dba5659c945a3d1a5389a738aee99</data>
    </node>
    <node id="VERIFICATION ATTRIBUTES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Verification Attributes are the fields required to verify a user's identity, such as email, during the authentication process in the Authenticator component.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">322dba5659c945a3d1a5389a738aee99</data>
    </node>
    <node id="VISUALLYHIDDEN">
      <data key="d0">EVENT</data>
      <data key="d1">VisuallyHidden is a component in AWS Amplify used to hide content visually while keeping it accessible for screen readers.</data>
      <data key="d2">4d25b33f699aef8a075e8858bf0ad630</data>
    </node>
    <node id="AWS EXPORTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS exports is a configuration file that contains the necessary settings for connecting an application to AWS services, typically used in AWS Amplify projects.</data>
      <data key="d2">4d25b33f699aef8a075e8858bf0ad630</data>
    </node>
    <node id="RATING COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Rating component is a UI element that allows users to provide feedback on a scale, typically from 1 to 5.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="SVG ICON">
      <data key="d0">EVENT</data>
      <data key="d1">An SVG icon is a scalable vector graphic used in the Rating component to represent ratings visually.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="CUSTOM ICON">
      <data key="d0">EVENT</data>
      <data key="d1">A custom icon can be used in the Rating component to replace the default filled and empty icons.
A custom icon is a user-defined graphical representation created using SVG or other graphic formats, tailored for specific applications.</data>
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7,45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="CUSTOM EMPTY ICON">
      <data key="d0">EVENT</data>
      <data key="d1">A custom empty icon can be used in the Rating component to differentiate between filled and empty states.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="EMPTY COLOR">
      <data key="d0">EVENT</data>
      <data key="d1">Empty color is a property that can be set in the Rating component to define the color of unfilled ratings, providing a clear distinction between filled and empty states.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="RATING COLOR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Rating Color Example demonstrates how to customize the fill and empty colors of the Rating component using theme tokens.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="RATING ICON EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Rating Icon Example illustrates how to use a custom icon in the Rating component, showcasing flexibility in design.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="RATING SVG EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Rating SVG Example shows how to implement a custom SVG icon in the Rating component, allowing for unique visual representations.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="RATING EMPTY EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Rating Empty Example demonstrates how to use a custom empty icon in the Rating component, differentiating between filled and empty states.</data>
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="FILL COLOR">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </node>
    <node id="HIGHLIGHTMATCH">
      <data key="d0">EVENT</data>
      <data key="d1">HighlightMatch is a component used to highlight a substring of text in a React application.
HighlightMatch is a component that highlights matching text in the Autocomplete options based on user input.</data>
      <data key="d2">52fc958abba47a16871f909ed3cc2d5a,d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </node>
    <node id="RATING THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">RatingThemeExample is a demonstration of how to implement a themed rating component in Amplify UI for React.</data>
      <data key="d2">52fc958abba47a16871f909ed3cc2d5a</data>
    </node>
    <node id="RATING STYLE COLOR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">RatingStyleColorExample is an example of how to customize the color of the rating component in Amplify UI for React.</data>
      <data key="d2">52fc958abba47a16871f909ed3cc2d5a</data>
    </node>
    <node id="RATING STYLE SIZE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">RatingStyleSizeExample is an example of how to customize the size of the rating component in Amplify UI for React.</data>
      <data key="d2">52fc958abba47a16871f909ed3cc2d5a</data>
    </node>
    <node id="AMPLIFY UI FOR REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify UI for React is a library that provides components for building user interfaces in React applications, including a Table component for displaying tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="CITRUS">
      <data key="d0">PERSON</data>
      <data key="d1">Citrus is a category of fruits that includes varieties such as Orange, Grapefruit, and Lime, which are displayed in the Table component.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="STONE FRUIT">
      <data key="d0">PERSON</data>
      <data key="d1">Stone Fruit is a category of fruits that includes varieties such as Nectarine and Peach, which are displayed in the Table component.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="BERRY">
      <data key="d0">PERSON</data>
      <data key="d1">Berry is a category of fruits that includes varieties such as Raspberry and Strawberry, which are displayed in the Table component.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="NECTARINE">
      <data key="d0">PERSON</data>
      <data key="d1">Nectarine is a type of stone fruit that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="RASPBERRY">
      <data key="d0">PERSON</data>
      <data key="d1">Raspberry is a type of berry that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="GRAPEFRUIT">
      <data key="d0">PERSON</data>
      <data key="d1">Grapefruit is a type of citrus fruit that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="APRICOT">
      <data key="d0">PERSON</data>
      <data key="d1">Apricot is a type of stone fruit that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="BLUEBERRY">
      <data key="d0">PERSON</data>
      <data key="d1">Blueberry is a type of berry that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="LIME">
      <data key="d0">PERSON</data>
      <data key="d1">Lime is a type of citrus fruit that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="PEACH">
      <data key="d0">PERSON</data>
      <data key="d1">Peach is a type of stone fruit that is included in the Table component as part of the tabular data.</data>
      <data key="d2">dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="STRAWBERRY">
      <data key="d0">PERSON</data>
      <data key="d1">Strawberry is a type of berry that is included in the Table component as part of the tabular data.
The garden strawberry is a widely grown hybrid species of the genus Fragaria, collectively known as the strawberries.
Strawberry is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228,dce893dfb435d8bb64c3de3aa22630a5</data>
    </node>
    <node id="TABLECELL">
      <data key="d0">EVENT</data>
      <data key="d1">TableCell is a component used within tables to represent individual data points or headers in a structured format.
TableCell is a component used to represent a single cell within a TableRow in the Amplify UI for React.</data>
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </node>
    <node id="TABLEHEAD">
      <data key="d0">EVENT</data>
      <data key="d1">TableHead is a component that defines the header section of a table, typically containing column titles.</data>
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </node>
    <node id="TABLEROW">
      <data key="d0">EVENT</data>
      <data key="d1">TableRow is a component that represents a single row in a table, containing one or more TableCell components.
TableRow is a component used to represent a single row of data within the TableBody in the Amplify UI for React.</data>
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </node>
    <node id="SPANEXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SpanExample demonstrates how to use TableCell to span multiple columns or rows in a table layout.</data>
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </node>
    <node id="TABLEBODY">
      <data key="d0">EVENT</data>
      <data key="d1">TableBody is a component that contains the main content of a table, consisting of multiple TableRow components.
</data>
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </node>
    <node id="HIGHLIGHTONHOVER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </node>
    <node id="TABLE BODY">
      <data key="d0">EVENT</data>
      <data key="d1">Table Body is a component that contains the main content of a table, consisting of rows and cells that hold data.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE ROW">
      <data key="d0">EVENT</data>
      <data key="d1">Table Row is a component that represents a single row in a table, containing one or more cells.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE CELL">
      <data key="d0">EVENT</data>
      <data key="d1">Table Cell is a component that represents a single cell in a table, which can hold data or other components.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="GLOBAL STYLING TABLE">
      <data key="d0">EVENT</data>
      <data key="d1">Global Styling Table is a table component that applies global styles to its elements, enhancing the visual consistency across the application.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">Table Title is a descriptive heading for a table, providing context for the data presented within it.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE SUMMARY">
      <data key="d0">EVENT</data>
      <data key="d1">Table Summary is a brief description that provides additional context about the table's content.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE HEAD">
      <data key="d0">EVENT</data>
      <data key="d1">Table Head is a component that contains the header row of a table, typically used to define the titles of each column.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="TABLE FOOT">
      <data key="d0">EVENT</data>
      <data key="d1">Table Foot is a component that contains the footer row of a table, often used for summary information or totals.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="CAPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Caption is a descriptive text that provides context for a table, usually displayed above or below the table.</data>
      <data key="d2">0e5a9687dbee50e7916d42244a756478</data>
    </node>
    <node id="USETHEME">
      <data key="d0">EVENT</data>
      <data key="d1">useTheme is a React hook provided by AWS Amplify that allows components to access the current theme settings.</data>
      <data key="d2">70306783d146ca14e7ca1a0332337b3c</data>
    </node>
    <node id="USEPAGINATION">
      <data key="d0">EVENT</data>
      <data key="d1">usePagination is a React hook provided by AWS Amplify that helps manage pagination state in components.</data>
      <data key="d2">70306783d146ca14e7ca1a0332337b3c</data>
    </node>
    <node id="CURRENT PAGE">
      <data key="d0">EVENT</data>
      <data key="d1">Current Page refers to the page number currently being viewed in a pagination component.</data>
      <data key="d2">70306783d146ca14e7ca1a0332337b3c</data>
    </node>
    <node id="TOTAL PAGES">
      <data key="d0">EVENT</data>
      <data key="d1">Total Pages refers to the total number of pages available in a pagination component.</data>
      <data key="d2">70306783d146ca14e7ca1a0332337b3c</data>
    </node>
    <node id="SIBLING COUNT">
      <data key="d0">EVENT</data>
      <data key="d1">Sibling Count is a property that determines how many page numbers are displayed on either side of the current page in a pagination component.
Sibling Count is a property that controls the number of pages displayed on each side of the current page in pagination.</data>
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13,70306783d146ca14e7ca1a0332337b3c</data>
    </node>
    <node id="ACCESSIBILITY">
      <data key="d0">EVENT</data>
      <data key="d1">Accessibility refers to the features that ensure the Pagination component is usable by people with disabilities, including screen reader support.
Accessibility refers to the design principles that ensure components like RadioGroupField are usable by people with disabilities.
Accessibility in AWS Amplify UI ensures that components like Fieldset are usable by people with disabilities, incorporating ARIA attributes and roles.
Accessibility refers to the design of products, devices, services, or environments for people with disabilities.
Accessibility in AWS Amplify refers to the design principles and practices that ensure applications are usable by people with disabilities.
Accessibility refers to the design of products, devices, services, or environments for people with disabilities.
Accessibility refers to the design of products, devices, services, or environments for people with disabilities, which Amplify UI adheres to by following WCAG and WAI-ARIA specifications.</data>
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13,2fa22e032f66ea7c5422792329c30589,5b0d50411f54d1ef65278d02161d11d7,6e82a6e0427e12aef8dafce9907f3835,b9eb6db49e67c5d8dd0f95139d465c50,d26ffe8f4908cd05e7882cd4223c3490,e28baad4e7d7ca8e43254a705cbf687f</data>
    </node>
    <node id="ARIA LABEL">
      <data key="d0">EVENT</data>
      <data key="d1">ARIA Label is an attribute used to provide accessible labels for the Pagination buttons in the UI.</data>
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </node>
    <node id="NAV">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Nav is a semantic HTML element used to define a navigation section, which is the root node of the Pagination component.</data>
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </node>
    <node id="USE PAGINATION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </node>
    <node id="PAGINATION STYLE PROPS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Pagination Style Props Example showcases how to use style props in pagination components within Amplify UI for React.</data>
      <data key="d2">e685aa3f2fe14219814513a176eea47f</data>
    </node>
    <node id="DEFAULT GRID EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Default Grid Example illustrates the use of the Grid component to create a basic layout in Amplify UI for React.</data>
      <data key="d2">e685aa3f2fe14219814513a176eea47f</data>
    </node>
    <node id="GRID ROW AND COLUMN SPAN EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Grid Row and Column Span Example demonstrates how to use row and column span properties in the Grid component of Amplify UI for React.</data>
      <data key="d2">e685aa3f2fe14219814513a176eea47f</data>
    </node>
    <node id="GRID RESPONSIVE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Grid Responsive Example shows how to create responsive layouts using the Grid component in Amplify UI for React.</data>
      <data key="d2">e685aa3f2fe14219814513a176eea47f</data>
    </node>
    <node id="PAGINATION CLASS STYLING EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e685aa3f2fe14219814513a176eea47f</data>
    </node>
    <node id="FIORDLAND NATIONAL PARK">
      <data key="d0">GEO</data>
      <data key="d1">Fiordland National Park is a national park in New Zealand known for its famous fjords, including Milford, Dusky, and Doubtful Sounds.
Fiordland National Park is a national park in New Zealand known for its famous fjords, including Milford, Dusky, and Doubtful Sounds.</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </node>
    <node id="BAY OF ISLANDS">
      <data key="d0">GEO</data>
      <data key="d1">Bay of Islands is a region in New Zealand located three hours north of Auckland, featuring over 144 islands to explore.
Bay of Islands is a region in New Zealand located three hours north of Auckland, featuring over 144 islands to explore.</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </node>
    <node id="QUEENSTOWN">
      <data key="d0">GEO</data>
      <data key="d1">Queenstown is a town in New Zealand known as the adventure capital, located right on Lake Wakatipu in the South Island.
Queenstown is a town in New Zealand's South Island, recognized as the adventure capital and situated on Lake Wakatipu.</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </node>
    <node id="DUSKY SOUNDS">
      <data key="d0">GEO</data>
      <data key="d1">Dusky Sounds is one of the famous fjords located within Fiordland National Park, renowned for its scenic landscapes.</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006</data>
    </node>
    <node id="DOUBTFUL SOUNDS">
      <data key="d0">GEO</data>
      <data key="d1">Doubtful Sounds is another notable fjord in Fiordland National Park, famous for its dramatic scenery and isolation.</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006</data>
    </node>
    <node id="AUCKLAND">
      <data key="d0">GEO</data>
      <data key="d1">Auckland is a major city in New Zealand, located to the south of Bay of Islands, serving as a gateway for tourists.)&lt;|COMPLETE|&gt;
</data>
      <data key="d2">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </node>
    <node id="ANDORRA">
      <data key="d0">GEO</data>
      <data key="d1">Andorra is a small country located in the eastern Pyrenees mountains, bordered by France and Spain.
Andorra is a small country located in the eastern Pyrenees mountains, bordered by France and Spain.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </node>
    <node id="UNITED ARAB EMIRATES">
      <data key="d0">GEO</data>
      <data key="d1">The United Arab Emirates is a federation of seven emirates located on the southeastern corner of the Arabian Peninsula.
The United Arab Emirates is a federation of seven emirates located on the southeastern corner of the Arabian Peninsula.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </node>
    <node id="AFGHANISTAN">
      <data key="d0">GEO</data>
      <data key="d1">Afghanistan is a landlocked country located within South Asia and Central Asia, known for its mountainous terrain.
Afghanistan is a landlocked country located within South Asia and Central Asia, known for its mountainous terrain.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </node>
    <node id="ANTIGUA AND BARBUDA">
      <data key="d0">GEO</data>
      <data key="d1">Antigua and Barbuda is a twin-island nation located in the West Indies, known for its beautiful beaches and coral reefs.
Antigua and Barbuda is a twin-island nation located in the West Indies, known for its beautiful beaches and coral reefs.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ANGUILLA">
      <data key="d0">GEO</data>
      <data key="d1">Anguilla is a British Overseas Territory in the Caribbean, known for its stunning beaches and tourism industry.
Anguilla is a British Overseas Territory in the Caribbean, known for its stunning beaches and tourism industry.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ALBANIA">
      <data key="d0">GEO</data>
      <data key="d1">Albania is a country in Southeast Europe on the Balkan Peninsula, known for its rich history and diverse landscapes.
Albania is a country in Southeast Europe on the Balkan Peninsula, known for its rich history and diverse landscapes.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ARMENIA">
      <data key="d0">GEO</data>
      <data key="d1">Armenia is a landlocked country in the South Caucasus region of Eurasia, known for its ancient cultural heritage.
Armenia is a landlocked country in the South Caucasus region of Eurasia, known for its ancient cultural heritage.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ANGOLA">
      <data key="d0">GEO</data>
      <data key="d1">Angola is a country in Southern Africa, known for its rich natural resources and diverse wildlife.
Angola is a country in Southern Africa, known for its rich natural resources and diverse wildlife.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ANTARCTICA">
      <data key="d0">GEO</data>
      <data key="d1">Antarctica is the southernmost continent, containing the geographic South Pole, known for its extreme climate and unique ecosystems.
Antarctica is the southernmost continent, containing the geographic South Pole, known for its extreme climate and ice-covered landscape.</data>
      <data key="d2">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="AUSTRALIA">
      <data key="d0">GEO</data>
      <data key="d1">Australia is a country and continent surrounded by the Indian and Pacific oceans, known for its unique wildlife and natural wonders.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="AUSTRIA">
      <data key="d0">GEO</data>
      <data key="d1">Austria is a landlocked country in Central Europe, known for its cultural heritage and historical significance.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="BAHAMAS">
      <data key="d0">GEO</data>
      <data key="d1">The Bahamas is an archipelago in the Caribbean, known for its beautiful beaches and tourism industry.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="BANGLADESH">
      <data key="d0">GEO</data>
      <data key="d1">Bangladesh is a country in South Asia, known for its rich culture and history, as well as its dense population.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="BELGIUM">
      <data key="d0">GEO</data>
      <data key="d1">Belgium is a country in Western Europe, known for its medieval towns and Renaissance architecture.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="BOLIVIA">
      <data key="d0">GEO</data>
      <data key="d1">Bolivia is a landlocked country in South America, known for its diverse geography and cultural heritage.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="BRAZIL">
      <data key="d0">GEO</data>
      <data key="d1">Brazil is the largest country in South America, known for its Amazon rainforest and vibrant culture.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="CANADA">
      <data key="d0">GEO</data>
      <data key="d1">Canada is the second-largest country in the world by total area, known for its natural beauty and multicultural society.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="CHILE">
      <data key="d0">GEO</data>
      <data key="d1">Chile is a long, narrow country located along the western edge of South America, known for its diverse landscapes.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="CHINA">
      <data key="d0">GEO</data>
      <data key="d1">China is the most populous country in the world, known for its rich history and rapid economic growth.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="COLOMBIA">
      <data key="d0">GEO</data>
      <data key="d1">Colombia is a country in South America, known for its coffee, biodiversity, and cultural heritage.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="COSTA RICA">
      <data key="d0">GEO</data>
      <data key="d1">Costa Rica is a Central American country known for its lush rainforests and commitment to conservation.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="CROATIA">
      <data key="d0">GEO</data>
      <data key="d1">Croatia is a country in Southeast Europe, known for its medieval architecture and stunning coastline along the Adriatic Sea.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="CUBA">
      <data key="d0">GEO</data>
      <data key="d1">Cuba is an island country in the Caribbean, known for its history, culture, and vibrant music scene.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="DENMARK">
      <data key="d0">GEO</data>
      <data key="d1">Denmark is a Scandinavian country known for its high quality of life and progressive social policies.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="EGYPT">
      <data key="d0">GEO</data>
      <data key="d1">Egypt is a country in northeastern Africa, known for its ancient civilization and monumental architecture.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="FINLAND">
      <data key="d0">GEO</data>
      <data key="d1">Finland is a Nordic country known for its education system and beautiful natural landscapes.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="FRANCE">
      <data key="d0">GEO</data>
      <data key="d1">France is a country in Western Europe, known for its art, fashion, and culinary traditions.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="GERMANY">
      <data key="d0">GEO</data>
      <data key="d1">Germany is a country in Central Europe, known for its engineering, history, and cultural contributions.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="GREECE">
      <data key="d0">GEO</data>
      <data key="d1">Greece is a country in southeastern Europe, known for its ancient history and beautiful islands.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="HONDURAS">
      <data key="d0">GEO</data>
      <data key="d1">Honduras is a country in Central America, known for its rich biodiversity and Mayan ruins.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="INDIA">
      <data key="d0">GEO</data>
      <data key="d1">India is a country in South Asia, known for its diverse culture, languages, and history.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="INDONESIA">
      <data key="d0">GEO</data>
      <data key="d1">Indonesia is a Southeast Asian country made up of thousands of islands, known for its biodiversity and cultural diversity.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="IRELAND">
      <data key="d0">GEO</data>
      <data key="d1">Ireland is an island nation in Western Europe, known for its lush landscapes and rich cultural heritage.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ISRAEL">
      <data key="d0">GEO</data>
      <data key="d1">Israel is a country in the Middle East, known for its historical and religious significance.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="ITALY">
      <data key="d0">GEO</data>
      <data key="d1">Italy is a country in Southern Europe, known for its art, history, and cuisine.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="JAPAN">
      <data key="d0">GEO</data>
      <data key="d1">Japan is an island country in East Asia, known for its technology, culture, and history.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="MEXICO">
      <data key="d0">GEO</data>
      <data key="d1">Mexico is a country in North America, known for its rich culture, history, and cuisine.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="NIGERIA">
      <data key="d0">GEO</data>
      <data key="d1">Nigeria is a country in West Africa, known for its diverse cultures and large population.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="NORWAY">
      <data key="d0">GEO</data>
      <data key="d1">Norway is a Scandinavian country known for its stunning fjords and high standard of living.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="PAKISTAN">
      <data key="d0">GEO</data>
      <data key="d1">Pakistan is a country in South Asia, known for its diverse geography and rich history.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="PERU">
      <data key="d0">GEO</data>
      <data key="d1">Peru is a country in South America, known for its ancient Incan heritage and diverse ecosystems.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="PHILIPPINES">
      <data key="d0">GEO</data>
      <data key="d1">The Philippines is an archipelago in Southeast Asia, known for its beautiful beaches and rich biodiversity.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="PORTUGAL">
      <data key="d0">GEO</data>
      <data key="d1">Portugal is a country in Southern Europe, known for its rich maritime history and cultural heritage.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="RUSSIA">
      <data key="d0">GEO</data>
      <data key="d1">Russia is the largest country in the world, known for its vast landscapes and rich history.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="SOUTH AFRICA">
      <data key="d0">GEO</data>
      <data key="d1">South Africa is a country located at the southern tip of Africa, known for its diverse cultures and natural beauty.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="SPAIN">
      <data key="d0">GEO</data>
      <data key="d1">Spain is a country in Southwestern Europe, known for its rich history, art, and cuisine.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="SWEDEN">
      <data key="d0">GEO</data>
      <data key="d1">Sweden is a Scandinavian country known for its high quality of life and progressive social policies.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="SWITZERLAND">
      <data key="d0">GEO</data>
      <data key="d1">Switzerland is a landlocked country in Central Europe, known for its mountains and financial services.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="TURKEY">
      <data key="d0">GEO</data>
      <data key="d1">Turkey is a transcontinental country located mainly on the Anatolian Peninsula, known for its rich history and cultural heritage.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="UNITED KINGDOM">
      <data key="d0">GEO</data>
      <data key="d1">The United Kingdom is a country located off the northwestern coast of mainland Europe, known for its historical significance and cultural influence.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="UNITED STATES">
      <data key="d0">GEO</data>
      <data key="d1">The United States is a country primarily located in North America, known for its diverse culture and global influence.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="VENEZUELA">
      <data key="d0">GEO</data>
      <data key="d1">Venezuela is a country on the northern coast of South America, known for its oil reserves and diverse ecosystems.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="VIETNAM">
      <data key="d0">GEO</data>
      <data key="d1">Vietnam is a country in Southeast Asia, known for its history, culture, and natural beauty.</data>
      <data key="d2">845e480750923a225e51bd70c09cf5e5</data>
      <data key="d3">GEO</data>
    </node>
    <node id="NEW ZEALAND">
      <data key="d0">GEO</data>
      <data key="d1">New Zealand is a country known for its beautiful outdoor adventures, including white water rafting through glittering rivers and snowy peaks.
New Zealand is a country known for its stunning landscapes, including Milford Sound, which is referenced in the image examples.</data>
      <data key="d2">6634963e5bc3eae8755d15393e4c9b71,868b364b65a596f02a214b12ca0cbb6a</data>
    </node>
    <node id="ACCORDION">
      <data key="d0">EVENT</data>
      <data key="d1">The Accordion is a component in Amplify UI that allows users to expand or collapse sections of content for better organization.
An Accordion is a UI component that allows users to expand and collapse sections of content, often used for organizing information in a compact manner.
Accordion is a component in Amplify UI that allows users to expand and collapse sections of content.
The Accordion is a component in AWS Amplify UI v6 that allows for collapsible sections, replacing the Expander component with improved functionality.
Accordion is a UI component that allows users to expand and collapse sections of content, displaying one section at a time by default.</data>
      <data key="d2">3bf357b72dac2808e7ba2223ab2c4745,4c20122de1ca69ecf45662867d268049,94a4bc63d08f1f8dd8fa4630608aee68,eb94ca06f4734af403132b3cde36904b,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="CARD THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Card Theme Example is a demonstration of how to use the Card component with different variations in Amplify UI.</data>
      <data key="d2">3bf357b72dac2808e7ba2223ab2c4745</data>
    </node>
    <node id="CARD CLASS NAME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Card Class Name Example shows how to apply custom CSS classes to the Card component in Amplify UI.</data>
      <data key="d2">3bf357b72dac2808e7ba2223ab2c4745</data>
    </node>
    <node id="CARD STYLE PROPS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Card Style Props Example illustrates how to use style props to customize the Card component in Amplify UI.</data>
      <data key="d2">3bf357b72dac2808e7ba2223ab2c4745</data>
    </node>
    <node id="MULTIPLE ACCORDION">
      <data key="d0">EVENT</data>
      <data key="d1">The Multiple Accordion is a variant of the Accordion component that allows multiple items to be open simultaneously.</data>
      <data key="d2">eb94ca06f4734af403132b3cde36904b</data>
    </node>
    <node id="PREVENT COLLAPSE">
      <data key="d0">EVENT</data>
      <data key="d1">The Prevent Collapse feature ensures that at least one item in the Accordion remains open at all times.</data>
      <data key="d2">eb94ca06f4734af403132b3cde36904b</data>
    </node>
    <node id="EXPANDED BY DEFAULT">
      <data key="d0">EVENT</data>
      <data key="d1">The Expanded By Default feature allows specific Accordion items to be open when the component is first rendered.</data>
      <data key="d2">eb94ca06f4734af403132b3cde36904b</data>
    </node>
    <node id="ACCORDION TRIGGER">
      <data key="d0">EVENT</data>
      <data key="d1">The Accordion Trigger is the interactive element that users click to expand or collapse the associated content in the Accordion.</data>
      <data key="d2">eb94ca06f4734af403132b3cde36904b</data>
    </node>
    <node id="ACCORDION CONTENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Accordion Content is the section that contains the information displayed when an Accordion item is expanded.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">eb94ca06f4734af403132b3cde36904b</data>
    </node>
    <node id="SECTION 1 TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">Section 1 title is a label for the first section of content in the Accordion component.</data>
      <data key="d2">4c20122de1ca69ecf45662867d268049</data>
    </node>
    <node id="SECTION 2 TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">Section 2 title is a label for the second section of content in the Accordion component.</data>
      <data key="d2">4c20122de1ca69ecf45662867d268049</data>
    </node>
    <node id="SECTION 3 TITLE">
      <data key="d0">EVENT</data>
      <data key="d1">Section 3 title is a label for the third section of content in the Accordion component.</data>
      <data key="d2">4c20122de1ca69ecf45662867d268049</data>
    </node>
    <node id="DISABLED TOGGLE BUTTON EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example illustrating how to create a disabled ToggleButton that cannot be interacted with.</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="TOGGLEBUTTON GROUP">
      <data key="d0">EVENT</data>
      <data key="d1">A component that groups multiple ToggleButtons together, allowing for selection of one or more options.</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="EXCLUSIVE TOGGLEBUTTON GROUP EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showing how to create an exclusive ToggleButton group where only one button can be selected at a time.</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="SELECTION REQUIRED TOGGLEBUTTON GROUP EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example demonstrating a ToggleButton group that requires at least one button to be selected.</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="STANDARD HTML ATTRIBUTES">
      <data key="d0">EVENT</data>
      <data key="d1">A reference to standard HTML attributes that can be applied to the ToggleButton component.</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="CSS STYLING">
      <data key="d0">EVENT</data>
      <data key="d1">A section discussing how to customize the appearance of ToggleButton components using CSS styling in AWS Amplify UI.
CSS Styling refers to the process of applying styles to components to enhance their appearance and usability.
CSS Styling refers to the process of customizing the appearance of components in Amplify UI using CSS variables and classes.
CSS styling refers to the customization of the appearance of the SliderField component using CSS variables and classes.
CSS Styling refers to the customization of the appearance of the PhoneNumberField component in applications.
CSS Styling refers to the methods used to style components in Amplify UI, including local styling and class selectors.
CSS styling refers to the methods used to customize the appearance of components in Amplify UI, including the use of CSS variables and classes.</data>
      <data key="d2">0108c0e942cd9aa8c65a9711baef8140,0f0c3a1733d9928c7207a0931e147afe,395cfdedbdcedba18201a608511b9cc3,6dcdf6dcf7b1c6d0a0969f9399986850,8d0e14288c93ab458cda0d9179f522a7,98fcf483b563a8d8b54ee85b2f6fa533,ac0c424efc84163fec05823d42352599</data>
    </node>
    <node id="TOGGLEBUTTON THEME SOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">A theme source for customizing the ToggleButton component's appearance in AWS Amplify UI.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">8d0e14288c93ab458cda0d9179f522a7</data>
    </node>
    <node id="TEXTAREAFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">TextAreaField is a component in Amplify UI that allows users to input multiline text content.
TextAreaField is a component from the AWS Amplify UI React library used for creating text input fields in forms.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="DATA ATTRIBUTES">
      <data key="d0">EVENT</data>
      <data key="d1">Data attributes are used in Amplify UI to apply specific styles or behaviors to components based on their attributes.
Data attributes are used in AWS Amplify to apply styles based on the state of CheckboxField components.</data>
      <data key="d2">04b24fb25dbc08179dc4e49295da518c,a407fa7a377db0b8cb08ded22609f5e2</data>
    </node>
    <node id="LOREM IPSUM">
      <data key="d0">EVENT</data>
      <data key="d1">Lorem Ipsum is a placeholder text commonly used in the design and typesetting industry to demonstrate the visual form of a document without relying on meaningful content.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="ROWS">
      <data key="d0">EVENT</data>
      <data key="d1">Rows is a property used in the TextAreaField component to define the number of visible text lines in the field.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="MAXLENGTH">
      <data key="d0">EVENT</data>
      <data key="d1">MaxLength is a property used in the TextAreaField component to set a limit on the number of characters that can be entered.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="DESCRIPTIVETEXT">
      <data key="d0">EVENT</data>
      <data key="d1">DescriptiveText is a property in the TextAreaField component that provides additional information or instructions to the user.
Descriptive text provides additional information about the SelectField when the label is visible, enhancing user understanding.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8,e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="ISDISABLED">
      <data key="d0">EVENT</data>
      <data key="d1">IsDisabled is a property that indicates whether a component is not interactive and cannot be focused or edited.

</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,229e08ddbc773881c8e1ca68ba06dea8,7a771747e08d74ceb8c258bc5a658d6d</data>
    </node>
    <node id="ISREADONLY">
      <data key="d0">EVENT</data>
      <data key="d1">IsReadOnly is a property that indicates whether a component can be viewed but not edited by the user.
isReadOnly is a state of the TextField that allows the field to be viewed but not edited by the user.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8,7a771747e08d74ceb8c258bc5a658d6d</data>
    </node>
    <node id="ISREQUIRED">
      <data key="d0">EVENT</data>
      <data key="d1">IsRequired is a property that specifies whether a field must be filled out before form submission.</data>
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="TEXTAREA">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">229e08ddbc773881c8e1ca68ba06dea8</data>
    </node>
    <node id="TEXTAREA FIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">TextAreaField is a component in the Amplify UI for React that allows users to input text content with various customization options.</data>
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="VALIDATION ERROR">
      <data key="d0">EVENT</data>
      <data key="d1">Validation error occurs when user input does not meet the required criteria, prompting an error message to be displayed.
A validation error occurs when the input in the StepperField does not meet the defined criteria.
Validation error occurs when user input does not meet specified criteria, such as age restrictions.
An event that occurs when the input in the Phone Number Field does not meet the required format or criteria
Validation Error is an event that occurs when user input does not meet specified criteria, such as password complexity requirements.
Validation error occurs when user input does not meet the required criteria for form submission.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,395cfdedbdcedba18201a608511b9cc3,98fcf483b563a8d8b54ee85b2f6fa533,9939322ca44e243575243bddd27bc126,e9839e578f896e0d269ce78abd50bae3,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="TEXT AREA FIELD THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showcasing how to customize the theme of a TextAreaField component in Amplify UI for React.</data>
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="TEXT AREA FIELD STYLE PROPS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example illustrating how to apply style props to a TextAreaField component in Amplify UI for React.</data>
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="TEXT FIELD ACCESSIBILITY EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example demonstrating how to ensure accessibility in a TextField component in Amplify UI for React.</data>
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="TEXT FIELD SIZES">
      <data key="d0">EVENT</data>
      <data key="d1">An explanation of the different size options available for the TextField component in Amplify UI for React.</data>
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="TEXT AREA FIELD VALIDATION ERROR EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="TEXT AREA FIELD">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </node>
    <node id="MDINFO">
      <data key="d0">PERSON</data>
      <data key="d1">MdInfo is an icon component used in AWS Amplify to represent information visually.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="MDSEARCH">
      <data key="d0">PERSON</data>
      <data key="d1">MdSearch is an icon component used in AWS Amplify to represent a search action visually.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD SIZE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showcasing different size options for the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD VARIATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example illustrating the variation styles available for the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD OUTER COMPONENTS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example that demonstrates how to use outer components with the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD INNER COMPONENTS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example that shows how to use inner components within the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD DESCRIPTIVE TEXT EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example that provides additional descriptive text for the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD STATES EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example that illustrates the different states available for the TextField component in AWS Amplify.</data>
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="TEXTFIELD ACCESSIBILITY EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">7fea5fbe98eba1d68851892af6df2407</data>
    </node>
    <node id="HASERROR">
      <data key="d0">EVENT</data>
      <data key="d1">hasError is a property of the TextField that indicates whether the field has a validation error.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d</data>
    </node>
    <node id="ERRORMESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">errorMessage is a property of the TextField that provides feedback to the user about validation errors.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d</data>
    </node>
    <node id="ONSELECT">
      <data key="d0">EVENT</data>
      <data key="d1">onSelect is an event handler for the TextField that triggers when the user selects text within the field.
The onSelect event handler is triggered when a user selects text within an input field, allowing for custom actions based on user selection.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="ONINPUT">
      <data key="d0">EVENT</data>
      <data key="d1">onInput is an event handler for the TextField that triggers when the user inputs data into the field.
The onInput event handler is triggered when the user inputs data into an input field, providing immediate feedback or processing.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="ONCOPY">
      <data key="d0">EVENT</data>
      <data key="d1">onCopy is an event handler for the TextField that triggers when the user copies text from the field.
The onCopy event handler is triggered when the user copies text from an input field, allowing for tracking or additional actions.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="ONPASTE">
      <data key="d0">EVENT</data>
      <data key="d1">onPaste is an event handler for the TextField that triggers when the user pastes text into the field.
The onPaste event handler is triggered when the user pastes text into an input field, enabling validation or processing of pasted content.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="ONCUT">
      <data key="d0">EVENT</data>
      <data key="d1">onCut is an event handler for the TextField that triggers when the user cuts text from the field.
The onCut event handler is triggered when the user cuts text from an input field, allowing for tracking or additional actions.</data>
      <data key="d2">7a771747e08d74ceb8c258bc5a658d6d,d862c0095587db23ca9388fe047e5de4</data>
    </node>
    <node id="SWITCHFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">SwitchField is a UI component in AWS Amplify that allows users to toggle an input on or off.
SwitchField is a UI component from the AWS Amplify library used for toggling between two states, typically on and off.
SwitchField is a component in the Amplify UI for React that allows users to toggle between two states, typically on and off.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,12c9fa6332d9cd62a8cbe8be18fd540e,ac0c424efc84163fec05823d42352599</data>
    </node>
    <node id="USE THEME">
      <data key="d0">EVENT</data>
      <data key="d1">useTheme is a hook in AWS Amplify that provides access to the theme tokens for styling components.
Use Theme is a hook provided by AWS Amplify UI React that allows developers to access and utilize theme tokens for styling components.</data>
      <data key="d2">12c9fa6332d9cd62a8cbe8be18fd540e,a405b9f832ed918dd2c0ed33bb2b5808</data>
    </node>
    <node id="SIZE">
      <data key="d0">EVENT</data>
      <data key="d1">size is a property that modifies the size of the SwitchField component, with options for small, default, and large.
Size refers to the dimensions of the painting that the customer can select for their purchase.
Size refers to the dimensions of the artwork available for selection, including options like Small, Medium, Large, and X-Large.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1,572dad4fd5ef0bd88476a9904b6de46d,aca6ad21122c65a602020d055257d45c</data>
    </node>
    <node id="LABELPOSITION">
      <data key="d0">EVENT</data>
      <data key="d1">labelPosition is a property that defines the position of the label in relation to the SwitchField, with options for start, end, top, and bottom.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1</data>
    </node>
    <node id="ISLABELHIDDEN">
      <data key="d0">EVENT</data>
      <data key="d1">isLabelHidden is a property that visually hides the label of the SwitchField while keeping it accessible for screen readers.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1</data>
    </node>
    <node id="ERRORSTATE">
      <data key="d0">EVENT</data>
      <data key="d1">Error state is a condition that indicates whether there is an error in the form submission, often linked to the SwitchField's state.</data>
      <data key="d2">0d99e36510e5c37bedf99c81e8533dd1</data>
    </node>
    <node id="STEPPERFIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">StepperField is a component in the Amplify UI for React that allows users to increment or decrement a number input.
StepperField is a component from the @aws-amplify/ui-react library that allows users to increment or decrement a value within a defined range.
StepperField is a component in Amplify UI that allows users to increment or decrement a value through buttons.</data>
      <data key="d2">40ccefaf714c8eadcebd508c051c9190,9939322ca44e243575243bddd27bc126,ac0c424efc84163fec05823d42352599</data>
    </node>
    <node id="GLOBAL STYLING">
      <data key="d0">EVENT</data>
      <data key="d1">Global Styling is a method to apply styles across all instances of a component in Amplify UI.
Global styling allows developers to set overarching styles for all Fieldset components in the application using CSS variables or target classes.
Global Styling allows for overriding the default styles of all Tabs components across the application using CSS variables or target classes.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7,ac0c424efc84163fec05823d42352599,aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="LOCAL STYLING">
      <data key="d0">EVENT</data>
      <data key="d1">Local styling allows for specific overrides on individual components in Amplify UI, providing customization options.
Local styling refers to the ability to apply specific styles to individual Fieldset components using class selectors or style props.
Local styling refers to the method of applying specific styles to individual CheckboxField components in AWS Amplify.
Local Styling refers to the method of applying styles specifically to a single Tabs component using class selectors or style props.
Local Styling refers to the specific styles applied to individual Link components using class selectors or style props.
Local styling refers to the ability to apply styles directly to specific components in Amplify UI.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7,88cf0bb9f01e55013ddfc8434b5c4f40,a407fa7a377db0b8cb08ded22609f5e2,ac0c424efc84163fec05823d42352599,aef551a2d82854ae79259d42c965502f,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="STEP">
      <data key="d0">EVENT</data>
      <data key="d1">A step is an action that allows users to change a value in the StepperField component.
Step is a part of the StepperField component that represents a single increment or decrement action.</data>
      <data key="d2">40ccefaf714c8eadcebd508c051c9190,9939322ca44e243575243bddd27bc126</data>
    </node>
    <node id="READ-ONLY">
      <data key="d0">EVENT</data>
      <data key="d1">Read-only is a state of the StepperField that allows users to view the value but not edit it.</data>
      <data key="d2">9939322ca44e243575243bddd27bc126</data>
    </node>
    <node id="ICONS PROVIDER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Icons Provider is a component that allows customization of icons used in the StepperField.
Icons Provider is a component in Amplify UI that allows customization of icons used in UI components.
IconsProvider is a component in AWS Amplify that allows for custom icons to be used in CheckboxField components.
IconsProvider is a component in AWS Amplify UI React that allows for the customization of icons used in UI components.</data>
      <data key="d2">40ccefaf714c8eadcebd508c051c9190,9939322ca44e243575243bddd27bc126,a407fa7a377db0b8cb08ded22609f5e2,c6562553adf4b52a1a6eec1a462e147f</data>
    </node>
    <node id="FRUIT">
      <data key="d0">EVENT</data>
      <data key="d1">Fruit is a category used in the SelectField component to allow users to select their favorite fruit from a list of options.
Fruit is a category of options available in the SelectField component for selection.
Fruit is a category used in the RadioGroupField example to allow users to select their preferred fruit from a list.</data>
      <data key="d2">40ccefaf714c8eadcebd508c051c9190,bf223ba92c40347202f7dcf0e841b2ed,e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="ANIMALS">
      <data key="d0">EVENT</data>
      <data key="d1">Animals is another category of options available in the SelectField component for selection.</data>
      <data key="d2">e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="VARIATIONS">
      <data key="d0">EVENT</data>
      <data key="d1">Variations refer to the different style options available for the SelectField component, such as default and quiet.</data>
      <data key="d2">e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="OPTION">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e33823d803dfc43e2ab84d0208782223</data>
    </node>
    <node id="SLIDERFIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">SliderField is a UI component used in forms to allow users to select a value from a range, often visually represented as a sliding bar.
SliderField is a UI component from AWS Amplify that allows users to select a value from a range.
SliderField is a component in Amplify UI that allows users to select a value from a range, with customizable styles and properties.</data>
      <data key="d2">395cfdedbdcedba18201a608511b9cc3,93e4ae7768c14468bccb3caa2eb8fb2b,a8cc34c06c7b64595006afc28abc0ae2</data>
    </node>
    <node id="USER FEEDBACK">
      <data key="d0">EVENT</data>
      <data key="d1">User feedback is a process where users provide their opinions or ratings on a specific subject, often used to improve products or services.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="ARIA VALUETEXT">
      <data key="d0">EVENT</data>
      <data key="d1">AriaValuetext is an attribute used to provide a text description for the current value of a slider, enhancing accessibility for screen readers.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD ACCESSIBILITY EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SliderField Accessibility Example demonstrates how to implement accessibility features in a SliderField component.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD ARIA EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SliderField Aria Example illustrates the use of ariaValuetext to provide feedback on the selected value in a SliderField.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD FORM EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SliderField Form Example shows how to integrate SliderField into a form for user input.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD ORIENTATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SliderField Orientation Example demonstrates how to change the orientation of the SliderField from horizontal to vertical.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD ICONS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SliderField Icons Example illustrates how to add icons to the SliderField component for enhanced user interaction.</data>
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="ACCESSIBILITY DEMO">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </node>
    <node id="SLIDERFIELD VALIDATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showing how to validate the input of the SliderField component, ensuring users meet age requirements.</data>
      <data key="d2">395cfdedbdcedba18201a608511b9cc3</data>
    </node>
    <node id="TARGET CLASSES">
      <data key="d0">EVENT</data>
      <data key="d1">Target classes are specific CSS classes applied to elements of the SliderField component for styling purposes.
Target Classes refer to specific classes that can be styled or overridden in Amplify UI components.</data>
      <data key="d2">395cfdedbdcedba18201a608511b9cc3,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="SLIDERFIELD FORMAT VALUE EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">395cfdedbdcedba18201a608511b9cc3</data>
    </node>
    <node id="STYLER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">a8cc34c06c7b64595006afc28abc0ae2</data>
    </node>
    <node id="INPUT ELEMENT">
      <data key="d0">EVENT</data>
      <data key="d1">Input element is a standard HTML element used to create interactive controls in web forms for accepting data from users.</data>
      <data key="d2">b48f64ddd27370c0d0a93447e796c6b3</data>
    </node>
    <node id="INPUT STYLES">
      <data key="d0">EVENT</data>
      <data key="d1">Input styles refer to the specific styling applied to the input field within the SearchField component.</data>
      <data key="d2">b48f64ddd27370c0d0a93447e796c6b3</data>
    </node>
    <node id="ANIMAL">
      <data key="d0">EVENT</data>
      <data key="d1">Animal is a category used in the RadioGroupField example to allow users to select their preferred animal from a list.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="DOG">
      <data key="d0">EVENT</data>
      <data key="d1">Dog is an option in the RadioGroupField example under the Animal category.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="CAT">
      <data key="d0">EVENT</data>
      <data key="d1">Cat is an option in the RadioGroupField example under the Animal category.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="BIRD">
      <data key="d0">EVENT</data>
      <data key="d1">Bird is an option in the RadioGroupField example under the Animal category.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="BANANA">
      <data key="d0">EVENT</data>
      <data key="d1">Banana is an option in the RadioGroupField example under the Fruit category.
Banana is an elongated, edible fruit produced by several kinds of large herbaceous flowering plants.
Banana is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,bf223ba92c40347202f7dcf0e841b2ed,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="CARROT">
      <data key="d0">EVENT</data>
      <data key="d1">Carrot is an option in the RadioGroupField example under the Fruit category.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="COLUMN">
      <data key="d0">EVENT</data>
      <data key="d1">Column is a layout direction option in the RadioGroupField example, allowing users to select items in a vertical arrangement.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="ROW">
      <data key="d0">EVENT</data>
      <data key="d1">Row is a layout direction option in the RadioGroupField example, allowing users to select items in a horizontal arrangement.</data>
      <data key="d2">bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="DEFAULT">
      <data key="d0">EVENT</data>
      <data key="d1">Default is a size option in the RadioGroupField example, indicating the standard size for the component.
Default refers to a standard setting or configuration in various contexts, often used in technology and telecommunications.
Default is a variation style in the AWS Amplify UI that represents the standard appearance of components.
Default refers to the standard setting or configuration of the Phone Number Field, which includes a default dial code and label.
Default is a variation of the PasswordField component that provides standard styling and functionality.</data>
      <data key="d2">27665866f8a25b886ee05eef06c3054c,3357299f904d0dd5b40c967c28b75149,8a15ba0e9c228225918d6207fc8b6a8d,bf223ba92c40347202f7dcf0e841b2ed,d449796d977ece5e8fa1202c70599e55</data>
    </node>
    <node id="SMALL">
      <data key="d0">EVENT</data>
      <data key="d1">Small is a size option in the RadioGroupField example, indicating a smaller size for the component.
Small may refer to a category or classification in various contexts, often indicating size or scale in business or data.
Small is a size variation for the PasswordField component, allowing for a more compact input field.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149,8a15ba0e9c228225918d6207fc8b6a8d,bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="LARGE">
      <data key="d0">EVENT</data>
      <data key="d1">Large is a size option in the RadioGroupField example, indicating a larger size for the component.
Large may refer to a category or classification in various contexts, often indicating size or scale in business or data.
Large is a size variation for the PasswordField component, allowing for a more spacious input field.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149,8a15ba0e9c228225918d6207fc8b6a8d,bf223ba92c40347202f7dcf0e841b2ed</data>
    </node>
    <node id="DISABLED EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled Example demonstrates how to use the RadioGroupField component with disabled options in AWS Amplify UI.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="READ ONLY EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Read Only Example shows how to implement a read-only RadioGroupField in AWS Amplify UI.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="ERROR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Error Example illustrates how to handle validation errors in a RadioGroupField in AWS Amplify UI.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="OPTION 2">
      <data key="d0">EVENT</data>
      <data key="d1">Option 2 is a selectable choice within the RadioGroupField component in AWS Amplify UI, which can be disabled.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="OPTION 3">
      <data key="d0">EVENT</data>
      <data key="d1">Option 3 is a selectable choice within the RadioGroupField component in AWS Amplify UI.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="ALL">
      <data key="d0">EVENT</data>
      <data key="d1">All is a selectable choice within a disabled RadioGroupField in AWS Amplify UI.</data>
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="OPTION 1">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">2fa22e032f66ea7c5422792329c30589</data>
    </node>
    <node id="PHONENUMBERFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">PhoneNumberField is a component that allows users to input phone numbers, including country codes and phone number formatting.
The PhoneNumberField is a component from the AWS Amplify UI React library used for inputting phone numbers with country codes.
The PhoneNumberField is a component used in applications to input and format phone numbers, allowing for country code selection and standard HTML attributes.
PhoneNumberField is a component that allows users to input phone numbers with a default dial code and customizable styles.</data>
      <data key="d2">0108c0e942cd9aa8c65a9711baef8140,3357299f904d0dd5b40c967c28b75149,62d6f0f965da0c44ef157072fc13a2ef,6f822244ad945944fb292c514cfddc13</data>
    </node>
    <node id="RADIO">
      <data key="d0">EVENT</data>
      <data key="d1">Radio is a component that represents a single radio button within a RadioGroupField, allowing users to select one option from multiple choices.</data>
      <data key="d2">6f822244ad945944fb292c514cfddc13</data>
    </node>
    <node id="CUSTOM RADIO">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Radio is a styled version of the Radio component that allows for specific design customizations using CSS classes.</data>
      <data key="d2">6f822244ad945944fb292c514cfddc13</data>
    </node>
    <node id="DATA AMPLIFY THEME">
      <data key="d0">EVENT</data>
      <data key="d1">Data Amplify Theme is an attribute used to apply specific theme styles to components in Amplify UI.</data>
      <data key="d2">6f822244ad945944fb292c514cfddc13</data>
    </node>
    <node id="COUNTRY CODE">
      <data key="d0">EVENT</data>
      <data key="d1">Country Code is a field within the PhoneNumberField component that allows users to select their country code from a predefined list.
Country codes are numeric or alphanumeric codes that represent countries and are used in phone number formatting.
A COUNTRY CODE is a numeric code that represents a specific country in the context of international dialing.
Country codes are numerical prefixes used for international dialing, such as +1 for the USA and +44 for the UK.
Country codes are numerical prefixes used to identify specific countries for telephone dialing purposes.
A numerical prefix used to dial international phone numbers, indicating the country of the phone number
Country codes are numerical prefixes used to identify specific countries for telephone dialing purposes.
A country code is a numerical prefix that indicates the country of origin for a phone number.
A dropdown selection that allows users to choose their country code for the phone number input
Country Code refers to the numeric prefix that must be dialed before the phone number to connect to a specific country.
Country codes are numerical prefixes used to identify specific countries in phone numbers.
A selection of international dialing codes that precede phone numbers, allowing users to specify the country of the number being entered.
A country code is a numerical prefix used to dial into a country from abroad, typically represented by a "+" followed by the digits.</data>
      <data key="d2">0108c0e942cd9aa8c65a9711baef8140,079ee4d85f6e400435d903fa9074f9e6,3c1da97b232e76bcfabe7b7c980f2a33,582ef60010150eb5b063d4e027797a77,62d6f0f965da0c44ef157072fc13a2ef,6f822244ad945944fb292c514cfddc13,8a15ba0e9c228225918d6207fc8b6a8d,a405b9f832ed918dd2c0ed33bb2b5808,a81c0d0aaddd7802d779f9b4e516b6a4,b13ba75bb69bab84cc548bc3c7fdf65d,d449796d977ece5e8fa1202c70599e55,f40486f74b21c76bdd626978117ceeaf,f6950f876be731f8e045d9b1bbcf4960</data>
    </node>
    <node id="DEFAULTPHONENUMBERFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">The DefaultPhoneNumberFieldExample is an example event showcasing the usage of the PhoneNumberField component with a default dial code.</data>
      <data key="d2">62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="DIAL CODE SELECTOR">
      <data key="d0">EVENT</data>
      <data key="d1">The dial code selector is a feature of the PhoneNumberField that allows users to select their country code when entering a phone number.
The Dial Code Selector is a UI element that allows users to select their country dialing code from a list of options.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="COUNTRY CODE LIST">
      <data key="d0">EVENT</data>
      <data key="d1">The country code list is an array of country codes used as options in the dial code selector for the PhoneNumberField component.</data>
      <data key="d2">62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="DIAL CODE NAME">
      <data key="d0">EVENT</data>
      <data key="d1">The dial code name is a name used when handling form submission for the dial code selector in the PhoneNumberField component.</data>
      <data key="d2">62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="DIAL CODE LABEL">
      <data key="d0">EVENT</data>
      <data key="d1">The dial code label is a hidden accessible label for the dial code selector in the PhoneNumberField component.</data>
      <data key="d2">62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="ON DIAL CODE CHANGE">
      <data key="d0">EVENT</data>
      <data key="d1">The on dial code change is a custom change handler for the dial code selector in the PhoneNumberField component.</data>
      <data key="d2">62d6f0f965da0c44ef157072fc13a2ef</data>
    </node>
    <node id="PHONE NUMBER FIELD">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Phone Number Field is a component used in forms to collect phone numbers, including a dial code selector for international numbers.
The Phone Number Field is a component from AWS Amplify UI React designed for inputting phone numbers with accessibility features.
Phone Number Field is a component used in the AWS Amplify UI for inputting phone numbers with various size options.
The Phone Number Field is a component used in user interfaces to input and format phone numbers, including country codes and dial codes.
The Phone Number Field is a component used in user interfaces to input and validate phone numbers, including country codes and formats.
The Phone Number Field is a UI component used in forms to collect phone numbers, allowing for country code selection and validation.
A component used in forms to collect phone number information from users, including country codes and validation for required fields.
A component used in forms to collect phone numbers, requiring validation for proper input
The Phone Number Field is a UI component used for inputting and validating phone numbers in applications.
The Phone Number Field is a UI component that allows users to input their phone numbers with a country code selector.
A component used for inputting phone numbers in a user interface, allowing for country code selection and number entry.
The Phone Number Field is a component used in user interfaces to capture phone numbers, including country codes and formatting options.
</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,27665866f8a25b886ee05eef06c3054c,3357299f904d0dd5b40c967c28b75149,3c1da97b232e76bcfabe7b7c980f2a33,52087f54ba341fa48453f206aca85fa0,582ef60010150eb5b063d4e027797a77,a405b9f832ed918dd2c0ed33bb2b5808,a81c0d0aaddd7802d779f9b4e516b6a4,b13ba75bb69bab84cc548bc3c7fdf65d,d449796d977ece5e8fa1202c70599e55,ddc8b27b83cca7d4613a25a5e5a519c9,e98b8a475f381672c863e04f0c9164d4,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="AUTO COMPLETE">
      <data key="d0">EVENT</data>
      <data key="d1">Auto Complete is a feature that helps users fill out forms by suggesting previously entered values or relevant options.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6</data>
    </node>
    <node id="DEFAULT DIAL CODE">
      <data key="d0">EVENT</data>
      <data key="d1">The DEFAULT DIAL CODE is the pre-selected dialing code that appears when the Phone Number Field is rendered.
The default dial code is a preset country code that appears in the phone number field for user convenience.</data>
      <data key="d2">079ee4d85f6e400435d903fa9074f9e6,582ef60010150eb5b063d4e027797a77</data>
    </node>
    <node id="ACCESSIBILITY EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Accessibility Example demonstrates how to use the Phone Number Field component with accessibility features in a React application.</data>
      <data key="d2">e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="LABEL HIDDEN PROP">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Label Hidden Prop is a property that allows the label to be visually hidden while remaining accessible to screen readers.</data>
      <data key="d2">e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="FORM CONTROL ELEMENTS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Form Control Elements are the components that allow users to input data in a form, including the Phone Number Field.</data>
      <data key="d2">e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="UX TIP">
      <data key="d0">EVENT</data>
      <data key="d1">UX Tip is a guideline provided to enhance user experience, advising against hiding labels that contain important information.</data>
      <data key="d2">e98b8a475f381672c863e04f0c9164d4</data>
    </node>
    <node id="+7">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+7 is the country code for Russia, used for international dialing.
The country code +7 is used for phone numbers in Russia and Kazakhstan.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+20">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+20 is the country code for Egypt, used for international dialing.
The country code +20 is used for phone numbers in Egypt.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+27">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+27 is the country code for South Africa, used for international dialing.
The country code +27 is used for phone numbers in South Africa.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+30">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+30 is the country code for Greece, used for international dialing.
The country code +30 is used for phone numbers in Greece.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+31">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+31 is the country code for the Netherlands, used for international dialing.
The country code +31 is used for phone numbers in the Netherlands.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+32">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+32 is the country code for Belgium, used for international dialing.
The country code +32 is used for phone numbers in Belgium.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+33">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+33 is the country code for France, used for international dialing.
The country code +33 is used for phone numbers in France.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+34">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+34 is the country code for Spain, used for international dialing.
The country code +34 is used for phone numbers in Spain.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+36">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+36 is the country code for Hungary, used for international dialing.
The country code +36 is used for phone numbers in Hungary.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+39">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+39 is the country code for Italy, used for international dialing.
The country code +39 is used for phone numbers in Italy.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+40">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+40 is the country code for Romania, used for international dialing.
The country code +40 is used for phone numbers in Romania.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+41">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+41 is the country code for Switzerland, used for international dialing.
The country code +41 is used for phone numbers in Switzerland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+43">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+43 is the country code for Austria, used for international dialing.
The country code +43 is used for phone numbers in Austria.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+44">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+44 is the country code for the United Kingdom, used for international dialing.
The country code +44 is used for phone numbers in the United Kingdom.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+45">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+45 is the country code for Denmark, used for international dialing.
The country code +45 is used for phone numbers in Denmark.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+46">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+46 is the country code for Sweden, used for international dialing.
The country code +46 is used for phone numbers in Sweden.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+47">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+47 is the country code for Norway, used for international dialing.
The country code +47 is used for phone numbers in Norway.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+48">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+48 is the country code for Poland, used for international dialing.
The country code +48 is used for phone numbers in Poland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+49">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+49 is the country code for Germany, used for international dialing.
The country code +49 is used for phone numbers in Germany.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+51">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+51 is the country code for Peru, used for international dialing.
The country code +51 is used for phone numbers in Peru.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+52">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+52 is the country code for Mexico, used for international dialing.
The country code +52 is used for phone numbers in Mexico.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+53">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+53 is the country code for Cuba, used for international dialing.
The country code +53 is used for phone numbers in Cuba.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+54">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+54 is the country code for Argentina, used for international dialing.
The country code +54 is used for phone numbers in Argentina.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+55">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+55 is the country code for Brazil, used for international dialing.
The country code +55 is used for phone numbers in Brazil.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+56">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+56 is the country code for Chile, used for international dialing.
The country code +56 is used for phone numbers in Chile.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+57">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+57 is the country code for Colombia, used for international dialing.
The country code +57 is used for phone numbers in Colombia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+58">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+58 is the country code for Venezuela, used for international dialing.
The country code +58 is used for phone numbers in Venezuela.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+60">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+60 is the country code for Malaysia, used for international dialing.
The country code +60 is used for phone numbers in Malaysia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+61">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+61 is the country code for Australia, used for international dialing.
The country code +61 is used for phone numbers in Australia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+62">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+62 is the country code for Indonesia, used for international dialing.
The country code +62 is used for phone numbers in Indonesia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+63">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+63 is the country code for the Philippines, used for international dialing.
The country code +63 is used for phone numbers in the Philippines.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+64">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+64 is the country code for New Zealand, used for international dialing.
The country code +64 is used for phone numbers in New Zealand.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+65">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+65 is the country code for Singapore, used for international dialing.
The country code +65 is used for phone numbers in Singapore.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+66">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+66 is the country code for Thailand, used for international dialing.
The country code +66 is used for phone numbers in Thailand.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+81">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+81 is the country code for Japan, used for international dialing.
The country code +81 is used for phone numbers in Japan.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+82">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+82 is the country code for South Korea, used for international dialing.
The country code +82 is used for phone numbers in South Korea.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+84">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+84 is the country code for Vietnam, used for international dialing.
The country code +84 is used for phone numbers in Vietnam.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+86">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+86 is the country code for China, used for international dialing.
The country code +86 is used for phone numbers in China.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+90">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+90 is the country code for Turkey, used for international dialing.
The country code +90 is used for phone numbers in Turkey.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+91">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+91 is the country code for India, used for international dialing.
The country code +91 is used for phone numbers in India.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+92">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+92 is the country code for Pakistan, used for international dialing.
The country code +92 is used for phone numbers in Pakistan.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+93">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+93 is the country code for Afghanistan, used for international dialing.
The country code +93 is used for phone numbers in Afghanistan.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+94">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+94 is the country code for Sri Lanka, used for international dialing.
The country code +94 is used for phone numbers in Sri Lanka.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+95">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+95 is the country code for Myanmar, used for international dialing.
The country code +95 is used for phone numbers in Myanmar.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+98">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+98 is the country code for Iran, used for international dialing.
The country code +98 is used for phone numbers in Iran.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+212">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+212 is the country code for Morocco, used for international dialing.
The country code +212 is used for phone numbers in Morocco.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+213">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+213 is the country code for Algeria, used for international dialing.
The country code +213 is used for phone numbers in Algeria.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+216">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+216 is the country code for Tunisia, used for international dialing.
The country code +216 is used for phone numbers in Tunisia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+218">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+218 is the country code for Libya, used for international dialing.
The country code +218 is used for phone numbers in Libya.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+220">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+220 is the country code for Gambia, used for international dialing.
The country code +220 is used for phone numbers in Gambia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+221">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+221 is the country code for Senegal, used for international dialing.
The country code +221 is used for phone numbers in Senegal.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+222">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+222 is the country code for Mauritania, used for international dialing.
The country code +222 is used for phone numbers in Mauritania.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+223">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+223 is the country code for Mali, used for international dialing.
The country code +223 is used for phone numbers in Mali.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+224">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+224 is the country code for Guinea, used for international dialing.
The country code +224 is used for phone numbers in Guinea.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+225">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+225 is the country code for Ivory Coast, used for international dialing.
The country code +225 is used for phone numbers in Ivory Coast.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+226">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+226 is the country code for Burkina Faso, used for international dialing.
The country code +226 is used for phone numbers in Burkina Faso.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+227">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+227 is the country code for Niger, used for international dialing.
The country code +227 is used for phone numbers in Niger.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+228">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+228 is the country code for Togo, used for international dialing.
The country code +228 is used for phone numbers in Togo.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+229">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+229 is the country code for Benin, used for international dialing.
The country code +229 is used for phone numbers in Benin.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+230">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+230 is the country code for Mauritius, used for international dialing.
The country code +230 is used for phone numbers in Mauritius.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+231">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+231 is the country code for Liberia, used for international dialing.
The country code +231 is used for phone numbers in Liberia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+232">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+232 is the country code for Sierra Leone, used for international dialing.
The country code +232 is used for phone numbers in Sierra Leone.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+234">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+234 is the country code for Nigeria, used for international dialing.
The country code +234 is used for phone numbers in Nigeria.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+235">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+235 is the country code for Chad, used for international dialing.
The country code +235 is used for phone numbers in Chad.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+236">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+236 is the country code for Central African Republic, used for international dialing.
The country code +236 is used for phone numbers in Central African Republic.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+238">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+238 is the country code for Cape Verde, used for international dialing.
The country code +238 is used for phone numbers in Cape Verde.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+239">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+239 is the country code for S&#227;o Tom&#233; and Pr&#237;ncipe, used for international dialing.
The country code +239 is used for phone numbers in S&#227;o Tom&#233; and Pr&#237;ncipe.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+240">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+240 is the country code for Equatorial Guinea, used for international dialing.
The country code +240 is used for phone numbers in Equatorial Guinea.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+241">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+241 is the country code for Angola, used for international dialing.
The country code +241 is used for phone numbers in Gabon.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+242">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+242 is the country code for Republic of the Congo, used for international dialing.
The country code +242 is used for phone numbers in Republic of the Congo.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+243">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+243 is the country code for Democratic Republic of the Congo, used for international dialing.
The country code +243 is used for phone numbers in Democratic Republic of the Congo.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+244">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+244 is the country code for Zambia, used for international dialing.
The country code +244 is used for phone numbers in Angola.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+245">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+245 is the country code for Guinea-Bissau, used for international dialing.
The country code +245 is used for phone numbers in Guinea-Bissau.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+246">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+246 is the country code for British Indian Ocean Territory, used for international dialing.
The country code +246 is used for phone numbers in British Indian Ocean Territory.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+247">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+247 is the country code for Ascension Island, used for international dialing.</data>
      <data key="d2">8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+248">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+248 is the country code for Seychelles, used for international dialing.
The country code +248 is used for phone numbers in Seychelles.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+249">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+249 is the country code for Sudan, used for international dialing.
The country code +249 is used for phone numbers in Sudan.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+250">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+250 is the country code for Rwanda, used for international dialing.
The country code +250 is used for phone numbers in Rwanda.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+251">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+251 is the country code for Ethiopia, used for international dialing.
The country code +251 is used for phone numbers in Ethiopia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+252">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+252 is the country code for Somalia, used for international dialing.
The country code +252 is used for phone numbers in Somalia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+253">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+253 is the country code for Djibouti, used for international dialing.
The country code +253 is used for phone numbers in Djibouti.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+254">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+254 is the country code for Kenya, used for international dialing.
The country code +254 is used for phone numbers in Kenya.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+255">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+255 is the country code for Tanzania, used for international dialing.
The country code +255 is used for phone numbers in Tanzania.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+256">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+256 is the country code for Uganda, used for international dialing.
The country code +256 is used for phone numbers in Uganda.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+257">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+257 is the country code for Burundi, used for international dialing.
The country code +257 is used for phone numbers in Burundi.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+258">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+258 is the country code for Mozambique, used for international dialing.
The country code +258 is used for phone numbers in Mozambique.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+260">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+260 is the country code for Zambia, used for international dialing.
The country code +260 is used for phone numbers in Zambia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+261">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+261 is the country code for Madagascar, used for international dialing.
The country code +261 is used for phone numbers in Madagascar.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+262">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+262 is the country code for R&#233;union, used for international dialing.
The country code +262 is used for phone numbers in R&#233;union and Mayotte.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+263">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+263 is the country code for Zimbabwe, used for international dialing.
The country code +263 is used for phone numbers in Zimbabwe.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+264">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+264 is the country code for Namibia, used for international dialing.
The country code +264 is used for phone numbers in Namibia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+265">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+265 is the country code for Malawi, used for international dialing.
The country code +265 is used for phone numbers in Malawi.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+266">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+266 is the country code for Lesotho, used for international dialing.
The country code +266 is used for phone numbers in Lesotho.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+267">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+267 is the country code for Botswana, used for international dialing.
The country code +267 is used for phone numbers in Botswana.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+268">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+268 is the country code for Eswatini, used for international dialing.
The country code +268 is used for phone numbers in Eswatini.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+269">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+269 is the country code for Comoros, used for international dialing.
The country code +269 is used for phone numbers in Comoros.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+290">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+290 is the country code for Ascension Island, used for international dialing.
The country code +290 is used for phone numbers in Tristan da Cunha.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+291">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+291 is the country code for Eritrea, used for international dialing.
The country code +291 is used for phone numbers in Eritrea.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+297">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+297 is the country code for Aruba, used for international dialing.
The country code +297 is used for phone numbers in Aruba.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+298">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+298 is the country code for the Faroe Islands, used for international dialing.
The country code +298 is used for phone numbers in the Faroe Islands.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+299">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+299 is the country code for Greenland, used for international dialing.
The country code +299 is used for phone numbers in Greenland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+345">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+345 is the country code for the Cayman Islands, used for international dialing.
The country code +345 is used for phone numbers in the Cayman Islands.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+350">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+350 is the country code for Gibraltar, used for international dialing.
The country code +350 is used for phone numbers in Gibraltar.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+351">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+351 is the country code for Portugal, used for international dialing.
The country code +351 is used for phone numbers in Portugal.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+352">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+352 is the country code for Luxembourg, used for international dialing.
The country code +352 is used for phone numbers in Luxembourg.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+353">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+353 is the country code for Ireland, used for international dialing.
The country code +353 is used for phone numbers in Ireland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+354">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+354 is the country code for Iceland, used for international dialing.
The country code +354 is used for phone numbers in Iceland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+355">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+355 is the country code for Albania, used for international dialing.
The country code +355 is used for phone numbers in Albania.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+356">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+356 is the country code for Malta, used for international dialing.
The country code +356 is used for phone numbers in Malta.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+357">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+357 is the country code for Cyprus, used for international dialing.
The country code +357 is used for phone numbers in Cyprus.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+358">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+358 is the country code for Finland, used for international dialing.
The country code +358 is used for phone numbers in Finland.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+359">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+359 is the country code for Bulgaria, used for international dialing.
The country code +359 is used for phone numbers in Bulgaria.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+370">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+370 is the country code for Lithuania, used for international dialing.
The country code +370 is used for phone numbers in Lithuania.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+371">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+371 is the country code for Latvia, used for international dialing.
The country code +371 is used for phone numbers in Latvia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+372">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+372 is the country code for Estonia, used for international dialing.
The country code +372 is used for phone numbers in Estonia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+373">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+373 is the country code for Moldova, used for international dialing.
The country code +373 is used for phone numbers in Moldova.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+374">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+374 is the country code for Armenia, used for international dialing.
The country code +374 is used for phone numbers in Armenia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+375">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+375 is the country code for Belarus, used for international dialing.
The country code +375 is used for phone numbers in Belarus.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+376">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+376 is the country code for Andorra, used for international dialing.
The country code +376 is used for phone numbers in Andorra.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+377">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+377 is the country code for Monaco, used for international dialing.
The country code +377 is used for phone numbers in Monaco.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+378">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+378 is the country code for San Marino, used for international dialing.
The country code +378 is used for phone numbers in San Marino.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+379">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+379 is the country code for Vatican City, used for international dialing.
The country code +379 is used for phone numbers in Vatican City.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+380">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+380 is the country code for Ukraine, used for international dialing.
The country code +380 is used for phone numbers in Ukraine.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="+381">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">+381 is the country code for Serbia, used for international dialing.
The country code +381 is used for phone numbers in Serbia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,8a15ba0e9c228225918d6207fc8b6a8d</data>
    </node>
    <node id="SIZE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Size Example is a demonstration of different sizes of components in the AWS Amplify UI, showcasing how they can be used in a layout.</data>
      <data key="d2">27665866f8a25b886ee05eef06c3054c</data>
    </node>
    <node id="QUIET">
      <data key="d0">EVENT</data>
      <data key="d1">Quiet is a variation style in the AWS Amplify UI that represents a more subdued appearance of components.</data>
      <data key="d2">27665866f8a25b886ee05eef06c3054c</data>
    </node>
    <node id="AWS AMPLIFY UI">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">27665866f8a25b886ee05eef06c3054c</data>
    </node>
    <node id="CUSTOMIZED DESCRIPTIVE TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">A specific text that provides tailored information or context, often used in documentation or user interfaces)&lt;|COMPLETE|&gt;("entity"</data>
      <data key="d2">f6950f876be731f8e045d9b1bbcf4960</data>
    </node>
    <node id="DISABLED STATE">
      <data key="d0">EVENT</data>
      <data key="d1">The disabled state of a Phone Number Field indicates that the field cannot be interacted with or submitted.</data>
      <data key="d2">b13ba75bb69bab84cc548bc3c7fdf65d</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="READONLY STATE">
      <data key="d0">EVENT</data>
      <data key="d1">The readonly state of a Phone Number Field indicates that the field can be viewed but not edited by the user.</data>
      <data key="d2">b13ba75bb69bab84cc548bc3c7fdf65d</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="IS REQUIRED PROP">
      <data key="d0">EVENT</data>
      <data key="d1">The isRequired prop is an event that specifies whether a field must be filled out before submission.</data>
      <data key="d2">582ef60010150eb5b063d4e027797a77</data>
    </node>
    <node id="DISABLED FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">A disabled field is an event that prevents user interaction, indicating that the field cannot be submitted or edited.</data>
      <data key="d2">582ef60010150eb5b063d4e027797a77</data>
    </node>
    <node id="READONLY FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">A readonly field is an event that allows users to view but not edit the content of the field.</data>
      <data key="d2">582ef60010150eb5b063d4e027797a77</data>
    </node>
    <node id="PRIMARY PHONE NUMBER">
      <data key="d0">EVENT</data>
      <data key="d1">A required field in a form where users must input their main contact number, including a country code.
The main contact number that is required for submission in the form</data>
      <data key="d2">ddc8b27b83cca7d4613a25a5e5a519c9,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="SECONDARY PHONE NUMBER">
      <data key="d0">EVENT</data>
      <data key="d1">An optional field in a form where users can input an additional contact number, also requiring a country code.
An additional contact number that is also required for submission in the form</data>
      <data key="d2">ddc8b27b83cca7d4613a25a5e5a519c9,f40486f74b21c76bdd626978117ceeaf</data>
    </node>
    <node id="VALIDATION ERROR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Validation Error Example demonstrates how to handle validation errors in a phone number input field.</data>
      <data key="d2">52087f54ba341fa48453f206aca85fa0</data>
    </node>
    <node id="REFS EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Refs Example illustrates the use of refs in React to manage focus and input values in a phone number field.</data>
      <data key="d2">52087f54ba341fa48453f206aca85fa0</data>
    </node>
    <node id="INPUT REF">
      <data key="d0">PERSON</data>
      <data key="d1">Input Ref is a reference to the input element in the Phone Number Field component.</data>
      <data key="d2">52087f54ba341fa48453f206aca85fa0</data>
    </node>
    <node id="DIAL CODE REF">
      <data key="d0">PERSON</data>
      <data key="d1">Dial Code Ref is a reference to the dial code select element in the Phone Number Field component.</data>
      <data key="d2">52087f54ba341fa48453f206aca85fa0</data>
    </node>
    <node id="DIAL CODE SELECT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The Dial Code Select is a UI element that allows users to choose their country code when entering a phone number.
A user interface element that allows users to select the country code for phone number input.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33,a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </node>
    <node id="+233">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +233 is used for phone numbers in Ghana.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+237">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +237 is used for phone numbers in Cameroon.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+382">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +382 is used for phone numbers in Montenegro.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+385">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +385 is used for phone numbers in Croatia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+386">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +386 is used for phone numbers in Slovenia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+387">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +387 is used for phone numbers in Bosnia and Herzegovina.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+389">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +389 is used for phone numbers in North Macedonia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+420">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +420 is used for phone numbers in the Czech Republic.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+421">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +421 is used for phone numbers in Slovakia.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+423">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +423 is used for phone numbers in Liechtenstein.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+500">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +500 is used for phone numbers in the Falkland Islands.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+501">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +501 is used for phone numbers in Belize.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+502">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +502 is used for phone numbers in Guatemala.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+503">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +503 is used for phone numbers in El Salvador.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+504">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +504 is used for phone numbers in Honduras.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="+505">
      <data key="d0">EVENT</data>
      <data key="d1">The country code +505 is used for phone numbers in Nicaragua.</data>
      <data key="d2">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </node>
    <node id="CUSTOM PHONENUMBERFIELD CLASS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A specific class used to apply custom styles to the PhoneNumberField component, modifying its appearance.</data>
      <data key="d2">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </node>
    <node id="PHONE NUMBER FIELD CLASS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">A class that defines the styling and behavior of the PhoneNumberField component in a user interface.</data>
      <data key="d2">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </node>
    <node id="PHONE NUMBER INPUT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">An input field specifically designed for entering phone numbers, often accompanied by a country code selector.</data>
      <data key="d2">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </node>
    <node id="PHONE NUMBER FIELD STYLES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Styles applied to the PhoneNumberField to control its appearance and layout in the user interface.</data>
      <data key="d2">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </node>
    <node id="DEFAULTPASSWORDFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">DefaultPasswordFieldExample is an example of using the PasswordField component in a React application.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="HIDEPASSWORDFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">HidePasswordFieldExample demonstrates how to use the PasswordField component with a toggle to hide or show the password.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="SIGNUPFORMEXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">SignUpFormExample illustrates a signup form using TextField and PasswordField components for user registration.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="LOGINFORMEXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">LoginFormExample shows a login form implementation using PasswordField and TextField components for user authentication.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="CHANGEPASSWORDFORMEXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">ChangePasswordFormExample provides an example of a form for changing passwords, utilizing multiple PasswordField components.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="TEXT FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">Text Field is a component that allows users to input text data, such as usernames or other information.</data>
      <data key="d2">3357299f904d0dd5b40c967c28b75149</data>
    </node>
    <node id="NEW PASSWORD">
      <data key="d0">EVENT</data>
      <data key="d1">The New Password field is a UI component that allows users to input a new password they wish to set, following the required criteria.</data>
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </node>
    <node id="DESCRIPTIVE TEXT">
      <data key="d0">EVENT</data>
      <data key="d1">Descriptive Text is a UI component that provides additional information or requirements related to the PasswordField, enhancing user guidance.</data>
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </node>
    <node id="SHOW PASSWORD BUTTON">
      <data key="d0">EVENT</data>
      <data key="d1">The Show Password Button is a UI component that allows users to toggle the visibility of the password input, improving usability.</data>
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </node>
    <node id="CURRENT PASSWORD">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </node>
    <node id="PASSWORD FIELD THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example event demonstrating the use of the Password Field within a Theme Provider context.</data>
      <data key="d2">5c2098e04771d356430a7ff2887e471b</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="PASSWORD FIELD ICON EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example event showcasing the Password Field with custom icons for visibility toggling.</data>
      <data key="d2">5c2098e04771d356430a7ff2887e471b</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="INPUT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Input is a UI component that allows users to enter data, such as text or numbers, into a form.
The Input component is a UI element that allows users to enter data, with various event handlers for user interactions.
Input primitive in Amplify UI allows creating interactive form controls for user input.</data>
      <data key="d2">5c2098e04771d356430a7ff2887e471b,d862c0095587db23ca9388fe047e5de4,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="CHECKBOXFIELD">
      <data key="d0">EVENT</data>
      <data key="d1">CheckboxField is a component in React that allows users to select one or more options from a set of choices.
CheckboxField allows users to mark items as selected and is a component within the Amplify UI library.
CheckboxField is a component in AWS Amplify UI React that allows users to select options in a form.
CheckboxField is a UI component in AWS Amplify that allows users to select options in a form.
CheckboxField is a component in Amplify UI that allows users to select options, styled to match the default theme while maintaining accessibility.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e,72f7bd8a9eb9039eabf2d7d1ff4c9601,85d9171dd6e70ffdb5803e227ecacbc4,a407fa7a377db0b8cb08ded22609f5e2,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </node>
    <node id="NAME ATTRIBUTE">
      <data key="d0">EVENT</data>
      <data key="d1">Name attribute is a property of the Fieldset component that allows developers to assign a name for form controls, useful for parsing form data.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7</data>
    </node>
    <node id="FORM CONTROLS">
      <data key="d0">EVENT</data>
      <data key="d1">Form controls are interactive elements within a form, such as input fields, checkboxes, and buttons, that allow users to submit data.</data>
      <data key="d2">5b0d50411f54d1ef65278d02161d11d7</data>
    </node>
    <node id="INPUT COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Input component allows users to enter text content and is a part of the Amplify UI library for React.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="FIRST NAME">
      <data key="d0">PERSON</data>
      <data key="d1">First Name is a label used in forms to collect the user's first name input.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="DEFAULT INPUT EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Default Input Example demonstrates how to use the Input component with a label in a React application.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="INPUT SIZE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Input Size Example shows how to implement different sizes of the Input component in a React application.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="INPUT VARIATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Input Variation Example illustrates the use of different styles for the Input component in a React application.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="INPUT STATES EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Input States Example demonstrates how to manage different states of the Input component, such as disabled and readonly.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="DEFAULT REQUIRED INPUT EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Default Required Input Example shows how to create a required input field in a React application.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="REQUIRED INPUT EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Required Input Example demonstrates how to indicate required fields in a form using the Input component.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="INPUT VALIDATION ERROR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Input Validation Error Example illustrates how to handle validation errors in the Input component in a React application.</data>
      <data key="d2">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </node>
    <node id="ACCEPTED FILE TYPES">
      <data key="d0">EVENT</data>
      <data key="d1">Accepted file types are the specific formats that the DropZone component allows users to upload, such as image/png and image/jpeg.</data>
      <data key="d2">7668a790c01b22add1e76afc928004db</data>
    </node>
    <node id="HIDDEN INPUT">
      <data key="d0">EVENT</data>
      <data key="d1">Hidden input is an HTML input element that is not visible to the user but is used to trigger file selection in the DropZone component.</data>
      <data key="d2">7668a790c01b22add1e76afc928004db</data>
    </node>
    <node id="VISUALLY HIDDEN">
      <data key="d0">EVENT</data>
      <data key="d1">Visually Hidden is a component that allows for accessibility features by hiding elements visually while keeping them available for screen readers.
Visually Hidden is a technique used to hide elements visually while keeping them accessible to screen readers.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835,7668a790c01b22add1e76afc928004db</data>
    </node>
    <node id="AMPLIFY CSS VARIABLES">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6f9ca43dfb29c7478264e5ebadfca37</data>
    </node>
    <node id="ICON SAVE">
      <data key="d0">EVENT</data>
      <data key="d1">Icon Save is a graphical representation used in buttons to indicate the action of saving data or content in an application.</data>
      <data key="d2">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </node>
    <node id="FULL WIDTH">
      <data key="d0">EVENT</data>
      <data key="d1">Full Width is a property that allows a button to expand and occupy the entire width of its container, enhancing its visibility and usability.</data>
      <data key="d2">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </node>
    <node id="BUTTON GROUP">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </node>
    <node id="INDETERMINATE">
      <data key="d0">EVENT</data>
      <data key="d1">Indeterminate is a state of a checkbox where it is unclear whether it is checked or unchecked.</data>
      <data key="d2">21ba26eef933ca84de0597d8f7c58f7e</data>
    </node>
    <node id="AUTOCOMPLETE">
      <data key="d0">EVENT</data>
      <data key="d1">Autocomplete is a UI component in AWS Amplify that enhances a search field with suggested options for user input.
Autocomplete is a UI component that allows users to input text and receive suggestions based on their input.
Autocomplete is a feature that provides suggestions to users as they type in a search box.
The Autocomplete event is a user interface feature that allows users to receive suggestions while typing in a text input field.
Autocomplete is a SearchField in Amplify UI enhanced by a list of suggested options.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,a407fa7a377db0b8cb08ded22609f5e2,d9a272b23f1d5cf3e9a9c6a2c79923b8,dc6390225fe3f0ac45fe499769223228,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="CHECKBOXFIELD LABEL HIDDEN EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">CheckboxField Label Hidden Example demonstrates how to use CheckboxField with a hidden label in AWS Amplify.</data>
      <data key="d2">a407fa7a377db0b8cb08ded22609f5e2</data>
    </node>
    <node id="CHECKBOXFIELD THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">CheckboxField Theme Example shows how to customize the appearance of CheckboxField components using a theme in AWS Amplify.</data>
      <data key="d2">a407fa7a377db0b8cb08ded22609f5e2</data>
    </node>
    <node id="FRUITS">
      <data key="d0">EVENT</data>
      <data key="d1">Fruits are the edible products of flowering plants, which are often used in various culinary applications.</data>
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="CHERRY">
      <data key="d0">PERSON</data>
      <data key="d1">Cherry is the fruit of many plants of the genus Prunus, and is a fleshy drupe.
Cherry is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="GRAPE">
      <data key="d0">PERSON</data>
      <data key="d1">Grape is a fruit, botanically a berry, of the deciduous woody vines of the flowering plant genus Vitis.
Grape is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="KIWIS">
      <data key="d0">PERSON</data>
      <data key="d1">Kiwifruit or Chinese gooseberry is the edible berry of several species of woody vines in the genus Actinidia.
Kiwis is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="LEMON">
      <data key="d0">PERSON</data>
      <data key="d1">Lemon is a species of small evergreen trees in the flowering plant family Rutaceae.
Lemon is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="MANGO">
      <data key="d0">PERSON</data>
      <data key="d1">Mango is an edible stone fruit produced by the tropical tree Mangifera indica.
Mango is a fruit that is commonly used as an option in the Autocomplete component.</data>
      <data key="d2">4bc06a4de4b3d3bcc2e2a060955740c8,dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="AUTOCOMPLETE VARIATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Autocomplete Variation Example showcases different styles of the Autocomplete component.</data>
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="AUTOCOMPLETE LOADING STATE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Autocomplete Loading State Example illustrates how the Autocomplete component behaves when in a loading state.</data>
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="AUTOCOMPLETE CUSTOM FILTERING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Autocomplete Custom Filtering Example shows how to implement custom filtering logic for the Autocomplete component.</data>
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="AUTOCOMPLETE WITH CUSTOM OPTIONS">
      <data key="d0">EVENT</data>
      <data key="d1">The Autocomplete with Custom Options example demonstrates how to create custom options in the Autocomplete component.</data>
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="AUTOCOMPLETE SIZE EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">dc6390225fe3f0ac45fe499769223228</data>
    </node>
    <node id="CUSTOM OPTION">
      <data key="d0">EVENT</data>
      <data key="d1">Custom option allows users to create their own filtering logic and customize the appearance of options in the Autocomplete component.</data>
      <data key="d2">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </node>
    <node id="CUSTOM MENU">
      <data key="d0">EVENT</data>
      <data key="d1">Custom menu allows users to customize the option menu in the Autocomplete component, including headers and footers.</data>
      <data key="d2">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </node>
    <node id="CUSTOM EMPTY">
      <data key="d0">EVENT</data>
      <data key="d1">Custom empty state provides a message when no results are found in the Autocomplete component.</data>
      <data key="d2">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </node>
    <node id="CUSTOM LOADING">
      <data key="d0">EVENT</data>
      <data key="d1">Custom loading state indicates that more results are being loaded in the Autocomplete component.</data>
      <data key="d2">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </node>
    <node id="TABS">
      <data key="d0">EVENT</data>
      <data key="d1">The Tabs event is a user interface feature that allows users to navigate between different sections of related content in a structured manner.
Tabs is a UI component that allows users to switch between different content panels in a web application.
Tabs are a UI component that allows users to switch between different views or content sections in a single interface.
Tabs are interactive components that allow users to switch between different content panels in a user interface.
Tabs in Amplify UI organize content into multiple sections, allowing users to navigate between them.
Tabs are a UI component that allows users to switch between different views or sections of content within a single interface.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,4bc06a4de4b3d3bcc2e2a060955740c8,aef551a2d82854ae79259d42c965502f,b4caad819b3245d1c7c01c198437baa1,e3c4629b893f38a9c103147f3ea608f3,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="TABS COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Tabs component is a UI element that allows users to switch between different views or sections of content within a single interface.
</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d,aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="CONTROLLED TABS">
      <data key="d0">EVENT</data>
      <data key="d1">Controlled Tabs is a feature that allows programmatic control over the currently active tab in the Tabs component.</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="LAZY LOADING TABS">
      <data key="d0">EVENT</data>
      <data key="d1">Lazy loading tabs is a feature that loads tab content only when the tab is active, improving performance and user experience.</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="TAB 2">
      <data key="d0">EVENT</data>
      <data key="d1">Tab 2 is the second tab in the Tabs component, providing an alternative content view for users.
Tab 2 is an event representing the second tab in the Tabs component, which displays specific content when selected.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="TAB 3">
      <data key="d0">EVENT</data>
      <data key="d1">Tab 3 is the third tab in the Tabs component, offering additional content for user selection.
Tab 3 is an event representing the third tab in the Tabs component, which displays specific content when selected.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="CONTENT OF THE FIRST TAB">
      <data key="d0">EVENT</data>
      <data key="d1">Content of the first tab refers to the information displayed when Tab 1 is selected in the Tabs component.</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="CONTENT OF THE SECOND TAB">
      <data key="d0">EVENT</data>
      <data key="d1">Content of the second tab refers to the information displayed when Tab 2 is selected in the Tabs component.</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="CONTENT OF THE THIRD TAB">
      <data key="d0">EVENT</data>
      <data key="d1">Content of the third tab refers to the information displayed when Tab 3 is selected in the Tabs component.</data>
      <data key="d2">4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="TAB 1">
      <data key="d0" />
      <data key="d1">
Tab 1 is an event representing the first tab in the Tabs component, which displays specific content when selected.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,4ef2269a1b7af8535395e8de5c20722d</data>
    </node>
    <node id="TABS.LIST">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tabs.List is the component that contains the individual tabs, allowing users to navigate between different content panels.
Tabs.List is a component that contains the individual tab items for navigation.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,b4caad819b3245d1c7c01c198437baa1</data>
    </node>
    <node id="TABS.ITEM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tabs.Item represents each individual tab in the tab bar, which users can click to view corresponding content.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93</data>
    </node>
    <node id="TABS.PANEL">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Tabs.Panel is the content area associated with each tab, displaying the relevant information when a tab is selected.
Tabs.Panel is a component that displays the content associated with a selected tab.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,b4caad819b3245d1c7c01c198437baa1</data>
    </node>
    <node id="INDICATOR POSITION">
      <data key="d0">EVENT</data>
      <data key="d1">Indicator Position is an event that determines where the tab border and current tab indicator are displayed within the Tabs component.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93</data>
    </node>
    <node id="DISABLED TABS">
      <data key="d0">EVENT</data>
      <data key="d1">Disabled Tabs is an event that allows certain tabs to be non-clickable, preventing users from accessing their content.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93</data>
    </node>
    <node id="TABS.CONTAINER">
      <data key="d0" />
      <data key="d1">
Tabs.Container is a component that wraps the tab items and panels, managing their state and accessibility.</data>
      <data key="d2">2730827c3a62362c95c2900ff92e0e93,b4caad819b3245d1c7c01c198437baa1</data>
    </node>
    <node id="TABS THEME">
      <data key="d0">EVENT</data>
      <data key="d1">Tabs Theme is a customizable appearance setting for Tabs components in AWS Amplify applications.</data>
      <data key="d2">aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="TABS CONTAINER">
      <data key="d0">EVENT</data>
      <data key="d1">Tabs Container is a component that wraps the Tabs and manages the state of the selected tab.</data>
      <data key="d2">aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="TABS LIST">
      <data key="d0">EVENT</data>
      <data key="d1">Tabs List is a component that contains the individual tab items within the Tabs Container.</data>
      <data key="d2">aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="TABS ITEM">
      <data key="d0">EVENT</data>
      <data key="d1">Tabs Item represents an individual tab that users can click to view associated content.</data>
      <data key="d2">aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="TABS PANEL">
      <data key="d0">EVENT</data>
      <data key="d1">Tabs Panel is a component that displays the content associated with a selected tab.</data>
      <data key="d2">aef551a2d82854ae79259d42c965502f</data>
    </node>
    <node id="MENU">
      <data key="d0">EVENT</data>
      <data key="d1">Menu is a component that provides a way for users to navigate and select actions within an application.
A Menu is a UI component that allows users to select options or actions, such as downloading or creating a copy of a file.

The Menu component provides an accessible, interactive menu for selecting actions within an application in Amplify UI.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6,b4caad819b3245d1c7c01c198437baa1,c6562553adf4b52a1a6eec1a462e147f,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="MENUITEM">
      <data key="d0">EVENT</data>
      <data key="d1">MenuItem is a component that represents an individual item within a Menu, allowing users to select actions.
MenuItem represents an individual option within a Menu, allowing users to perform specific actions like downloading or creating a copy.</data>
      <data key="d2">b4caad819b3245d1c7c01c198437baa1,c6562553adf4b52a1a6eec1a462e147f</data>
    </node>
    <node id="GLOBAL STYLING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Global Styling Example demonstrates how to apply global styles to all Menu components in AWS Amplify UI React.
Global Styling Example demonstrates how to apply global CSS styling to the Text component using CSS variables.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5,c6562553adf4b52a1a6eec1a462e147f</data>
    </node>
    <node id="LOCAL STYLING EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Local Styling Example shows how to apply specific styles to a Menu component in AWS Amplify UI React.
Local Styling Example illustrates how to override styling on a specific Text component using class selectors or style props.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5,c6562553adf4b52a1a6eec1a462e147f</data>
    </node>
    <node id="MENU ITEM">
      <data key="d0">EVENT</data>
      <data key="d1">MenuItem is a component within the Menu that represents an individual item that can be selected or clicked by the user.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6</data>
    </node>
    <node id="MY DEMO LINK">
      <data key="d0">EVENT</data>
      <data key="d1">My Demo Link is an example of a link created using the Link component in AWS Amplify UI, demonstrating its usage for navigation.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6</data>
    </node>
    <node id="COPY">
      <data key="d0">EVENT</data>
      <data key="d1">The Copy action is an example of a menu item that allows users to create a duplicate of a selected item or content.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6</data>
    </node>
    <node id="MARK AS DRAFT">
      <data key="d0">EVENT</data>
      <data key="d1">Mark as Draft is a menu item that allows users to save their work without publishing it, indicating it is still in progress.</data>
      <data key="d2">6f492ac78ca89b7028399a30a24b9dc6</data>
    </node>
    <node id="CUSTOM SEPARATOR">
      <data key="d0">EVENT</data>
      <data key="d1">Custom Separator is a feature in the Breadcrumbs component that allows users to define how breadcrumb links are visually separated.</data>
      <data key="d2">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </node>
    <node id="COMPOSABLE BREADCRUMBS">
      <data key="d0">EVENT</data>
      <data key="d1">Composable Breadcrumbs is a flexible implementation of the Breadcrumbs component that allows for custom rendering of its sub-components.</data>
      <data key="d2">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </node>
    <node id="THEMED LINK">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </node>
    <node id="BREADCRUMBS ITEM">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Breadcrumbs Item represents an individual link within the Breadcrumbs component, allowing users to navigate to different sections of the site.</data>
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89</data>
    </node>
    <node id="BREADCRUMBS LINK">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Breadcrumbs Link is a clickable element within the Breadcrumbs Item that directs users to a specific page or section.</data>
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89</data>
    </node>
    <node id="BREADCRUMBS SEPARATOR">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Breadcrumbs Separator is a visual element that distinguishes between different Breadcrumbs Items, enhancing readability and navigation.</data>
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89</data>
    </node>
    <node id="BREADCRUMBS CONTAINER">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">393aa2365a84cbbbeaa882f89f100b89</data>
    </node>
    <node id="MESSAGE COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Message component is used to display feedback to the user in various styles and themes.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="BREADCRUMBS COMPONENT">
      <data key="d0">EVENT</data>
      <data key="d1">The Breadcrumbs component is a navigation element that helps users understand their location within a website's hierarchy.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="ARIA">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">ARIA (Accessible Rich Internet Applications) is a set of attributes that can be added to HTML to improve accessibility for users with disabilities.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="MESSAGE HEADING">
      <data key="d0">EVENT</data>
      <data key="d1">Message heading is a title or label for a message component, providing context for the message content.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="COLOR THEME">
      <data key="d0">EVENT</data>
      <data key="d1">Color theme refers to the color variations available for the Message component, such as error, success, warning, and info.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="DISMISSIBLE MESSAGE">
      <data key="d0">EVENT</data>
      <data key="d1">A dismissible message is a type of message that can be closed by the user, enhancing user experience.</data>
      <data key="d2">6e82a6e0427e12aef8dafce9907f3835</data>
    </node>
    <node id="MESSAGE THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">MessageThemeExample is an example component demonstrating how to use the Message component with a custom theme in AWS Amplify.</data>
      <data key="d2">a3d37007c833039158d1e1720cb62466</data>
    </node>
    <node id="MESSAGE STYLE PROPS">
      <data key="d0">EVENT</data>
      <data key="d1">MessageStyleProps is an example component showing how to style the Message component using style props in AWS Amplify.</data>
      <data key="d2">a3d37007c833039158d1e1720cb62466</data>
    </node>
    <node id="MESSAGE AS ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">MessageAsAlert is an example component that demonstrates how to use the Message component as an alert with ARIA roles in AWS Amplify.</data>
      <data key="d2">a3d37007c833039158d1e1720cb62466</data>
    </node>
    <node id="PLACEHOLDER IS LOADED EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showing how to use the isLoaded prop with the Placeholder component to indicate content loading status.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="PLACEHOLDER SIZE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example illustrating how to use different sizes for the Placeholder component in a React application.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="PLACEHOLDER THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example demonstrating how to customize the Placeholder component's appearance using a theme in Amplify UI.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="LOADER SIZES EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showing how to use different sizes for the Loader component in a React application.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="LOADER VARIATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example demonstrating the different variations of the Loader component, including linear and default.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="LOADER COLOR EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example illustrating how to customize the colors of the Loader component in a React application.</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="DETERMINATE LOADER EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An example showing how to implement a determinate loader that indicates progress in a loading operation.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">51eb03a68a36f040cb248c3d2430e43a</data>
    </node>
    <node id="DEFAULT ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">The default alert is a standard notification that appears in the user interface without any specific variation applied.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="INFO ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">An info alert is a type of notification that provides informational messages to the user, typically styled to indicate non-critical information.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="ERROR ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">An error alert is a notification that indicates a problem or issue that needs attention, usually styled to draw attention to the error.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="WARNING ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">A warning alert is a notification that indicates a potential issue or caution that the user should be aware of, often styled to highlight the warning.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="SUCCESS ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">A success alert is a notification that indicates a successful operation or action, typically styled to convey positive feedback to the user.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="ALERT HEADING">
      <data key="d0">EVENT</data>
      <data key="d1">The alert heading is a title or summary that can be included in an alert to provide context or emphasize the message.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="ALERT VARIATION">
      <data key="d0">EVENT</data>
      <data key="d1">Alert variation refers to the different styles of alerts, such as info, error, warning, and success, that can be applied to the Alert component.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="DISMISSIBLE ALERT">
      <data key="d0">EVENT</data>
      <data key="d1">A dismissible alert is an alert that can be closed by the user, typically indicated by a close button.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="ON DISMISS">
      <data key="d0">EVENT</data>
      <data key="d1">The onDismiss prop is a function that executes when a dismissible alert is closed, allowing for additional actions to be taken.</data>
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="ALERT COMPONENT">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">3bcd47a467bca8030037be27b1ae1b3e</data>
    </node>
    <node id="SECTION">
      <data key="d0">EVENT</data>
      <data key="d1">Section is an HTML element that can be rendered by the View component in Amplify UI, used for grouping content.</data>
      <data key="d2">56553341236a20419cc336c60c2bed04</data>
    </node>
    <node id="PROGRESS">
      <data key="d0">EVENT</data>
      <data key="d1">Progress is an HTML element that can be rendered by the View component in Amplify UI, typically used to show progress of a task.</data>
      <data key="d2">56553341236a20419cc336c60c2bed04</data>
    </node>
    <node id="SCROLLVIEW">
      <data key="d0">EVENT</data>
      <data key="d1">ScrollView is a component in Amplify UI that allows content to be scrollable, enabling better user experience for displaying large amounts of content.
ScrollView is a component in Amplify UI for React that allows for scrollable content in a user interface.
ScrollView is a component in Amplify UI that allows scrolling of its inner contents, enhancing user navigation.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5,6dcdf6dcf7b1c6d0a0969f9399986850,e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="TEXT VARIATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Text Variation Example demonstrates the use of the variation prop in the Text component to display different text styles such as primary, secondary, and error.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </node>
    <node id="TEXT TRUNCATED EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Text Truncated Example illustrates the use of the isTruncated prop in the Text component to render an ellipsis when the text exceeds the defined width.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </node>
    <node id="TEXT THEME EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Text Theme Example shows how to customize the appearance of Text components using a Theme in Amplify UI.</data>
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </node>
    <node id="DEFAULT TEXT EXAMPLE">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </node>
    <node id="MICHAELMAS TERM">
      <data key="d0">EVENT</data>
      <data key="d1">Michaelmas term is a term in the academic calendar, often associated with the legal profession in the UK, which has recently concluded.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="LINCOLN'S INN HALL">
      <data key="d0">GEO</data>
      <data key="d1">Lincoln's Inn Hall is a historic building in London, used for legal education and events, where the Lord Chancellor sits.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="LORD CHANCELLOR">
      <data key="d0">PERSON</data>
      <data key="d1">The Lord Chancellor is a senior official in the UK government, responsible for the judiciary and the administration of justice.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="E">
      <data key="d0">EVENT</data>
      <data key="d1">E is a mathematical constant representing the base of the natural logarithm, approximately equal to 2.71828.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="SCROLLVIEW HORIZONTAL EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">ScrollView Horizontal Example is a demonstration of a horizontal scrollable component in Amplify UI for React.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="SCROLLVIEW VERTICAL EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">ScrollView Vertical Example is a demonstration of a vertical scrollable component in Amplify UI for React.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="ACCESSIBLE SCROLLVIEW EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Accessible ScrollView Example is a demonstration of a scrollable component that is keyboard navigable and has an accessible label.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="MY SCROLLVIEW">
      <data key="d0">EVENT</data>
      <data key="d1">My ScrollView is a custom-styled scrollable component using CSS in Amplify UI for React.</data>
      <data key="d2">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="DEFAULT IMAGE EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">Default Image Example is a demonstration of how to use the Image component in Amplify UI for React.)&lt;|COMPLETE|&gt;
The Default Image Example demonstrates how to use the Image component in Amplify UI to display a responsive image of Milford Sound.</data>
      <data key="d2">6634963e5bc3eae8755d15393e4c9b71,6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </node>
    <node id="MILFORD SOUND">
      <data key="d0">GEO</data>
      <data key="d1">Milford Sound is a famous fiord in New Zealand, known for its breathtaking scenery, including snowy mountain peaks and lush green fields.</data>
      <data key="d2">6634963e5bc3eae8755d15393e4c9b71</data>
    </node>
    <node id="IMAGE OPTIMIZATION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Image Optimization Example illustrates how to use the Image component with responsive image techniques in Amplify UI.</data>
      <data key="d2">6634963e5bc3eae8755d15393e4c9b71</data>
    </node>
    <node id="IMAGE OBJECT FIT AND POSITION EXAMPLE">
      <data key="d0">EVENT</data>
      <data key="d1">The Image Object Fit and Position Example shows how to control the fit and position of images using the Image component in Amplify UI.</data>
      <data key="d2">6634963e5bc3eae8755d15393e4c9b71</data>
    </node>
    <node id="REACT ICONS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React Icons is a library that provides a collection of popular icons for React applications, allowing developers to easily integrate icons into their projects.
React Icons is a library that provides a collection of popular icons for React applications, allowing developers to easily integrate icons into their projects.</data>
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7,6edc6c7e13a23d971e48b75724b50d5f</data>
    </node>
    <node id="PATH DATA">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">05d21cc14ac859e5fc2002038fa7f6f7</data>
    </node>
    <node id="DIJSBADGE">
      <data key="d0">PERSON</data>
      <data key="d1">DiJsBadge is an icon representing JavaScript, often used in various applications to symbolize the language.</data>
      <data key="d2">6edc6c7e13a23d971e48b75724b50d5f</data>
    </node>
    <node id="HEADING LEVEL">
      <data key="d0">EVENT</data>
      <data key="d1">Heading levels refer to the six different levels of headings (h1 to h6) that can be rendered using the Heading component in Amplify UI.</data>
      <data key="d2">0f0c3a1733d9928c7207a0931e147afe</data>
    </node>
    <node id="TRUNCATE">
      <data key="d0">EVENT</data>
      <data key="d1">The truncate feature in the Heading component renders an ellipsis when the heading text exceeds its allowed width.</data>
      <data key="d2">0f0c3a1733d9928c7207a0931e147afe</data>
    </node>
    <node id="HEADING THEME SOURCE">
      <data key="d0">EVENT</data>
      <data key="d1">The heading theme source defines the styling tokens for the Heading component, including colors and font sizes.</data>
      <data key="d2">0f0c3a1733d9928c7207a0931e147afe</data>
    </node>
    <node id="CHECKBOX FIELD">
      <data key="d0">EVENT</data>
      <data key="d1">CheckboxField in Amplify UI is used to mark individual items as selected or to select multiple items from a list.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="DASHED">
      <data key="d0">EVENT</data>
      <data key="d1">Dashed is a border style that can be applied to components like the Divider in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="CLASS SELECTOR">
      <data key="d0">EVENT</data>
      <data key="d1">A class selector is a method used to apply styles to specific components in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="DESIGN TOKEN PROPERTIES">
      <data key="d0">EVENT</data>
      <data key="d1">Design Token Properties are used in Amplify UI to define the styling attributes of components.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="DIVIDER TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Divider Tokens are specific design tokens that define the styling properties for the Divider component in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="OPACITY">
      <data key="d0">EVENT</data>
      <data key="d1">Opacity refers to the transparency level of components in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="LABEL TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Label Tokens define the styling properties for labels in Amplify UI components.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="SMALL TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Small Tokens are design tokens that define smaller styling properties for components in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="LARGE TOKENS">
      <data key="d0">EVENT</data>
      <data key="d1">Large Tokens are design tokens that define larger styling properties for components in Amplify UI.</data>
      <data key="d2">e3c4629b893f38a9c103147f3ea608f3</data>
    </node>
    <node id="ASTRO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Astro is a modern static site generator that allows developers to build fast websites using components from various frameworks.</data>
      <data key="d2">64488fb4232e09664566b2ee3c00394a</data>
    </node>
    <node id="PROCESS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Process is an object in Node.js that provides information about the current Node.js process and allows interaction with it.</data>
      <data key="d2">64488fb4232e09664566b2ee3c00394a</data>
    </node>
    <node id="GLOBAL">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">64488fb4232e09664566b2ee3c00394a</data>
    </node>
    <node id="NODE POLYFILL WEBPACK PLUGIN">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Node Polyfill Webpack Plugin is a tool that helps to polyfill Node.js globals in Webpack projects.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="POLYFILL">
      <data key="d0">EVENT</data>
      <data key="d1">A polyfill is a piece of code that provides functionality that is not natively supported in a particular environment, often used in web development to ensure compatibility.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="REACT APP REWIRED">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">React App Rewired is a tool that allows developers to customize the Create React App configuration without ejecting.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="CRACO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Create React App Configuration Override (CRACO) is a tool that allows developers to customize the Create React App configuration without ejecting.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="@AWS-AMPLIFY/UI-REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@aws-amplify/ui-react is a library that provides React components for building user interfaces with AWS Amplify.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="@AWS-SDK/CLIENT-STS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@aws-sdk/client-sts is a JavaScript library that provides methods for interacting with the AWS Security Token Service (STS).</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="@AWS-SDK/UTIL-USER-AGENT-NODE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">@aws-sdk/util-user-agent-node is a utility library for generating user agent strings for AWS SDK clients in Node.js.</data>
      <data key="d2">f0a75595032bbb539a5844dc72a00955</data>
    </node>
    <node id="EXPANDER">
      <data key="d0">EVENT</data>
      <data key="d1">The Expander is a component that was used in previous versions of AWS Amplify UI to create collapsible sections, now replaced by Accordion.
</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="FETCHUSERATTRIBUTES">
      <data key="d0">EVENT</data>
      <data key="d1">fetchUserAttributes is a function in AWS Amplify that retrieves user attributes after authentication.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="SIGNININPUT">
      <data key="d0">EVENT</data>
      <data key="d1">SignInInput is an interface representing the input data required for signing in a user in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="SIGNINOUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">SignInOutput is an interface representing the output data returned after a successful sign-in in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="SIGNUPINPUT">
      <data key="d0">EVENT</data>
      <data key="d1">SignUpInput is an interface representing the input data required for signing up a new user in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="SIGNUPOUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">SignUpOutput is an interface representing the output data returned after a successful sign-up in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="CONFIRMSIGNININPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ConfirmSignInInput is an interface representing the input data required to confirm a user's sign-in in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="CONFIRMSIGNINOUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ConfirmSignInOutput is an interface representing the output data returned after confirming a user's sign-in in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="CONFIRMSIGNUPINPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ConfirmSignUpInput is an interface representing the input data required to confirm a user's sign-up in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="CONFIRMSIGNUPOUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ConfirmSignUpOutput is an interface representing the output data returned after confirming a user's sign-up in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="RESETPASSWORDINPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ResetPasswordInput is an interface representing the input data required to reset a user's password in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="RESETPASSWORDOUTPUT">
      <data key="d0">EVENT</data>
      <data key="d1">ResetPasswordOutput is an interface representing the output data returned after a successful password reset in AWS Amplify.</data>
      <data key="d2">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </node>
    <node id="RADIX">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Radix is a library that provides low-level UI components for building accessible and customizable user interfaces.</data>
      <data key="d2">f840bfd5a371f4a008e95cb3caeb95d6</data>
    </node>
    <node id="UI REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">The UI React library is a part of AWS Amplify that provides UI components for building applications with React.
UI React is a library that provides React components for building user interfaces, particularly in conjunction with AWS Amplify.</data>
      <data key="d2">b394b4eeaf1a9df4b16937daeed33e3a,e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="INAPP MESSAGING PROVIDER">
      <data key="d0">EVENT</data>
      <data key="d1">InAppMessagingProvider is a component from the @aws-amplify/ui-react-notifications library that provides context for in-app messaging.</data>
      <data key="d2">e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="INAPP MESSAGE DISPLAY">
      <data key="d0">EVENT</data>
      <data key="d1">InAppMessageDisplay is a component from the @aws-amplify/ui-react-notifications library that displays in-app messages to users.</data>
      <data key="d2">e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="AMPLIFY NOTIFICATIONS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e99506740df57dd0a465425dd334652b</data>
    </node>
    <node id="AWS AMPLIFY UI REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">AWS Amplify UI React is a library that provides React components for building user interfaces in applications using AWS Amplify.</data>
      <data key="d2">cb861a02338e7cf7786d791829706a53</data>
    </node>
    <node id="INPUTSTYLES">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">InputStyles is a prop in AWS Amplify UI React that allows developers to apply styles directly to input elements like text fields, text areas, and selects.</data>
      <data key="d2">cb861a02338e7cf7786d791829706a53</data>
    </node>
    <node id="ATTRIBUTES">
      <data key="d0">PERSON</data>
      <data key="d1">Attributes is an object in the FormData that holds additional user information, such as email.</data>
      <data key="d2">cb861a02338e7cf7786d791829706a53</data>
    </node>
    <node id="BLAZEFACE">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Blazeface is a lightweight face detection model that is optimized for mobile devices and is used in conjunction with TensorFlow.</data>
      <data key="d2">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </node>
    <node id="INTERNATIONALIZATION (I18N)">
      <data key="d0">EVENT</data>
      <data key="d1">Internationalization (i18n) is the process of designing an application so that it can be adapted to various languages and regions without engineering changes.</data>
      <data key="d2">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </node>
    <node id="AMPLIFY STUDIO">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify Studio is a platform that allows users to design components visually in Figma and generate usable React code for applications.
Amplify Studio is a platform that allows users to build responsive components and applications with ease, integrating design and development workflows.
Amplify Studio is a visual development environment that allows users to design UI components and connect them to backend services provided by AWS Amplify.</data>
      <data key="d2">1e46ce5bc3a6e1fa6bece36f86a46f80,7eb4739e8bed8bf13646d7e252c1ae14,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </node>
    <node id="EVENT HANDLING">
      <data key="d0">EVENT</data>
      <data key="d1">Event handling in Amplify Studio allows developers to bind UI component events to actions for building interactive components.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="DATA BINDING">
      <data key="d0">EVENT</data>
      <data key="d1">Data binding in Amplify Studio enables visual mapping of UI components to backend data models for dynamic component creation.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="CSS FLEXBOX">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Flexbox is a layout model that allows responsive design by enabling the arrangement of elements in a one-dimensional space, adapting to different screen sizes and orientations.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="CSS GRID">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Grid is a layout system that provides a two-dimensional grid-based layout, allowing developers to create complex responsive web designs.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="RIGHT TO LEFT">
      <data key="d0">EVENT</data>
      <data key="d1">Right to Left (RTL) is a text directionality used in languages such as Arabic, which requires specific layout adjustments in applications.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="LEFT TO RIGHT">
      <data key="d0">EVENT</data>
      <data key="d1">Left to Right (LTR) is the standard text directionality for languages such as English, influencing how content is displayed in applications.</data>
      <data key="d2">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </node>
    <node id="TUTORIAL">
      <data key="d0">EVENT</data>
      <data key="d1">A tutorial is a method of transferring knowledge and may be used as a part of a learning process, often involving step-by-step instructions.</data>
      <data key="d2">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </node>
    <node id="FORM INPUTS">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </node>
    <node id="EFE KURNAZ">
      <data key="d0">PERSON</data>
      <data key="d1">Efe Kurnaz is an artist known for the painting titled 'Hallway'.
Efe Kurnaz is the artist of the painting titled 'Hallway', which has received a high rating and numerous reviews.
Efe Kurnaz is an artist known for creating the painting titled 'Hallway'.
Efe Kurnaz is an artist with a high rating of 4.8 out of 5 based on 445 reviews for his artwork.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,aca6ad21122c65a602020d055257d45c,b394b4eeaf1a9df4b16937daeed33e3a,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="PAWEL CZERWINSKI">
      <data key="d0">PERSON</data>
      <data key="d1">Pawel Czerwinski is an artist known for the painting titled 'Fire and Ice'.
Pawel Czerwinski is an artist known for creating the painting titled 'Fire and Ice'.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="KSENIYA LAPTEVA">
      <data key="d0">PERSON</data>
      <data key="d1">Kseniya Lapteva is an artist known for the painting titled 'Orange, pink, yellow'.
Kseniya Lapteva is an artist known for her work titled 'Orange, pink, yellow'.
Kseniya Lapteva is an artist known for creating the painting titled 'Orange, pink, yellow'.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,b63082a4254056f0cfd31b0b76d5e8cc,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="HALLWAY">
      <data key="d0">EVENT</data>
      <data key="d1">Hallway is a painting created by Efe Kurnaz, featuring abstract art.
Hallway is a painting that has been recognized as a bestseller and is available for purchase.
Hallway is a painting created by Efe Kurnaz, featuring abstract art.
Hallway is a location or event where Efe Kurnaz's artwork is displayed or sold.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,aca6ad21122c65a602020d055257d45c,b394b4eeaf1a9df4b16937daeed33e3a,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="FIRE AND ICE">
      <data key="d0">EVENT</data>
      <data key="d1">Fire and Ice is a painting created by Pawel Czerwinski, known for its unique artistic expression.
Fire and Ice is a painting created by Pawel Czerwinski, known for its unique artistic expression.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="ORANGE, PINK, YELLOW">
      <data key="d0">EVENT</data>
      <data key="d1">Orange, pink, yellow is a painting created by Kseniya Lapteva, showcasing vibrant colors.

Orange, pink, yellow is a painting created by Kseniya Lapteva, characterized by vibrant colors.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,b63082a4254056f0cfd31b0b76d5e8cc,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="SHOPPING CART">
      <data key="d0">EVENT</data>
      <data key="d1">The shopping cart component is a feature built using Vite.js and Amplify UI, allowing users to add items for purchase.
The shopping cart component is a feature in web applications that allows users to select and purchase items online.
The shopping cart is a component in e-commerce applications that allows users to select and manage items they wish to purchase.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf,b394b4eeaf1a9df4b16937daeed33e3a,f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="ABSTRACT ART">
      <data key="d0">EVENT</data>
      <data key="d1">Abstract art is a type of visual art that uses shapes, colors, and forms to create compositions that may not represent the visual world directly.</data>
      <data key="d2">3012140364ff4dc93ce2fc057a65a7bf</data>
    </node>
    <node id="MARIA ORLOVA">
      <data key="d0">PERSON</data>
      <data key="d1">Maria Orlova is an artist known for her work titled 'Melted Purple'.
Maria Orlova is an artist known for her work titled 'Melted Purple'.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="BRUNO THETHE">
      <data key="d0">PERSON</data>
      <data key="d1">Bruno Thethe is an artist known for his work titled 'Experimental'.
Bruno Thethe is an artist known for his work titled 'Experimental'.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="FELIX SPISKE">
      <data key="d0">PERSON</data>
      <data key="d1">Felix Spiske is an artist known for his work titled 'Rainbow'.
Felix Spiske is an artist known for his work titled 'Rainbow'.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="RADIENTA">
      <data key="d0">PERSON</data>
      <data key="d1">Radienta is an artist known for her work titled 'Fearless Hue'.
Radienta is an artist known for her work titled 'Fearless Hue'.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="ARTWORK">
      <data key="d0">EVENT</data>
      <data key="d1">The collection of artworks includes various pieces by different artists, showcasing their unique styles and themes.
Artworks are creative pieces that can include paintings, sculptures, and other forms of visual art.</data>
      <data key="d2">721fd770afdaa7d57e5db2f788e375b2,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="MELTED PURPLE">
      <data key="d0">EVENT</data>
      <data key="d1">An artwork titled 'Melted Purple' created by artist Maria Orlova.
</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="RAINBOW">
      <data key="d0">EVENT</data>
      <data key="d1">An artwork titled 'Rainbow' created by artist Felix Spiske.
Rainbow is an artwork created by artist Felix Spiske, celebrated for its vivid representation of colors.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="FEARLESS HUE">
      <data key="d0">EVENT</data>
      <data key="d1">An artwork titled 'Fearless Hue' created by artist Radienta.
Fearless Hue is an artwork created by artist Radienta, recognized for its bold use of color and form.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </node>
    <node id="JOEL FILIPE">
      <data key="d0">PERSON</data>
      <data key="d1">Joel Filipe is the artist of the painting titled 'Liquid'.

Joel Filipe is the artist of the painting titled 'Liquid'.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,572dad4fd5ef0bd88476a9904b6de46d,721fd770afdaa7d57e5db2f788e375b2</data>
    </node>
    <node id="LIQUID">
      <data key="d0">EVENT</data>
      <data key="d1">Liquid is a painting created by Joel Filipe, available for purchase at a price of $549.99.
Liquid is a title of an artwork by Joel Filipe, showcasing his artistic style.Liquid is an artwork created by artist Joel Filipe, characterized by its fluid and dynamic visual style.)&lt;|COMPLETE|&gt;
Liquid is a painting created by Joel Filipe, described as an abstract work of art.</data>
      <data key="d2">21d3894179bf01562acf48f6a21c4d38,572dad4fd5ef0bd88476a9904b6de46d,721fd770afdaa7d57e5db2f788e375b2</data>
      <data key="d3">EVENT</data>
    </node>
    <node id="PAINTINGS">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">PAINTINGS is a collection of artworks that includes various pieces available for sale.
PAINTINGS is a collection of artworks that includes various pieces, including 'Liquid'.</data>
      <data key="d2">572dad4fd5ef0bd88476a9904b6de46d,721fd770afdaa7d57e5db2f788e375b2</data>
    </node>
    <node id="FRAME">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Frame refers to the option of having a frame for the painting, which can enhance its presentation.
Frame indicates whether the artwork is presented with a frame or not, affecting the purchase decision.</data>
      <data key="d2">572dad4fd5ef0bd88476a9904b6de46d,aca6ad21122c65a602020d055257d45c</data>
    </node>
    <node id="QUANTITY">
      <data key="d0">EVENT</data>
      <data key="d1">Quantity refers to the number of items being purchased, which can be adjusted by the customer.
Quantity refers to the number of pieces of Efe Kurnaz's artwork that a customer can purchase, with a limit set between 0 and 10.</data>
      <data key="d2">572dad4fd5ef0bd88476a9904b6de46d,aca6ad21122c65a602020d055257d45c</data>
    </node>
    <node id="BESTSELLER">
      <data key="d0">EVENT</data>
      <data key="d1">Bestseller is a designation indicating that a product, such as the painting 'Hallway', has achieved high sales volume.</data>
      <data key="d2">b394b4eeaf1a9df4b16937daeed33e3a</data>
    </node>
    <node id="PICKUP">
      <data key="d0">EVENT</data>
      <data key="d1">Pickup refers to the process of collecting an item from a physical store after purchase, as indicated for the painting 'Hallway'.</data>
      <data key="d2">b394b4eeaf1a9df4b16937daeed33e3a</data>
    </node>
    <node id="AMPLIFY UI REACT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Amplify UI React is a package for building user interfaces in React applications, particularly those that integrate with AWS services.</data>
      <data key="d2">f638e8457654aac7a4dfb0263d5f8275</data>
    </node>
    <node id="PRICE">
      <data key="d0">EVENT</data>
      <data key="d1">Price refers to the cost of Efe Kurnaz's artwork, which is set at $899.99.</data>
      <data key="d2">aca6ad21122c65a602020d055257d45c</data>
    </node>
    <node id="ADD TO CART">
      <data key="d0">EVENT</data>
      <data key="d1">Add to Cart is an action that allows customers to include Efe Kurnaz's artwork in their shopping cart for purchase.)&lt;|COMPLETE|&gt;</data>
      <data key="d2">aca6ad21122c65a602020d055257d45c</data>
    </node>
    <node id="INTER FONT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Inter is a variable font designed for UI design, referenced in the default theme of Amplify UI for optimal readability.</data>
      <data key="d2">818fcb4044a83bd6eead8a24e57319ad</data>
    </node>
    <node id="CSS LAYERS">
      <data key="d0">EVENT</data>
      <data key="d1">CSS Layers is a feature of the CSS specification that allows for easier style overrides, mentioned in the context of Amplify UI's styling capabilities.</data>
      <data key="d2">818fcb4044a83bd6eead8a24e57319ad</data>
    </node>
    <node id="FLUTTER">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Flutter is an open-source UI software development toolkit created by Google for building natively compiled applications for mobile, web, and desktop from a single codebase.</data>
      <data key="d2">d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="SWIFT">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Swift is a powerful programming language developed by Apple for iOS, macOS, watchOS, and tvOS app development.</data>
      <data key="d2">d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="ANDROID">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">Android is a mobile operating system developed by Google, designed primarily for touchscreen mobile devices such as smartphones and tablets.</data>
      <data key="d2">d26ffe8f4908cd05e7882cd4223c3490</data>
    </node>
    <node id="GRAPHQL API">
      <data key="d0">ORGANIZATION</data>
      <data key="d1">GraphQL API is a service offered by AWS Amplify that allows developers to create and manage APIs for their applications.</data>
      <data key="d2">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </node>
    <node id="ACCESSIBILITY GUIDELINES">
      <data key="d0">EVENT</data>
      <data key="d1">Accessibility guidelines are best practices that ensure applications built with AWS Amplify are usable by all individuals, including those with disabilities.</data>
      <data key="d2">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </node>
    <edge source="NEXT.JS" target="CLI">
      <data key="d4">66.0</data>
      <data key="d5">Next.js provides a CLI for developers to manage their applications through command line commands.
The Next.js CLI is a tool that allows developers to interact with the Next.js framework through command line commands.
The CLI is a tool used to interact with and manage Next.js applications
The Next.js CLI is a tool specifically designed for interacting with the Next.js framework, allowing developers to perform various tasks related to Next.js applications.
The CLI is a tool provided by Next.js to facilitate the development and management of Next.js applications
The Next.js CLI provides commands to develop, build, and manage Next.js applications.
The Next.js CLI is a tool provided by Next.js for developers to manage their applications effectively.
The CLI provides essential commands for running and managing Next.js applications
The Next.js CLI is a tool specifically designed for developing and managing Next.js applications
The CLI tools are part of the Next.js framework, enabling developers to create and manage Next.js applications</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5,3cf51b17316c47851ab9a8bb2fddfbc3,46d1b39ace8164bdecd2be4eab0a1fc3,5f12ce576f28b7467649832a292ad632,77371d3904d4e5b3fca92caaa7329a5c,816401f1962be5373b03365c403e3a92,9726f4ae30b11539c429ff41c8326d46,ad18f1240db75ed731ff9f7ec075320e,ce32447561606063e2fc6439cb2f9989,e6b2d6730ad42ef426b9678bb99c756c</data>
    </edge>
    <edge source="NEXT.JS" target="NPM">
      <data key="d4">107.0</data>
      <data key="d5">Next.js can be installed and managed through NPM, which is essential for its dependency management.
Next.js projects often use npm to manage dependencies
Next.js can be installed and managed through NPM, which is essential for managing JavaScript packages.
Next.js can be installed and managed using npm, which is its package manager.
Next.js can be installed and managed through NPM, which is essential for managing dependencies in JavaScript applications.
Next.js can be installed and managed using npm, which is a package manager for JavaScript
Next.js can be installed and managed using NPM, which is a package manager for JavaScript.
Next.js can be installed and managed using NPM, which is a package manager for JavaScript.
NPM is used to install and manage Next.js packages, indicating a direct relationship between the package manager and the framework.
NPM is used to install dependencies required for Next.js applications, establishing a connection between the two.
npm is used to install Next.js and its dependencies in a project
NPM is commonly used to install Next.js and manage its dependencies
Next.js applications can utilize NPM to install and manage their dependencies
Next.js applications often use NPM to manage their dependencies
Next.js can be installed and managed using NPM, which is the default package manager for Node.js
npm is used to install Next.js as a dependency in projects
NPM is used to manage dependencies and scripts for Next.js applications
Next.js applications can use NPM to manage their dependencies and scripts for development and production.
NPM is used to install Next.js and its dependencies in a project</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,391895fc365f2f2512a45ea503fbfa86,45d1b0474e5a4ef2a69bdf70528aedb4,46d1b39ace8164bdecd2be4eab0a1fc3,5afd0d2ef8220eea43b9a4e3736e7bee,5f12ce576f28b7467649832a292ad632,60041d4c2667ea62ef90a73e1138bae6,6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,816401f1962be5373b03365c403e3a92,95c2ea5a0f820f012ba0ea521843d34d,9da317a323ff76913285228d8243413e,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,b48fe8c8f5e2835de49d9a46578cbf9d,ce32447561606063e2fc6439cb2f9989,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="ESLINT">
      <data key="d4">180.0</data>
      <data key="d5">Next.js integrates ESLint to help developers maintain code quality and adhere to coding standards during development.
Next.js integrates with ESLint to provide linting capabilities for JavaScript code
Next.js integrates with ESLint to provide linting capabilities for JavaScript code.
Next.js can run ESLint to ensure code quality and adherence to coding standards
Next.js integrates ESLint for linting JavaScript code within applications
Next.js integrates ESLint to help developers maintain code quality and adhere to coding standards in their applications.
Next.js integrates with ESLint for linting JavaScript code
Next.js integrates with ESLint to provide linting capabilities for JavaScript code.
Next.js integrates with ESLint to help developers maintain code quality and consistency.
Next.js recommends using ESLint for maintaining code quality and consistency in Next.js applications
Next.js includes ESLint integration to help developers catch accessibility issues early in their code.
Next.js integrates ESLint for linting JavaScript code in applications.
Next.js integrates ESLint to ensure code quality during the build process
Next.js integrates ESLint to ensure code quality and prevent errors during the production build process
Next.js applications often use ESLint to ensure code quality and adherence to coding standards.
Next.js projects often use ESLint for maintaining code quality and consistency
Next.js applications often use ESLint for code quality and standard enforcement
Next.js can be configured to use ESLint for maintaining code quality in applications
Next.js integrates ESLint for code quality and error checking during development and build processes.
Next.js recommends using ESLint for linting JavaScript code in applications built with the framework.
Next.js recommends using ESLint for maintaining code quality in applications built with the framework
ESLint is integrated into Next.js projects to ensure code quality and adherence to coding standards
Next.js applications can integrate ESLint for code quality and error checking
ESLint can be used to lint Next.js applications, ensuring code quality and adherence to coding standards
eslint is integrated into Next.js to ensure code quality, showing its relevance to the framework's development practices.
Next.js integrates with ESLint to ensure that code quality is maintained during the build process
Next.js applications often require ESLint for code quality and adherence to best practices
Next.js provides an integrated ESLint experience, allowing developers to easily set up and run ESLint for their applications.
Next.js recommends using ESLint for linting JavaScript code in applications built with its framework.
Next.js comes with built-in ESLint configuration to help developers maintain code quality and consistency.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,016bf1f47e649cd8112b488d5c847dcc,03986c3b8388e42d1b82f4db5232270e,04edddc24da6789de5ee2349698f4056,21bbed2998c7a9b202d76d56c78cb512,223233d7a3658c1a7836573abacf9175,2f935bf8dd94b80e38c90109f4e620a3,2faaabdabafa263524b931c68674e9cd,391895fc365f2f2512a45ea503fbfa86,3cf51b17316c47851ab9a8bb2fddfbc3,4baf287e38f64339e2ce2ed9f18befe3,564b1122ed77a335ef83dd856be6b406,5f12ce576f28b7467649832a292ad632,7481573bcc2c3c6d105c0bf358bec2e6,815b3c1f78ab2336e7e5bdae07b49d2b,816401f1962be5373b03365c403e3a92,83cffab512363b08e89e0b35424b489c,8b55191578f60b2d2fac3ae2f4d05b2e,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,cc73438c54108f8ee25c9221d62bafca,ce32447561606063e2fc6439cb2f9989,d1675bdf7576ae8e63e95f4105fcb693,e6b2d6730ad42ef426b9678bb99c756c,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="HOT MODULE RELOADING">
      <data key="d4">8.0</data>
      <data key="d5">Next.js utilizes Hot Module Reloading to enhance the development experience by allowing real-time updates without full page reloads.</data>
      <data key="d6">5f12ce576f28b7467649832a292ad632</data>
    </edge>
    <edge source="NEXT.JS" target="PRODUCTION BUILD">
      <data key="d4">34.0</data>
      <data key="d5">Next.js allows developers to create a production build of their application for deployment, optimizing performance and file sizes.
Next.js allows developers to create a production build of their application for optimized performance and deployment.
The production build process is a key feature of Next.js, allowing developers to prepare their applications for deployment.
A Production Build in Next.js ensures that the application is free of TypeScript errors before deployment, maintaining code quality.</data>
      <data key="d6">4d99e596a43a5b336e12425953d3a120,5f12ce576f28b7467649832a292ad632,735b59f53ffba96602dace4169c285ed,b02497cb2bc6f667d39aa316235e09d5</data>
    </edge>
    <edge source="NEXT.JS" target="DEBUG">
      <data key="d4">26.0</data>
      <data key="d5">Next.js provides debugging options to help developers troubleshoot issues during the development and production phases.
Next.js provides options for enabling debugging to help developers troubleshoot issues
Debugging is an important part of the build process in Next.js to ensure the application runs smoothly
Next.js provides debugging options to help developers identify issues during the development process.</data>
      <data key="d6">5f12ce576f28b7467649832a292ad632,b02497cb2bc6f667d39aa316235e09d5,bf545f52d7ba0c458692304a2c0ca7e4,e6b2d6730ad42ef426b9678bb99c756c</data>
    </edge>
    <edge source="NEXT.JS" target="HTTPS">
      <data key="d4">52.0</data>
      <data key="d5">Next.js supports HTTPS to ensure secure communication for applications deployed on the web.
Next.js applications can be configured to use HTTPS for secure communication, especially during development and deployment
Next.js can be configured to use HTTPS during development for secure communication
Next.js can be configured to use HTTPS for secure development environments
Next.js supports HTTPS for secure development and deployment
Next.js can be configured to use HTTPS for secure development environments.
Next.js applications often utilize HTTPS for secure communication, ensuring data protection during transmission.
HTTPS can be configured in Next.js for secure local development, enhancing security for applications
Next.js applications can be configured to use HTTPS for secure communication
Next.js applications can be configured to use HTTPS for secure communication, which is essential for modern web applications.</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5,15e19e9603c0108a515ce63026694481,1a9f90261d97f4e9455bb0fa22f4ee9c,5f12ce576f28b7467649832a292ad632,6f23aef3387d9221b1a88bdfa6874ba3,ad18f1240db75ed731ff9f7ec075320e,b02497cb2bc6f667d39aa316235e09d5,e6b2d6730ad42ef426b9678bb99c756c,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION">
      <data key="d4">9.0</data>
      <data key="d5">The application is built using the Next.js framework, which provides various features for development and deployment.
Next.js is a framework used to build applications, indicating a direct relationship between the two.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,5f12ce576f28b7467649832a292ad632</data>
    </edge>
    <edge source="NEXT.JS" target="VERCEL">
      <data key="d4">400.0</data>
      <data key="d5">Next.js is often deployed on Vercel, which provides hosting and serverless functions for Next.js applications
Vercel provides automatic HTTPS configuration for Next.js applications when deployed
Vercel is the company that develops and supports Next.js, providing essential services for its deployment and hosting
Next.js is optimized for deployment on Vercel, which provides seamless hosting
Next.js is designed to work seamlessly with Vercel, which provides hosting and deployment services for Next.js applications
Vercel is the company that develops and maintains Next.js, providing support and hosting for its applications.
Next.js is designed to work seamlessly with Vercel for deployment and hosting
Vercel is the company that develops and maintains Next.js, providing hosting and deployment services for applications built with the framework.
Vercel is the company that develops and supports Next.js, providing hosting and deployment solutions for applications built with it.
Next.js is optimized for deployment on Vercel, which provides hosting services specifically designed for Next.js applications
Next.js is designed to work seamlessly with Vercel, which provides hosting and deployment services optimized for Next.js applications.
Next.js is a framework that is optimized for deployment on Vercel's platform, enhancing performance and user experience.
Next.js is a framework developed by Vercel for building React applications with enhanced performance features.
Next.js is developed and maintained by Vercel, which provides the platform for deploying Next.js applications
Next.js is developed and maintained by Vercel, which provides the infrastructure for hosting Next.js applications.
Next.js is developed and maintained by Vercel, which also provides hosting services for applications built with the framework
Vercel is the company that develops and maintains Next.js, providing support and hosting services.
Next.js is designed to work seamlessly with Vercel for deployment and hosting of applications
Next.js is hosted and optimized on the Vercel platform for better performance and deployment capabilities.
Next.js applications are often deployed on Vercel, which provides hosting and optimization for Next.js projects
Next.js can be deployed on Vercel, which provides optimized hosting solutions for Next.js applications
Vercel is the creator and maintainer of Next.js, providing managed infrastructure for its applications
Vercel provides hosting solutions specifically designed for Next.js applications, enhancing their deployment capabilities.
Vercel is the platform used for deploying applications built with Next.js, providing environment variable management.
Next.js is a framework that is designed to work seamlessly with Vercel, enhancing the deployment and observability of applications built with it.
Next.js is developed and optimized to work seamlessly with Vercel's hosting platform, enhancing performance and deployment capabilities.
Next.js is optimized for deployment on Vercel, which provides a seamless hosting experience for Next.js applications.
Vercel is the company that develops and maintains Next.js, providing support and hosting services
Vercel is the company that develops and supports Next.js, providing infrastructure for its deployment
Next.js is developed by Vercel, which provides hosting and deployment services specifically optimized for Next.js applications
Vercel is the company that develops and maintains Next.js, providing support and hosting services for applications built with the framework.
Vercel is the recommended deployment platform for applications built with Next.js, providing optimized hosting solutions.
Next.js is a framework that is optimized for deployment on Vercel, which enhances its performance and deployment capabilities.
Next.js is hosted and optimized for deployment on Vercel's platform, which enhances its performance and ease of use.
Vercel provides hosting and deployment services for applications built with Next.js
Vercel is the company that develops and supports Next.js
Vercel is the primary deployment platform for Next.js applications, providing hosting and serverless functions
Vercel provides hosting and deployment services specifically optimized for Next.js applications
Next.js applications are hosted and deployed on the Vercel platform, which provides the infrastructure for running these applications
Next.js is developed and maintained by Vercel, which provides managed infrastructure for deploying Next.js applications.
Next.js is a framework that is optimized for deployment on the Vercel platform
Next.js applications are often deployed on Vercel, which provides a seamless hosting solution for projects built with this framework.
Next.js is developed and maintained by Vercel, which provides hosting and deployment services for Next.js applications.
Vercel provides hosting and performance metrics services for applications built with Next.js
Vercel provides managed services for Next.js, enhancing its capabilities for performance metrics and analytics
Vercel is the company that develops and maintains Next.js, providing support and hosting services for applications built with it.
Next.js is developed and maintained by Vercel, which provides hosting and deployment services for Next.js applications.
Next.js applications are deployed on Vercel, which provides the infrastructure and services needed for hosting and managing these applications
Vercel is the company that develops and supports Next.js, providing infrastructure for its deployment
Next.js is developed and maintained by Vercel, which provides hosting and deployment services for Next.js applications.</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c,0dc4f8c1cc6105e325f2d84d2083a4c0,15e19e9603c0108a515ce63026694481,1a9f90261d97f4e9455bb0fa22f4ee9c,20652ea1750ad5513b326c308672d886,2faaabdabafa263524b931c68674e9cd,3486aab51f1c22b4f23003db40986564,3bade0d5baadc8c11b8cf85372738fdd,4248e6bed3ca383db55da9c5251a47ee,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4d99e596a43a5b336e12425953d3a120,53559278a11544ca19ad7864a7c3319c,57aa8258500bb7c522d2a394931d9248,5e1697c043b2eb0208b7ae196db74f56,64c02a535c1519ef24ded4a2a368f2be,6e870d62774508940749246fdee4d7b7,6f23aef3387d9221b1a88bdfa6874ba3,77371d3904d4e5b3fca92caaa7329a5c,7b388f79ffb6d5d09b2f36b2618f109d,7b6d1725bb07f6076bb8010d535ae342,7cf992845bf79c5ec4ae2614617a79f4,83cffab512363b08e89e0b35424b489c,84b5c29553feb2883a2e93ffbac5b791,86965ee0055fe16d855a4f0e993b9d85,8735729cb47a3e421748c05ffb31502f,981566c16bf11e1256e74208c2869349,9b92d19ee6176284aa500c2d4bcd28a4,9bc82a2671446cca168796fea771ecad,a39499341fdd66534be31b2131784b51,a3dae9be9408e57ff26350383026033f,aaea03d7a1385785fae028f24c52f8a5,ad18f1240db75ed731ff9f7ec075320e,af00e01481cac23e3b67c635215254ab,bb9110629910b21a122e4dbd23ba9236,cb4791e4249947cbab8022435c79aa13,d96f8e049ce9a691971e1a92b5b556af,ddf9997eb4ecd67204ea6df04b23cc07,e1b487c3c6375629c06ea480fd8dc53b,e5dd9b12a829becf46c92a1a02044920,e6b2d6730ad42ef426b9678bb99c756c,ebeae91fd404de4ca5981ecf5cc74074,ebecafe0b9c1dfc514b9df4c48e6eb30,f0f0cb94424540a288feb59004d219e4,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f4599158722218aadb2ccd78fa2745ad,f4fd4edd5d94e2931678672f66729691,fbb05e41116fc030ff4f57b77c6ebd29,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="NEXT.JS" target="NODE">
      <data key="d4">9.0</data>
      <data key="d5">Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and API routes</data>
      <data key="d6">f119ecc0390ca4c3c02719ebd18faf59</data>
    </edge>
    <edge source="NEXT.JS" target="YARN">
      <data key="d4">73.0</data>
      <data key="d5">Next.js projects can also use Yarn as an alternative package manager
Next.js can also be installed and managed using Yarn, another package manager.
Next.js can also be installed and managed using Yarn, another package manager
Next.js can also be installed and managed using Yarn, another package manager for JavaScript.
Next.js can also be installed and managed using Yarn, another package manager for JavaScript.
Yarn is another package manager that can be used to install and manage Next.js packages, indicating a direct relationship between the package manager and the framework.
Yarn can be used as an alternative to NPM for installing Next.js and managing its dependencies
Next.js applications can utilize Yarn to install and manage their dependencies
Next.js can also be installed and managed using Yarn, an alternative package manager
Next.js applications can use Yarn as an alternative package manager for managing dependencies.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,391895fc365f2f2512a45ea503fbfa86,45d1b0474e5a4ef2a69bdf70528aedb4,5afd0d2ef8220eea43b9a4e3736e7bee,60041d4c2667ea62ef90a73e1138bae6,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="PNPM">
      <data key="d4">68.0</data>
      <data key="d5">Next.js projects can utilize pnpm for efficient package management
Next.js can be installed and managed using pnpm, a package manager that optimizes disk space.
Next.js can be installed and managed using pnpm, a fast package manager
Next.js can be installed and managed using PNPM, a package manager that is efficient in disk space usage.
Next.js can be installed and managed using PNPM, which is a fast and efficient package manager.
PNPM can also be used to manage Next.js packages, indicating a direct relationship between the package manager and the framework.
PNPM can also be used to manage dependencies for Next.js projects, providing a more efficient package management solution
Next.js applications can utilize PNPM to install and manage their dependencies
Next.js can be installed and managed using PNPM, which is known for its efficiency
Next.js applications can utilize PNPM for efficient dependency management.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,391895fc365f2f2512a45ea503fbfa86,45d1b0474e5a4ef2a69bdf70528aedb4,5afd0d2ef8220eea43b9a4e3736e7bee,60041d4c2667ea62ef90a73e1138bae6,a8b53f4a9be046988ebd8eae20825df3,b02497cb2bc6f667d39aa316235e09d5,f119ecc0390ca4c3c02719ebd18faf59,f142ef31412a3248fc837262ecf35ddb,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT LINT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js uses the next lint command to run ESLint, ensuring code quality and adherence to coding standards
Next.js includes a command called next lint to run ESLint checks on the codebase.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3,f119ecc0390ca4c3c02719ebd18faf59</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT TELEMETRY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js includes a telemetry feature to collect usage data, which helps improve the framework based on user interactions</data>
      <data key="d6">f119ecc0390ca4c3c02719ebd18faf59</data>
    </edge>
    <edge source="NEXT.JS" target="PROXY">
      <data key="d4">5.0</data>
      <data key="d5">Next.js applications may be deployed behind proxies, requiring specific configurations for optimal performance
Proxy can be used in Next.js to define custom behavior for objects</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3,f119ecc0390ca4c3c02719ebd18faf59</data>
    </edge>
    <edge source="NEXT.JS" target="NODE.JS">
      <data key="d4">285.0</data>
      <data key="d5">Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities
Next.js is built on top of Node.js, utilizing its runtime for server-side operations
Next.js applications are built on top of Node.js, utilizing its server-side capabilities
Next.js is built on top of Node.js, allowing developers to run server-side code and APIs seamlessly.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and API routes.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering.
Next.js is built on top of Node.js, leveraging its capabilities for server-side rendering and API routes
Next.js requires Node.js to run server-side code and manage server-side rendering
Next.js is built on top of Node.js, utilizing its runtime for server-side operations
Next.js is built on top of Node.js, allowing server-side rendering of React applications
Next.js requires Node.js for certain features that involve server-side logic and dynamic content generation.
Next.js can be deployed on a Node.js server, which supports all its features
Next.js is built on top of Node.js, allowing it to run JavaScript on the server side and handle server-side rendering.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities
Next.js runs on Node.js, leveraging its capabilities for server-side rendering and application development
Next.js applications run on Node.js, which provides the runtime environment necessary for executing server-side code.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and API routes.
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and API routes
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities
Next.js is built on top of Node.js, leveraging its capabilities for server-side rendering
Next.js is built on top of Node.js, leveraging its capabilities for server-side rendering and API routes.
Next.js is built on top of Node.js, utilizing its runtime for server-side functionalities
Next.js requires Node.js to run, as it is built on top of the Node.js runtime
Next.js can be deployed on any hosting provider that supports Node.js, indicating a strong relationship between the two technologies.
Next.js is built on top of Node.js, leveraging its capabilities for server-side rendering and API routes
Next.js runs on Node.js, which is essential for executing server-side code in Next.js applications.
Next.js is built on top of Node.js, utilizing its runtime to execute server-side code
Next.js is built on top of Node.js, leveraging its capabilities for server-side rendering and API routes
Next.js applications are built on Node.js, which serves as the runtime environment for executing server-side code.
Next.js is built on top of Node.js, utilizing its runtime to execute server-side code and manage application logic
Next.js is built on top of Node.js, utilizing its runtime for server-side rendering and other functionalities.
Next.js is built on top of Node.js, allowing developers to run server-side code</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,016bf1f47e649cd8112b488d5c847dcc,0425ac334d3d5bd221bd8a5bcee35ed9,077fbb77da60b5f069a4cf5fd5e33e9b,0aae21b170363fb93fdbbb65d9c7576b,1a9f90261d97f4e9455bb0fa22f4ee9c,234c5cf6d90b5c8b7d3583a3300a4752,45d1b0474e5a4ef2a69bdf70528aedb4,46d1b39ace8164bdecd2be4eab0a1fc3,564b1122ed77a335ef83dd856be6b406,5791705a1f965d3a768f111e7fdcade1,6a27b514d5ea49bd1a6dd159d44aaf87,6f23aef3387d9221b1a88bdfa6874ba3,7b6d1725bb07f6076bb8010d535ae342,83cffab512363b08e89e0b35424b489c,8b55191578f60b2d2fac3ae2f4d05b2e,9c75ee4a07cd172f143b2b09451d333c,a0ed25040eb1637a5c82493764f822ac,a8b53f4a9be046988ebd8eae20825df3,aaea03d7a1385785fae028f24c52f8a5,ad18f1240db75ed731ff9f7ec075320e,adb5bec4b54e83924618cafc99d40e24,b02497cb2bc6f667d39aa316235e09d5,b48fe8c8f5e2835de49d9a46578cbf9d,ba53cb824bd4e5b80d861ee299c10f92,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,cc73438c54108f8ee25c9221d62bafca,ce32447561606063e2fc6439cb2f9989,ce540af7d610dfd65c29afa83f46b65e,d5671c2494c6418a266da35fff705101,e6b2d6730ad42ef426b9678bb99c756c,e871ceb5e34368061b569a8df8c57c33,ea73c6964570e6f8578712d657ef12d4,f142ef31412a3248fc837262ecf35ddb,f33afd1ad915755b5724c85e5bdb3c98,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="AWS ELB/ALB">
      <data key="d4">20.0</data>
      <data key="d5">Next.js applications can be deployed behind AWS ELB/ALB for load balancing and traffic distribution.
Next.js applications can be deployed behind AWS ELB/ALB for load balancing and traffic distribution
Next.js applications can be deployed behind AWS ELB/ALB for load balancing and scaling</data>
      <data key="d6">46d1b39ace8164bdecd2be4eab0a1fc3,6f23aef3387d9221b1a88bdfa6874ba3,e6b2d6730ad42ef426b9678bb99c756c</data>
    </edge>
    <edge source="NEXT.JS" target="KEEP-ALIVE TIMEOUT">
      <data key="d4">7.0</data>
      <data key="d5">Next.js requires configuration of keep-alive timeouts to ensure proper communication with downstream proxies.
Next.js allows configuration of keep-alive timeout settings for better performance in production environments</data>
      <data key="d6">1a9f90261d97f4e9455bb0fa22f4ee9c,46d1b39ace8164bdecd2be4eab0a1fc3</data>
    </edge>
    <edge source="NEXT.JS" target="PROXY ERROR">
      <data key="d4">5.0</data>
      <data key="d5">Next.js applications may encounter proxy errors if keep-alive timeouts are not properly configured.</data>
      <data key="d6">46d1b39ace8164bdecd2be4eab0a1fc3</data>
    </edge>
    <edge source="NEXT.JS" target="PRODUCTION MODE">
      <data key="d4">24.0</data>
      <data key="d5">Next.js can be started in production mode after being built, which is essential for deploying applications.
Next.js applications can be started in production mode after being built
Next.js can be run in production mode to optimize performance for deployed applications.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,46d1b39ace8164bdecd2be4eab0a1fc3,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="DEVELOPMENT MODE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be run in development mode to facilitate the development process with features like Hot Module Reloading.</data>
      <data key="d6">46d1b39ace8164bdecd2be4eab0a1fc3</data>
    </edge>
    <edge source="NEXT.JS" target="TURBOPACK">
      <data key="d4">74.0</data>
      <data key="d5">Next.js can utilize Turbopack for improved build performance during the development process.
Turbopack is a tool that can be used with Next.js to optimize the bundling process for JavaScript applications.
Next.js can utilize Turbopack for faster builds and improved performance, especially in development mode.
Turbopack is integrated into Next.js to enhance the development experience with faster bundling capabilities
Turbopack is being developed to enhance the performance of Next.js applications, making it a relevant technology for the framework.
Turbopack is an experimental feature of Next.js aimed at improving build performance
Turbopack is a tool that enhances the functionality of Next.js by providing advanced module resolution and dependency management features.
Next.js supports Turbopack to improve local development performance
Next.js can utilize Turbopack for faster development builds, enhancing the development experience.
Next.js can utilize Turbopack for faster builds and improved performance in JavaScript applications
Turbopack is an experimental feature integrated into Next.js for improved development performance
Turbopack is an experimental feature integrated into Next.js to enhance the build process and module resolution capabilities
Turbopack is an alternative bundler that can be used with Next.js to enhance development performance
Turbopack is a bundler that can be used with Next.js to improve build performance</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0,0e3c564b3dd53e829befef4d6241c23e,453d5bb282fe98f4e12856552a025f0f,46d1b39ace8164bdecd2be4eab0a1fc3,6160e6925dba648999d09c55006ab046,717947e9b123f15f49c748bb45aec68d,7de6e744f7ef4ab90e5a1db6bfad49c3,816401f1962be5373b03365c403e3a92,9726f4ae30b11539c429ff41c8326d46,981566c16bf11e1256e74208c2869349,99aea11e8e00a31189977a03ce528a10,b6b4173819c0a759fcd3146179f8f534,ce32447561606063e2fc6439cb2f9989,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="TERMINAL">
      <data key="d4">59.0</data>
      <data key="d5">Commands for Next.js are executed in the terminal, which is the interface for command-line operations.
The terminal is used to run commands related to Next.js development and codemods.
Terminal commands are used to perform various tasks related to Next.js, such as migrations and component transformations.
Next.js commands are executed in the terminal, which is essential for development and deployment
Commands related to Next.js are executed in the terminal, indicating a direct interaction.
Terminal commands are provided to upgrade Next.js to version 11
Terminal commands are used to execute operations related to Next.js, indicating a functional relationship between the command line interface and the framework.
Terminal is used to run commands related to Next.js applications
Terminal is used to execute commands related to the Next.js application
Commands related to Next.js can be executed in the terminal, such as running linting scripts.
Terminal is used to run commands related to Next.js development, such as starting the development server.
Developers use the terminal to execute commands related to Next.js applications</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,2e0b7ff508cb8313a540ecc1a356120e,453d5bb282fe98f4e12856552a025f0f,60041d4c2667ea62ef90a73e1138bae6,6450bdd7941ff60e85c4d4acc9a73b25,7481573bcc2c3c6d105c0bf358bec2e6,a09305795b4f611b12ba570f6fc845a9,a8b53f4a9be046988ebd8eae20825df3,b6c19fc60714c90b16c67bd7df9573f9,bab5eb78712e4c073d8280b72cd3de79,c1f63acba6f9a58b56bd71c409dcd343,f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.INFO">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides a command called next info to gather system information for debugging purposes.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.LINT">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes a command called next lint to run ESLint for code quality checks.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.TELEMETRY">
      <data key="d4">5.0</data>
      <data key="d5">Next.js has a telemetry feature that collects anonymous usage data to improve the framework.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="DEFAULT PORT">
      <data key="d4">9.0</data>
      <data key="d5">The default port of 3000 is used by Next.js applications unless specified otherwise.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="HTTPS FLAG">
      <data key="d4">7.0</data>
      <data key="d5">The HTTPS flag is a feature in Next.js that allows for secure local development.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="COMMAND-LINE OPTIONS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides various command-line options to customize application behavior and settings.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NEXT.JS" target="HMR">
      <data key="d4">15.0</data>
      <data key="d5">Next.js utilizes Hot Module Reloading to enhance the development experience by allowing real-time updates
Next.js supports Hot Module Reloading (HMR) to enhance the development experience by allowing live updates.</data>
      <data key="d6">ad18f1240db75ed731ff9f7ec075320e,e6b2d6730ad42ef426b9678bb99c756c</data>
    </edge>
    <edge source="NEXT.JS" target="PRODUCTION">
      <data key="d4">9.0</data>
      <data key="d5">Next.js applications are built and optimized for deployment in a production environment
Next.js applications are deployed in a production environment for end-users to access.</data>
      <data key="d6">a9a858ea7abac3fe79fa759ea8171597,e6b2d6730ad42ef426b9678bb99c756c</data>
    </edge>
    <edge source="NEXT.JS" target="REACT">
      <data key="d4">405.0</data>
      <data key="d5">Next.js is a framework for React, enhancing its capabilities for building web applications
Next.js is built on top of React, utilizing its features for server-side rendering and static site generation.
Next.js is built on top of React, leveraging its capabilities to enhance web application development.
Next.js is built on top of React, leveraging its capabilities for server-side rendering and static site generation.
Next.js is built on top of React, utilizing its component-based architecture for building user interfaces.
Next.js is a framework that extends React capabilities for server-side rendering and static site generation.
Next.js is built on top of React, leveraging its capabilities to enhance web application development.
Next.js is built on top of React, utilizing its component-based architecture for building applications
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, utilizing its components and architecture for web development
Next.js relies on React as its core library for building user interfaces
Next.js is built on top of React and utilizes it for building user interfaces in server-side rendered applications
Next.js is built on top of React, leveraging its capabilities to create server-side rendered applications.
Next.js is built on top of React, utilizing its components and features for web application development
Next.js is built on top of React, utilizing its components and features to create web applications
Next.js is a framework that extends React to provide additional features like server-side rendering
Next.js is a framework that extends React, providing additional features for server-side rendering and static site generation
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, leveraging its capabilities for building user interfaces
Next.js is built on top of React, leveraging its component-based architecture for building applications.
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications.
Next.js is a framework that extends React capabilities for server-side rendering and static site generation.
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, leveraging its capabilities to create server-rendered and statically generated applications
Next.js is built on React, leveraging its capabilities to create server-rendered applications
Next.js is built on React, leveraging its capabilities for building user interfaces
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, utilizing its features to enhance web application development.
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation.
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications and static websites
Next.js is built on top of React, leveraging its component-based architecture for building applications.
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications
Next.js is built on top of React, utilizing its component-based architecture for building web applications
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, utilizing its APIs for rendering and state management in web applications
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications
Next.js is a framework that extends React, providing additional features for server-side rendering and routing
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, utilizing its APIs for rendering components on the server and client.
Next.js is built on top of React, leveraging its capabilities to create hybrid web applications.
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications
Next.js is built on top of React, enhancing its capabilities for server-side rendering and static site generation
Next.js is built on top of React, leveraging its capabilities for building user interfaces
Next.js is built on top of React, leveraging its component-based architecture for building applications
Next.js is built on top of React, utilizing its components for building user interfaces
Next.js is built on top of React, leveraging its capabilities for building user interfaces.
Next.js is built on top of React, leveraging its capabilities to create server-rendered applications</data>
      <data key="d6">016bf1f47e649cd8112b488d5c847dcc,0425ac334d3d5bd221bd8a5bcee35ed9,07e97df1a8257492f53460b3979b0e3c,0a535ba637862aaba58115b1f3e1a96b,0bfaadafcf31828f19e4b2657565944a,170893bac86ced48a278abde4d144710,20652ea1750ad5513b326c308672d886,234c5cf6d90b5c8b7d3583a3300a4752,2f2dde2368e46aa812e2a39e32b3505d,33239b71158a6566c2b82b6a30b68e82,391895fc365f2f2512a45ea503fbfa86,453d5bb282fe98f4e12856552a025f0f,478ca906eeeb1b1356949c55e289c4d3,4e07cca41acd33806d13242f5e21f621,514671e4a7b4b0d7573852d3d380eefd,52f67911efe49d48e703ba654f23728e,60041d4c2667ea62ef90a73e1138bae6,66c478df0b5dc48b45a6c5e00867576d,66fea93bb642287d13f3a25b8b3e0083,69ac19d7db15ae11c7884ce391807330,6bb5264a8b72d26916099f27337032fe,729c604ddd30e8eb3491209028c25dde,7de6e744f7ef4ab90e5a1db6bfad49c3,876a936d41a4189fd50277eeb02bfdf7,98b8f4a199a3050f92608604cd0974b2,a09305795b4f611b12ba570f6fc845a9,a0ed25040eb1637a5c82493764f822ac,a525cbfc03ba1b986f30ce2280067dda,a9a858ea7abac3fe79fa759ea8171597,ab49838f472483f11a1afbcaff84ad1e,b61989d8657d5b33a55c584f46e7d436,bab5eb78712e4c073d8280b72cd3de79,bc34912ac16bc1504d04e9019f0c8cb9,bd1557f5f20d5d232df2cbf55be7cb8d,bf545f52d7ba0c458692304a2c0ca7e4,c55d8ff0ea71716df1fdfba115d52035,c6c993134aa9ac5f833c8bf4d26c0dbd,ca20f99a0d6214b86e1868fcc2725709,cc73438c54108f8ee25c9221d62bafca,ccacadee21d69e15eb428a9a9d8de65f,ce540af7d610dfd65c29afa83f46b65e,d405678be18c78d7d78d7a6521a58a56,d8317c2b832a421e629375219f74e12f,daf474d256367130307c452111474f61,dcf475d04bc2e922a55271ba1bff9465,deac651e6b6d2334bf79cf4c59d8ba7c,f33afd1ad915755b5724c85e5bdb3c98,fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="NEXT.JS" target="TYPESCRIPT">
      <data key="d4">188.0</data>
      <data key="d5">Next.js supports TypeScript for building applications with static typing
Next.js supports TypeScript for building applications with static typing.
Next.js applications can be developed using TypeScript for better type safety and error checking
Next.js supports TypeScript, allowing developers to write applications with type safety
Next.js supports TypeScript, allowing developers to write type-safe code in their applications.
Next.js provides built-in TypeScript support, making it easier to integrate TypeScript into React applications
Next.js supports TypeScript for building applications with type safety
TypeScript integration in Next.js impacts the build process and error handling
Next.js supports TypeScript for building applications, allowing developers to use static typing in their projects.
Next.js applications can be built using TypeScript for type safety and better development experience
Next.js supports TypeScript, allowing developers to write type-safe code
Next.js supports TypeScript, allowing developers to write applications with static typing
Next.js can be configured to work with TypeScript for type safety in applications
Next.js supports TypeScript, allowing developers to use static typing in their applications
Next.js supports TypeScript, allowing developers to write type-safe applications
Next.js applications can be developed using TypeScript for better type safety and development experience
Next.js supports TypeScript, allowing developers to write type-safe code in their applications.
Next.js provides built-in TypeScript support, allowing developers to easily integrate TypeScript into their applications.
Next.js utilizes TypeScript for enhanced type safety in its applications, allowing developers to catch errors at compile time.
Next.js supports TypeScript, allowing developers to write applications with type safety and improved tooling
Next.js supports TypeScript, allowing developers to write type-safe code in their applications
Next.js applications can be developed using TypeScript for better type safety and development experience
Next.js is built using TypeScript, which enhances the development experience with type safety and better tooling
Next.js supports TypeScript, allowing developers to write type-safe code
Next.js is built using TypeScript, which enhances the development experience by providing type safety and better tooling.
Next.js supports TypeScript, allowing developers to write type-safe code in their applications
Next.js supports TypeScript out of the box, allowing developers to write type-safe code in their applications.
TypeScript is supported by Next.js for improved type checking and development efficiency
Next.js supports TypeScript, enabling developers to write type-safe applications
Next.js applications can be developed using TypeScript, enhancing the development process with type safety.</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9,0e3c564b3dd53e829befef4d6241c23e,20652ea1750ad5513b326c308672d886,21bbed2998c7a9b202d76d56c78cb512,2e44942744c40cf6e169212e822438d5,2f2dde2368e46aa812e2a39e32b3505d,391895fc365f2f2512a45ea503fbfa86,3b86536c72cd33dea29dc82250012d80,4dfb13dff74e4dc45c19d4d71fe1a443,4e07cca41acd33806d13242f5e21f621,514671e4a7b4b0d7573852d3d380eefd,64c02a535c1519ef24ded4a2a368f2be,72e1433a8550144aaf1d1fd8f3cb3774,735b59f53ffba96602dace4169c285ed,816401f1962be5373b03365c403e3a92,82c6ef4d52bb277665ade9f274822be3,89def9941cbf0a381e1e4a28a703e201,8b55191578f60b2d2fac3ae2f4d05b2e,936f58e9a3d0c41d6fd88ca7b6e0a119,95c2ea5a0f820f012ba0ea521843d34d,a50f51132c97b3887f2b21ed846fa020,ab49838f472483f11a1afbcaff84ad1e,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,c1845aec41d031b5a72f6f472ab4a5f2,c5461cfa4259c43255132d8f916b1764,d5671c2494c6418a266da35fff705101,db7dfb25749de8f86ac15552fec549ec,dea59f788f9645dcf527f4f5f4f12ae7,fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD COMMAND">
      <data key="d4">16.0</data>
      <data key="d5">The build command is a key operation in Next.js for preparing the application for deployment
The build command is used to compile Next.js applications for production deployment.</data>
      <data key="d6">bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="LINTING">
      <data key="d4">6.0</data>
      <data key="d5">Linting is a crucial step in maintaining code quality in Next.js applications</data>
      <data key="d6">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="TELEMETRY">
      <data key="d4">10.0</data>
      <data key="d5">Next.js has an optional telemetry feature to collect anonymous usage data
Telemetry is a feature of Next.js that collects anonymous usage data to enhance the framework
Next.js collects telemetry data to improve its features and performance</data>
      <data key="d6">6f23aef3387d9221b1a88bdfa6874ba3,bf545f52d7ba0c458692304a2c0ca7e4,f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIONS">
      <data key="d4">19.0</data>
      <data key="d5">Next.js commands come with various options that modify their behavior
The options provided in the command line are specific to the Next.js framework and dictate how it operates.
Options provide configuration settings that influence the behavior of Next.js applications</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,4ce3b8264c29bdceda24edfe6f9bda41,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="SYSTEM INFORMATION">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can print system information to help diagnose issues</data>
      <data key="d6">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="PORT">
      <data key="d4">19.0</data>
      <data key="d5">Next.js applications run on a specified port, defaulting to 3000
Next.js allows configuration of the port for running applications during development
The PORT variable is crucial for determining the operational port of Next.js applications during development
Next.js applications can utilize the PORT environment variable to set the running port</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5,6f23aef3387d9221b1a88bdfa6874ba3,ab49838f472483f11a1afbcaff84ad1e,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="HOSTNAME">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can be configured to run on a specific hostname</data>
      <data key="d6">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="KEEPALIVETIMEOUT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications can set a keep-alive timeout for managing connections</data>
      <data key="d6">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="NEXT.JS" target="INSTRUMENTATION.JS">
      <data key="d4">15.0</data>
      <data key="d5">Instrumentation.js is a feature of Next.js that allows for the integration of observability tools
Next.js allows the use of instrumentation.js to enhance observability and performance tracking in applications.</data>
      <data key="d6">6f23aef3387d9221b1a88bdfa6874ba3,a5566406ae5db585eb3829f4a25e7025</data>
    </edge>
    <edge source="NEXT.JS" target="API REFERENCE">
      <data key="d4">24.0</data>
      <data key="d5">The API Reference provides detailed documentation on the functionalities and features of Next.js
The API Reference is a documentation resource for developers using Next.js
The API Reference provides documentation for the components and features of Next.js
API Reference serves as a guide for developers to understand and utilize the features of Next.js</data>
      <data key="d6">6b625fce8c9b4b0f729aa3cdc85d284d,6f23aef3387d9221b1a88bdfa6874ba3,80a786416360b0f3873c10b0b635c67b,a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="LOCALHOST">
      <data key="d4">14.0</data>
      <data key="d5">Next.js applications can be run on localhost during development for testing purposes
Next.js applications are typically run on localhost during development for testing purposes.
Next.js applications can be run on localhost for development and testing</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4,6f23aef3387d9221b1a88bdfa6874ba3,d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="NEXT.JS" target="CODMODS">
      <data key="d4">15.0</data>
      <data key="d5">Next.js provides codemods to help developers upgrade their codebases when APIs are updated or deprecated.
Next.js provides Codemods to assist developers in upgrading their applications when features are deprecated
Next.js provides Codemod transformations to help upgrade the codebase when an API is updated or deprecated</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f,7a1bd3f71b0a9aadbba7495339a8b723,efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR">
      <data key="d4">24.0</data>
      <data key="d5">The error is related to the Next.js framework, indicating issues with dynamic module loading.
Error handling is an important aspect of Next.js applications
Error handling is a built-in feature of Next.js that allows developers to manage unexpected runtime errors</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f,a046fdf9fbebaa56c0d37da25e453974,b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="REACT.SERVER.COMPONENTS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js utilizes React Server Components to enhance server-side rendering capabilities.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER-RENDERING">
      <data key="d4">9.0</data>
      <data key="d5">Next.js employs server-rendering to improve performance and SEO for web applications.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC">
      <data key="d4">15.0</data>
      <data key="d5">Next.js supports dynamic loading of components to enhance application performance.
Next.js supports dynamic rendering, allowing pages to be generated based on real-time data</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752,453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC-RESUME">
      <data key="d4">6.0</data>
      <data key="d5">Dynamic-resume is a feature in Next.js that allows for the continuation of loading components dynamically.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION HISTORY">
      <data key="d4">46.0</data>
      <data key="d5">Version History documents the changes and updates made to the Next.js framework over time.
Version history documents the changes made to Next.js, including updates and new features
Version history provides updates and changes made to the Next.js framework over time
Version History provides updates and changes related to the Next.js framework
The Version History documents the changes made to the Next.js framework, providing insights into its development and updates.
Next.js maintains a version history to document changes and updates to the framework
Version History documents the changes and updates made to the Next.js framework, providing context for developers
Next.js has a version history that documents changes and updates to the framework
Version History tracks the changes and updates made to the Next.js framework
Next.js maintains a version history to track changes and updates in its framework
Version History tracks changes in Next.js, specifically noting updates in version 13.0.0
Next.js maintains a version history to document changes and updates to the framework
Version History tracks the changes made to the Next.js framework
Version History provides insights into the evolution and updates of Next.js</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b,1487c7dd4403a73c173d49bf2f73e2d8,2238ba4c005a726e011e67cd17d3a576,2e4837fd908fed547d3170725336a52e,3c09a802c38a10e785a119f2ba114c73,453d5bb282fe98f4e12856552a025f0f,4ce3b8264c29bdceda24edfe6f9bda41,4da3554b7826cf4b6dd608127da53568,52bf7bb5a492d2cb5b2f5f06d6507a81,6b625fce8c9b4b0f729aa3cdc85d284d,77bf22c1fcd1e61ff866f696397b3a69,7e9fce61758916e4d2b7de2f2f4d1704,84837300711040f4e7b736cdd8fce7d2,d5c8e583b99d40e21e52e5d76498cb0d</data>
    </edge>
    <edge source="NEXT.JS" target="IMPORT">
      <data key="d4">15.0</data>
      <data key="d5">Import statements are used in Next.js to include components and modules in the application.
Next.js allows the import of various modules and styles in its application structure</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f,efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="NEXT.JS" target="PROJECT">
      <data key="d4">1.0</data>
      <data key="d5">A project is typically built using the Next.js framework for developing web applications.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE COMPONENT">
      <data key="d4">101.0</data>
      <data key="d5">The Image Component is a feature of Next.js that optimizes image loading for better performance.
Next.js includes an Image Component for optimizing images in web applications
The Image Component is a feature provided by Next.js for handling images in web applications
Next.js provides the Image component for optimized image handling in web applications
The Image component is a feature of the Next.js framework designed to enhance image handling in web applications.
The Image component is a feature of Next.js that enhances image handling and optimization
The Image component is a feature of Next.js that provides automatic image optimization capabilities
The Image Component is a built-in feature of Next.js that optimizes images for better performance in web applications.
Next.js provides the Image Component for optimized image handling in web applications
The Image component is a feature of Next.js that optimizes images for better performance
The Image Component is a feature of Next.js that enhances image handling and performance
The Image component is a feature of Next.js that allows for automatic image optimization
The Image Component is a feature of Next.js that enhances image loading performance in web applications</data>
      <data key="d6">0b10d085541dc5564e998254b8588822,18f541d57ea407041cdaa1be5bf593d9,24e08d5dea64dab91a3ce772d91b0e8f,4c49dc5beda0203ac9ac135243ec127e,5ef33e2acd1009a637bf4b8ab41d49a1,66669d057195f54843266efcffb93a3b,7bf88bf4f2097fabdb3b57f7074def08,80a786416360b0f3873c10b0b635c67b,9da317a323ff76913285228d8243413e,a09305795b4f611b12ba570f6fc845a9,ab869c819df53e1e9e3adebf6a4234a2,ca4cf87ea29b0d3f9a148fa9aeabce4b,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="LINK COMPONENT">
      <data key="d4">25.0</data>
      <data key="d5">The Link Component is a part of Next.js that facilitates client-side navigation within applications.
The Link component is a feature of the Next.js framework, designed to facilitate navigation within Next.js applications.
The Link Component is a feature of Next.js that simplifies navigation within applications</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9,a0a19960cdaef7a85c598591f06454da,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="CREATE REACT APP">
      <data key="d4">31.0</data>
      <data key="d5">Next.js can be used to migrate projects created with Create React App to enhance their capabilities.
Next.js is a framework that provides advantages over Create React App, such as server-side rendering and improved loading times
Next.js is a framework that can be used to upgrade applications built with Create React App for better performance and features
Next.js is a framework that can be used to migrate applications built with Create React App for better performance and features
Next.js is a framework that can be used to migrate applications built with Create React App to enhance performance and SEO</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,7a1bd3f71b0a9aadbba7495339a8b723,a09305795b4f611b12ba570f6fc845a9,a67099d1f0ea66a70c07e9595443231a,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT/LEGACY/IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">next/legacy/image is a component provided by Next.js for optimized image rendering.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT/FUTURE/IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">next/future/image was a component in Next.js that has been replaced by next/image.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="MIGRATE TO THE NEW IMAGE COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The migration process is specific to Next.js for updating image components to the latest standards.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="REMOVE &lt;A&gt; TAGS FROM LINK COMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">This transformation is part of Next.js's efforts to streamline Link components.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="ADD REACT IMPORTS">
      <data key="d4">8.0</data>
      <data key="d5">This process is necessary for Next.js applications to function correctly with the new JSX transform.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="TRANSFORM ANONYMOUS COMPONENTS INTO NAMED COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">This transformation is aimed at improving compatibility with Next.js's Fast Refresh feature.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="TRANSFORM AMP HOC INTO PAGE CONFIG">
      <data key="d4">7.0</data>
      <data key="d5">This transformation is part of Next.js's updates to simplify AMP page configurations.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="USE WITHROUTER">
      <data key="d4">1.0</data>
      <data key="d5">This transformation is necessary for adapting to Next.js's updated routing practices.</data>
      <data key="d6">a09305795b4f611b12ba570f6fc845a9</data>
    </edge>
    <edge source="NEXT.JS" target="CI">
      <data key="d4">7.0</data>
      <data key="d5">Next.js builds are often triggered in a CI environment to ensure code quality and integration</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="NEXT.JS" target="WEBPACK 5">
      <data key="d4">33.0</data>
      <data key="d5">Next.js has adopted Webpack 5 as the default for compilation, enhancing build performance and features
Next.js uses Webpack 5 as its default module bundler for improved performance
Next.js applications now use Webpack 5 as the default module bundler
Next.js uses Webpack 5 for module bundling and asset management in its applications</data>
      <data key="d6">016bf1f47e649cd8112b488d5c847dcc,0d8e33ad02583991ccfe5560b2787274,ab49838f472483f11a1afbcaff84ad1e,bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="NO CACHE DETECTED">
      <data key="d4">6.0</data>
      <data key="d5">The No Cache Detected error is specific to Next.js builds in CI environments</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="NEXT.JS" target="APP CONTAINER DEPRECATED">
      <data key="d4">7.0</data>
      <data key="d5">The App Container Deprecated error is related to the usage of Next.js and its custom App component</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="NEXT.JS" target="WEBPACK 5 ADOPTION">
      <data key="d4">8.0</data>
      <data key="d5">Next.js has adopted Webpack 5, which is a significant change in its build process</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM APP">
      <data key="d4">13.0</data>
      <data key="d5">The Custom App feature is a part of Next.js that allows for customization of the application
Custom App is a user-defined application built using the Next.js framework</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e,0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT CONFIG">
      <data key="d4">8.0</data>
      <data key="d5">Next Config is used in Next.js to manage application settings and configurations
next.config.js is essential for configuring various aspects of a Next.js application, including linting settings.</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274,7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="WEBPACK">
      <data key="d4">29.0</data>
      <data key="d5">Next.js often utilizes Webpack as its underlying bundler to manage and optimize assets and modules in applications.
Next.js uses Webpack as its underlying bundler for managing JavaScript and other assets
Next.js uses Webpack as its underlying bundler to manage and compile JavaScript modules and assets
Next.js uses Webpack for bundling JavaScript files, similar to Create React App</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,7849b1ca8bbfc8c3240def9d244f008d,99aea11e8e00a31189977a03ce528a10,ce32447561606063e2fc6439cb2f9989</data>
    </edge>
    <edge source="NEXT.JS" target="GITHUB">
      <data key="d4">76.0</data>
      <data key="d5">Next.js projects are often hosted and managed on GitHub, facilitating collaboration and version control among developers.
Next.js is often used in conjunction with GitHub for version control and collaboration on projects
Next.js projects are often hosted on GitHub for version control and collaboration.
Next.js documentation can be edited and contributed to via GitHub, facilitating collaboration among developers.
Developers can contribute to the Next.js codebase and report issues on GitHub, which is essential for the framework's development.
Next.js code is hosted on GitHub, allowing for version control and collaboration among developers.
Next.js is hosted on GitHub, where its repository is maintained and developed
Next.js projects are often hosted on GitHub for version control and collaboration among developers.
Next.js is hosted and maintained on GitHub, where its source code is available for collaboration
Next.js projects can be hosted and managed on GitHub for version control and collaboration
Next.js projects can be managed and version-controlled using GitHub, facilitating collaboration among developers.
Next.js applications can be hosted and managed on GitHub, facilitating collaboration and version control
Next.js applications can be deployed and version-controlled using GitHub</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,243626df7b8124420b4844165c42f9b9,66fea93bb642287d13f3a25b8b3e0083,7b388f79ffb6d5d09b2f36b2618f109d,7cf992845bf79c5ec4ae2614617a79f4,816401f1962be5373b03365c403e3a92,8735729cb47a3e421748c05ffb31502f,981566c16bf11e1256e74208c2869349,a9a858ea7abac3fe79fa759ea8171597,ce32447561606063e2fc6439cb2f9989,e1b487c3c6375629c06ea480fd8dc53b,f142ef31412a3248fc837262ecf35ddb,fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="NEXT.JS" target="DARWIN KERNEL">
      <data key="d4">6.0</data>
      <data key="d5">Next.js runs on the Darwin Kernel as part of the macOS operating system</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="OPERATING SYSTEM">
      <data key="d4">6.0</data>
      <data key="d5">Next.js is compatible with various operating systems, including macOS, which is based on Darwin</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="COMMAND-LINE INTERFACE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be managed and configured through a command-line interface</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="PACKAGE VERSIONS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js relies on specific package versions for its functionality and compatibility</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIGURATION FILE">
      <data key="d4">18.0</data>
      <data key="d5">Next.js uses configuration files to customize its settings and behavior
Next.js requires a configuration file to set various options for the framework
The next.config.mjs file is essential for configuring a Next.js application, defining build options and output settings</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d,a67099d1f0ea66a70c07e9595443231a,f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="SELF-SIGNED CERTIFICATE">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can utilize self-signed certificates for secure local development</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="LOAD-BALANCER">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications can be deployed behind load-balancers for improved performance and reliability</data>
      <data key="d6">f142ef31412a3248fc837262ecf35ddb</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD MODE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js requires a build mode to compile the application before it can be started.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc</data>
    </edge>
    <edge source="NEXT.JS" target="COMMAND LINE INTERFACE">
      <data key="d4">1.0</data>
      <data key="d5">Next.js commands are executed through the command line interface, establishing a direct interaction.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD OPTIONS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js offers various build options that developers can configure to customize the build process of their applications.</data>
      <data key="d6">b02497cb2bc6f667d39aa316235e09d5</data>
    </edge>
    <edge source="NEXT.JS" target="START COMMAND">
      <data key="d4">16.0</data>
      <data key="d5">The start command is used to run Next.js applications in production mode after building them.
The start command is used to run a Next.js application in production mode after building it.</data>
      <data key="d6">b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </edge>
    <edge source="NEXT.JS" target="INFO COMMAND">
      <data key="d4">6.0</data>
      <data key="d5">The info command can be used in Next.js to gather system information relevant for debugging and issue reporting.
The info command provides details about the Next.js application and its environment.</data>
      <data key="d6">b02497cb2bc6f667d39aa316235e09d5,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </edge>
    <edge source="NEXT.JS" target="POLYFILL.IO">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can utilize Polyfill.io to manage polyfills for browsers that require them, but it warns against using duplicate polyfills.</data>
      <data key="d6">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </edge>
    <edge source="NEXT.JS" target="REACT DEV TOOLS">
      <data key="d4">6.0</data>
      <data key="d5">React Dev Tools can be used to inspect and debug applications built with Next.js</data>
      <data key="d6">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES/_APP.JS">
      <data key="d4">23.0</data>
      <data key="d5">The pages/_app.js file is a part of the Next.js framework and is essential for initializing pages
The pages/_app.js file is a key part of Next.js applications, allowing developers to customize the behavior of their app.
The _app.js file is a key part of Next.js for managing global application settings</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9,7e52aca588d432140f210661ae169677,c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="NEXT.JS" target="SCRIPT COMPONENT">
      <data key="d4">35.0</data>
      <data key="d5">The Script component is a feature provided by Next.js for loading scripts efficiently
The Script component is a feature of Next.js that requires specific implementation guidelines in the documentation.
The Script component is a feature of Next.js that allows for optimized loading of JavaScript
Next.js provides the Script Component to optimize script loading in applications
The Script Component is a feature of Next.js that optimizes the loading of third-party scripts</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9,77bf22c1fcd1e61ff866f696397b3a69,7e52aca588d432140f210661ae169677,c05ef5dba44db89bf8b7415f5e2ad7fc,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="URL">
      <data key="d4">11.0</data>
      <data key="d5">The URL property was a feature in earlier versions of Next.js that is now deprecated
Next.js utilizes URLs for routing and linking within applications
The URL leads to the official documentation for Next.js, which includes information about rewrites
Next.js utilizes URLs to reference images and resources for optimization
URLs are fundamental in Next.js for routing and linking resources</data>
      <data key="d6">16332d9a8715d2cac034c2aa3c4f12f6,b1787ce5e713d63d1f4f1203762380a3,c05ef5dba44db89bf8b7415f5e2ad7fc,d0b7431b1eedf2a5660218e7e399d8ab,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </edge>
    <edge source="NEXT.JS" target="BROWSERS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports various browsers and features, ensuring compatibility for web applications</data>
      <data key="d6">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="NEXT.JS" target="HTML CONTENT">
      <data key="d4">22.0</data>
      <data key="d5">HTML content is generated and managed by Next.js for rendering web pages
Next.js applications render HTML content dynamically, allowing for server-side rendering and static site generation
Next.js applications utilize HTML content to structure and present information on web pages.
HTML Content is generated and managed within the Next.js framework for rendering web pages</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41,c05ef5dba44db89bf8b7415f5e2ad7fc,ce540af7d610dfd65c29afa83f46b65e,d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="CODES">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides codemods to transform code for better compatibility and performance</data>
      <data key="d6">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE">
      <data key="d4">34.0</data>
      <data key="d5">The Image component is a feature of Next.js that enhances image loading performance
The Image component in Next.js is designed to optimize image loading and requires the basePath to be correctly set for serving images.
Next.js provides an &lt;Image /&gt; component that handles image loading and optimization in web applications
The &lt;Image&gt; component is a feature of Next.js that enhances image handling and performance in web applications.
The Image component is a feature of Next.js that enhances image handling and optimization
Next.js includes the Image component to optimize images, improving loading times and performance for web applications.
The Image component is a part of Next.js that optimizes images for better performance in web applications.</data>
      <data key="d6">2238ba4c005a726e011e67cd17d3a576,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4e07cca41acd33806d13242f5e21f621,7b971bc32d696dda8aea178d02a73fea,ccacadee21d69e15eb428a9a9d8de65f,ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="NEXT.JS" target="LINK">
      <data key="d4">77.0</data>
      <data key="d5">The Link component is part of Next.js, facilitating internal navigation
The Link component is a fundamental part of Next.js that facilitates navigation between pages while adhering to the basePath configuration.
Link is a component provided by Next.js for navigation within applications built using the Next.js framework
Link is a component used within Next.js for navigation between pages.
Link is a component that is part of the Next.js framework, facilitating navigation between pages
Next.js provides the Link component for client-side navigation, making it easier to link between pages in a Next.js application.
Link is a component provided by Next.js for navigation between pages
Next.js includes the Link component for client-side navigation
Next.js provides a Link Component that improves page transitions by prefetching pages in the background.
Link is a component provided by Next.js for navigation between routes</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c,4443464e7a2cb4bcbbf667881fecb236,45fc1e950172cd0fb4a7f0162afae421,4647f3f9cf6eaae5dadd71a1dc2e58ae,77bf22c1fcd1e61ff866f696397b3a69,7ebeb57bb18774254a901eafc1cb096f,d4880ef934642aac0f85ca34038b847d,dc10462a75be57d14f05bf6a26ba9731,ecc794f2647ea18dc504fd09133f90c8,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="HEAD">
      <data key="d4">44.0</data>
      <data key="d5">The Head component is used within Next.js applications to manage the document head
The Head component is a feature of Next.js that allows developers to manage the document head effectively.
The &lt;Head&gt; component is a part of the Next.js framework, used for managing the document head in applications built with Next.js.
Next.js uses the Head component to manage the document head for SEO and other purposes
Next.js uses the Head component to manage the document head for web applications.
The Head component in Next.js is used to manage the document head for web pages
The &lt;head&gt; element is utilized in Next.js applications to include meta-information and links to stylesheets</data>
      <data key="d6">173e80ccbe8ecd833c055f4cd3e75ee6,2238ba4c005a726e011e67cd17d3a576,514671e4a7b4b0d7573852d3d380eefd,84837300711040f4e7b736cdd8fce7d2,ab49838f472483f11a1afbcaff84ad1e,b64f76a17fdc1ede6338de69e7d7bce4,ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides features for optimization, including image and font optimization</data>
      <data key="d6">ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES/_DOCUMENT.JS">
      <data key="d4">14.0</data>
      <data key="d5">The pages/_document.js file is a part of the Next.js framework that allows customization of the Document component.
The pages/_document.js file is essential for defining the overall structure of a Next.js application, including head elements.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9,b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="CSS MODULES">
      <data key="d4">45.0</data>
      <data key="d5">CSS Modules are supported by Next.js for scoped styling of components.
Next.js supports CSS Modules, allowing developers to use modular CSS in their applications
Next.js supports the use of CSS Modules for component-level styling, enhancing the modularity of styles in applications
Next.js has built-in support for CSS Modules, allowing for component-level CSS scoping.
Next.js supports CSS Modules for styling, promoting maintainability and avoiding conflicts.
Next.js supports CSS Modules for styling components in a modular way
Next.js has built-in support for CSS Modules, allowing for scoped styles
Next.js supports CSS Modules for locally scoped CSS classes</data>
      <data key="d6">0b10d085541dc5564e998254b8588822,3a82472230692a8c3ac8444f7738b625,455e168c432979d018ea3d145e2547b5,a19a92a20fca1ccc164ea11570a4b26a,a9a858ea7abac3fe79fa759ea8171597,b64f76a17fdc1ede6338de69e7d7bce4,d8317c2b832a421e629375219f74e12f,dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="NEXT.JS" target="STYLES.CSS">
      <data key="d4">5.0</data>
      <data key="d5">The styles.css file is utilized in Next.js for global styles and can include other stylesheets.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="SCRIPTS">
      <data key="d4">8.0</data>
      <data key="d5">The next/script component is a feature of Next.js that helps manage script loading strategies.
Next.js allows developers to manage third-party script loading through the Script Component, optimizing performance.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="NO HEAD IMPORT IN DOCUMENT">
      <data key="d4">8.0</data>
      <data key="d5">The error message "No Head Import in Document" is related to the Next.js framework, indicating a misuse of the next/head component.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="NO HEAD ELEMENT">
      <data key="d4">8.0</data>
      <data key="d5">The error message "No Head Element" is related to Next.js, warning against the use of a &lt;head&gt; element in applications.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="NO DUPLICATE HEAD">
      <data key="d4">8.0</data>
      <data key="d5">The error message "No Duplicate Head" pertains to Next.js, advising against multiple &lt;Head&gt; components in a custom document.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="NO DOCUMENT IMPORT IN PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The error message "No Document Import in Page" is associated with Next.js, indicating incorrect import practices.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="NO CSS TAGS">
      <data key="d4">8.0</data>
      <data key="d5">The error message "No CSS Tags" is related to Next.js, warning against manual stylesheet tags for better CSS loading.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="NO BEFORE INTERACTIVE SCRIPT OUTSIDE DOCUMENT">
      <data key="d4">1.0</data>
      <data key="d5">The error message "No Before Interactive Script Outside Document" is related to Next.js, indicating incorrect usage of the next/script component.</data>
      <data key="d6">b64f76a17fdc1ede6338de69e7d7bce4</data>
    </edge>
    <edge source="NEXT.JS" target="APP ROUTER">
      <data key="d4">79.0</data>
      <data key="d5">Next.js includes the App Router as a feature for managing application routing
The App Router is a feature of Next.js that enhances routing capabilities.
The App Router is a feature of Next.js that facilitates routing in applications
The App Router is a feature of Next.js that facilitates migration and adoption of new routing conventions
The App Router is a feature of Next.js, indicating a direct relationship as part of its functionality
Next.js utilizes App Router for managing routes and pages in applications
The App Router is a feature of Next.js that enhances routing capabilities and UI management
The App Router is a feature of Next.js that enhances routing capabilities in applications built with the framework.
The App Router is a newer routing system in Next.js that enhances routing capabilities
The App Router is a routing system within Next.js that allows for the use of advanced React features</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b,11e614f4c015c7f8295c0c49ac211a89,20660998cc2c85257c6b7502427f85d3,45fc1e950172cd0fb4a7f0162afae421,514671e4a7b4b0d7573852d3d380eefd,6ebc8c74b9b797357659151a46693a88,8b55191578f60b2d2fac3ae2f4d05b2e,95c2ea5a0f820f012ba0ea521843d34d,c157c439271dbeeebb69b81254b288af,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES ROUTER">
      <data key="d4">37.0</data>
      <data key="d5">Next.js includes the Pages Router as a feature for managing page routing
The Pages Router is a feature of Next.js that allows for intuitive routing based on the file system
Next.js utilizes the Pages Router for routing, allowing developers to create dynamic routes based on the file structure
The Pages Router is an alternative routing system available in Next.js, allowing for different routing strategies.
The Pages Router is a routing system used in Next.js for server-rendered applications
The Pages Router is the original routing system in Next.js, still supported for legacy applications</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9,20660998cc2c85257c6b7502427f85d3,514671e4a7b4b0d7573852d3d380eefd,8b55191578f60b2d2fac3ae2f4d05b2e,b6b4173819c0a759fcd3146179f8f534,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="SCRIPT OPTIMIZATION">
      <data key="d4">7.0</data>
      <data key="d5">Next.js provides features for script optimization to enhance performance</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="NEXT.JS" target="ASYNC CLIENT COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js does not support async client components, leading to errors when attempted</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="NEXT.JS" target="GOOGLE ANALYTICS">
      <data key="d4">30.0</data>
      <data key="d5">Next.js supports integration with Google Analytics for tracking user interactions and website performance
Next.js can be integrated with Google Analytics to track user interactions and performance metrics.
Next.js applications can integrate Google Analytics to track user interactions and website performance
Google Analytics can be implemented in Next.js applications to track user interactions and gather analytics data.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee,5e8e906cb9a58f6e52be1a99d31da8cf,86965ee0055fe16d855a4f0e993b9d85,91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="NEXT.JS" target="BROWSERSLIST">
      <data key="d4">13.0</data>
      <data key="d5">Next.js uses Browserslist configuration to determine which browsers to support, ensuring compatibility with modern web standards
Next.js can be configured to specify target browsers through Browserslist, affecting CSS processing</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf,9c75ee4a07cd172f143b2b09451d333c</data>
    </edge>
    <edge source="NEXT.JS" target="@NEXT/THIRD-PARTIES">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can utilize @next/third-parties to enhance the loading of third-party libraries, including Google Analytics</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="SCRIPT">
      <data key="d4">30.0</data>
      <data key="d5">Next.js uses the next/script component to manage the loading of scripts, optimizing performance for web applications
Next.js allows the use of scripts to enhance web applications by executing code in the browser
Script is a component used within Next.js for including third-party scripts.
Next.js allows the inclusion and optimization of scripts in web applications
Next.js allows the use of scripts to enhance web applications with dynamic content
Next.js allows the use of scripts in web applications to enhance functionality and interactivity.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,5e8e906cb9a58f6e52be1a99d31da8cf,80a786416360b0f3873c10b0b635c67b,c1f63acba6f9a58b56bd71c409dcd343,cf17a04fd1ade3fe98ee4b50654b493e,e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="NEXT.JS" target="CHROME">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the Chrome browser, allowing developers to build applications that run efficiently on this platform</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="EDGE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the Edge browser, ensuring compatibility and performance for users of Microsoft's web browser</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="FIREFOX">
      <data key="d4">7.0</data>
      <data key="d5">Next.js is compatible with Firefox, enabling developers to create applications that function well on this browser</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="OPERA">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports Opera, allowing developers to ensure their applications work seamlessly on this browser</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="SAFARI">
      <data key="d4">1.0</data>
      <data key="d5">Next.js is designed to work with Safari, providing a smooth experience for users on Apple's web browser</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="NEXT.JS" target="VS CODE">
      <data key="d4">36.0</data>
      <data key="d5">VS Code is recommended for editing Next.js documentation, providing tools for previewing and formatting changes.
Next.js can be developed and debugged using VS Code, which is a popular code editor among developers
Next.js applications can be debugged using Visual Studio Code, which provides integrated debugging tools for JavaScript applications.
Next.js can be debugged using Visual Studio Code, which provides configurations for server-side and client-side debugging.
Next.js includes a custom TypeScript plugin that enhances the development experience in VS Code, providing advanced type-checking and auto-completion features.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b,243626df7b8124420b4844165c42f9b9,2d826219271d5b48e83835028c04e88b,45d1b0474e5a4ef2a69bdf70528aedb4,936f58e9a3d0c41d6fd88ca7b6e0a119</data>
    </edge>
    <edge source="NEXT.JS" target="PRECONNECT">
      <data key="d4">5.0</data>
      <data key="d5">Preconnect is a recommended practice in Next.js for optimizing connections to Google Fonts, as mentioned in the documentation.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9</data>
    </edge>
    <edge source="NEXT.JS" target="GOOGLE FONTS">
      <data key="d4">19.0</data>
      <data key="d5">Next.js documentation recommends using preconnect with Google Fonts to optimize loading times for web applications.
Next.js can utilize Google Fonts to enhance the typography of web applications
Next.js allows for the automatic self-hosting of Google Fonts to improve performance
Next.js allows for the automatic self-hosting of Google Fonts to improve performance and privacy</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9,2d13fb0b0bfe03d14a0f41e4d7920e31,7e52aca588d432140f210661ae169677,b6b4173819c0a759fcd3146179f8f534</data>
    </edge>
    <edge source="NEXT.JS" target="INLINE SCRIPT ID">
      <data key="d4">1.0</data>
      <data key="d5">The Inline script id is a specific requirement for using inline scripts within Next.js applications to ensure proper functionality.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9</data>
    </edge>
    <edge source="NEXT.JS" target="SHARED PAGES">
      <data key="d4">6.0</data>
      <data key="d5">Shared Pages are a feature of Next.js that allows for content to be reused across different pages</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="NEXT.JS" target="CODE BLOCKS">
      <data key="d4">1.0</data>
      <data key="d5">Code Blocks are used in the documentation of Next.js to provide examples of how to implement features</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="NEXT.JS" target="MIDDLEWARE">
      <data key="d4">113.0</data>
      <data key="d5">Next.js has introduced Middleware as a feature to enhance application performance and routing
Middleware is a feature of Next.js that enhances routing capabilities and request handling
Next.js allows the use of middleware to handle requests, which can include user agent detection
Middleware is a feature in Next.js that allows for custom handling of requests and responses
Next.js allows the use of middleware to add custom logic to requests, enhancing the application's functionality
Middleware is a feature in Next.js that allows developers to run code before a request is completed, enhancing functionality.
Next.js includes Middleware to enhance performance and security by running code before requests are completed
Next.js utilizes middleware to handle requests and responses effectively in web applications
Next.js utilizes middleware to enhance routing and request handling capabilities within its framework
Middleware is a feature in Next.js that allows for custom routing rules, including locale handling
Middleware is a feature of Next.js that allows for custom processing of requests
Next.js allows the use of middleware to handle requests and responses in a customizable way
Middleware is a feature of Next.js that allows for custom request processing
Next.js uses middleware to execute code on the server before a request is completed
Middleware is a feature of Next.js that allows for request handling and routing
Middleware is a feature of Next.js that allows for pre-processing of requests
Middleware is a feature provided by Next.js to manage request and response processing in web applications
Next.js utilizes middleware to enhance the functionality of web applications by allowing code execution before requests are completed
Next.js allows the use of Middleware to run code before a request is completed, enabling advanced redirect capabilities
Middleware is a key feature in Next.js that allows developers to handle requests and responses efficiently.</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c,1d629a9403a987213102a9bfd769f290,1d939f19e04dfaa8df3664a2cd4db1f1,2faaabdabafa263524b931c68674e9cd,3b86536c72cd33dea29dc82250012d80,3bade0d5baadc8c11b8cf85372738fdd,52bf7bb5a492d2cb5b2f5f06d6507a81,52f67911efe49d48e703ba654f23728e,7b6d1725bb07f6076bb8010d535ae342,839413fc3a58298ee6809914ff2ed3f7,84b5c29553feb2883a2e93ffbac5b791,99aea11e8e00a31189977a03ce528a10,9bd0a80f4c931386ae8f2fb0226f92cd,abfaa2f8370cae9120fe1eaf629cda39,ba53cb824bd4e5b80d861ee299c10f92,c8d58fd330c4f217c52b50590414e517,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,db459e8194ba2f087761e7727b876b9d,dc10462a75be57d14f05bf6a26ba9731,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="NEXT.JS" target="CSS FONT-DISPLAY PROPERTY">
      <data key="d4">4.0</data>
      <data key="d5">Next.js documentation includes guidelines on using the CSS font-display property for optimal font loading</data>
      <data key="d6">b6b4173819c0a759fcd3146179f8f534</data>
    </edge>
    <edge source="NEXT.JS" target="API ROUTE">
      <data key="d4">23.0</data>
      <data key="d5">Next.js allows developers to create API Routes for handling server-side logic and data fetching
Next.js provides the capability to create API Routes for serverless functions
Next.js utilizes API Routes to create serverless functions for handling requests and responses
API Routes are a feature of Next.js that allows for server-side logic and data handling</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd,b6b4173819c0a759fcd3146179f8f534,ccae232c83746c7020e2c1ff92d50349,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="PACKAGE.JSON">
      <data key="d4">113.0</data>
      <data key="d5">The package.json file is essential for managing dependencies and scripts in Next.js applications
The package.json file is essential for managing dependencies and scripts in a Next.js project
The package.json file is essential for managing Next.js project dependencies and scripts
The package.json file contains scripts and configurations necessary for running a Next.js application, including development and production settings.
The package.json file is essential for managing dependencies and scripts in Next.js applications, defining how the application runs
Next.js configuration can be defined in the package.json file, including browserslist settings
The scripts in package.json are used to run and build Next.js applications, linking the two together.
package.json includes Next.js as a dependency for the project
The package.json file is updated with Next.js related commands during the migration process
The package.json file is updated to include Next.js related commands and dependencies
The package.json file is essential for Next.js applications to define dependencies and scripts for running the application.
Next.js applications are configured and managed through the package.json file, which includes scripts and dependencies
Package.json includes Next.js as a dependency for the project
The package.json file is essential for managing dependencies in a Next.js project
package.json contains scripts that are used to run and build Next.js applications
The package.json file is essential for managing scripts and dependencies in a Next.js application, including ESLint configuration.
package.json is used to define the dependencies and scripts for a Next.js application
Package.json is used in Next.js projects to manage dependencies and scripts necessary for running the application.
The package.json file is essential for managing dependencies in a Next.js project</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,0dc4f8c1cc6105e325f2d84d2083a4c0,0e3c564b3dd53e829befef4d6241c23e,11e614f4c015c7f8295c0c49ac211a89,2f935bf8dd94b80e38c90109f4e620a3,45d1b0474e5a4ef2a69bdf70528aedb4,53559278a11544ca19ad7864a7c3319c,6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,8b55191578f60b2d2fac3ae2f4d05b2e,9c75ee4a07cd172f143b2b09451d333c,9da317a323ff76913285228d8243413e,ab869c819df53e1e9e3adebf6a4234a2,b48fe8c8f5e2835de49d9a46578cbf9d,b6b4173819c0a759fcd3146179f8f534,c1845aec41d031b5a72f6f472ab4a5f2,ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4,fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="NEXT.JS" target="DISCORD">
      <data key="d4">21.0</data>
      <data key="d5">The Discord platform is used by the Next.js community for discussions and support, fostering collaboration among developers.
Discord serves as a communication platform for the Next.js community to discuss and collaborate
The Next.js community uses Discord to communicate and discuss topics related to the framework</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="REDDIT">
      <data key="d4">13.0</data>
      <data key="d5">Reddit serves as a platform for discussions and sharing information about Next.js, allowing users to engage with the community.
Reddit is a platform where the Next.js community can post questions and topics for discussion
The Next.js community discusses various topics related to the framework on Reddit</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="TWITTER">
      <data key="d4">26.0</data>
      <data key="d5">Next.js shares updates and engages with its community on Twitter, making it a key communication channel.
Next.js utilizes Twitter's specifications for enhancing web applications with social media integration.
Twitter is used by the Next.js community to share updates and engage with users
The Next.js community shares updates and engages on Twitter</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee,514671e4a7b4b0d7573852d3d380eefd,981566c16bf11e1256e74208c2869349,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="YOUTUBE">
      <data key="d4">11.0</data>
      <data key="d5">Vercel publishes educational content and tutorials about Next.js on YouTube, helping developers learn the framework.
YouTube is referenced as a platform for tutorials related to Next.js, indicating a relationship between the two in the context of learning and development</data>
      <data key="d6">6ebc8c74b9b797357659151a46693a88,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="NEXTAUTH.JS">
      <data key="d4">17.0</data>
      <data key="d5">NextAuth.js provides authentication solutions that can be integrated into Next.js applications, enhancing user management capabilities.
NextAuth.js is specifically designed for Next.js applications to handle authentication easily.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="CLERK">
      <data key="d4">15.0</data>
      <data key="d5">Clerk offers authentication services that can be utilized in Next.js applications, providing user management features.
Clerk can be used with Next.js to manage user authentication and improve user experience in applications.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="STACK AUTH">
      <data key="d4">8.0</data>
      <data key="d5">Stack Auth can be used with Next.js for managing user sessions, making it relevant to the framework's functionality.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="LUCIA">
      <data key="d4">15.0</data>
      <data key="d5">Lucia provides authentication services that can be integrated into Next.js applications, enhancing security and user management.
Lucia can be integrated into Next.js applications to provide secure user authentication.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="AUTH0">
      <data key="d4">15.0</data>
      <data key="d5">Auth0 offers secure authentication solutions that can be implemented in Next.js applications, making it a valuable resource for developers.
Auth0 can be integrated with Next.js applications to provide authentication services, enhancing security for users.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="STYTCH">
      <data key="d4">15.0</data>
      <data key="d5">Stytch provides authentication services that can be integrated into Next.js applications, enhancing user management capabilities.
Stytch can be integrated into Next.js applications to enhance user authentication methods.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="KINDE">
      <data key="d4">8.0</data>
      <data key="d5">Kinde offers authentication solutions that can be utilized in Next.js applications, providing user management features.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="WORKOS">
      <data key="d4">15.0</data>
      <data key="d5">WorkOS provides authentication and user management solutions that can be integrated into Next.js applications, enhancing functionality.
WorkOS can be utilized in Next.js applications to add enterprise-level authentication features.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.JS COMMUNITY">
      <data key="d4">1.0</data>
      <data key="d5">The Next.js community actively contributes to the development and improvement of the Next.js framework, fostering collaboration and support.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="AMP">
      <data key="d4">34.0</data>
      <data key="d5">AMP is a web component framework that is not currently supported in Next.js with Turbopack, indicating a limitation in the framework's capabilities.
Next.js supports AMP, allowing developers to create AMP pages for improved mobile performance.
Next.js has updated its handling of AMP configuration in version 11
Next.js supports AMP, enabling developers to create fast-loading mobile pages with minimal configuration.
Next.js supports AMP, allowing developers to create fast-loading web pages using the AMP framework.
Next.js provides configuration options for implementing AMP to improve mobile page loading speeds</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9,173e80ccbe8ecd833c055f4cd3e75ee6,7de6e744f7ef4ab90e5a1db6bfad49c3,86965ee0055fe16d855a4f0e993b9d85,981566c16bf11e1256e74208c2869349,bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="YARN PNP">
      <data key="d4">4.0</data>
      <data key="d5">Yarn PnP is a package management feature that is not currently supported in Next.js with Turbopack, highlighting compatibility issues.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="ICSS">
      <data key="d4">4.0</data>
      <data key="d5">ICSS rules are not supported in Next.js with Turbopack, indicating a limitation in the framework's CSS handling capabilities.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.TURBOPACK_TRACING">
      <data key="d4">7.0</data>
      <data key="d5">NEXT_TURBOPACK_TRACING is used in Next.js to generate trace files for performance analysis, making it relevant for developers.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="TRACE FILE">
      <data key="d4">7.0</data>
      <data key="d5">Trace files are generated in Next.js to help improve performance metrics, indicating a relationship with the framework's optimization efforts.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.JS APP ROUTER">
      <data key="d4">9.0</data>
      <data key="d5">The Next.js App Router introduces new features for building applications, making it a core component of the Next.js framework.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER COMPONENTS">
      <data key="d4">145.0</data>
      <data key="d5">Server Components are utilized in Next.js to enhance server-side rendering capabilities, making them integral to the framework.
Server Components are a feature of Next.js that enhance data fetching capabilities
Server Components are a feature of Next.js that enhances data fetching capabilities
Next.js utilizes Server Components to optimize the initial load performance of applications
Next.js supports Server Components for rendering on the server
Server Components are a feature of the Next.js framework that enhances the rendering process
Next.js allows the use of Server Components to enhance performance by rendering components on the server
Server Components are a feature of Next.js, showing a strong relationship as they are integral to its architecture
Server Components are a key feature of Next.js that enhance application performance
Server Components are a feature of Next.js that enhance the framework's capabilities for building applications
Next.js supports the use of Server Components, allowing developers to build applications that leverage server-side rendering.
Next.js framework supports the implementation of Server Components for optimized performance
Next.js utilizes Server Components to enhance the performance of applications by rendering components on the server
Next.js implements Server Components to enhance the performance of applications built with React
Next.js utilizes Server Components to enhance performance by rendering components on the server
Next.js supports Server Components for rendering UI on the server, enhancing performance
Next.js implements Server Components to enhance server-side rendering capabilities.
Next.js features Server Components that enable automatic code splitting and improved performance
Server Components are a key feature of Next.js that enhance application performance
Server components are a feature of Next.js that enhances the rendering capabilities of applications</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51,2c3e23b7d2b5c3c6c258760c75956b4c,2d13fb0b0bfe03d14a0f41e4d7920e31,2e4837fd908fed547d3170725336a52e,3da6822267f4aca1b29b1233660a9282,56ab21d16e9b86cd9d551ec941e65b04,69ac19d7db15ae11c7884ce391807330,6b625fce8c9b4b0f729aa3cdc85d284d,6ebc8c74b9b797357659151a46693a88,7a1bd3f71b0a9aadbba7495339a8b723,7ad571c896064ee6e36a4acd93898e88,82c6ef4d52bb277665ade9f274822be3,981566c16bf11e1256e74208c2869349,ace34d6baa071fb6d6db3dcaaf3da1dc,adb5bec4b54e83924618cafc99d40e24,b0a7c0b65015814bd16809b55a84c5cc,c157c439271dbeeebb69b81254b288af,c55d8ff0ea71716df1fdfba115d52035,dea59f788f9645dcf527f4f5f4f12ae7,deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="NEXT.JS" target="STREAMING WITH SUSPENSE">
      <data key="d4">8.0</data>
      <data key="d5">Streaming with Suspense is a feature that improves user experience in Next.js applications, indicating a strong relationship.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="PARALLEL ROUTES">
      <data key="d4">8.0</data>
      <data key="d5">Parallel Routes enhance the flexibility of Next.js applications, allowing for more complex routing scenarios.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="MULTI-TENANT APPS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be used to build multi-tenant applications, showcasing its versatility in application development.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE INVALIDATION">
      <data key="d4">7.0</data>
      <data key="d5">Cache invalidation is a process relevant to Next.js for ensuring users receive the most current data, indicating its importance in application performance.</data>
      <data key="d6">981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.JS COMMERCE">
      <data key="d4">15.0</data>
      <data key="d5">Next.js Commerce is an example application that demonstrates the capabilities of Next.js in e-commerce, showcasing its practical applications.
Next.js Commerce is an example of an application built using the Next.js framework, showcasing its capabilities</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="PLATFORMS STARTER KIT">
      <data key="d4">8.0</data>
      <data key="d5">The Platforms Starter Kit is another example application that illustrates the use of Next.js in building robust applications.
The Platforms Starter Kit serves as a foundational example of how to use Next.js for building platform applications</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c,981566c16bf11e1256e74208c2869349</data>
    </edge>
    <edge source="NEXT.JS" target="SWC">
      <data key="d4">31.0</data>
      <data key="d5">Next.js utilizes SWC for faster compilation and minification of JavaScript code, replacing Babel and Terser in its build process
Next.js uses SWC as its default compiler for faster builds and minification processes.
Next.js has integrated SWC for faster builds and minification, enhancing performance for web applications.
Next.js now uses SWC as its compiler for improved performance, indicating a strong relationship between the framework and the compiler technology.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3,60041d4c2667ea62ef90a73e1138bae6,6fa25577febe4c193fec7e398e287d7c,876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="JEST">
      <data key="d4">56.0</data>
      <data key="d5">Next.js integrates with Jest to simplify testing configurations and enhance the testing experience for applications built with Next.js
Jest is commonly used for unit testing applications developed with Next.js
Jest is commonly used to test applications built with Next.js, providing a framework for writing and running tests.
Next.js applications can be tested using Jest, which is a popular testing framework for JavaScript applications
Next.js applications can be tested using Jest for unit and snapshot testing
Next.js applications can be tested using Jest, which is a popular testing framework for JavaScript applications.
Jest is commonly used for unit testing components and applications built with Next.js, providing a framework for testing.
Next.js applications can be tested using Jest, which provides a framework for running unit tests and ensuring code quality.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39,0ef0d7dfd239c67d2b08d6be68926b78,407c79602db9cac967822f4d34fa94d2,444fc385d67c401653f1a2c133ba95e6,62cbc95f20c7b902a0c2e3e9af7dd83c,6fa25577febe4c193fec7e398e287d7c,936f58e9a3d0c41d6fd88ca7b6e0a119,b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="NEXT.JS" target="RELAY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can be configured to support Relay, allowing for efficient data fetching and management in applications</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c</data>
    </edge>
    <edge source="NEXT.JS" target="ARCHITECTURE: NEXT.JS COMPILER">
      <data key="d4">1.0</data>
      <data key="d5">The architectural design of the Next.js Compiler is a key feature of Next.js, enabling faster builds and improved performance</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c</data>
    </edge>
    <edge source="NEXT.JS" target="RUST">
      <data key="d4">8.0</data>
      <data key="d5">Next.js Compiler is written in Rust, leveraging its performance benefits for faster code transformation</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c</data>
    </edge>
    <edge source="NEXT.JS" target="BABEL">
      <data key="d4">36.0</data>
      <data key="d5">Next.js transitioned from using Babel to the Next.js Compiler for code transformation, marking a significant change in its architecture
Next.js can integrate with Babel for transforming JavaScript code, ensuring compatibility with older browsers.
Next.js uses Babel for transforming individual files to ensure compatibility with existing applications that leverage custom Babel plugins.
Next.js previously used Babel for compiling JavaScript before switching to SWC, indicating a historical relationship between the two technologies.
Next.js can be configured to use Babel for transpiling JavaScript code, allowing for modern JavaScript features to be used.
Next.js includes the next/babel preset to compile React applications and server-side code using Babel
Babel is often used in Next.js projects to transpile modern JavaScript syntax for compatibility</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39,391895fc365f2f2512a45ea503fbfa86,478ca906eeeb1b1356949c55e289c4d3,60041d4c2667ea62ef90a73e1138bae6,6fa25577febe4c193fec7e398e287d7c,876a936d41a4189fd50277eeb02bfdf7,9c75ee4a07cd172f143b2b09451d333c</data>
    </edge>
    <edge source="NEXT.JS" target="TERSER">
      <data key="d4">5.0</data>
      <data key="d5">Terser was previously used in Next.js for minifying output bundles before the introduction of the Next.js Compiler</data>
      <data key="d6">6fa25577febe4c193fec7e398e287d7c</data>
    </edge>
    <edge source="NEXT.JS" target="FAST REFRESH">
      <data key="d4">34.0</data>
      <data key="d5">Fast Refresh is a feature integrated into Next.js that enhances the development experience by allowing for quick updates
Fast Refresh is a feature integrated into Next.js that enhances the development experience by allowing live reloading of components.
Fast Refresh is a feature of React that is utilized within Next.js to enhance the development experience.
Fast Refresh is a feature of Next.js that improves the development workflow by allowing live updates without losing component state
Fast Refresh is a feature of Next.js that enhances the development experience by allowing instant updates.
Next.js supports Fast Refresh, enhancing the development experience by allowing for quick updates without losing component state</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9,3cf51b17316c47851ab9a8bb2fddfbc3,478ca906eeeb1b1356949c55e289c4d3,6fa25577febe4c193fec7e398e287d7c,a9a858ea7abac3fe79fa759ea8171597,ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="NEXT.JS" target="MOBX">
      <data key="d4">5.0</data>
      <data key="d5">MobX can be used for state management in applications built with Next.js.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="THEME UI">
      <data key="d4">5.0</data>
      <data key="d5">Theme UI can be utilized in Next.js applications to create themeable user interfaces.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="JAVASCRIPT">
      <data key="d4">49.0</data>
      <data key="d5">Next.js is a framework that is built using JavaScript, enabling developers to create web applications.
Next.js is built on JavaScript, leveraging its capabilities for web development
Next.js is built on JavaScript, utilizing its features to create dynamic web applications.
Next.js is built on top of JavaScript, leveraging its capabilities for web development
Next.js is built on JavaScript, leveraging its capabilities for building web applications
Next.js is built on top of JavaScript, leveraging its capabilities for web development
JavaScript is the primary programming language used in Next.js for building web applications.
Next.js is built on top of JavaScript, utilizing its capabilities for server-side rendering and static site generation
Next.js is a framework that is built on top of JavaScript, leveraging its capabilities for web development
Next.js is built on top of JavaScript, enhancing its capabilities for web development
Next.js is a framework that extends JavaScript capabilities for building web applications.
Next.js is built on JavaScript, utilizing its capabilities for web development</data>
      <data key="d6">21bbed2998c7a9b202d76d56c78cb512,3b86536c72cd33dea29dc82250012d80,4dfb13dff74e4dc45c19d4d71fe1a443,64c02a535c1519ef24ded4a2a368f2be,72e1433a8550144aaf1d1fd8f3cb3774,876a936d41a4189fd50277eeb02bfdf7,a50f51132c97b3887f2b21ed846fa020,a5566406ae5db585eb3829f4a25e7025,c5461cfa4259c43255132d8f916b1764,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d0da48d43a184db7d07729aa6047ca3d,dea59f788f9645dcf527f4f5f4f12ae7</data>
    </edge>
    <edge source="NEXT.JS" target="CONSOLE">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications can manipulate console outputs for debugging purposes.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.CONFIG.JS">
      <data key="d4">241.0</data>
      <data key="d5">next.config.js is essential for configuring various aspects of Next.js applications, influencing their behavior and performance.
next.config.js is used to configure settings and features in Next.js applications
next.config.js is a configuration file that customizes the behavior of Next.js applications
next.config.js is a configuration file used in Next.js to customize its settings and behaviors.
Next.js utilizes next.config.js for configuration settings, including runtime configurations and redirects
next.config.js is a configuration file that customizes the behavior of Next.js applications
next.config.js is a configuration file specifically for Next.js applications, allowing customization of routing and other settings
next.config.js is used to configure various options and settings for Next.js applications
The next.config.js file is essential for configuring various options in a Next.js application, influencing its behavior and performance.
Next.js utilizes next.config.js to manage configuration options for the framework
Next.js applications utilize next.config.js to manage various configurations, including image handling and caching
next.config.js is used to customize the behavior of Next.js applications
The next.config.js file is used to configure various options and settings for Next.js applications, linking the two together.
Next.js uses next.config.js to allow developers to customize settings, including Sass and image optimization configurations
next.config.js is integral to configuring Next.js applications, influencing how features like middleware and routing behave
next.config.js is a configuration file used in Next.js applications to customize settings and behaviors
next.config.js is a key configuration file for Next.js applications, allowing customization of settings and features
next.config.js is a key configuration file for Next.js applications, defining various settings and options
The next.config.js file is used to configure settings specific to Next.js applications.
Next.js uses the next.config.js file to configure various options for the application
next.config.js is integral to Next.js applications, allowing developers to configure various options and settings for their projects.
Next.config.js is a crucial file for configuring settings in Next.js applications.
next.config.js is a configuration file that customizes the behavior of Next.js applications
next.config.js is a configuration file specifically for Next.js applications, allowing customization of the framework's behavior.
Next.js utilizes next.config.js to manage configuration options for the framework
next.config.js is a crucial configuration file for Next.js applications, allowing developers to customize their projects.
next.config.js is a key configuration file for Next.js applications, defining various settings
Next.js applications utilize the next.config.js file for various configurations, including image handling
next.config.js is used to configure various settings and behaviors of a Next.js application
next.config.js is used to customize the configuration of Next.js applications, allowing developers to modify default settings.
Next.js applications are configured using the next.config.js file, which allows for customization of settings
next.config.js is a configuration file used in Next.js applications to define settings and options for the framework
Next.config.js is used to configure settings and behaviors for Next.js applications</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056,077fbb77da60b5f069a4cf5fd5e33e9b,0b10d085541dc5564e998254b8588822,1a9f90261d97f4e9455bb0fa22f4ee9c,21183997adb6288a64caa86bfd107612,2d13fb0b0bfe03d14a0f41e4d7920e31,4443464e7a2cb4bcbbf667881fecb236,4647f3f9cf6eaae5dadd71a1dc2e58ae,4d99e596a43a5b336e12425953d3a120,6160e6925dba648999d09c55006ab046,6c6960c6073b7fc858222c11aed49665,717947e9b123f15f49c748bb45aec68d,7849b1ca8bbfc8c3240def9d244f008d,7e9fce61758916e4d2b7de2f2f4d1704,815b3c1f78ab2336e7e5bdae07b49d2b,83cffab512363b08e89e0b35424b489c,876a936d41a4189fd50277eeb02bfdf7,89def9941cbf0a381e1e4a28a703e201,936f58e9a3d0c41d6fd88ca7b6e0a119,9726f4ae30b11539c429ff41c8326d46,a3dae9be9408e57ff26350383026033f,a9c779cfa21a679f557dbbc90283565f,ab49838f472483f11a1afbcaff84ad1e,ace34d6baa071fb6d6db3dcaaf3da1dc,affc1268c54094ecde29441589759673,b48fe8c8f5e2835de49d9a46578cbf9d,ba53cb824bd4e5b80d861ee299c10f92,c8d58fd330c4f217c52b50590414e517,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d5597c0b98fb6d7afb8e40f53a3b0be7,db79d898afcf0c4fadf71858f0b3e795,ebeae91fd404de4ca5981ecf5cc74074,fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NEXT.JS" target="REMOVE CONSOLE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides a compiler option to remove console calls, enhancing the production build by eliminating unnecessary logging.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="LEGACY DECORATORS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js supports legacy decorators for compatibility with older libraries, allowing developers to maintain existing codebases.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="EMOTION">
      <data key="d4">13.0</data>
      <data key="d5">Next.js can integrate Emotion for styling, allowing developers to write CSS-in-JS within their applications.
Next.js can utilize Emotion for styling React components</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c,876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="SWC TRACE PROFILING">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows for SWC trace profiling to analyze performance, helping developers optimize their applications.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="MODULE TRANSPILATION">
      <data key="d4">7.0</data>
      <data key="d5">Next.js automatically handles module transpilation, simplifying the development process for applications with local or external dependencies.</data>
      <data key="d6">876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZE PACKAGE IMPORTS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js includes features to optimize package imports, improving application performance and reducing bundle size.
Optimize Package Imports is a feature of Next.js aimed at improving performance by loading only necessary modules</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,876a936d41a4189fd50277eeb02bfdf7</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR BOUNDARIES">
      <data key="d4">9.0</data>
      <data key="d5">Next.js supports the use of error boundaries to gracefully handle errors in production applications.
Next.js utilizes Error Boundaries to handle uncaught exceptions and provide fallback UI</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82,478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="NEXT.JS" target="RUNTIME ERRORS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides mechanisms to handle runtime errors gracefully, ensuring a better user experience during application execution.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="NEXT.JS" target="SYNTAX ERRORS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows developers to fix syntax errors without losing component state, improving the development workflow.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="NEXT.JS" target="WEB AIM">
      <data key="d4">7.0</data>
      <data key="d5">Next.js is committed to making its framework accessible, aligning with WebAIM's mission to improve web accessibility.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="A11Y PROJECT">
      <data key="d4">7.0</data>
      <data key="d5">Next.js incorporates accessibility features, which is a key focus of the A11y Project.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="WCAG">
      <data key="d4">8.0</data>
      <data key="d5">Next.js aims to adhere to WCAG guidelines to ensure web content is accessible to all users.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="USEEFFECT">
      <data key="d4">7.0</data>
      <data key="d5">useEffect is a key part of React that is utilized in Next.js applications to manage side effects effectively.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="USEMEMO">
      <data key="d4">7.0</data>
      <data key="d5">useMemo is used in Next.js applications to optimize performance by memoizing values and preventing unnecessary calculations.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="USECALLBACK">
      <data key="d4">1.0</data>
      <data key="d5">useCallback is employed in Next.js to optimize performance by memoizing callback functions, ensuring they are not recreated on every render.</data>
      <data key="d6">3cf51b17316c47851ab9a8bb2fddfbc3</data>
    </edge>
    <edge source="NEXT.JS" target="GZIP">
      <data key="d4">19.0</data>
      <data key="d5">Next.js applications often use Gzip compression to optimize the delivery of assets.
Next.js uses gzip compression to optimize the delivery of rendered content and static files
Next.js uses Gzip compression by default to optimize the delivery of rendered content and static files.</data>
      <data key="d6">4443464e7a2cb4bcbbf667881fecb236,83cffab512363b08e89e0b35424b489c,bc34912ac16bc1504d04e9019f0c8cb9</data>
    </edge>
    <edge source="NEXT.JS" target="LINT COMMAND">
      <data key="d4">1.0</data>
      <data key="d5">The lint command is used to ensure code quality in Next.js applications by running ESLint.</data>
      <data key="d6">bc34912ac16bc1504d04e9019f0c8cb9</data>
    </edge>
    <edge source="NEXT.JS" target="CREATE-NEXT-APP">
      <data key="d4">39.0</data>
      <data key="d5">Create-next-app is a tool specifically designed for creating new applications using the Next.js framework
Create-next-app is a command used to initialize a new Next.js project, which now includes TypeScript by default
create-next-app is a tool specifically designed to create new applications using the Next.js framework
Create Next App is a tool specifically designed to set up new Next.js projects quickly.
create-next-app is a tool specifically designed to create new Next.js applications, facilitating the setup process for developers.</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5,391895fc365f2f2512a45ea503fbfa86,936f58e9a3d0c41d6fd88ca7b6e0a119,99aea11e8e00a31189977a03ce528a10,b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="NEXT.JS" target="ARCHITECTURE">
      <data key="d4">7.0</data>
      <data key="d5">The architecture of Next.js explains the underlying principles and workings of the framework</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5</data>
    </edge>
    <edge source="NEXT.JS" target="NODE_OPTIONS">
      <data key="d4">12.0</data>
      <data key="d5">Node Options can be used to modify the behavior of Next.js commands, enhancing their functionality
NODE_OPTIONS can be used to configure debugging options for Next.js applications, enhancing the development process</data>
      <data key="d6">03acdd28901db5ff52a4bdbf34d9d0d5,ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="NEXT.JS" target="EDGE RUNTIME">
      <data key="d4">29.0</data>
      <data key="d5">The Edge Runtime is a feature of the Next.js framework that enhances its capabilities for middleware and API handling.
Next.js applications can be deployed on the Edge Runtime for improved performance
Next.js provides the Edge Runtime for specific use cases like Middleware and routing, differentiating it from the Node.js Runtime.
The Edge Runtime is a component of Next.js that supports middleware and various APIs
Next.js can utilize Edge runtime to enhance performance by running applications closer to users.</data>
      <data key="d6">5791705a1f965d3a768f111e7fdcade1,59f479f2a59b233e2c0b4bfcfce952a8,a0ed25040eb1637a5c82493764f822ac,b1787ce5e713d63d1f4f1203762380a3,c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="NEXT.JS" target="ASYNCLOCALSTORAGE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides AsyncLocalStorage as a polyfill for managing asynchronous storage</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="ENVIRONMENT VARIABLES">
      <data key="d4">57.0</data>
      <data key="d5">Next.js uses Environment Variables for configuration management
Next.js supports environment variables for configuration, requiring specific prefixes for client-side access
Next.js uses environment variables to manage configuration settings for different environments
Next.js has built-in support for loading environment variables, which are essential for configuration.
Next.js applications utilize Environment Variables to manage configuration settings across different environments.
Next.js provides a way to manage environment variables for configuration in applications
Next.js supports environment variables similar to Vite, but with a different prefix
Next.js supports environment variables, allowing configuration for different environments
Next.js supports both build time and runtime environment variables for configuration
Next.js has built-in support for environment variables, allowing developers to configure applications dynamically
Next.js utilizes environment variables to manage configuration settings for different environments, enhancing flexibility and security.</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056,0e3c564b3dd53e829befef4d6241c23e,173e80ccbe8ecd833c055f4cd3e75ee6,5e1697c043b2eb0208b7ae196db74f56,6a27b514d5ea49bd1a6dd159d44aaf87,7cf992845bf79c5ec4ae2614617a79f4,9da317a323ff76913285228d8243413e,ab869c819df53e1e9e3adebf6a4234a2,adb5bec4b54e83924618cafc99d40e24,b1787ce5e713d63d1f4f1203762380a3,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </edge>
    <edge source="NEXT.JS" target="WEBASSEMBLY">
      <data key="d4">2.0</data>
      <data key="d5">WebAssembly can be integrated into Next.js applications for performance improvementsNext.js can utilize WebAssembly for performance improvements in web applications</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="FLOAT32ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Float32Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="FLOAT64ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Float64Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="INT8ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Int8Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="INT16ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Int16Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="INT32ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Int32Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="UINT8ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Uint8Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="UINT8CLAMPEDARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Uint8ClampedArray can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="UINT32ARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Uint32Array can be used in Next.js applications for handling numerical data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="PROMISE">
      <data key="d4">7.0</data>
      <data key="d5">Promise is often used in Next.js for handling asynchronous operations</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="REGEXP">
      <data key="d4">5.0</data>
      <data key="d5">RegExp can be utilized in Next.js for pattern matching in strings</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="SET">
      <data key="d4">4.0</data>
      <data key="d5">Set can be used in Next.js applications to manage unique collections of values</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="MAP">
      <data key="d4">4.0</data>
      <data key="d5">Map can be used in Next.js applications to manage key/value pairs</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="JSON">
      <data key="d4">12.0</data>
      <data key="d5">JSON is commonly used in Next.js for data interchange
Next.js can utilize JSON for data interchange in web applications</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3,ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="NEXT.JS" target="MATH">
      <data key="d4">5.0</data>
      <data key="d5">Math functions can be utilized in Next.js for various calculations</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="NUMBER">
      <data key="d4">6.0</data>
      <data key="d5">Number is a fundamental data type used in Next.js applications</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="OBJECT">
      <data key="d4">6.0</data>
      <data key="d5">Object is the base type for all data structures in Next.js</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="STRING">
      <data key="d4">6.0</data>
      <data key="d5">String is a common data type used in Next.js applications</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="SYMBOL">
      <data key="d4">4.0</data>
      <data key="d5">Symbol can be used in Next.js for unique property keys</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="RANGEERROR">
      <data key="d4">5.0</data>
      <data key="d5">RangeError can occur in Next.js applications when values are out of range</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="REFERENCEERROR">
      <data key="d4">5.0</data>
      <data key="d5">ReferenceError can occur in Next.js applications when referencing non-existent variables</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="SYNTAXERROR">
      <data key="d4">5.0</data>
      <data key="d5">SyntaxError can occur in Next.js applications when there is invalid code</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="TYPEERROR">
      <data key="d4">5.0</data>
      <data key="d5">TypeError can occur in Next.js applications when values are of unexpected types</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="URIERROR">
      <data key="d4">5.0</data>
      <data key="d5">URIError can occur in Next.js applications when URI handling functions are misused</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="INFINITY">
      <data key="d4">4.0</data>
      <data key="d5">Infinity is a concept that can be encountered in numerical calculations in Next.js</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="ISFINITE">
      <data key="d4">6.0</data>
      <data key="d5">isFinite is a function that can be used in Next.js to check for finite numbers</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="ISNAN">
      <data key="d4">6.0</data>
      <data key="d5">isNaN is a function that can be used in Next.js to check for NaN values</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="STRUCTUREDCLONE">
      <data key="d4">5.0</data>
      <data key="d5">structuredClone can be used in Next.js to create deep copies of objects</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="QUEUEMICROTASK">
      <data key="d4">4.0</data>
      <data key="d5">queueMicrotask can be used in Next.js for scheduling microtasks</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="SHAREDARRAYBUFFER">
      <data key="d4">4.0</data>
      <data key="d5">SharedArrayBuffer can be used in Next.js for handling binary data</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NEXT.JS" target="WEB VITALS">
      <data key="d4">33.0</data>
      <data key="d5">Next.js provides support for Web Vitals to help developers optimize their applications' performance
Next.js includes built-in support for measuring Web Vitals to report performance metrics.
Next.js supports Web Vitals metrics to help developers optimize their applications' performance
Next.js includes built-in support for measuring and reporting Web Vitals to capture user experience metrics</data>
      <data key="d6">1a9f90261d97f4e9455bb0fa22f4ee9c,3486aab51f1c22b4f23003db40986564,6e870d62774508940749246fdee4d7b7,7849b1ca8bbfc8c3240def9d244f008d</data>
    </edge>
    <edge source="NEXT.JS" target="LIGHTNING CSS">
      <data key="d4">13.0</data>
      <data key="d5">Next.js has experimental support for using Lightning CSS to improve CSS bundling and minification
Lightning CSS is an experimental feature within Next.js aimed at improving CSS handling and performance</data>
      <data key="d6">7849b1ca8bbfc8c3240def9d244f008d,9726f4ae30b11539c429ff41c8326d46</data>
    </edge>
    <edge source="NEXT.JS" target="URL IMPORTS">
      <data key="d4">15.0</data>
      <data key="d5">Next.js includes an experimental feature for URL Imports, allowing modules to be imported from external sources
URL Imports is a feature of Next.js that allows importing modules from external URLs
URL Imports is a feature of Next.js that allows importing modules from external servers</data>
      <data key="d6">717947e9b123f15f49c748bb45aec68d,7849b1ca8bbfc8c3240def9d244f008d,89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="NEXT.JS" target="TYPECHECKING">
      <data key="d4">8.0</data>
      <data key="d5">Typechecking is a critical process in Next.js to ensure code quality during builds</data>
      <data key="d6">717947e9b123f15f49c748bb45aec68d</data>
    </edge>
    <edge source="NEXT.JS" target="LOCKFILE">
      <data key="d4">9.0</data>
      <data key="d5">Lockfile is used in Next.js to manage dependencies and ensure consistent builds
Lockfile is generated by Next.js to manage dependencies and ensure consistent builds</data>
      <data key="d6">717947e9b123f15f49c748bb45aec68d,89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="NEXT.JS" target="SKYPACK">
      <data key="d4">6.0</data>
      <data key="d5">Skypack can be used with Next.js to import modules directly from URLs</data>
      <data key="d6">717947e9b123f15f49c748bb45aec68d</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE-CONTROL">
      <data key="d4">28.0</data>
      <data key="d5">Cache-Control headers can be configured in Next.js applications to manage resource caching
Next.js allows developers to set Cache-Control headers for responses or data
Next.js allows configuration of Cache-Control headers to optimize caching behavior for images
Cache-Control headers are important for managing caching behavior in Next.js applications
Next.js sets Cache-Control headers for public assets to optimize caching strategies.</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c,717947e9b123f15f49c748bb45aec68d,89def9941cbf0a381e1e4a28a703e201,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="GIT">
      <data key="d4">1.0</data>
      <data key="d5">Git is commonly used to manage the source code of Next.js applications</data>
      <data key="d6">717947e9b123f15f49c748bb45aec68d</data>
    </edge>
    <edge source="NEXT.JS" target="RUNTIME CONFIG">
      <data key="d4">7.0</data>
      <data key="d5">Next.js provides a Runtime Config feature to manage server-side and public runtime configurations</data>
      <data key="d6">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </edge>
    <edge source="NEXT.JS" target="REDIRECTS">
      <data key="d4">31.0</data>
      <data key="d5">Next.js supports redirects as a feature to manage routing and navigation within applications
Next.js framework provides functionality for managing redirects in web applications
Redirects are a built-in feature of Next.js that help manage URL changes and improve user experience
Next.js allows configuration of redirects in the next.config.js file</data>
      <data key="d6">21183997adb6288a64caa86bfd107612,3728034c20ff061a6f5bcaadac49b04e,6c6960c6073b7fc858222c11aed49665,d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </edge>
    <edge source="NEXT.JS" target="LOCALE">
      <data key="d4">19.0</data>
      <data key="d5">Next.js supports internationalization (i18n) which involves configuring locales
Next.js supports localization through the use of locales to manage different language settings for applications
Locale is a feature in Next.js that supports internationalization (i18n) for applications
Next.js supports internationalization by allowing developers to configure locales for their applications</data>
      <data key="d6">56ab21d16e9b86cd9d551ec941e65b04,7cd464b0f42ff05e87fa7e149d7e2997,7e9fce61758916e4d2b7de2f2f4d1704,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="NEXT.JS" target="PUBLIC DIRECTORY">
      <data key="d4">1.0</data>
      <data key="d5">The public directory is a part of the Next.js framework where static files are served, indicating a direct relationship with the framework</data>
      <data key="d6">6c6960c6073b7fc858222c11aed49665</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC ROUTES">
      <data key="d4">33.0</data>
      <data key="d5">Dynamic routes are a feature of Next.js that allows for the creation of routes based on data, enhancing the framework's capabilities
Dynamic routes are a feature of Next.js that allows for flexible routing based on data or parameters.
Next.js supports dynamic routes, allowing developers to create pages that can change based on user input or data
Next.js supports dynamic routes, allowing developers to create pages that can change based on URL parameters
Dynamic Routes are a feature provided by Next.js for creating flexible routing based on dynamic data</data>
      <data key="d6">59f479f2a59b233e2c0b4bfcfce952a8,6c6960c6073b7fc858222c11aed49665,7cd464b0f42ff05e87fa7e149d7e2997,8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC FILES">
      <data key="d4">7.0</data>
      <data key="d5">Static files are served by Next.js from the public directory, showcasing the framework's ability to handle static content</data>
      <data key="d6">6c6960c6073b7fc858222c11aed49665</data>
    </edge>
    <edge source="NEXT.JS" target="REWRITES">
      <data key="d4">39.0</data>
      <data key="d5">Rewrites are a routing feature in Next.js that allows for flexible URL management, integral to the framework's functionality
Next.js provides a feature for rewrites to map incoming request paths to different destination paths.
Next.js provides the rewrites feature to enhance routing capabilities in web applications
Next.js supports rewrites to manage routing and URL structures effectively
Next.js uses rewrites to direct requests to the appropriate zone based on defined rules</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b,16332d9a8715d2cac034c2aa3c4f12f6,6c6960c6073b7fc858222c11aed49665,ebecafe0b9c1dfc514b9df4c48e6eb30,fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NEXT.JS" target="QUERY PARAMETERS">
      <data key="d4">1.0</data>
      <data key="d5">Query parameters are utilized in Next.js for dynamic routing and API interactions, demonstrating the framework's versatility</data>
      <data key="d6">6c6960c6073b7fc858222c11aed49665</data>
    </edge>
    <edge source="NEXT.JS" target="EXAMPLE.COM">
      <data key="d4">22.0</data>
      <data key="d5">Next.js can redirect users to example.com for certain routes like /blog
Next.js is the framework used to implement locale routing for the example.com domain
Next.js applies specific headers when the host is example.com to enhance security and functionality.</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7,b3759902cd429c22cd4896b10b00848d,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="ANOTHER PAGE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js rewrites certain routes to redirect to another page</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="NEXT.JS" target="BLOG">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows the /blog route to be redirected to an external blog</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="NEXT.JS" target="OUTPUT FILE TRACING">
      <data key="d4">20.0</data>
      <data key="d5">Output File Tracing is a feature implemented in Next.js to optimize the deployment process by analyzing file dependencies.
Output File Tracing is a feature of Next.js that helps optimize the deployment process by determining the necessary files for production.
Output file tracing is a feature of Next.js that helps determine which files are needed for deployment.</data>
      <data key="d6">4d99e596a43a5b336e12425953d3a120,a3dae9be9408e57ff26350383026033f,f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="STANDALONE DEPLOYMENT">
      <data key="d4">2.0</data>
      <data key="d5">Standalone Deployment is a deployment strategy available in Next.js that simplifies the deployment process by reducing the number of files needed.
Standalone Deployment is a deployment strategy supported by Next.js to streamline the production process by including only essential files.</data>
      <data key="d6">4d99e596a43a5b336e12425953d3a120,f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="API ALIAS">
      <data key="d4">7.0</data>
      <data key="d5">API Alias is a feature in Next.js that allows developers to create custom routes for their API endpoints, enhancing routing capabilities.</data>
      <data key="d6">f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="NODE_MODULES">
      <data key="d4">25.0</data>
      <data key="d5">Node_modules contains the dependencies required for Next.js applications to function properly, playing a crucial role in the build process.
Next.js utilizes node_modules to manage dependencies for its applications
Next.js applications utilize node_modules to manage dependencies and packages required for functionality.
Next.js relies on node_modules to include all necessary packages and dependencies for building applications.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f,a9a858ea7abac3fe79fa759ea8171597,cf17a04fd1ade3fe98ee4b50654b493e,f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="DOCKER">
      <data key="d4">31.0</data>
      <data key="d5">Docker is often used to containerize Next.js applications for easier deployment and scalability.
Next.js can be deployed using Docker containers, allowing for flexible deployment options
Docker can be used to containerize Next.js applications, ensuring consistent environments across development and production
Next.js can be deployed using Docker containers, allowing for easy deployment across various environments
Next.js can be containerized using Docker, allowing for consistent deployment across different environments.</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342,7cf992845bf79c5ec4ae2614617a79f4,a67099d1f0ea66a70c07e9595443231a,adb5bec4b54e83924618cafc99d40e24,f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="SERVERLESS TARGET">
      <data key="d4">4.0</data>
      <data key="d5">Serverless Target was a previous deployment option in Next.js that has been deprecated in favor of more efficient methods.</data>
      <data key="d6">f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="MONOREPO">
      <data key="d4">20.0</data>
      <data key="d5">Monorepo setups can influence how Next.js traces files during the build process, affecting deployment outcomes.
Next.js applications can be managed and deployed using a monorepo strategy for better organization and efficiency
Next.js can be used in a monorepo setup for managing multiple projects.
Next.js supports monorepo setups, which can influence how files are traced and included in the build process.
Next.js applications can be organized in a monorepo to simplify code sharing and deployment across multiple zones
Next.js can be configured to work in a monorepo setup, allowing for multiple projects to share dependencies.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6,9bc82a2671446cca168796fea771ecad,a3dae9be9408e57ff26350383026033f,ebecafe0b9c1dfc514b9df4c48e6eb30,f0f0cb94424540a288feb59004d219e4</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP KEEP-ALIVE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js automatically enables HTTP Keep-Alive for fetch() calls to improve performance in Node.js versions prior to 18.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="SOURCE MAPS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides a configuration option to enable source maps during production builds for better debugging.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGES">
      <data key="d4">10.0</data>
      <data key="d5">Next.js includes built-in support for image optimization, allowing developers to configure how images are handled in their applications.
Next.js provides options for optimizing images, which is crucial for improving loading times and performance.
Next.js includes built-in components for optimizing images, enhancing application performance.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,dcf475d04bc2e922a55271ba1bff9465,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="DATE-FNS">
      <data key="d4">12.0</data>
      <data key="d5">Next.js can utilize date-fns for date manipulation and formatting within applications built using the framework.
Date-fns is optimized for use with Next.js, providing date manipulation capabilities</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="LODASH-ES">
      <data key="d4">12.0</data>
      <data key="d5">Next.js applications can leverage lodash-es for utility functions to enhance data handling and manipulation.
Lodash-es is optimized for use with Next.js, offering utility functions for JavaScript</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="RAMDA">
      <data key="d4">12.0</data>
      <data key="d5">Next.js can integrate Ramda for functional programming paradigms in web applications.
Ramda is optimized for use with Next.js, providing functional programming utilities</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="ANT DESIGN">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be used with Ant Design to create visually appealing and responsive user interfaces.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="REACT-BOOTSTRAP">
      <data key="d4">15.0</data>
      <data key="d5">Next.js can incorporate React-Bootstrap for building responsive layouts and components in web applications.
React-Bootstrap is optimized for use with Next.js, offering Bootstrap components for React</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="AHOOKS">
      <data key="d4">12.0</data>
      <data key="d5">Next.js applications can utilize ahooks for managing state and side effects effectively.
Ahooks is optimized for use with Next.js, providing a collection of useful React Hooks</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="HEADLESS UI">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be paired with Headless UI to create accessible and customizable UI components.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="MUI">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be used with MUI to implement Material Design components in web applications.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="REACT-USE">
      <data key="d4">5.0</data>
      <data key="d5">Next.js applications can benefit from react-use for common hooks that simplify development.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="RECHARTS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can integrate Recharts for creating interactive charts and data visualizations.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="TABLER ICONS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can utilize Tabler Icons for incorporating SVG icons into web applications.</data>
      <data key="d6">dcf475d04bc2e922a55271ba1bff9465</data>
    </edge>
    <edge source="NEXT.JS" target="CLOUDFLARE">
      <data key="d4">11.0</data>
      <data key="d5">Next.js applications can be deployed on Cloudflare's infrastructure, benefiting from its content delivery network services.
Next.js can utilize Cloudflare for performance and security enhancements</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="CONTENTFUL">
      <data key="d4">10.0</data>
      <data key="d5">Next.js can integrate with Contentful for managing and delivering content in web applications.
Next.js can be used with Contentful for managing and delivering content</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="FASTLY">
      <data key="d4">11.0</data>
      <data key="d5">Next.js can be optimized for performance using Fastly's content delivery network services.
Next.js can be configured to use Fastly for content delivery and performance optimization</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="GUMLET">
      <data key="d4">10.0</data>
      <data key="d5">Next.js applications can utilize Gumlet for image optimization and delivery.
Next.js can integrate with Gumlet for image optimization and delivery</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="IMGIX">
      <data key="d4">10.0</data>
      <data key="d5">Next.js can leverage Imgix for real-time image processing in web applications.
Next.js can be configured to use Imgix for real-time image processing</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="SANITY">
      <data key="d4">10.0</data>
      <data key="d5">Next.js can be used with Sanity for structured content management and delivery.
Sanity can be used with Next.js for managing structured content and generating image URLs</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </edge>
    <edge source="NEXT.JS" target="SIRV">
      <data key="d4">11.0</data>
      <data key="d5">Next.js applications can utilize Sirv for dynamic image hosting and optimization.
Sirv can be utilized in Next.js applications for dynamic image delivery and optimization</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </edge>
    <edge source="NEXT.JS" target="SUPABASE">
      <data key="d4">17.0</data>
      <data key="d5">Next.js can integrate with Supabase for backend services, including storage and image transformations.
Supabase can be used with Next.js to provide backend services including authentication and database management.
Supabase can be integrated with Next.js for backend services and image transformations</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,7b0e16fa06f15b959c34b3d3401845e8,a9c779cfa21a679f557dbbc90283565f</data>
    </edge>
    <edge source="NEXT.JS" target="THUMBOR">
      <data key="d4">2.0</data>
      <data key="d5">Next.js can utilize Thumbor for on-demand image processing in web applications.
Thumbor can be used in Next.js applications for on-demand image resizing and filtering</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685,a9c779cfa21a679f557dbbc90283565f</data>
    </edge>
    <edge source="NEXT.JS" target="CORS">
      <data key="d4">20.0</data>
      <data key="d5">Next.js provides options to configure CORS for API endpoints
Next.js allows configuration of CORS headers to control access to resources from different origins.
CORS settings can be configured in Next.js applications to manage cross-origin requests.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="X-DNS-PREFETCH-CONTROL">
      <data key="d4">17.0</data>
      <data key="d5">Next.js can utilize X-DNS-Prefetch-Control to enhance performance by reducing latency
Next.js can set the X-DNS-Prefetch-Control header to improve resource loading times.
Next.js can utilize the X-DNS-Prefetch-Control header to improve link loading times by prefetching DNS records.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="STRICT-TRANSPORT-SECURITY">
      <data key="d4">16.0</data>
      <data key="d5">Next.js automatically adds Strict-Transport-Security headers to ensure secure connections
Next.js can enforce Strict-Transport-Security to ensure secure connections to the site.
Next.js applications can implement Strict-Transport-Security to ensure secure connections via HTTPS.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="X-FRAME-OPTIONS">
      <data key="d4">13.0</data>
      <data key="d5">Next.js can implement X-Frame-Options to prevent clickjacking attacks
Next.js applications can set the X-Frame-Options header to prevent clickjacking attacks.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="PERMISSIONS-POLICY">
      <data key="d4">11.0</data>
      <data key="d5">Next.js allows configuration of Permissions-Policy to control browser features
Next.js supports the Permissions-Policy header to control the use of browser features and APIs, enhancing security.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="X-CONTENT-TYPE-OPTIONS">
      <data key="d4">13.0</data>
      <data key="d5">Next.js can set X-Content-Type-Options to prevent content type guessing
Next.js can implement the X-Content-Type-Options header to prevent MIME-sniffing attacks.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="REFERRER-POLICY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can configure Referrer-Policy to manage referrer information
Next.js applications can configure the Referrer-Policy header to control referrer information sent with requests.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="CONTENT-SECURITY-POLICY">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports adding Content-Security-Policy to enhance security</data>
      <data key="d6">ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC IMAGE IMPORTS">
      <data key="d4">18.0</data>
      <data key="d5">Next.js supports Static Image Imports to optimize image loading and caching
Static image imports are a specific method used in Next.js for handling images
Next.js handles static image imports differently than CRA, optimizing images for better performance</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,ab869c819df53e1e9e3adebf6a4234a2,ccae232c83746c7020e2c1ff92d50349</data>
    </edge>
    <edge source="NEXT.JS" target="GETSTATICPROPS">
      <data key="d4">110.0</data>
      <data key="d5">Next.js utilizes getStaticProps for static generation of pages
getStaticProps is a specific function within the Next.js framework that allows for static site generation
Next.js utilizes getStaticProps for static generation of pages at build time
getStaticProps is a function that was used in Next.js for static data fetching.
getStaticProps is a data fetching method provided by Next.js for static site generation
getStaticProps is a feature of Next.js that allows for static generation of pages with data fetched at build time.
Next.js uses getStaticProps to fetch data at build time for static pages
getStaticProps is a function provided by Next.js for static generation of pages
getStaticProps is a function provided by Next.js for static generation
Next.js utilizes getStaticProps to enable static generation of pages at build time.
getStaticProps is a function provided by Next.js for static page generation, enhancing performance and SEO
getStaticProps is a function provided by Next.js to enable static generation of pages with data
Next.js utilizes getStaticProps to fetch data for pages at build time, enhancing performance
getStaticProps is a method used in Next.js for static site generation</data>
      <data key="d6">3678e68072101ac922b838851eaa8465,391895fc365f2f2512a45ea503fbfa86,45fc1e950172cd0fb4a7f0162afae421,56ab21d16e9b86cd9d551ec941e65b04,7cd464b0f42ff05e87fa7e149d7e2997,98961c89bf003488bbe6223bc946b205,b61989d8657d5b33a55c584f46e7d436,ccae232c83746c7020e2c1ff92d50349,ccf507e98d23ff18f3ca206f0a8f29a2,d96f8e049ce9a691971e1a92b5b556af,e5dd9b12a829becf46c92a1a02044920,e871ceb5e34368061b569a8df8c57c33,ef6fa1b3e61aee8ae358b362e18f319d,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="NEXT.JS" target="GETSERVERSIDEPROPS">
      <data key="d4">31.0</data>
      <data key="d5">Next.js uses getServerSideProps for server-side rendering of pages
getServerSideProps is a function in Next.js that allows server-side rendering for dynamic data fetching.
Next.js uses getServerSideProps to fetch data at request time for server-rendered pages
getServerSideProps is a method used in Next.js for server-side rendering</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248,ccae232c83746c7020e2c1ff92d50349,e5dd9b12a829becf46c92a1a02044920,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="GETSTATICPATHS">
      <data key="d4">26.0</data>
      <data key="d5">Next.js employs getStaticPaths to pre-render dynamic routes
getStaticPaths is a feature of Next.js that allows for dynamic routing by generating paths for static pages.
getStaticPaths is a function provided by Next.js for pre-rendering dynamic routes
getStaticPaths is a function provided by Next.js to enable dynamic routing based on external data
Next.js uses getStaticPaths to pre-render dynamic routes based on the paths returned
getStaticPaths is a function in Next.js that allows developers to define dynamic routes for static generation, linking it to the framework's capabilities.</data>
      <data key="d6">391895fc365f2f2512a45ea503fbfa86,7cd464b0f42ff05e87fa7e149d7e2997,815b3c1f78ab2336e7e5bdae07b49d2b,b61989d8657d5b33a55c584f46e7d436,ccae232c83746c7020e2c1ff92d50349,e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="NEXT.JS" target="GIT_HASH">
      <data key="d4">7.0</data>
      <data key="d5">GIT_HASH is used in Next.js to generate a consistent build ID during the build process</data>
      <data key="d6">d1675bdf7576ae8e63e95f4105fcb693</data>
    </edge>
    <edge source="NEXT.JS" target="PROCESS.ENV">
      <data key="d4">12.0</data>
      <data key="d5">Next.js applications utilize process.env to manage environment variables for configuration
Next.js applications can utilize process.env to access environment variables for configuration</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,83cffab512363b08e89e0b35424b489c</data>
    </edge>
    <edge source="NEXT.JS" target="BROTLI">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can utilize Brotli compression for better performance when hosted on Vercel
Next.js can utilize Brotli compression when hosted on Vercel, providing enhanced performance for web applications.</data>
      <data key="d6">4443464e7a2cb4bcbbf667881fecb236,83cffab512363b08e89e0b35424b489c</data>
    </edge>
    <edge source="NEXT.JS" target="ELECTRON">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can be integrated into Electron applications for building desktop applications</data>
      <data key="d6">83cffab512363b08e89e0b35424b489c</data>
    </edge>
    <edge source="NEXT.JS" target="BUNDLEPAGESROUTERDEPENDENCIES">
      <data key="d4">13.0</data>
      <data key="d5">The bundlePagesRouterDependencies option is a feature of Next.js that enhances the performance of applications by optimizing server-side dependency management.
Next.js provides the bundlePagesRouterDependencies option to optimize package loading</data>
      <data key="d6">4647f3f9cf6eaae5dadd71a1dc2e58ae,cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="BASEPATH">
      <data key="d4">30.0</data>
      <data key="d5">The basePath option is a feature in Next.js that allows applications to be served from a specific sub-path, affecting routing and asset loading.
BasePath is a configuration option in Next.js that affects routing behavior
Next.js uses basePath to manage routing under a specific path
Next.js allows developers to configure a base path for their applications, which affects routing and header application.
Next.js applications utilize basePath to define unique path prefixes for different zones, preventing routing conflicts</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b,4647f3f9cf6eaae5dadd71a1dc2e58ae,56ab21d16e9b86cd9d551ec941e65b04,d1d62ecebefc7d4d3ed8c06e50adc45c,ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </edge>
    <edge source="NEXT.JS" target="ASSETPREFIX">
      <data key="d4">8.0</data>
      <data key="d5">The assetPrefix option in Next.js allows for the configuration of a CDN for serving static assets, improving load times and performance.
Next.js can be configured to use assetPrefix for serving static assets from a different domain</data>
      <data key="d6">4647f3f9cf6eaae5dadd71a1dc2e58ae,4f1b35d4044fdc993b02fcfb2db35bd6</data>
    </edge>
    <edge source="NEXT.JS" target="USER AGENT">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes the userAgent helper to enhance the Web Request API for user agent interactions</data>
      <data key="d6">cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </edge>
    <edge source="NEXT.JS" target="TYPE SCRIPT">
      <data key="d4">45.0</data>
      <data key="d5">Next.js supports TypeScript for building applications, allowing developers to use static typing
Next.js supports TypeScript for building applications with type safety
Next.js supports TypeScript, allowing developers to write type-safe code in their applications
Next.js supports TypeScript, enabling developers to write type-safe code in their applications
Next.js supports TypeScript, allowing developers to write type-safe code in their applications
Next.js supports TypeScript, enabling developers to use static typing in their applications.
TypeScript is commonly used in Next.js applications to provide static typing
TypeScript is often used with Next.js to provide type safety and improve developer experience
Next.js supports TypeScript, allowing developers to write type-safe code in their applications.
TypeScript is often used in Next.js applications to provide type safety and enhance development experience.
Next.js can be used with TypeScript to enhance type safety in applications
Next.js supports TypeScript for building applications with type safety
Next.js supports TypeScript, allowing developers to write applications with static typing for better maintainability and error detection.</data>
      <data key="d6">016bf1f47e649cd8112b488d5c847dcc,03986c3b8388e42d1b82f4db5232270e,173e80ccbe8ecd833c055f4cd3e75ee6,5791705a1f965d3a768f111e7fdcade1,77bf22c1fcd1e61ff866f696397b3a69,7a1bd3f71b0a9aadbba7495339a8b723,7bc622b9dda4deed82c3382772daca19,84b5c29553feb2883a2e93ffbac5b791,9f6dc0f379759d79c664c445c0051202,a19a92a20fca1ccc164ea11570a4b26a,a5566406ae5db585eb3829f4a25e7025,cbe1cbb01bd5b9f4a5f9276b9f1aaa77,d5c8e583b99d40e21e52e5d76498cb0d</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.CONFIG.MJS">
      <data key="d4">22.0</data>
      <data key="d5">Next.js supports next.config.mjs for projects that require ECMAScript module syntax
next.config.mjs is a configuration file specifically for Next.js applications
next.config.mjs is used to configure options specific to Next.js applications</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe,95c2ea5a0f820f012ba0ea521843d34d,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT.CONFIG.TS">
      <data key="d4">28.0</data>
      <data key="d5">Next.js allows the use of next.config.ts for TypeScript-based configurations
next.config.ts is used in Next.js for configuration, allowing for better type inference and supporting ESM modules
next.config.ts is a configuration file used in Next.js to customize application settings
next.config.ts serves the same purpose as next.config.js but is written in TypeScript, providing type safety and better development experience
next.config.ts serves the same purpose as next.config.js but uses TypeScript, indicating its relevance to Next.js configuration.
next.config.ts allows for TypeScript type checking in Next.js configuration, enhancing the development experience with type safety.</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e,391895fc365f2f2512a45ea503fbfa86,815b3c1f78ab2336e7e5bdae07b49d2b,936f58e9a3d0c41d6fd88ca7b6e0a119,9726f4ae30b11539c429ff41c8326d46,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </edge>
    <edge source="NEXT.JS" target="PAGE">
      <data key="d4">48.0</data>
      <data key="d5">Pages in Next.js are components that render content and manage state, leveraging the capabilities of the Next.js framework
Pages are built using the Next.js framework, which allows for server-side rendering and static generation.
Next.js is designed to create pages that can be rendered on both the server and client sides
Next.js allows the creation of pages that are unique to specific routes in the application
The page component is a part of the Next.js routing system, defining the content for specific routes
Page is a fundamental concept in Next.js, representing a route in the application
Next.js allows the creation of pages by exporting components from page.js files</data>
      <data key="d6">170893bac86ced48a278abde4d144710,1d855e055624fb34345331017d371137,223233d7a3658c1a7836573abacf9175,455e168c432979d018ea3d145e2547b5,4dfb13dff74e4dc45c19d4d71fe1a443,52bf7bb5a492d2cb5b2f5f06d6507a81,52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="NEXT.JS" target="DASHBOARD">
      <data key="d4">21.0</data>
      <data key="d5">The dashboard is a page within a Next.js application, showcasing user-specific data and functionalities
The Dashboard is a component built using the Next.js framework to display project data
Dashboard is a component that utilizes Next.js to provide a shared layout for various routes
Next.js provides the framework for building dashboards that display key information and metrics</data>
      <data key="d6">170893bac86ced48a278abde4d144710,1b3c3a93e182b501d03ffb0b41273e30,56ab21d16e9b86cd9d551ec941e65b04,a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTER">
      <data key="d4">36.0</data>
      <data key="d5">The router is a core component of Next.js that manages navigation and routing within the application
The Router is a core component of the Next.js framework, facilitating navigation and route management.
Next.js includes a Router component to facilitate navigation between pages
The router is a core feature of the Next.js framework that manages navigation and routing
The router is an integral part of the Next.js framework, managing navigation and routing
Next.js includes a Router that manages navigation and routing within the application</data>
      <data key="d6">170893bac86ced48a278abde4d144710,223233d7a3658c1a7836573abacf9175,7ad571c896064ee6e36a4acd93898e88,a50f51132c97b3887f2b21ed846fa020,ab49838f472483f11a1afbcaff84ad1e,d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="NEXT.JS" target="USER TIMING API">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can utilize the User Timing API to measure performance metrics effectively.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="NEXT.JS" target="NEXTRESPONSE">
      <data key="d4">17.0</data>
      <data key="d5">NextResponse is a feature of Next.js that enhances the handling of HTTP responses.
NextResponse is part of the Next.js framework, used for sending responses
Next.js provides the NextResponse object to manage outgoing responses in server-side functions</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85,ba53cb824bd4e5b80d861ee299c10f92,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="NEXT.JS" target="USE REPORT WEB VITALS">
      <data key="d4">8.0</data>
      <data key="d5">The useReportWebVitals hook in Next.js is designed to help developers track and report web performance metrics.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="NEXT.JS" target="FETCH">
      <data key="d4">42.0</data>
      <data key="d5">Next.js applications can utilize the Fetch API to make network requests for data fetching.
fetch is commonly used in Next.js applications to retrieve data from APIs or servers
Next.js extends the Web fetch() API to allow server-side requests to set caching and revalidation semantics
Next.js applications utilize the Fetch API to retrieve data from external sources
Next.js utilizes the Fetch API to retrieve data from external sources for rendering web pages
Next.js utilizes the Fetch API for data retrieval in both server and client components</data>
      <data key="d6">20652ea1750ad5513b326c308672d886,234c5cf6d90b5c8b7d3583a3300a4752,6b625fce8c9b4b0f729aa3cdc85d284d,86965ee0055fe16d855a4f0e993b9d85,98b8f4a199a3050f92608604cd0974b2,e2066c317993455c32b6ebbfabfb5497</data>
    </edge>
    <edge source="NEXT.JS" target="NAVIGATOR">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can leverage the Navigator object to gather information about the user's browser environment.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="NEXT.JS" target="AMP OPTIMIZER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can integrate with AMP Optimizer to enhance the performance of AMP pages.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="NEXT.JS" target="HYPERLINK">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications often use hyperlinks to navigate between different pages and resources.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC PROPS">
      <data key="d4">17.0</data>
      <data key="d5">Static props are a feature of Next.js that allows data fetching at build time for pre-rendering pages.
Next.js utilizes static props to fetch data at build time for pre-rendering pages</data>
      <data key="d6">8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC PATHS">
      <data key="d4">10.0</data>
      <data key="d5">Static paths are a feature of Next.js that allows dynamic routes to be pre-rendered at build time.
Next.js uses static paths to determine which routes to pre-render during the build process</data>
      <data key="d6">8735729cb47a3e421748c05ffb31502f,e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC GENERATION">
      <data key="d4">27.0</data>
      <data key="d5">Static generation is a core feature of Next.js that allows pages to be pre-rendered at build time for better performance.
Static generation is a core capability of Next.js that allows for fast page loads
Static Generation is a feature of Next.js that allows for pre-rendering pages at build time</data>
      <data key="d6">3678e68072101ac922b838851eaa8465,c8d58fd330c4f217c52b50590414e517,e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="404 STATUS">
      <data key="d4">6.0</data>
      <data key="d5">The 404 status is used in Next.js to indicate that a page was not found, often handled with custom error pages.</data>
      <data key="d6">e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="PROCESS.CWD">
      <data key="d4">1.0</data>
      <data key="d5">process.cwd() is utilized in Next.js for resolving file paths correctly in server-side functions.</data>
      <data key="d6">e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="NEXT.JS" target="FALLBACK">
      <data key="d4">15.0</data>
      <data key="d5">Next.js implements fallback behavior to manage paths not pre-rendered at build time
Next.js implements fallback to manage loading states for pages that are not yet generated
Next.js uses fallback to handle requests that do not match any defined routes</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b,8735729cb47a3e421748c05ffb31502f,ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="NEXT.JS" target="API">
      <data key="d4">38.0</data>
      <data key="d5">Next.js applications often utilize APIs to fetch data for rendering pages, especially when using static props
Next.js can interact with APIs to fetch data for rendering pages
Next.js provides APIs for developers to build and manage web applications effectively
Next.js provides built-in API routes that allow developers to create server-side functionality easily.
Next.js applications often interact with APIs to fetch data for rendering pages
Next.js provides built-in support for creating APIs through its routing system</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a,3678e68072101ac922b838851eaa8465,72e1433a8550144aaf1d1fd8f3cb3774,7cf992845bf79c5ec4ae2614617a79f4,8735729cb47a3e421748c05ffb31502f,99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD TIME">
      <data key="d4">9.0</data>
      <data key="d5">Next.js performs various optimizations and pre-rendering during build time to enhance performance
Build time is when Next.js generates static pages for deployment</data>
      <data key="d6">8735729cb47a3e421748c05ffb31502f,b61989d8657d5b33a55c584f46e7d436</data>
    </edge>
    <edge source="NEXT.JS" target="GETINITIALPROPS">
      <data key="d4">20.0</data>
      <data key="d5">Next.js provides getInitialProps as a legacy data fetching method for pages
getInitialProps is a method used in Next.js for data fetching before rendering a page.
getInitialProps is a method in Next.js that enables data fetching before rendering, showcasing its integration with the framework.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248,815b3c1f78ab2336e7e5bdae07b49d2b,ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="NEXT.JS" target="INCREMENTAL STATIC REGENERATION">
      <data key="d4">46.0</data>
      <data key="d5">Next.js supports Incremental Static Regeneration to allow updates to static pages
Next.js allows for incremental static regeneration to update static pages without a full rebuild
Next.js implements Incremental Static Regeneration to allow for dynamic updates of static pages
Incremental Static Regeneration is a feature of Next.js that allows for updating static content
Next.js implements incremental static regeneration to allow updates to static content without a full rebuild
Next.js implements Incremental Static Regeneration to allow updates to static content without a full rebuild
Incremental Static Regeneration is a feature provided by Next.js that allows for updating static content without a full rebuild
Incremental Static Regeneration is a feature of Next.js that allows for dynamic updates of static pages
Incremental Static Regeneration is a feature of Next.js that allows for updating static content without a full rebuild</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a,3678e68072101ac922b838851eaa8465,4f1b35d4044fdc993b02fcfb2db35bd6,66fea93bb642287d13f3a25b8b3e0083,9bc82a2671446cca168796fea771ecad,adb5bec4b54e83924618cafc99d40e24,af00e01481cac23e3b67c635215254ab,ccf507e98d23ff18f3ca206f0a8f29a2,ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="NEXT.JS" target="STYLED-COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can utilize styled-components for styling React components</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="NEXT.JS" target="URL OBJECT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can utilize URL objects for dynamic routing and navigation</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="NEXT.JS" target="LOADING STRATEGY">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides different loading strategies for scripts to optimize performance</data>
      <data key="d6">80a786416360b0f3873c10b0b635c67b</data>
    </edge>
    <edge source="NEXT.JS" target="WEB.DEV">
      <data key="d4">6.0</data>
      <data key="d5">Web.dev provides information and best practices for using Next.js effectively</data>
      <data key="d6">7b971bc32d696dda8aea178d02a73fea</data>
    </edge>
    <edge source="NEXT.JS" target="MDN">
      <data key="d4">1.0</data>
      <data key="d5">MDN offers documentation that can help developers understand how to use Next.js and its features</data>
      <data key="d6">7b971bc32d696dda8aea178d02a73fea</data>
    </edge>
    <edge source="NEXT.JS" target="ACME">
      <data key="d4">17.0</data>
      <data key="d5">Next.js is a framework that could be used by organizations like Acme for web development
Acme utilizes Next.js framework for building its web applications and managing sitemaps.
Next.js is a framework used by Acme for building web applications and managing metadata.</data>
      <data key="d6">5791705a1f965d3a768f111e7fdcade1,5eccc9b6c90fe181c8a1389dcb99435b,c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE OPTIMIZATION API">
      <data key="d4">40.0</data>
      <data key="d5">The Image Optimization API is a feature provided by Next.js to enhance image handling in web applications
Next.js provides the Image Optimization API to enhance image loading performance in web applications
Next.js utilizes the Image Optimization API to enhance image loading performance in web applications
The Image Optimization API is a feature of Next.js that enhances image loading performance
Next.js includes the Image Optimization API as a core feature to enhance image loading performance</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d,179a1a7e8e9c1777096b12c6bb6ff93c,5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="LOADER FILE">
      <data key="d4">12.0</data>
      <data key="d5">The loader file is a configuration option within Next.js that allows for custom image loading behavior
Next.js requires a loader file to define how images are loaded when using a custom image loader</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="DEVICE SIZES">
      <data key="d4">12.0</data>
      <data key="d5">Device sizes are a configuration setting in Next.js that helps optimize image delivery based on user devices
Next.js allows developers to specify device sizes for optimized image serving</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE SIZES">
      <data key="d4">7.0</data>
      <data key="d5">Image sizes are a configuration in Next.js that allows for better management of image rendering based on specific requirements
Next.js provides a way to configure image sizes for responsive image handling</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b,affc1268c54094ecde29441589759673</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC IMAGE IMPORT">
      <data key="d4">22.0</data>
      <data key="d5">Static Image Import is a feature provided by Next.js to enhance image handling in applications
Next.js allows the use of Static Image Import to simplify the process of including images in applications
Static Image Import is a feature provided by Next.js to enhance image loading performance</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c,b0ea8bc9e77f37505a6e3b25a48b4dbb,db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT.JS" target="DANGEROUSLYALLOWSVG">
      <data key="d4">6.0</data>
      <data key="d5">DangerouslyAllowSVG is a configuration option in Next.js that modifies how SVG images are handled</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="NEXT.JS" target="RESPONSIVE IMAGES">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides features for rendering responsive images to improve user experience across devices</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="NEXT.JS" target="LEGACY">
      <data key="d4">1.0</data>
      <data key="d5">The legacy version of the Image component was part of the Next.js framework before the introduction of the new next/image component.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIGURATION OPTIONS">
      <data key="d4">1.0</data>
      <data key="d5">Configuration options are part of Next.js that allow developers to set up various features, including image handling</data>
      <data key="d6">ccacadee21d69e15eb428a9a9d8de65f</data>
    </edge>
    <edge source="NEXT.JS" target="REMOTE PATTERNS">
      <data key="d4">21.0</data>
      <data key="d5">Remote patterns are a configuration option within Next.js that allows for secure handling of external images
Next.js requires remote patterns configuration to optimize images from external sources
Next.js uses remote patterns to define external image sources for optimization</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d,affc1268c54094ecde29441589759673,ccacadee21d69e15eb428a9a9d8de65f</data>
    </edge>
    <edge source="NEXT.JS" target="UNOPTIMIZED IMAGES">
      <data key="d4">5.0</data>
      <data key="d5">Unoptimized images can be configured in Next.js to bypass the built-in image optimization features</data>
      <data key="d6">ccacadee21d69e15eb428a9a9d8de65f</data>
    </edge>
    <edge source="NEXT.JS" target="CLOUDINARY">
      <data key="d4">31.0</data>
      <data key="d5">Cloudinary can be used as a loader in Next.js for image management and optimization.
Next.js can utilize Cloudinary for image optimization in static exports by defining a custom image loader.
Next.js can integrate with Cloudinary for image management and optimization
Next.js can integrate with Cloudinary for image optimization and management
Cloudinary can be integrated with Next.js for managing images and videos in web applications</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab,e871ceb5e34368061b569a8df8c57c33,e90648c68d5bac977f4df1b052ea3636,e99cfa8c07448d7a84d08d3a5ba6dc7a,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="NEXT.JS" target="AKAMAI">
      <data key="d4">12.0</data>
      <data key="d5">Akamai can be integrated with Next.js for content delivery and optimization.
Next.js can be configured to use Akamai for image optimization and content delivery</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab,e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIGURATION">
      <data key="d4">8.0</data>
      <data key="d5">Configuration settings are applied within Next.js to customize the behavior of image optimization.
Configuration settings in next.config.js control various functionalities of Next.js applications.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f,e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="NEXT.JS" target="FONT MODULE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides the Font Module to help developers optimize font usage in their applications</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE-CONTROL HEADER">
      <data key="d4">20.0</data>
      <data key="d5">Next.js utilizes Cache-Control headers to manage caching behavior for optimized images
Next.js automatically sets Cache-Control headers for managing caching of static assets
Next.js recommends not setting the Cache-Control header when using Preview Mode</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,db79d898afcf0c4fadf71858f0b3e795,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="INTER">
      <data key="d4">22.0</data>
      <data key="d5">Inter can be used in Next.js applications to style text elements effectively.
Inter is a font that can be used in Next.js applications for styling text
Inter is a font that can be used within Next.js applications to enhance typography
Inter is a font that can be integrated into Next.js applications for improved typography.</data>
      <data key="d6">7bc622b9dda4deed82c3382772daca19,a39499341fdd66534be31b2131784b51,e36d6ba428fb6e6b41847dce90fde4cc,f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="NEXT.JS" target="UPGRADING TO VERSION 9">
      <data key="d4">7.0</data>
      <data key="d5">The event of upgrading to version 9 is directly related to the Next.js framework</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC ROUTING">
      <data key="d4">6.0</data>
      <data key="d5">Dynamic Routing is a feature introduced in Next.js 9</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM APP FILE">
      <data key="d4">7.0</data>
      <data key="d5">The Custom App File is a feature of Next.js that allows customization of the application</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="SOURCE SANS 3">
      <data key="d4">8.0</data>
      <data key="d5">Source Sans 3 is a font that can be utilized in Next.js applications for various text styles</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="GREAT VIBES">
      <data key="d4">8.0</data>
      <data key="d5">Great Vibes is a font that can be incorporated into Next.js applications for decorative text</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="FONTS.TS">
      <data key="d4">9.0</data>
      <data key="d5">The fonts.ts file is integral to managing font styles in a Next.js application</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="FONT DEFINITIONS FILE">
      <data key="d4">1.0</data>
      <data key="d5">The font definitions file is essential for organizing font usage in Next.js applications</data>
      <data key="d6">a39499341fdd66534be31b2131784b51</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 11">
      <data key="d4">9.0</data>
      <data key="d5">Version 11 is the latest release of Next.js, which includes significant updates and features</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="@TYPES/NEXT">
      <data key="d4">5.0</data>
      <data key="d5">The @types/next package is related to Next.js as it provides TypeScript definitions for the framework</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="@TYPES/REACT">
      <data key="d4">5.0</data>
      <data key="d5">The @types/react package is related to Next.js as it provides TypeScript definitions for React, which is a dependency of Next.js</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Dynamic components are a feature of Next.js that has been updated in version 11</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES/API">
      <data key="d4">1.0</data>
      <data key="d5">Next.js now treats pages in the pages/api/ directory as API Routes, which is a new feature in version 11</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="NEXT.JS" target="CLEANING DISTDIR">
      <data key="d4">7.0</data>
      <data key="d5">Next.js has a new default behavior of cleaning the distDir during builds</data>
      <data key="d6">ab49838f472483f11a1afbcaff84ad1e</data>
    </edge>
    <edge source="NEXT.JS" target="UPGRADING TO REACT 17">
      <data key="d4">1.0</data>
      <data key="d5">Next.js 11 requires upgrading to React 17 for compatibility with the new JSX transform</data>
      <data key="d6">ab49838f472483f11a1afbcaff84ad1e</data>
    </edge>
    <edge source="NEXT.JS" target="MOMENT.JS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js applications can utilize Moment.js for date and time manipulation</data>
      <data key="d6">ab49838f472483f11a1afbcaff84ad1e</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 10">
      <data key="d4">7.0</data>
      <data key="d5">Version 10 is a specific release of Next.js that introduced no breaking changes, indicating a direct relationship between the framework and its versioning.</data>
      <data key="d6">60041d4c2667ea62ef90a73e1138bae6</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 12">
      <data key="d4">23.0</data>
      <data key="d5">Version 12 is a specific release of Next.js that introduced significant new features and improvements, showing a direct relationship between the framework and its versioning.
Version 12 is the prior version of the Next.js framework, which has been succeeded by version 13
Version 12 is a significant update to Next.js that introduced new features and improvements
Version 12 of Next.js introduced significant updates and features that improved the framework's functionality</data>
      <data key="d6">016bf1f47e649cd8112b488d5c847dcc,564b1122ed77a335ef83dd856be6b406,60041d4c2667ea62ef90a73e1138bae6,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="BUN">
      <data key="d4">6.0</data>
      <data key="d5">Bun can be used to run Next.js applications, indicating a relationship between the runtime and the framework.</data>
      <data key="d6">60041d4c2667ea62ef90a73e1138bae6</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 13">
      <data key="d4">26.0</data>
      <data key="d5">Version 13 is a release of the Next.js framework, indicating an upgrade in its capabilities and features
Version 13 is the latest update to Next.js, bringing new features and enhancements
Version 13 of Next.js brought new features and optimizations, including the App Router and improved components</data>
      <data key="d6">016bf1f47e649cd8112b488d5c847dcc,564b1122ed77a335ef83dd856be6b406,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT/IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">The next/image component is a key feature of Next.js for handling images efficiently</data>
      <data key="d6">564b1122ed77a335ef83dd856be6b406</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT/LINK">
      <data key="d4">8.0</data>
      <data key="d5">The next/link component is an integral part of Next.js for enabling navigation</data>
      <data key="d6">564b1122ed77a335ef83dd856be6b406</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT/SCRIPT">
      <data key="d4">7.0</data>
      <data key="d5">The next/script component is used within Next.js to manage script loading</data>
      <data key="d6">564b1122ed77a335ef83dd856be6b406</data>
    </edge>
    <edge source="NEXT.JS" target="FONT OPTIMIZATION">
      <data key="d4">18.0</data>
      <data key="d5">Next.js provides features for font optimization to enhance performance
Font Optimization is a feature provided by Next.js to improve font loading.
Next.js includes built-in font optimization features to enhance performance and privacy</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,564b1122ed77a335ef83dd856be6b406,7e52aca588d432140f210661ae169677</data>
    </edge>
    <edge source="NEXT.JS" target="ROOT LAYOUT">
      <data key="d4">25.0</data>
      <data key="d5">The Root Layout is a fundamental part of the Next.js app directory structure.
Next.js utilizes root layouts to define the structure of web applications, including the &lt;html&gt; and &lt;body&gt; tags.
The root layout is a fundamental component in Next.js applications, serving as the main structure for rendering pages
The Root Layout is a fundamental part of the Next.js app directory structure, indicating a strong relationship as it defines the layout for all routes</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,6ebc8c74b9b797357659151a46693a88,a5566406ae5db585eb3829f4a25e7025,a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="NEXT.JS" target="MIGRATING">
      <data key="d4">6.0</data>
      <data key="d5">Migrating refers to the process of transitioning to the new app directory in Next.js.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="NEXT.JS" target="GETSERVERPROPS">
      <data key="d4">29.0</data>
      <data key="d5">getServerSideProps is a function that was used in Next.js for server-side data fetching.
getServerSideProps is a data fetching method provided by Next.js for server-side rendering
getServerSideProps is a function provided by Next.js for server-side rendering of pages
getServerSideProps is a function provided by Next.js for server-side rendering</data>
      <data key="d6">3678e68072101ac922b838851eaa8465,391895fc365f2f2512a45ea503fbfa86,45fc1e950172cd0fb4a7f0162afae421,56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATESTATICPARAMS">
      <data key="d4">6.0</data>
      <data key="d5">generateStaticParams is a new function in Next.js for generating static parameters.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR FILE">
      <data key="d4">13.0</data>
      <data key="d5">The error.js file is used in Next.js for handling errors in applications.
The error file is a feature of Next.js that allows for handling unexpected runtime errors</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="NOT FOUND FILE">
      <data key="d4">5.0</data>
      <data key="d5">The not-found.js file is used in Next.js for handling 404 errors.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="NEXT.JS" target="API ROUTES">
      <data key="d4">32.0</data>
      <data key="d5">API Routes were a feature in Next.js that have been replaced with route.js.
API Routes are a feature of Next.js that allows for server-side request handling
API Routes are a feature of Next.js that allows developers to create server-side endpoints for handling requests
Next.js provides a framework for creating API Routes within web applications
API Routes are a feature of Next.js that allows for server-side functionality, indicating a close relationship with the framework</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51,0fec562f1c16117484e5946f3f2df826,45fc1e950172cd0fb4a7f0162afae421,6ebc8c74b9b797357659151a46693a88,7a1bd3f71b0a9aadbba7495339a8b723</data>
    </edge>
    <edge source="NEXT.JS" target="DOMAINLOCALES">
      <data key="d4">5.0</data>
      <data key="d5">Domain locales are used in Next.js to manage different language settings for various domains</data>
      <data key="d6">56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="NEXT.JS" target="ASPATH">
      <data key="d4">5.0</data>
      <data key="d5">asPath is a property in Next.js that provides the current path of the page</data>
      <data key="d6">56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="NEXT.JS" target="ISREADY">
      <data key="d4">1.0</data>
      <data key="d5">isReady is a property in Next.js that indicates the readiness of the router</data>
      <data key="d6">56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="NEXT.JS" target="TAILWIND CSS">
      <data key="d4">75.0</data>
      <data key="d5">Next.js supports Tailwind CSS for styling, allowing developers to use utility-first CSS in their applications
Next.js can be integrated with Tailwind CSS to create responsive and customizable web applications
Next.js and Tailwind CSS are both frameworks that enhance web development, with Tailwind being a CSS framework that integrates well with Next.js.
Next.js supports the integration of Tailwind CSS for styling applications using utility classes.
Next.js applications can utilize Tailwind CSS for styling and design
Next.js can be configured to work with Tailwind CSS, requiring specific adjustments in the configuration files.
Next.js can be used in conjunction with Tailwind CSS to enhance the styling of applications built with the framework.
Next.js works exceptionally well with Tailwind CSS, providing a seamless integration for utility-first styling in web applications.
Next.js supports the integration of Tailwind CSS for styling applications
Next.js supports Tailwind CSS as a styling option for building applications
Next.js includes Tailwind CSS configuration by default, enabling rapid UI development with utility classes.</data>
      <data key="d6">2f935bf8dd94b80e38c90109f4e620a3,3a82472230692a8c3ac8444f7738b625,66669d057195f54843266efcffb93a3b,7a1bd3f71b0a9aadbba7495339a8b723,7bc622b9dda4deed82c3382772daca19,816401f1962be5373b03365c403e3a92,8b55191578f60b2d2fac3ae2f4d05b2e,a19a92a20fca1ccc164ea11570a4b26a,dc07058d355dcb6432e4280af3eba3d0,e36d6ba428fb6e6b41847dce90fde4cc,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="APP DIRECTORY">
      <data key="d4">48.0</data>
      <data key="d5">The app directory is a key organizational structure within Next.js that enhances routing and component management
The app directory is a key part of the Next.js framework where components and pages are organized
Next.js provides the framework for organizing components within the app directory
Next.js utilizes the app directory to organize its framework functionalities and features
The app directory is a key feature of Next.js that defines the structure of routes and allows for safe colocation of project files.
The app directory is a key feature of Next.js that organizes application files and enhances routing capabilities.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6,7a1bd3f71b0a9aadbba7495339a8b723,8a317609f77f5ace7ebd5473071b9693,8b55191578f60b2d2fac3ae2f4d05b2e,9f6dc0f379759d79c664c445c0051202,a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES DIRECTORY">
      <data key="d4">8.0</data>
      <data key="d5">The pages directory is integral to Next.js for automatic routing and page management</data>
      <data key="d6">7a1bd3f71b0a9aadbba7495339a8b723</data>
    </edge>
    <edge source="NEXT.JS" target="GLOBAL STYLESHEETS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows for the use of global stylesheets to maintain consistent styling across the application</data>
      <data key="d6">7a1bd3f71b0a9aadbba7495339a8b723</data>
    </edge>
    <edge source="NEXT.JS" target="REACT SUSPENSE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js integrates with React Suspense to manage loading states effectively during data fetching
Next.js supports React Suspense for managing loading states in applications
React Suspense is utilized in Next.js applications to manage loading states for components, including video components</data>
      <data key="d6">7a1bd3f71b0a9aadbba7495339a8b723,f1523e8a9fafd09d83cab1c6c14f3955,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="CRA">
      <data key="d4">13.0</data>
      <data key="d5">Next.js is an alternative framework to Create React App for building React applications
Next.js can be used as an alternative to Create React App for building React applications with server-side rendering capabilities</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9,ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="POSTCSS">
      <data key="d4">28.0</data>
      <data key="d5">Next.js can utilize PostCSS for processing CSS files in applications
Next.js compiles CSS using PostCSS, which allows for various transformations and enhancements to CSS
Next.js allows customization of PostCSS configurations for CSS processing
PostCSS is used in Next.js for processing CSS files</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="AUTOPREFIXER">
      <data key="d4">21.0</data>
      <data key="d5">Next.js can use Autoprefixer as a PostCSS plugin for adding vendor prefixes to CSS
Next.js uses Autoprefixer to automatically add vendor prefixes to CSS rules for better cross-browser compatibility
Next.js allows the configuration of Autoprefixer to ensure CSS compatibility across different browsers</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="APP">
      <data key="d4">25.0</data>
      <data key="d5">The App component is part of the Next.js framework, specifically designed for client-side rendering
Next.js organizes its application structure within the app directory, defining routes and components
Next.js is the framework used to build the app directory, which contains the components and pages of the application
The app is built using the Next.js framework, leveraging its features for routing and component management</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,52bf7bb5a492d2cb5b2f5f06d6507a81,a50f51132c97b3887f2b21ed846fa020,ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="GLOBAL CSS">
      <data key="d4">21.0</data>
      <data key="d5">Global CSS is utilized in Next.js applications to maintain consistent styling across all components
Global CSS is utilized in Next.js applications to maintain a consistent style across all pages
Next.js allows the use of global CSS files to style applications consistently across all components.
Next.js allows the use of Global CSS for styling applications</data>
      <data key="d6">7bc622b9dda4deed82c3382772daca19,a9a858ea7abac3fe79fa759ea8171597,ab869c819df53e1e9e3adebf6a4234a2,dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="NEXT.JS" target="ENTRYPOINT PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The entrypoint page is a fundamental aspect of Next.js applications, defining the main route</data>
      <data key="d6">ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="CLIENT COMPONENT">
      <data key="d4">55.0</data>
      <data key="d5">Client Components are a key feature of Next.js, enabling client-side rendering
Client Components are a feature of Next.js that enhance interactivity in applications
Client Components are a key feature of Next.js that enhance user interactivity and experience
Client Component is a feature of Next.js that enhances client-side rendering capabilities
Client components are utilized in Next.js to create interactive user interfaces
Client Components are part of the Next.js framework, indicating a strong relationship as they are essential for building interactive applications
Client Components are utilized in Next.js to provide interactivity and dynamic updates in web applications
Next.js framework supports the use of Client Components and Server Components, facilitating the development of modern web applications.</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8,3fb45c793f55da9bb4eda5392e25aafe,4ce3b8264c29bdceda24edfe6f9bda41,6ebc8c74b9b797357659151a46693a88,98b8f4a199a3050f92608604cd0974b2,a046fdf9fbebaa56c0d37da25e453974,ab869c819df53e1e9e3adebf6a4234a2,b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="NEXT.JS" target="POSTCSS.CONFIG.JS">
      <data key="d4">7.0</data>
      <data key="d5">The postcss.config.js file is integral to configuring CSS processing in Next.js applications</data>
      <data key="d6">ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC IMPORT">
      <data key="d4">1.0</data>
      <data key="d5">Dynamic import is a technique used in Next.js to optimize loading of components</data>
      <data key="d6">ab869c819df53e1e9e3adebf6a4234a2</data>
    </edge>
    <edge source="NEXT.JS" target="VITE">
      <data key="d4">20.0</data>
      <data key="d5">Vite applications can be migrated to Next.js to take advantage of its server-side rendering capabilities
Vite is often compared to Next.js as an alternative framework for building web applications
Next.js is a framework that can be used as an alternative to Vite for building web applicationsVite is often compared to Next.js as both are tools for building web applications, but they serve different purposes
Next.js is a framework that can be used as an alternative to Vite for building web applications</data>
      <data key="d6">9da317a323ff76913285228d8243413e,9f6dc0f379759d79c664c445c0051202,c1845aec41d031b5a72f6f472ab4a5f2,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="REACT_ROUTER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can replace React Router with its built-in routing capabilities, providing automatic code splitting and server-side rendering</data>
      <data key="d6">f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER-SIDE RENDERING">
      <data key="d4">62.0</data>
      <data key="d5">Next.js utilizes server-side rendering to enhance performance and SEO for web applications
Next.js supports server-side rendering to enhance performance and SEO for web applications
Server-side rendering is a key feature of Next.js that enhances performance and SEO
Next.js provides server-side rendering capabilities, allowing developers to choose between client-side and server-side data fetching methods.
Next.js supports server-side rendering as one of its primary rendering methods, enhancing performance and SEO
Next.js provides Server-side Rendering as an option for pages that require dynamic content generation on each request.
Next.js utilizes Server-side Rendering to generate HTML dynamically for each request
Server-side Rendering is another feature of Next.js that generates HTML on each request
Next.js supports server-side rendering, enhancing the performance and SEO of applications</data>
      <data key="d6">1d629a9403a987213102a9bfd769f290,249a768c4964d383be47267af810ece7,3678e68072101ac922b838851eaa8465,66fea93bb642287d13f3a25b8b3e0083,9bc82a2671446cca168796fea771ecad,9da317a323ff76913285228d8243413e,c8d58fd330c4f217c52b50590414e517,d96f8e049ce9a691971e1a92b5b556af,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC SITE GENERATION">
      <data key="d4">34.0</data>
      <data key="d5">Next.js supports static site generation, allowing pages to be pre-rendered for faster loading times
Next.js enables static site generation, allowing pages to be pre-rendered for faster load times
Static Site Generation is a key feature of Next.js that allows for the generation of HTML at build time
Next.js supports Static Site Generation to pre-render pages at build time for improved performance</data>
      <data key="d6">66fea93bb642287d13f3a25b8b3e0083,98b8f4a199a3050f92608604cd0974b2,b61989d8657d5b33a55c584f46e7d436,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="CODE SPLITTING">
      <data key="d4">8.0</data>
      <data key="d5">Next.js automatically handles code splitting to improve application performance</data>
      <data key="d6">f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NEXT.JS" target="METADATA API">
      <data key="d4">36.0</data>
      <data key="d5">Next.js includes the Metadata API as a feature to manage page metadata for SEO
Next.js provides a Metadata API to manage metadata for web applications
Next.js includes a Metadata API to manage application metadata effectively
The Metadata API is a feature provided by Next.js to manage page metadata
Next.js utilizes the Metadata API to enhance SEO and social media engagement by modifying the &lt;head&gt; element.</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,4dfb13dff74e4dc45c19d4d71fe1a443,93cb0a5e111f219ec555f33bcd068d05,9f6dc0f379759d79c664c445c0051202,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="CIRCLECI">
      <data key="d4">7.0</data>
      <data key="d5">CircleCI can be used to automate the testing and deployment of Next.js applications.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="TRAVIS CI">
      <data key="d4">7.0</data>
      <data key="d5">Travis CI can be configured to build and test Next.js applications in a CI/CD pipeline.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="GITLAB CI">
      <data key="d4">7.0</data>
      <data key="d5">GitLab CI can be utilized to automate the deployment of Next.js applications.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="NETLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Netlify provides hosting solutions for Next.js applications, enhancing their deployment process.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="AWS CODEBUILD">
      <data key="d4">7.0</data>
      <data key="d5">AWS CodeBuild can be used to build and test Next.js applications in a CI/CD workflow.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="GITHUB ACTIONS">
      <data key="d4">8.0</data>
      <data key="d5">GitHub Actions can automate workflows for building and deploying Next.js applications.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="BITBUCKET">
      <data key="d4">6.0</data>
      <data key="d5">Bitbucket can host repositories for Next.js applications and integrate with CI/CD pipelines.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="HEROKU">
      <data key="d4">14.0</data>
      <data key="d5">Heroku can be used to deploy Next.js applications in a cloud environment.
Next.js applications can be deployed on Heroku, providing a platform for hosting and managing web applications.</data>
      <data key="d6">7cf992845bf79c5ec4ae2614617a79f4,f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="AZURE PIPELINES">
      <data key="d4">7.0</data>
      <data key="d5">Azure Pipelines can automate the build and deployment of Next.js applications.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="JENKINS">
      <data key="d4">1.0</data>
      <data key="d5">Jenkins can be configured to build and deploy Next.js applications as part of a CI/CD pipeline.</data>
      <data key="d6">f4fd4edd5d94e2931678672f66729691</data>
    </edge>
    <edge source="NEXT.JS" target="NGINX">
      <data key="d4">24.0</data>
      <data key="d5">Next.js applications can be deployed on Nginx servers to serve static assets generated in the out folder.
Next.js applications can be served using Nginx as a web server
Next.js applications can be served using Nginx as a web server
Next.js applications can be served using Nginx as a reverse proxy for improved performance and load balancing.</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61,e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="NEXT.JS" target="OUT FOLDER">
      <data key="d4">17.0</data>
      <data key="d5">The out folder is created by Next.js after the build process, containing the static assets for deployment.
Next.js generates the out folder during the build process to store static assets for the application</data>
      <data key="d6">e871ceb5e34368061b569a8df8c57c33,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC EXPORT">
      <data key="d4">21.0</data>
      <data key="d5">Static export is a core feature of Next.js that allows the framework to generate static sites from React applications.
Next.js supports static export, allowing applications to be served as static sites without server-side features
Next.js supports Static Export, allowing developers to generate static sites easily</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE OPTIMIZATION">
      <data key="d4">15.0</data>
      <data key="d5">Next.js supports image optimization through its next/image component, enhancing performance for static exports.
Next.js includes image optimization features that improve the loading performance of images in applications
Next.js provides built-in Image Optimization features to improve loading times for images</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="NEXT.JS" target="MULTI-ZONES">
      <data key="d4">16.0</data>
      <data key="d5">Multi-Zones is a feature of Next.js that enhances application structure and performance
Multi-Zones is a feature within Next.js that allows for the separation of applications into smaller, independently deployable units
Next.js supports Multi-Zones, allowing developers to create multiple applications that can be served under the same domain</data>
      <data key="d6">20652ea1750ad5513b326c308672d886,cb4791e4249947cbab8022435c79aa13,ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </edge>
    <edge source="NEXT.JS" target="404.HTML">
      <data key="d4">7.0</data>
      <data key="d5">404.html is an integral part of the Next.js application for handling errors when users navigate to non-existent pages</data>
      <data key="d6">cb4791e4249947cbab8022435c79aa13</data>
    </edge>
    <edge source="NEXT.JS" target="ASSETS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications utilize assets to enhance user experience and application performance</data>
      <data key="d6">cb4791e4249947cbab8022435c79aa13</data>
    </edge>
    <edge source="NEXT.JS" target="PRODUCTION CHECKLIST">
      <data key="d4">15.0</data>
      <data key="d5">The Production Checklist provides best practices specifically for Next.js applications to enhance performance and security
The Production Checklist provides guidelines for deploying Next.js applications effectively</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="BUILDING YOUR APPLICATION">
      <data key="d4">1.0</data>
      <data key="d5">Building Your Application outlines the deployment process for Next.js applications</data>
      <data key="d6">9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="CODE-SPLITTING">
      <data key="d4">8.0</data>
      <data key="d5">Next.js automatically implements code-splitting to enhance application performance by loading only necessary code</data>
      <data key="d6">9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="PREFETCHING">
      <data key="d4">15.0</data>
      <data key="d5">Next.js utilizes prefetching to improve navigation speed by loading pages in the background
Prefetching is a built-in feature of Next.js that enhances navigation speed by preloading routes</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88,9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="AUTOMATIC STATIC OPTIMIZATION">
      <data key="d4">16.0</data>
      <data key="d5">Next.js employs automatic static optimization to serve pre-rendered pages efficiently
Next.js implements Automatic Static Optimization to enhance performance by pre-rendering pages without blocking data requirements.</data>
      <data key="d6">249a768c4964d383be47267af810ece7,9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="CORE WEB VITALS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications are evaluated based on Core Web Vitals to ensure optimal user experience
Next.js applications are designed to meet Core Web Vitals standards for better user experience.
Next.js includes optimizations that aim to improve Core Web Vitals for better user experience</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9,4baf287e38f64339e2ce2ed9f18befe3,9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="LIGHTHOUSE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can be audited using Lighthouse to identify performance and accessibility improvements</data>
      <data key="d6">9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="NEXT.JS" target="AWS S3">
      <data key="d4">16.0</data>
      <data key="d5">Next.js can be hosted on AWS S3 when using static HTML export
Next.js can be hosted on AWS S3 for serving static assets and files
Next.js applications can utilize AWS S3 for storing and serving static assets.</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61</data>
    </edge>
    <edge source="NEXT.JS" target="KUBERNETES">
      <data key="d4">24.0</data>
      <data key="d5">Next.js can be deployed in a Kubernetes environment, which is suitable for container orchestration
Next.js can be hosted on Kubernetes for container orchestration and management
Next.js applications can be orchestrated using Kubernetes for scaling and management of containerized applications
Next.js can be hosted on Kubernetes for scalable deployment of web applications.</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,7b6d1725bb07f6076bb8010d535ae342,adb5bec4b54e83924618cafc99d40e24,daf474d256367130307c452111474f61</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION DEPLOYMENT">
      <data key="d4">1.0</data>
      <data key="d5">Application deployment is a key process for Next.js applications, involving various methods and platforms</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342</data>
    </edge>
    <edge source="NEXT.JS" target="NODE.JS SERVER">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be deployed on a Node.js server, which is essential for running its features</data>
      <data key="d6">7b6d1725bb07f6076bb8010d535ae342</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE">
      <data key="d4">45.0</data>
      <data key="d5">Next.js utilizes caching mechanisms to improve performance and response times
Next.js utilizes caching mechanisms to enhance performance and manage data efficiently
Cache is utilized in Next.js to enhance performance by storing frequently accessed data
Next.js implements caching strategies to enhance performance and reduce load times for applications
Next.js implements caching strategies to enhance performance and reduce server load by storing rendered outputs and data
Caching is an integral part of Next.js that helps in optimizing data fetching and improving application performance
Cache is utilized in Next.js to enhance performance by storing responses
Next.js allows for caching of route handlers to improve performance</data>
      <data key="d6">20652ea1750ad5513b326c308672d886,4ce3b8264c29bdceda24edfe6f9bda41,4f1b35d4044fdc993b02fcfb2db35bd6,52f67911efe49d48e703ba654f23728e,72e1433a8550144aaf1d1fd8f3cb3774,98b8f4a199a3050f92608604cd0974b2,af00e01481cac23e3b67c635215254ab,c38e2432510adf26b03148bb29ed9dda</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC RENDERING">
      <data key="d4">14.0</data>
      <data key="d5">Next.js supports dynamic rendering to serve user-specific content
Next.js allows for Dynamic Rendering to serve real-time content based on user requests
Dynamic rendering is a feature of Next.js that allows pages to be rendered based on user sessions</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,98b8f4a199a3050f92608604cd0974b2,ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE HANDLER">
      <data key="d4">15.0</data>
      <data key="d5">The custom cache handler is a feature of Next.js that enhances caching capabilities
The cache handler is a feature in Next.js that allows for custom caching strategies to improve performance.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481,4f1b35d4044fdc993b02fcfb2db35bd6</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC ASSETS">
      <data key="d4">17.0</data>
      <data key="d5">Next.js serves static assets efficiently, utilizing caching and optimization techniques
Next.js allows the serving of static assets from the /public folder, which can be efficiently cached and delivered to users.
Next.js can manage static assets efficiently to optimize web application performance.
Next.js serves static assets from the /public folder, allowing for efficient delivery and caching by CDNs.</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,66669d057195f54843266efcffb93a3b,daf474d256367130307c452111474f61,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="DRAFT MODE">
      <data key="d4">17.0</data>
      <data key="d5">Next.js supports Draft Mode for real-time previews of changes without affecting the live site
Next.js implements Draft Mode to allow immediate viewing of draft content on web pages
Draft Mode is a feature provided by Next.js to manage draft content</data>
      <data key="d6">4f1b35d4044fdc993b02fcfb2db35bd6,d0c06a113103b401eb977025a69f0cee,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="DOCUMENT.JS">
      <data key="d4">7.0</data>
      <data key="d5">The _document.js file is part of a Next.js application, allowing developers to customize the document structure for their web pages.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="NEXT.JS" target="PLAYWRIGHT">
      <data key="d4">30.0</data>
      <data key="d5">Playwright is a testing framework that is compatible with Next.js, allowing developers to write end-to-end tests for their Next.js applications.
Playwright can be used to test Next.js applications by simulating user interactions in a browser environment
Playwright can also be used for testing Next.js applications, showing a similar relationship as Cypress
Playwright can be used to test applications built with Next.js, providing automated testing capabilities for web applications.</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd,7b0e16fa06f15b959c34b3d3401845e8,b45c653df41952b7c0b22c7926afe5f7,f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="NEXT.JS" target="KINDLE">
      <data key="d4">7.0</data>
      <data key="d5">Kinde can be utilized in Next.js applications for user authentication and access control.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="NEXT.JS" target="IRON SESSION">
      <data key="d4">7.0</data>
      <data key="d5">Iron Session can be used in Next.js applications to manage user sessions securely.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="NEXT.JS" target="JOSE">
      <data key="d4">7.0</data>
      <data key="d5">Jose can be integrated into Next.js applications for handling JSON Web Tokens securely.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="NEXT.JS" target="COPENHAGEN BOOK">
      <data key="d4">1.0</data>
      <data key="d5">The Copenhagen Book provides insights on security practices relevant to Next.js development.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="NEXT.JS" target="CYPRESS">
      <data key="d4">21.0</data>
      <data key="d5">Cypress is used to test Next.js applications through E2E and component testing methodologies
Cypress is used to perform end-to-end testing on applications built with Next.js, ensuring functionality and user experience.
Cypress is used for testing applications built with Next.js, indicating a direct relationship between the two technologies</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd,62cbc95f20c7b902a0c2e3e9af7dd83c,f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="NEXT.JS" target="CYPRUS">
      <data key="d4">8.0</data>
      <data key="d5">Cypress is used for testing applications built with Next.js, particularly for component testing</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78</data>
    </edge>
    <edge source="NEXT.JS" target="ABOUT PAGE">
      <data key="d4">1.0</data>
      <data key="d5">The About Page is a component that can be tested using Cypress and Jest within a Next.js application</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR BOUNDARY">
      <data key="d4">22.0</data>
      <data key="d5">Next.js allows the implementation of Error Boundaries to manage client-side errors gracefully
Error Boundary is a component used within Next.js applications to handle errors gracefully.
Error boundaries are a key feature in Next.js for managing errors in the component tree</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6,a046fdf9fbebaa56c0d37da25e453974,a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="500 PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides a default 500 page to handle server-side errors</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6</data>
    </edge>
    <edge source="NEXT.JS" target="404 PAGE">
      <data key="d4">1.0</data>
      <data key="d5">Next.js includes a 404 page to manage specific runtime errors</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6</data>
    </edge>
    <edge source="NEXT.JS" target="ERRORBOUNDARY">
      <data key="d4">8.0</data>
      <data key="d5">ErrorBoundary is a component that is used within Next.js applications to handle errors gracefully.</data>
      <data key="d6">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </edge>
    <edge source="NEXT.JS" target="SENTRY">
      <data key="d4">7.0</data>
      <data key="d5">Sentry can be integrated into Next.js applications to monitor and report errors.</data>
      <data key="d6">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </edge>
    <edge source="NEXT.JS" target="BUGSNAG">
      <data key="d4">7.0</data>
      <data key="d5">Bugsnag can be used in Next.js applications for error monitoring and reporting.</data>
      <data key="d6">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </edge>
    <edge source="NEXT.JS" target="DATADOG">
      <data key="d4">7.0</data>
      <data key="d5">Datadog can be utilized in Next.js applications for monitoring performance and errors.</data>
      <data key="d6">9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </edge>
    <edge source="NEXT.JS" target="CSP">
      <data key="d4">7.0</data>
      <data key="d5">CSP is a security feature that can be configured in Next.js applications to protect against various threats.
Next.js applications can implement Content Security Policy (CSP) to enhance security and prevent attacks.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b,9bd0a80f4c931386ae8f2fb0226f92cd</data>
    </edge>
    <edge source="NEXT.JS" target="CHROME DEVTOOLS">
      <data key="d4">24.0</data>
      <data key="d5">Next.js applications can be debugged using Chrome DevTools, which allows developers to inspect and debug client-side code.
Chrome DevTools can be used to debug applications built with Next.js, allowing developers to inspect and optimize their code
Next.js applications can be debugged using Chrome DevTools, which allows developers to inspect client-side code execution.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b,45d1b0474e5a4ef2a69bdf70528aedb4,ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="NEXT.JS" target="DEBUGGING">
      <data key="d4">9.0</data>
      <data key="d5">Debugging is an essential part of developing applications with Next.js, as it helps identify and fix issues in the code.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATIONS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is a framework used to build applications, particularly for server-side rendering and static site generation.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b</data>
    </edge>
    <edge source="NEXT.JS" target="VITEST">
      <data key="d4">20.0</data>
      <data key="d5">Vitest can be used for unit testing applications built with Next.js, providing a framework for testing React components
Vitest can be used to test applications built with Next.js, providing a testing solution for React applications
Next.js can be tested using Vitest, which is a testing framework designed to work with Vite and React applications.</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d,b45c653df41952b7c0b22c7926afe5f7,ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="NEXT.JS" target="PREVIEW MODE">
      <data key="d4">9.0</data>
      <data key="d5">Next.js includes Preview Mode to allow users to view unpublished content
Preview Mode is a feature in Next.js that allows for real-time content previewing before static generation</data>
      <data key="d6">b61989d8657d5b33a55c584f46e7d436,ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="ISR">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports Incremental Static Regeneration (ISR) to allow updates to static content</data>
      <data key="d6">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="NEXT.JS" target="SASS">
      <data key="d4">35.0</data>
      <data key="d5">Sass can be used in conjunction with Next.js to provide advanced CSS features that are not natively supported in CSS
Next.js supports the use of Sass for styling, allowing developers to write more dynamic CSS
Next.js has built-in support for integrating with Sass, allowing developers to use Sass for styling their applications
Next.js supports Sass, allowing developers to use advanced CSS features in their applications.
Next.js has built-in support for integrating with Sass, allowing developers to use Sass for styling their applications.
Next.js supports Sass as a styling option for building applications</data>
      <data key="d6">0b10d085541dc5564e998254b8588822,78b4dd6ed52242dca68aec48915841fe,9c75ee4a07cd172f143b2b09451d333c,a9a858ea7abac3fe79fa759ea8171597,dc07058d355dcb6432e4280af3eba3d0,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM SERVER">
      <data key="d4">20.0</data>
      <data key="d5">Next.js can be integrated with a custom server for specific backend requirements
Next.js can be configured to use a custom server for handling requests and routing, providing flexibility in server management.
A custom server can be implemented in a Next.js application to handle specific routing needs
A custom server is used to run Next.js applications with specific configurations and logic</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,0dc4f8c1cc6105e325f2d84d2083a4c0,9c75ee4a07cd172f143b2b09451d333c,b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </edge>
    <edge source="NEXT.JS" target="POSTCSS CONFIGURATION">
      <data key="d4">7.0</data>
      <data key="d5">Next.js allows customization of PostCSS configuration for CSS processing</data>
      <data key="d6">9c75ee4a07cd172f143b2b09451d333c</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be configured to run on a custom server, allowing for tailored server behavior and routing.</data>
      <data key="d6">b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </edge>
    <edge source="NEXT.JS" target="MARKDOWN">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the use of Markdown for content creation, allowing developers to write content in a simple text format.
Next.js can process Markdown files, converting them into HTML for web applications</data>
      <data key="d6">b48fe8c8f5e2835de49d9a46578cbf9d,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="NEXT.JS" target="MDX">
      <data key="d4">70.0</data>
      <data key="d5">Next.js can process MDX files, enabling the use of React components within Markdown content.
Next.js supports the rendering of MDX files, allowing for enhanced markdown capabilities in web applications
Next.js supports MDX content, allowing developers to use MDX files in their applications for dynamic content rendering.
Next.js integrates MDX to allow developers to use JSX components within markdown files, enhancing content management capabilities.
MDX is used with Next.js to render JSX within Markdown files, enhancing content creation capabilities
Next.js supports MDX, allowing developers to use JSX within markdown files for enhanced interactivity
Next.js supports MDX, allowing developers to use React components within markdown files
MDX can be used within Next.js applications to enhance content with React components.
MDX is used in conjunction with Next.js to render markdown content with React components</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,0dc4f8c1cc6105e325f2d84d2083a4c0,11e614f4c015c7f8295c0c49ac211a89,4e07cca41acd33806d13242f5e21f621,6bb5264a8b72d26916099f27337032fe,7de6e744f7ef4ab90e5a1db6bfad49c3,a4afb71ec5010173b514ca4604c40002,b48fe8c8f5e2835de49d9a46578cbf9d,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="NEXT.JS" target="STANDALONE OUTPUT MODE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports standalone output mode, which allows for a minimal server setup without custom server files.</data>
      <data key="d6">b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </edge>
    <edge source="NEXT.JS" target="USE FILE SYSTEM PUBLIC ROUTES">
      <data key="d4">5.0</data>
      <data key="d5">The useFileSystemPublicRoutes setting in Next.js affects how routing is handled based on the file structure of the application.</data>
      <data key="d6">b48fe8c8f5e2835de49d9a46578cbf9d</data>
    </edge>
    <edge source="NEXT.JS" target="MY-PROJECT">
      <data key="d4">6.0</data>
      <data key="d5">my-project is an example of a project built using Next.js</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="NEXT.JS" target="MDX-COMPONENTS.TSX">
      <data key="d4">7.0</data>
      <data key="d5">mdx-components.tsx is a configuration file that works with Next.js to define how MDX components are rendered</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="NEXT.JS" target="FS MODULE">
      <data key="d4">6.0</data>
      <data key="d5">The fs module can be used in Next.js applications to read and manipulate files, including MDX files.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="NEXT.JS" target="GLOBBY">
      <data key="d4">6.0</data>
      <data key="d5">Globby can be utilized in Next.js applications to manage and retrieve MDX files based on specific patterns.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="NEXT.JS" target="JOHN DOE">
      <data key="d4">4.0</data>
      <data key="d5">John Doe is referenced in the context of metadata extraction in Next.js applications, often used in blog posts.
John Doe is an example user in the context of a Next.js application</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e,a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM VALIDATOR">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows the use of custom validators to validate AMP pages during development.</data>
      <data key="d6">173e80ccbe8ecd833c055f4cd3e75ee6</data>
    </edge>
    <edge source="NEXT.JS" target="SRC DIRECTORY">
      <data key="d4">11.0</data>
      <data key="d5">Next.js supports the use of a src directory to organize application code, enhancing project structure.
The src directory is supported by Next.js for organizing application code
The src directory is an optional feature in Next.js that helps separate application code from configuration files.</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,173e80ccbe8ecd833c055f4cd3e75ee6,3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC HTML EXPORT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js allows for the static HTML export of pages, optimizing them for performance.</data>
      <data key="d6">173e80ccbe8ecd833c055f4cd3e75ee6</data>
    </edge>
    <edge source="NEXT.JS" target="NODE_ENV">
      <data key="d4">14.0</data>
      <data key="d5">Next.js applications utilize the NODE_ENV variable to determine the environment for running the application.
Next.js uses the NODE_ENV variable to determine the environment in which the application is running, affecting its behavior and configuration.
The NODE_ENV variable is used by Next.js to determine the environment settings for the application, influencing how it runs and builds.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56,7cf992845bf79c5ec4ae2614617a79f4,936f58e9a3d0c41d6fd88ca7b6e0a119</data>
    </edge>
    <edge source="NEXT.JS" target="LOAD_ENV_CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">The loadEnvConfig function is used in Next.js applications to load environment variables for testing purposes.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="NEXT.JS" target="PRETTIER">
      <data key="d4">13.0</data>
      <data key="d5">Next.js can be configured to work with Prettier for code formatting alongside ESLint.
Next.js suggests using Prettier alongside ESLint to ensure code formatting consistency in applications.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="LCP">
      <data key="d4">14.0</data>
      <data key="d5">Next.js includes optimizations to improve LCP as part of its performance features.
Next.js prioritizes the LCP element to improve loading performance and user experience</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d,4baf287e38f64339e2ce2ed9f18befe3</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM FONTS">
      <data key="d4">4.0</data>
      <data key="d5">Next.js provides guidelines on how to use custom fonts in applications.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3</data>
    </edge>
    <edge source="NEXT.JS" target="SYNCHRONOUS SCRIPTS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js prevents the usage of synchronous scripts to improve performance.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3</data>
    </edge>
    <edge source="NEXT.JS" target="ESLINT CONFIG">
      <data key="d4">14.0</data>
      <data key="d5">Next.js applications can have a specific ESLint configuration to enforce coding standards.
eslint-config-next provides a recommended configuration for linting Next.js applications, ensuring adherence to best practices.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3,7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="TSCONFIG.JSON">
      <data key="d4">26.0</data>
      <data key="d5">tsconfig.json is automatically created when adding TypeScript to a Next.js project, configuring the necessary settings
tsconfig.json is used to configure TypeScript options for Next.js applications
The tsconfig.json file is essential for configuring TypeScript paths in Next.js applications, ensuring proper module resolution.
Next.js automatically generates a tsconfig.json file when TypeScript is added to a project, configuring the necessary settings for TypeScript support.</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,2f935bf8dd94b80e38c90109f4e620a3,391895fc365f2f2512a45ea503fbfa86,936f58e9a3d0c41d6fd88ca7b6e0a119</data>
    </edge>
    <edge source="NEXT.JS" target="APP PROPS">
      <data key="d4">7.0</data>
      <data key="d5">AppProps is a type used in Next.js applications to define the properties of the custom App component</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e</data>
    </edge>
    <edge source="NEXT.JS" target="GTM-XYZ">
      <data key="d4">1.0</data>
      <data key="d5">GTM-XYZ is used within Next.js applications to track user interactions through Google Tag Manager</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e</data>
    </edge>
    <edge source="NEXT.JS" target="INCREMENTAL TYPE CHECKING">
      <data key="d4">11.0</data>
      <data key="d5">Incremental type checking is a feature supported by Next.js to enhance performance in larger applications
Incremental Type Checking is a feature supported by Next.js to improve the efficiency of type checking in large applications.</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e,735b59f53ffba96602dace4169c285ed</data>
    </edge>
    <edge source="NEXT.JS" target="IGNORE BUILT-IN TYPE CHECKING">
      <data key="d4">4.0</data>
      <data key="d5">Ignoring built-in type checking is a configuration option available in Next.js to manage TypeScript errors</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e</data>
    </edge>
    <edge source="NEXT.JS" target="NEW-TYPES.D.TS">
      <data key="d4">1.0</data>
      <data key="d5">new-types.d.ts is a custom type declaration file referenced in Next.js projects for declaring types</data>
      <data key="d6">03986c3b8388e42d1b82f4db5232270e</data>
    </edge>
    <edge source="NEXT.JS" target="OPEN TELEMETRY">
      <data key="d4">23.0</data>
      <data key="d5">Next.js supports OpenTelemetry instrumentation out of the box for monitoring and performance optimization
OpenTelemetry can be used to monitor and optimize the performance of Next.js applications
Next.js can be integrated with OpenTelemetry for advanced monitoring and logging capabilities
Next.js integrates with OpenTelemetry to help developers monitor application performance and user interactions.</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282,5372e12cf32e25741c25f62d7e23221e,6e870d62774508940749246fdee4d7b7,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="FUSE.JS">
      <data key="d4">6.0</data>
      <data key="d5">Fuse.js can be dynamically imported in Next.js applications to enhance search functionality</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC IMPORTS">
      <data key="d4">16.0</data>
      <data key="d5">Dynamic imports are a feature of Next.js that allows for on-demand loading of components
Next.js utilizes Dynamic Imports to enhance loading performance by deferring component loading</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282,82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="NEXT.JS" target="LAZY LOADING">
      <data key="d4">1.0</data>
      <data key="d5">Lazy loading is a performance optimization technique implemented in Next.js to improve loading times</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282</data>
    </edge>
    <edge source="NEXT.JS" target="CLIENT COMPONENTS">
      <data key="d4">54.0</data>
      <data key="d5">Next.js allows the use of Client Components to enhance interactivity in web applications
Next.js supports Client Components which allow for advanced functionalities like image loading and error handling.
Next.js framework supports the implementation of Client Components for dynamic rendering and lazy loading
Next.js allows the creation and management of Client Components for interactive UI in web applications
Next.js allows the use of Client Components alongside Server Components for interactive features.
Next.js includes Client Components that allow for client-side state management and effects
Client Components are utilized in Next.js to create interactive features</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c,3da6822267f4aca1b29b1233660a9282,4132dfa96e84fb89d3908b0e9dea6a62,69ac19d7db15ae11c7884ce391807330,7ad571c896064ee6e36a4acd93898e88,82c6ef4d52bb277665ade9f274822be3,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="OPENTELEMETRY">
      <data key="d4">23.0</data>
      <data key="d5">OpenTelemetry provides instrumentation support for Next.js, allowing developers to monitor their applications effectively.
Next.js can be instrumented with OpenTelemetry to monitor application performance
Next.js integrates with OpenTelemetry to collect and report performance metrics</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e,7b388f79ffb6d5d09b2f36b2618f109d,f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="NEXT.JS" target="INSTRUMENTATION">
      <data key="d4">9.0</data>
      <data key="d5">Instrumentation is a key feature of Next.js, allowing automatic monitoring of application performance and behavior.
Instrumentation is an experimental feature that is part of the Next.js framework, aimed at enhancing observability and error tracking.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da,f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="NEXT.JS" target="@VERCEL/OTEL">
      <data key="d4">8.0</data>
      <data key="d5">The @vercel/otel package is specifically designed to work with Next.js, providing seamless integration for observability.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="NEXT.JS" target="@OPENTELEMETRY/SDK-NODE">
      <data key="d4">7.0</data>
      <data key="d5">The @opentelemetry/sdk-node package can be used to instrument Node.js applications built with Next.js for observability.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="NEXT.JS" target="SPANS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js automatically instruments spans to track application performance
Next.js automatically instruments spans to provide insights into application performance</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e,7b388f79ffb6d5d09b2f36b2618f109d</data>
    </edge>
    <edge source="NEXT.JS" target="PUBLIC FOLDER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js uses the public folder to serve static assets, which are accessible via the base URL.</data>
      <data key="d6">3486aab51f1c22b4f23003db40986564</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE CONTROL">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applies default caching headers to assets in the public folder, managing how they are cached by browsers.</data>
      <data key="d6">3486aab51f1c22b4f23003db40986564</data>
    </edge>
    <edge source="NEXT.JS" target="INSTRUMENTATION HOOK">
      <data key="d4">12.0</data>
      <data key="d5">Next.js allows the use of an instrumentation hook to enable performance monitoring features in applications.
Instrumentation Hook is an experimental feature within Next.js for setting up application instrumentation</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,3486aab51f1c22b4f23003db40986564</data>
    </edge>
    <edge source="NEXT.JS" target="INSTRUMENTATION FILE">
      <data key="d4">8.0</data>
      <data key="d5">The instrumentation file is required in Next.js projects to implement custom performance tracking.</data>
      <data key="d6">3486aab51f1c22b4f23003db40986564</data>
    </edge>
    <edge source="NEXT.JS" target="BUNDLE ANALYZER">
      <data key="d4">22.0</data>
      <data key="d5">The @next/bundle-analyzer is a plugin specifically designed for Next.js to help manage application bundle sizes
The Bundle Analyzer is a tool that can be used with Next.js to optimize memory and performance by analyzing dependencies.
The @next/bundle-analyzer is a plugin specifically designed for use with Next.js to optimize bundle sizes</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31,5afd0d2ef8220eea43b9a4e3736e7bee,ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM METRICS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can implement Custom Metrics to track performance metrics like hydration and rendering times</data>
      <data key="d6">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </edge>
    <edge source="NEXT.JS" target="PARTYTOWN">
      <data key="d4">22.0</data>
      <data key="d5">Next.js integrates Partytown to enhance performance by offloading scripts to web workers
Partytown is used in conjunction with Next.js to enhance web worker capabilities in applications
Partytown is used within Next.js to enhance performance by offloading scripts to web workers.</data>
      <data key="d6">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343,cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="SERVEREXTERNALPACKAGES">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows developers to specify packages to be excluded from automatic bundling</data>
      <data key="d6">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZING SCRIPTS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes features for optimizing the loading of scripts to enhance performance</data>
      <data key="d6">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION SCRIPTS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports the inclusion of application scripts to enhance web application functionality</data>
      <data key="d6">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM _APP">
      <data key="d4">7.0</data>
      <data key="d5">Next.js uses the custom _app component to manage global settings and scripts for applications</data>
      <data key="d6">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM _DOCUMENT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows customization of the HTML document structure through the custom _document component</data>
      <data key="d6">cf17a04fd1ade3fe98ee4b50654b493e</data>
    </edge>
    <edge source="NEXT.JS" target="ASSET PREFIX">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows the use of an asset prefix to customize the path for static files</data>
      <data key="d6">7e52aca588d432140f210661ae169677</data>
    </edge>
    <edge source="NEXT.JS" target="INLINE SCRIPTS">
      <data key="d4">13.0</data>
      <data key="d5">Next.js supports inline scripts for dynamic behavior within components
Next.js supports the use of inline scripts for executing JavaScript directly within components.</data>
      <data key="d6">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="DANGEROUSLYSETINNERHTML">
      <data key="d4">13.0</data>
      <data key="d5">Next.js utilizes dangerouslySetInnerHTML for rendering HTML directly in components
Next.js allows the use of dangerouslySetInnerHTML to render HTML strings safely within components.</data>
      <data key="d6">7e52aca588d432140f210661ae169677,c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="EVENT HANDLERS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides event handlers to execute code based on script loading events</data>
      <data key="d6">7e52aca588d432140f210661ae169677</data>
    </edge>
    <edge source="NEXT.JS" target="VARIABLE FONTS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports the use of variable fonts for improved performance and flexibility</data>
      <data key="d6">7e52aca588d432140f210661ae169677</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES">
      <data key="d4">16.0</data>
      <data key="d5">Pages are a fundamental part of Next.js, representing the routes that users can navigate to
Next.js is designed to manage and render pages as part of its routing system, allowing for dynamic content delivery</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30,7bc622b9dda4deed82c3382772daca19</data>
    </edge>
    <edge source="NEXT.JS" target="FONT API REFERENCE">
      <data key="d4">11.0</data>
      <data key="d5">The Font API Reference is relevant for developers using Next.js to implement fonts effectively in their applications
The Font API Reference is part of the documentation for Next.js, guiding users on how to implement fonts in their applications.</data>
      <data key="d6">7bc622b9dda4deed82c3382772daca19,e36d6ba428fb6e6b41847dce90fde4cc</data>
    </edge>
    <edge source="NEXT.JS" target="LOCAL FONT">
      <data key="d4">12.0</data>
      <data key="d5">Local Font can be utilized in Next.js applications to enhance performance by reducing external font requests
Local Fonts can be preloaded in Next.js applications to ensure consistent typography across all routes</data>
      <data key="d6">0b10d085541dc5564e998254b8588822,7bc622b9dda4deed82c3382772daca19</data>
    </edge>
    <edge source="NEXT.JS" target="PRIMARY COLOR">
      <data key="d4">6.0</data>
      <data key="d5">The Primary Color variable can be utilized in Next.js applications to maintain consistent theming across components</data>
      <data key="d6">0b10d085541dc5564e998254b8588822</data>
    </edge>
    <edge source="NEXT.JS" target="REMOTE IMAGES">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides features for optimizing Remote Images, allowing for better performance and loading times
Next.js allows for the optimization of remote images through its Image component</data>
      <data key="d6">0b10d085541dc5564e998254b8588822,5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="NEXT.JS" target="S3.AMAZONAWS.COM">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can utilize Amazon S3 for storing images that are optimized through its Image Optimization API</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="NEXT.JS" target="FILL PROP">
      <data key="d4">1.0</data>
      <data key="d5">The fill prop is a feature in Next.js that helps manage image sizing to avoid layout shifts</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE SIZING">
      <data key="d4">1.0</data>
      <data key="d5">Image sizing is a critical aspect of Next.js to ensure images load efficiently without causing layout shifts</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZATIONS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js includes built-in optimizations that enhance the performance and speed of applications developed using the framework.</data>
      <data key="d6">66669d057195f54843266efcffb93a3b</data>
    </edge>
    <edge source="NEXT.JS" target="ANALYTICS AND MONITORING">
      <data key="d4">2.0</data>
      <data key="d5">Next.js integrates with analytics and monitoring tools to help developers understand application performance and user behavior.
Next.js provides integration with analytics and monitoring tools to help developers understand application performance.</data>
      <data key="d6">66669d057195f54843266efcffb93a3b,fa9521f2ab68816b7c013c9aaaa353bd</data>
    </edge>
    <edge source="NEXT.JS" target="STYLED-JSX">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes styled-jsx for scoped CSS, enhancing the styling capabilities of the framework.</data>
      <data key="d6">3a82472230692a8c3ac8444f7738b625</data>
    </edge>
    <edge source="NEXT.JS" target="CSS-IN-JS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js supports CSS-in-JS solutions, allowing developers to style components dynamically within their JavaScript code.
Next.js allows the use of CSS-in-JS for styling components, enabling scoped and dynamic styles.
Next.js supports CSS-in-JS libraries for styling components in web applications</data>
      <data key="d6">3a82472230692a8c3ac8444f7738b625,a9a858ea7abac3fe79fa759ea8171597,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="NEXT.JS" target="BOOTSTRAP">
      <data key="d4">13.0</data>
      <data key="d5">Next.js allows the integration of Bootstrap for styling applications, enhancing UI design.
Next.js allows the use of Bootstrap for responsive design in applications</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a,a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="DATA FETCHING">
      <data key="d4">17.0</data>
      <data key="d5">Data fetching is a core feature of Next.js, allowing dynamic data retrieval for pages.
Data fetching is a core feature of Next.js, allowing developers to choose how to retrieve and render data
Data fetching methods are essential features of Next.js that enhance the functionality of both Static Generation and Server-side Rendering</data>
      <data key="d6">66fea93bb642287d13f3a25b8b3e0083,a9a858ea7abac3fe79fa759ea8171597,c8d58fd330c4f217c52b50590414e517</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION STATE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications manage application state to determine how components render based on user interactions.</data>
      <data key="d6">a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="DEVELOPMENT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides a development environment for building and testing applications before deployment.</data>
      <data key="d6">a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="MINIFIED CSS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js automatically minifies CSS files in production to improve loading performance.</data>
      <data key="d6">a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js is built around the concept of components, which are the building blocks of the user interface.</data>
      <data key="d6">a9a858ea7abac3fe79fa759ea8171597</data>
    </edge>
    <edge source="NEXT.JS" target="CMS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be integrated with a CMS to fetch and display content dynamically
Next.js can integrate with a CMS to fetch data for static generation of pages</data>
      <data key="d6">3678e68072101ac922b838851eaa8465,b61989d8657d5b33a55c584f46e7d436</data>
    </edge>
    <edge source="NEXT.JS" target="DATABASE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can connect to a database to retrieve data for rendering pages
Next.js applications often interact with a database for data management and storage</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1,3678e68072101ac922b838851eaa8465</data>
    </edge>
    <edge source="NEXT.JS" target="THIRD-PARTY APIS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can utilize third-party APIs to fetch data for server-side rendering</data>
      <data key="d6">3678e68072101ac922b838851eaa8465</data>
    </edge>
    <edge source="NEXT.JS" target="CLIENT-SIDE FETCHING">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports client-side fetching as a method to retrieve data dynamically for applications built with the framework.</data>
      <data key="d6">d96f8e049ce9a691971e1a92b5b556af</data>
    </edge>
    <edge source="NEXT.JS" target="API ROUTER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes an API Router feature that allows developers to define API routes within their applications.</data>
      <data key="d6">d96f8e049ce9a691971e1a92b5b556af</data>
    </edge>
    <edge source="NEXT.JS" target="SWR">
      <data key="d4">23.0</data>
      <data key="d5">SWR is a data fetching library recommended for use with Next.js applications to enhance performance and data management
Next.js recommends using SWR for better performance and data fetching capabilities in React applications
Next.js can utilize SWR for client-side data fetching and caching</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826,66fea93bb642287d13f3a25b8b3e0083,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="NEXT.JS" target="CDN">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can utilize a CDN to cache and deliver pre-rendered pages, enhancing performance
Next.js applications can leverage CDNs to serve statically optimized pages quickly to users.</data>
      <data key="d6">249a768c4964d383be47267af810ece7,b61989d8657d5b33a55c584f46e7d436</data>
    </edge>
    <edge source="NEXT.JS" target="INTERNATIONALIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Internationalization is a built-in feature of Next.js that simplifies routing for different locales</data>
      <data key="d6">c8d58fd330c4f217c52b50590414e517</data>
    </edge>
    <edge source="NEXT.JS" target="EXAMPLE.NL">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is the framework used to implement locale routing for the example.nl domain</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="NEXT.JS" target="EXAMPLE.FR">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is the framework used to implement locale routing for the example.fr domain</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="NEXT.JS" target="SUB-PATH ROUTING">
      <data key="d4">7.0</data>
      <data key="d5">Sub-path routing is a locale handling strategy implemented in Next.js</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="NEXT.JS" target="DOMAIN ROUTING">
      <data key="d4">7.0</data>
      <data key="d5">Domain routing is a locale handling strategy implemented in Next.js</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="NEXT.JS" target="AUTOMATIC LOCALE DETECTION">
      <data key="d4">7.0</data>
      <data key="d5">Automatic locale detection is a feature provided by Next.js to enhance user experience</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="NEXT.JS" target="TRAILING SLASH">
      <data key="d4">18.0</data>
      <data key="d5">Trailing slash handling is a configuration option in Next.js that affects how URLs are structured and routed
Trailing Slash is a configuration option in Next.js that affects URL handling
Next.js allows configuration of trailing slashes to control URL formatting
Trailing slash is a configuration option in Next.js that affects how URLs are structured and routed within the application.</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b,815b3c1f78ab2336e7e5bdae07b49d2b,839413fc3a58298ee6809914ff2ed3f7,89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM 404 PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides a default static 404 page that can be customized by creating a pages/404.js file</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM 500 PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides a default static 500 page that can be customized by creating a pages/500.js file</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Error component is part of Next.js and is used to handle error responses</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="NEXT.JS" target="PAGES/_APP">
      <data key="d4">8.0</data>
      <data key="d5">The pages/_app file is part of Next.js and is used to customize the App component</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM ROUTING">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports custom routing to enhance the navigation and structure of applications</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTE HANDLERS">
      <data key="d4">45.0</data>
      <data key="d5">Next.js allows the use of Route Handlers as an alternative to API Routes
Route Handlers are a feature of Next.js that allows for custom request handling
Next.js utilizes Route Handlers to manage web responses and extend the API capabilities
Next.js includes Route Handlers to manage server-side logic for specific routes
Route handlers are a part of the Next.js framework, enabling specific request handling for defined routes
Route handlers are a core part of Next.js, managing HTTP requests for specific routes</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51,2d13fb0b0bfe03d14a0f41e4d7920e31,52bf7bb5a492d2cb5b2f5f06d6507a81,64c02a535c1519ef24ded4a2a368f2be,72e1433a8550144aaf1d1fd8f3cb3774,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="NEXT.JS" target="EXPRESS.JS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can utilize Express.js as a backend framework to handle server-side logic and API routes</data>
      <data key="d6">0a447cfbac33fa416ddcd2ffd57d0335</data>
    </edge>
    <edge source="NEXT.JS" target="MYDOCUMENT">
      <data key="d4">8.0</data>
      <data key="d5">MyDocument is a component that utilizes Next.js framework features for rendering and initial props</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="NEXT.JS" target="LAYOUT">
      <data key="d4">44.0</data>
      <data key="d5">Next.js utilizes the Layout component to structure its pages consistently
Layouts are a fundamental part of Next.js applications, providing a consistent structure for pages
Layout is a part of a Next.js application, which utilizes React for building user interfaces
Next.js allows developers to define layouts that can be reused across multiple pages
Next.js allows developers to define layouts that can be shared across multiple routes, enhancing user experience
Next.js employs layouts to maintain a consistent structure across different routes</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8,1b3c3a93e182b501d03ffb0b41273e30,1d855e055624fb34345331017d371137,4dfb13dff74e4dc45c19d4d71fe1a443,a8c0873902ebe92185a879561056ce61,bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="NEXT.JS" target="ES MODULES">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports ES Modules for importing and exporting code in applications</data>
      <data key="d6">99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NEXT.JS" target="EVAL">
      <data key="d4">5.0</data>
      <data key="d5">Next.js restricts the use of eval for security and performance reasons in its applications</data>
      <data key="d6">99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NEXT.JS" target="FUNCTION">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications utilize functions to handle various tasks, including routing and data fetching</data>
      <data key="d6">99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NEXT.JS" target="CSS">
      <data key="d4">38.0</data>
      <data key="d5">Next.js supports CSS imports and modules for styling applications
Next.js supports CSS for styling web applications, allowing developers to create visually appealing interfaces
Next.js applications utilize CSS for styling and presentation of web pages
Next.js utilizes CSS for styling web applications
CSS is essential for styling applications built with Next.js</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,84837300711040f4e7b736cdd8fce7d2,99aea11e8e00a31189977a03ce528a10,c157c439271dbeeebb69b81254b288af,dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="NEXT.JS" target="SASS/SCSS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows the use of Sass/SCSS for styling, providing additional features over standard CSS</data>
      <data key="d6">99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NEXT.JS" target="CREATE NEXT APP">
      <data key="d4">9.0</data>
      <data key="d5">Create Next App is a command that initializes a new project using the Next.js framework</data>
      <data key="d6">816401f1962be5373b03365c403e3a92</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZING">
      <data key="d4">5.0</data>
      <data key="d5">Optimizing is a key aspect of developing efficient Next.js applications</data>
      <data key="d6">816401f1962be5373b03365c403e3a92</data>
    </edge>
    <edge source="NEXT.JS" target="DEPLOYING">
      <data key="d4">5.0</data>
      <data key="d5">Deploying is the final step in making a Next.js application accessible to users</data>
      <data key="d6">816401f1962be5373b03365c403e3a92</data>
    </edge>
    <edge source="NEXT.JS" target="UPGRADING">
      <data key="d4">1.0</data>
      <data key="d5">Upgrading is important for maintaining the Next.js application with the latest features and security updates</data>
      <data key="d6">816401f1962be5373b03365c403e3a92</data>
    </edge>
    <edge source="NEXT.JS" target="DARWIN">
      <data key="d4">5.0</data>
      <data key="d5">Next.js applications can be run on the Darwin operating system, which is the foundation of macOS</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NEXT.JS" target="EXPERIMENTAL">
      <data key="d4">1.0</data>
      <data key="d5">Next.js includes experimental features that developers can enable to test new functionalities</data>
      <data key="d6">9726f4ae30b11539c429ff41c8326d46</data>
    </edge>
    <edge source="NEXT.JS" target="SWR DELTA">
      <data key="d4">7.0</data>
      <data key="d5">SWR Delta is a configuration option available in Next.js for managing cache behavior</data>
      <data key="d6">89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="NEXT.JS" target="TRANSPILE PACKAGES">
      <data key="d4">7.0</data>
      <data key="d5">Transpile Packages is a feature of Next.js that enhances its ability to handle dependencies</data>
      <data key="d6">89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER EXTERNAL PACKAGES">
      <data key="d4">13.0</data>
      <data key="d5">Next.js automatically bundles server external packages used in Server Components and Route Handlers.
Next.js allows the integration of Server External Packages to improve server-side functionalities</data>
      <data key="d6">16332d9a8715d2cac034c2aa3c4f12f6,fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NEXT.JS" target="STALERTIMES">
      <data key="d4">6.0</data>
      <data key="d5">Next.js includes an experimental feature called staleTimes for caching page segments.</data>
      <data key="d6">fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER COMPONENTS EXTERNAL PACKAGES">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports the use of Server Components External Packages to enhance server-side rendering capabilities</data>
      <data key="d6">16332d9a8715d2cac034c2aa3c4f12f6</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER ACTIONS">
      <data key="d4">37.0</data>
      <data key="d5">Next.js provides the Server Actions feature to enhance server-side functionality in applications
Server Actions are a feature of Next.js that allows developers to handle server-side logic in response to user actions.
Next.js framework utilizes Server Actions to manage server-side data mutations and form submissions
Server Actions are a feature of Next.js that allows server-side functions to be called from client-side code
Next.js utilizes Server Actions to handle server-side logic, including error management</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c,10386033375aedc4b4d87fd57d246c1b,2f2dde2368e46aa812e2a39e32b3505d,33239b71158a6566c2b82b6a30b68e82,ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM ROUTES PROXYING ENDPOINT">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can proxy requests to the Custom Routes Proxying Endpoint when no routes match</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b</data>
    </edge>
    <edge source="NEXT.JS" target="ALLOWED ORIGINS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js allows configuration of allowed origins to enhance security for Server Actions</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b</data>
    </edge>
    <edge source="NEXT.JS" target="BODY SIZE LIMIT">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides a body size limit configuration to manage request sizes for Server Actions</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b</data>
    </edge>
    <edge source="NEXT.JS" target="WILDCARD PATH MATCHING">
      <data key="d4">7.0</data>
      <data key="d5">Wildcard path matching is a feature provided by Next.js to enhance routing capabilities</data>
      <data key="d6">de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.JS" target="REGEX PATH MATCHING">
      <data key="d4">7.0</data>
      <data key="d5">Regex path matching is another routing feature offered by Next.js for advanced route definitions</data>
      <data key="d6">de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.JS" target="HEADER, COOKIE, AND QUERY MATCHING">
      <data key="d4">7.0</data>
      <data key="d5">Header, cookie, and query matching is a functionality in Next.js that allows for conditional redirects</data>
      <data key="d6">de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.JS" target="BASEPATH SUPPORT">
      <data key="d4">7.0</data>
      <data key="d5">BasePath support is a feature of Next.js that helps manage route prefixes effectively</data>
      <data key="d6">de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.JS" target="I18N SUPPORT">
      <data key="d4">8.0</data>
      <data key="d5">Internationalization support is a feature of Next.js that allows applications to cater to multiple languages
Next.js provides i18n support to manage multiple locales in applications</data>
      <data key="d6">21183997adb6288a64caa86bfd107612,de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.JS" target="BABEL PLUGIN REACT COMPILER">
      <data key="d4">7.0</data>
      <data key="d5">The Babel Plugin React Compiler is used to enable the React Compiler feature in Next.js applications</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="REACT COMPILER">
      <data key="d4">9.0</data>
      <data key="d5">Next.js introduced the React Compiler in version 15 RC to improve performance</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 13.3.0">
      <data key="d4">6.0</data>
      <data key="d5">Version 13.3.0 is an update of Next.js that includes new features</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 10.2.0">
      <data key="d4">6.0</data>
      <data key="d5">Version 10.2.0 is an update of Next.js that added new functionalities</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 9.5.0">
      <data key="d4">6.0</data>
      <data key="d5">Version 9.5.0 is an update of Next.js that introduced redirects</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="REACT MAX HEADERS LENGTH">
      <data key="d4">5.0</data>
      <data key="d5">Next.js allows configuration of the reactMaxHeadersLength option to manage header lengths</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="PRODUCTION BROWSER SOURCE MAPS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides an option to enable source maps during production builds</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="STATUS CODE">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can assign custom status codes for redirects to ensure compatibility with older clients</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="REVERSE PROXY">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications may be affected by reverse proxies that handle requests</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="NEXT.JS" target="PARTIAL PRERENDERING">
      <data key="d4">14.0</data>
      <data key="d5">Partial Prerendering is a feature implemented in Next.js to enhance the rendering capabilities of applications.
Next.js implements Partial Prerendering to enhance the performance of applications by combining static and dynamic content</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5,4d99e596a43a5b336e12425953d3a120</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIGURATION FLAG">
      <data key="d4">1.0</data>
      <data key="d5">Configuration flags are used in Next.js to enable or disable specific features and behaviors during the development and production phases.</data>
      <data key="d6">4d99e596a43a5b336e12425953d3a120</data>
    </edge>
    <edge source="NEXT.JS" target="DEPLOYMENT PLATFORM">
      <data key="d4">8.0</data>
      <data key="d5">Next.js applications are typically deployed on platforms like Vercel, which are optimized for hosting such applications.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER.JS">
      <data key="d4">13.0</data>
      <data key="d5">Server.js is generated by Next.js to serve applications in a minimal setup.
server.js is used to run a Next.js application, providing custom server configurations</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,a3dae9be9408e57ff26350383026033f</data>
    </edge>
    <edge source="NEXT.JS" target="TURBOTRACE">
      <data key="d4">5.0</data>
      <data key="d5">Turbotrace is an experimental feature introduced in Next.js to enhance the performance of dependency tracing.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f</data>
    </edge>
    <edge source="NEXT.JS" target="OUTPUT FILE TRACING ROOT">
      <data key="d4">4.0</data>
      <data key="d5">Output file tracing root is a configuration option in Next.js that affects how files are traced in a monorepo.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f</data>
    </edge>
    <edge source="NEXT.JS" target="OUTPUT">
      <data key="d4">1.0</data>
      <data key="d5">The output generated by Next.js includes all necessary files for deployment, which are defined in the configuration settings.</data>
      <data key="d6">a3dae9be9408e57ff26350383026033f</data>
    </edge>
    <edge source="NEXT.JS" target="LOGGING">
      <data key="d4">6.0</data>
      <data key="d5">Logging is a feature of Next.js that helps developers monitor and debug their applications during development</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP AGENT OPTIONS">
      <data key="d4">5.0</data>
      <data key="d5">HTTP Agent Options are part of Next.js configuration that affects how fetch calls are handled</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="HEADERS">
      <data key="d4">25.0</data>
      <data key="d5">Headers configuration is a feature of Next.js that allows for setting custom HTTP headers in responses
Next.js utilizes headers to manage various aspects of HTTP requests and responses, ensuring proper communication between client and server.
The headers function is a feature provided by the Next.js framework for handling HTTP request headers</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484,102262d1b2a41d767a543121d96412c6,d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="LUCIDE-REACT">
      <data key="d4">7.0</data>
      <data key="d5">Lucide-react is optimized for use with Next.js, enhancing the iconography in React applications</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="ANTD">
      <data key="d4">7.0</data>
      <data key="d5">Ant Design is optimized for use with Next.js, providing a comprehensive UI framework</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@ANT-DESIGN/ICONS">
      <data key="d4">7.0</data>
      <data key="d5">@ant-design/icons is optimized for use with Next.js, providing icons for Ant Design components</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@HEADLESSUI/REACT">
      <data key="d4">7.0</data>
      <data key="d5">Headless UI is optimized for use with Next.js, providing accessible UI components</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@VISX/VISX">
      <data key="d4">7.0</data>
      <data key="d5">Visx is optimized for use with Next.js, providing visualization components for React</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@TREMOR/REACT">
      <data key="d4">7.0</data>
      <data key="d5">Tremor is optimized for use with Next.js, enabling data visualizations in React applications</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="RXJS">
      <data key="d4">7.0</data>
      <data key="d5">RxJS is optimized for use with Next.js, allowing for reactive programming in JavaScript</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@MUI/MATERIAL">
      <data key="d4">7.0</data>
      <data key="d5">Material-UI is optimized for use with Next.js, providing a UI framework based on Material Design</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@MATERIAL-UI/CORE">
      <data key="d4">7.0</data>
      <data key="d5">@material-ui/core is optimized for use with Next.js, providing core components for Material-UI</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="@TABLER/ICONS-REACT">
      <data key="d4">1.0</data>
      <data key="d5">Tabler Icons is optimized for use with Next.js, providing a set of open-source icons for React</data>
      <data key="d6">03726602b8c47d68bb675c6e306f6484</data>
    </edge>
    <edge source="NEXT.JS" target="I18N">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports internationalization, enabling applications to cater to users in different languages and regions.</data>
      <data key="d6">d1d62ecebefc7d4d3ed8c06e50adc45c</data>
    </edge>
    <edge source="NEXT.JS" target="CONTENT SECURITY POLICY">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports Content Security Policy to enhance security against XSS and data injection attacks.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481</data>
    </edge>
    <edge source="NEXT.JS" target="CACHE MAX MEMORY SIZE">
      <data key="d4">6.0</data>
      <data key="d5">The cache max memory size setting in Next.js allows developers to control caching behavior, impacting application performance.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATE BUILD ID">
      <data key="d4">7.0</data>
      <data key="d5">The generate build ID feature in Next.js ensures consistent application versions across different environments.</data>
      <data key="d6">15e19e9603c0108a515ce63026694481</data>
    </edge>
    <edge source="NEXT.JS" target="GIT HASH">
      <data key="d4">7.0</data>
      <data key="d5">The GIT HASH is used in the context of Next.js to track changes in the codebase for version control</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="AWS CLOUDFRONT">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can be configured to use AWS CloudFront for content delivery and optimization</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGEENGINE">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can utilize ImageEngine for image optimization and delivery</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="PIXELBIN">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can integrate with PixelBin for image and video management
PixelBin can be integrated with Next.js for image optimization and transformation</data>
      <data key="d6">a9c779cfa21a679f557dbbc90283565f,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="CUSTOM IMAGE LOADER">
      <data key="d4">13.0</data>
      <data key="d5">Next.js allows the use of a custom image loader to optimize image loading
Next.js allows the use of a custom image loader to override default image handling</data>
      <data key="d6">affc1268c54094ecde29441589759673,d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="EXAMPLE LOADER CONFIGURATION">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides example loader configurations for various image optimization services</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="NEXT.JS" target="OUTDIR">
      <data key="d4">7.0</data>
      <data key="d5">outDir is a setting within Next.js that specifies the output directory for builds, indicating its relevance to the framework.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="DISTDIR">
      <data key="d4">7.0</data>
      <data key="d5">distDir is a directory used by Next.js to store compiled output, showing its connection to the framework's build process.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD ID">
      <data key="d4">8.0</data>
      <data key="d5">The build ID is generated by Next.js during the build process, linking it directly to the framework's functionality.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="CROSSORIGIN">
      <data key="d4">6.0</data>
      <data key="d5">crossOrigin is an option in Next.js that affects how scripts are loaded, indicating its importance in the framework's configuration.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="DEVINDICATORS">
      <data key="d4">6.0</data>
      <data key="d5">devIndicators provide feedback about the application state during development in Next.js, highlighting their role in the framework.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="NEXT EXPORT">
      <data key="d4">8.0</data>
      <data key="d5">next export is a command used within the Next.js framework to create a static version of the application for deployment.</data>
      <data key="d6">815b3c1f78ab2336e7e5bdae07b49d2b</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC APIS">
      <data key="d4">14.0</data>
      <data key="d5">Next.js utilizes dynamic APIs to handle data requests that depend on runtime information
Next.js supports the use of dynamic APIs to enhance the interactivity of web applications.</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056,daf474d256367130307c452111474f61</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows customization of the build directory where the output of the build process is stored</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056</data>
    </edge>
    <edge source="NEXT.JS" target="CSS CHUNKING">
      <data key="d4">7.0</data>
      <data key="d5">Next.js implements CSS Chunking to enhance the performance of web applications</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056</data>
    </edge>
    <edge source="NEXT.JS" target="BASE PATH">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows the configuration of a base path for deploying applications under a sub-path</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056</data>
    </edge>
    <edge source="NEXT.JS" target="LOADING.JS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can use loading.js to handle loading states effectively in applications</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056</data>
    </edge>
    <edge source="NEXT.JS" target="SUSPENSE">
      <data key="d4">2.0</data>
      <data key="d5">Next.js supports the use of Suspense to enhance the rendering of components that depend on asynchronous data
Suspense is a feature used within Next.js applications, indicating a close relationship in terms of functionality</data>
      <data key="d6">04edddc24da6789de5ee2349698f4056,6ebc8c74b9b797357659151a46693a88</data>
    </edge>
    <edge source="NEXT.JS" target="USERAGENT">
      <data key="d4">7.0</data>
      <data key="d5">The userAgent helper is a feature provided by Next.js to enhance request handling</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92</data>
    </edge>
    <edge source="NEXT.JS" target="NEXTREQUEST">
      <data key="d4">16.0</data>
      <data key="d5">NextRequest is part of the Next.js framework, used for handling incoming requests
Next.js provides the NextRequest object to handle incoming requests in server-side functions</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="NEXT.JS" target="PHASE_DEVELOPMENT_SERVER">
      <data key="d4">1.0</data>
      <data key="d5">PHASE_DEVELOPMENT_SERVER is a constant used in Next.js to determine the current running phase</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92</data>
    </edge>
    <edge source="NEXT.JS" target="ECMASCRIPT MODULES">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports ECMAScript Modules for better code organization and modularity</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIGURATION AS A FUNCTION">
      <data key="d4">6.0</data>
      <data key="d5">Next.js allows configuration to be defined as a function for dynamic behavior based on the application phase</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92</data>
    </edge>
    <edge source="NEXT.JS" target="ASYNC CONFIGURATION">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports async configuration to handle asynchronous tasks during setup</data>
      <data key="d6">ba53cb824bd4e5b80d861ee299c10f92</data>
    </edge>
    <edge source="NEXT.JS" target="USESELECTEDLAYOUTSEGMENT">
      <data key="d4">8.0</data>
      <data key="d5">useSelectedLayoutSegment is a feature provided by Next.js for managing route segments</data>
      <data key="d6">b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="NEXT.JS" target="USESEARCHPARAMS">
      <data key="d4">1.0</data>
      <data key="d5">useSearchParams is a feature provided by Next.js for reading URL query strings</data>
      <data key="d6">b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER COMPONENT">
      <data key="d4">33.0</data>
      <data key="d5">Server Components are a feature of Next.js that enable server-side rendering and data fetching
Server Components are integral to Next.js, allowing for server-side rendering and data fetching
Server components are a fundamental part of Next.js, enabling server-side rendering capabilities
Server components are a feature of Next.js that enhance performance by rendering on the server
The Server Component is a feature of the Next.js framework that enhances server-side rendering capabilities
Server Components are a feature of Next.js that allows for server-side rendering of components</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8,455e168c432979d018ea3d145e2547b5,5ef33e2acd1009a637bf4b8ab41d49a1,98b8f4a199a3050f92608604cd0974b2,a046fdf9fbebaa56c0d37da25e453974,b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="NEXT.JS" target="USESELECTEDLAYOUTSEGMENTS">
      <data key="d4">8.0</data>
      <data key="d5">useSelectedLayoutSegments is a feature of Next.js that enhances routing capabilities by reading active segments</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </edge>
    <edge source="NEXT.JS" target="USEROUTER">
      <data key="d4">8.0</data>
      <data key="d5">useRouter is a feature of Next.js that allows for programmatic navigation within the framework</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </edge>
    <edge source="NEXT.JS" target="NAVIGATION EVENTS">
      <data key="d4">13.0</data>
      <data key="d5">Navigation events are components that utilize Next.js features to manage routing and navigation
Navigation Events is a component that operates within the Next.js framework</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8,bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTER EVENTS">
      <data key="d4">7.0</data>
      <data key="d5">Router events are part of Next.js's routing system, allowing developers to handle navigation changes</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTE GROUPS">
      <data key="d4">1.0</data>
      <data key="d5">Route Groups are utilized in Next.js to organize routes effectively within the application</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </edge>
    <edge source="NEXT.JS" target="USEPATHNAME">
      <data key="d4">8.0</data>
      <data key="d5">usePathname is a hook provided by Next.js to manage and read the current URL's pathname</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="NEXT.JS" target="USEPARAMS">
      <data key="d4">8.0</data>
      <data key="d5">useParams is a hook in Next.js that allows access to dynamic URL parameters, enhancing routing capabilities</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="NEXT.JS" target="UNSTABLE_RETHROW">
      <data key="d4">9.0</data>
      <data key="d5">unstable_rethrow is an API in Next.js that helps manage errors in applications built with the framework
unstable_rethrow is a feature of Next.js that helps manage error handling in applications built with the framework</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520,e2066c317993455c32b6ebbfabfb5497</data>
    </edge>
    <edge source="NEXT.JS" target="UNSTABLE_NO_STORE">
      <data key="d4">8.0</data>
      <data key="d5">unstable_noStore is a feature of Next.js that allows components to avoid static rendering and caching</data>
      <data key="d6">e2066c317993455c32b6ebbfabfb5497</data>
    </edge>
    <edge source="NEXT.JS" target="UNSTABLE_CACHE">
      <data key="d4">22.0</data>
      <data key="d5">unstable_cache is a feature of Next.js that allows caching of expensive operations to improve performance
unstable_cache is a feature provided by Next.js to enhance data fetching and caching capabilities
Unstable Cache is a feature provided by Next.js to enhance data fetching performance through caching
The unstable_cache API is a feature of Next.js that enhances data fetching by caching results, improving performance</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a,af00e01481cac23e3b67c635215254ab,e2066c317993455c32b6ebbfabfb5497,edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="NEXT.JS" target="NOTFOUND">
      <data key="d4">8.0</data>
      <data key="d5">notFound is a function provided by Next.js to handle cases where a resource is not found
notFound is a function provided by Next.js for handling not-found errors</data>
      <data key="d6">c38e2432510adf26b03148bb29ed9dda,e2066c317993455c32b6ebbfabfb5497</data>
    </edge>
    <edge source="NEXT.JS" target="DATABASE QUERY">
      <data key="d4">1.0</data>
      <data key="d5">Database queries are often executed within Next.js applications to fetch data for rendering components</data>
      <data key="d6">e2066c317993455c32b6ebbfabfb5497</data>
    </edge>
    <edge source="NEXT.JS" target="REVALIDATETAG">
      <data key="d4">7.0</data>
      <data key="d5">revalidateTag is a function within Next.js that interacts with its caching system</data>
      <data key="d6">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="NEXT.JS" target="UNSTABLE_AFTER">
      <data key="d4">1.0</data>
      <data key="d5">unstable_after is a function in Next.js that allows for post-response tasks, enhancing the framework's capabilities</data>
      <data key="d6">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="NEXT.JS" target="REVALIDATEPATH">
      <data key="d4">8.0</data>
      <data key="d5">revalidatePath is a function provided by Next.js for cache management</data>
      <data key="d6">c38e2432510adf26b03148bb29ed9dda</data>
    </edge>
    <edge source="NEXT.JS" target="SERVERLESS FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">Serverless functions can be utilized within Next.js applications to handle backend logic</data>
      <data key="d6">c38e2432510adf26b03148bb29ed9dda</data>
    </edge>
    <edge source="NEXT.JS" target="NOT FOUND">
      <data key="d4">14.0</data>
      <data key="d5">The notFound() function is a feature of Next.js used to handle 404 errors gracefully
Next.js provides a not-found file to handle unmatched URLs and render a custom UI
Not found is an event managed by Next.js to handle requests for non-existent resources</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065,52bf7bb5a492d2cb5b2f5f06d6507a81,a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="PERMANENT REDIRECT">
      <data key="d4">7.0</data>
      <data key="d5">The permanentRedirect function is a feature of Next.js that allows for permanent URL redirection</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065</data>
    </edge>
    <edge source="NEXT.JS" target="REDIRECT">
      <data key="d4">14.0</data>
      <data key="d5">The redirect function is a feature of Next.js that allows for temporary or permanent URL redirection
Next.js provides the Redirect function to facilitate temporary URL redirection
Redirects are a common feature in Next.js for guiding users after actions like form submissions</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065,1d939f19e04dfaa8df3664a2cd4db1f1,7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP REDIRECTS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js provides built-in support for handling HTTP redirects in web applications</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="NEXT.JS" target="VIEWPORT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows customization of the viewport settings for web applications</data>
      <data key="d6">84837300711040f4e7b736cdd8fce7d2</data>
    </edge>
    <edge source="NEXT.JS" target="SATORI">
      <data key="d4">6.0</data>
      <data key="d5">Satori provides documentation for Next.js, helping developers understand its features and functionalities</data>
      <data key="d6">84837300711040f4e7b736cdd8fce7d2</data>
    </edge>
    <edge source="NEXT.JS" target="HTML">
      <data key="d4">39.0</data>
      <data key="d5">Next.js utilizes HTML as the foundational markup language for building web applications
Next.js applications are built using HTML to structure web content
Next.js extends HTML capabilities by providing components like the Image component for better performance
HTML is used as the markup language for building applications in Next.js
HTML is fundamental for building applications with Next.js, as it structures the content</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,514671e4a7b4b0d7573852d3d380eefd,5ef33e2acd1009a637bf4b8ab41d49a1,84837300711040f4e7b736cdd8fce7d2,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATE VIEWPORT">
      <data key="d4">8.0</data>
      <data key="d5">Generate Viewport is a function provided by Next.js to customize viewport settings</data>
      <data key="d6">84837300711040f4e7b736cdd8fce7d2</data>
    </edge>
    <edge source="NEXT.JS" target="SEB">
      <data key="d4">23.0</data>
      <data key="d5">Seb is an author contributing to the Next.js framework
Seb is an author contributing to the Next.js framework
Seb is an author contributing to the development of Next.js</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="JOSH">
      <data key="d4">23.0</data>
      <data key="d5">Josh is an author contributing to the Next.js framework
Josh is an author contributing to the Next.js framework
Josh is an author contributing to the development of Next.js</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="JIACHI LIU">
      <data key="d4">17.0</data>
      <data key="d5">Jiachi Liu is the creator of the Next.js framework
Jiachi Liu is a creator involved in the Next.js project</data>
      <data key="d6">ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="SEBASTIAN MARKB&#197;GE">
      <data key="d4">9.0</data>
      <data key="d5">Sebastian Markb&#229;ge is the publisher of the Next.js framework
Sebastian Markb&#229;ge is a publisher associated with the Next.js framework</data>
      <data key="d6">ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="METADATA">
      <data key="d4">23.0</data>
      <data key="d5">Next.js framework includes various metadata fields that describe its attributes and functionalities
Metadata is used in Next.js to provide essential information for SEO and user experience
Metadata management is a feature within Next.js, showing a direct relationship as it pertains to SEO and page management
Next.js provides a Metadata API to manage application metadata for SEO and web shareability.</data>
      <data key="d6">6ebc8c74b9b797357659151a46693a88,c1f63acba6f9a58b56bd71c409dcd343,ddf9997eb4ecd67204ea6df04b23cc07,f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION NAME">
      <data key="d4">5.0</data>
      <data key="d5">The application name metadata field specifies the name of the Next.js framework</data>
      <data key="d6">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="DESCRIPTION">
      <data key="d4">5.0</data>
      <data key="d5">The description metadata field provides an overview of the Next.js framework</data>
      <data key="d6">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="KEYWORDS">
      <data key="d4">5.0</data>
      <data key="d5">Keywords metadata field lists relevant terms associated with the Next.js framework</data>
      <data key="d6">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="REFERRER">
      <data key="d4">1.0</data>
      <data key="d5">The referrer metadata field defines the policy for how the application handles referrer information</data>
      <data key="d6">f6d8eccbee25757d0c8ea4d7bcec5598</data>
    </edge>
    <edge source="NEXT.JS" target="ACME.COM">
      <data key="d4">6.0</data>
      <data key="d5">Acme.com is used as a base URL in the Next.js framework documentation
Next.js can be deployed on Acme.com, which is a static host for serving web applications</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </edge>
    <edge source="NEXT.JS" target="LAYOUT.JS">
      <data key="d4">15.0</data>
      <data key="d5">Layout.js is a key component of the Next.js framework, defining the layout structure for applications
Layout.js is a component of Next.js that helps define the overall structure of web applications built with Next.js.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </edge>
    <edge source="NEXT.JS" target="PAGE.JS">
      <data key="d4">15.0</data>
      <data key="d5">Page.js is a key component of the Next.js framework, defining the content for specific pages
Page.js is a crucial part of Next.js applications, defining the content and behavior of individual pages.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </edge>
    <edge source="NEXT.JS" target="OPEN GRAPH">
      <data key="d4">12.0</data>
      <data key="d5">Open Graph is utilized in Next.js to enhance social media sharing capabilities
Next.js utilizes Open Graph protocol to enhance the sharing of web pages on social media</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05,ddf9997eb4ecd67204ea6df04b23cc07</data>
    </edge>
    <edge source="NEXT.JS" target="2023-01-01">
      <data key="d4">1.0</data>
      <data key="d5">The article about Next.js was published on this date, highlighting its features and updates</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05</data>
    </edge>
    <edge source="NEXT.JS" target="ROBOTS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js allows developers to set robots meta tags to control indexing behavior</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05</data>
    </edge>
    <edge source="NEXT.JS" target="ICON">
      <data key="d4">13.0</data>
      <data key="d5">Next.js supports the use of icons to improve the user interface of web applications
Next.js provides functionality to set icons for applications, which can be displayed in various contexts like browser tabs and bookmarks.</data>
      <data key="d6">93cb0a5e111f219ec555f33bcd068d05,d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="MANIFEST">
      <data key="d4">8.0</data>
      <data key="d5">Next.js applications can include a web application manifest for better integration with devices
Next.js applications utilize a manifest file to provide essential metadata for web applications, improving user experience.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee,93cb0a5e111f219ec555f33bcd068d05</data>
    </edge>
    <edge source="NEXT.JS" target="GOOGLE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports Google verification methods for web applications, enhancing SEO and site credibility.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="NEXT.JS" target="YAHOO">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can implement Yahoo's verification methods for web applications, ensuring site authenticity.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="NEXT.JS" target="YANDEX">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can utilize Yandex verification for web applications, expanding its reach in Russian-speaking markets.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="NEXT.JS" target="APPLE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports Apple web app features, allowing for better integration with Apple devices.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="NEXT.JS" target="REACTDOM">
      <data key="d4">7.0</data>
      <data key="d5">Next.js utilizes ReactDOM methods to manage the rendering of components in the browser</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP HEADERS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can utilize HTTP headers to enhance security and performance</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="TYPE SAFETY">
      <data key="d4">9.0</data>
      <data key="d5">Next.js supports TypeScript, which provides type safety for developers</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="SITEMAPS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can generate sitemaps for applications to improve SEO and site navigation</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="BASE URL">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications utilize a base URL for consistent API requests and resource management</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATESITEMAPS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides a function to generate sitemaps, improving the discoverability of pages</data>
      <data key="d6">4dfb13dff74e4dc45c19d4d71fe1a443</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATE IMAGE METADATA">
      <data key="d4">8.0</data>
      <data key="d5">Generate Image Metadata is a function that is part of the Next.js framework</data>
      <data key="d6">d0c06a113103b401eb977025a69f0cee</data>
    </edge>
    <edge source="NEXT.JS" target="SITEMAP">
      <data key="d4">23.0</data>
      <data key="d5">Sitemap generation is a functionality provided by Next.js for managing product URLs
Next.js allows developers to create sitemaps for better SEO and indexing
Next.js provides functionality to create and manage sitemaps for web applications.</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568,c22dbf534c525258e8788bff5c1c5e66,d0c06a113103b401eb977025a69f0cee</data>
    </edge>
    <edge source="NEXT.JS" target="BASE_URL">
      <data key="d4">1.0</data>
      <data key="d5">BASE_URL is a constant used within Next.js to construct URLs</data>
      <data key="d6">d0c06a113103b401eb977025a69f0cee</data>
    </edge>
    <edge source="NEXT.JS" target="DATA CACHE">
      <data key="d4">22.0</data>
      <data key="d5">Next.js utilizes a persistent Data Cache to optimize how fetch requests interact with cached data
Next.js utilizes a Data Cache to persist results of data fetches across server requests
Next.js employs the Data Cache to store fetched data, improving performance by reducing the need for repeated data requests</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b,6b625fce8c9b4b0f729aa3cdc85d284d,98b8f4a199a3050f92608604cd0974b2</data>
    </edge>
    <edge source="NEXT.JS" target="COOKIES">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides functionality to read and write cookies in server components and actions
Next.js utilizes cookies for session management and user authentication in server-side applications</data>
      <data key="d6">6b625fce8c9b4b0f729aa3cdc85d284d,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="NEXT.JS" target="ASYNC/AWAIT">
      <data key="d4">14.0</data>
      <data key="d5">Next.js supports the use of Async/Await for handling asynchronous operations in a more readable way
Async/await is used in Next.js for simplified data fetching in applications</data>
      <data key="d6">6b625fce8c9b4b0f729aa3cdc85d284d,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP CACHE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js interacts with the HTTP Cache to optimize resource loading and improve application performance</data>
      <data key="d6">6b625fce8c9b4b0f729aa3cdc85d284d</data>
    </edge>
    <edge source="NEXT.JS" target="REVALIDATE">
      <data key="d4">2.0</data>
      <data key="d5">Next.js provides options for developers to set revalidation times for cached resources
Revalidate is an option in Next.js that affects how frequently data is updated in rendered pages</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41,6b625fce8c9b4b0f729aa3cdc85d284d</data>
    </edge>
    <edge source="NEXT.JS" target="COOKIE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js provides functionality for managing cookies in web applications</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568</data>
    </edge>
    <edge source="NEXT.JS" target="FAVICON">
      <data key="d4">13.0</data>
      <data key="d5">Next.js allows developers to set a favicon for their applications, enhancing user experience by providing a recognizable icon in the browser.
Favicon is automatically managed by Next.js when placed in the app directory</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="APPLE-ICON">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports the addition of apple-icons for applications, ensuring compatibility with Apple devices and enhancing user experience.</data>
      <data key="d6">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE FILE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js allows the use of image files to set app icons, enhancing the visual representation of web applications.</data>
      <data key="d6">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="FILE CONVENTION">
      <data key="d4">6.0</data>
      <data key="d5">Next.js follows specific file conventions to organize project files, making it easier for developers to manage their applications.</data>
      <data key="d6">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE RESPONSE API">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides the ImageResponse API to generate images dynamically for use in applications, enhancing flexibility in icon design.</data>
      <data key="d6">d96d8ae7162e4a76bff1216bb9a8e47a</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTE SEGMENT CONFIG">
      <data key="d4">8.0</data>
      <data key="d5">Route Segment Config is a feature of Next.js that allows configuration of page and layout behavior</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC BEHAVIOR">
      <data key="d4">9.0</data>
      <data key="d5">Dynamic behavior is a core functionality of Next.js that allows for real-time rendering based on user interactions</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="EXPERIMENTAL_PPR">
      <data key="d4">6.0</data>
      <data key="d5">Experimental PPR is a feature within Next.js aimed at improving rendering efficiency</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC_PARAMS">
      <data key="d4">7.0</data>
      <data key="d5">Dynamic Params is a routing feature in Next.js that manages how dynamic segments are processed</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="FILE CONVENTIONS">
      <data key="d4">6.0</data>
      <data key="d5">File Conventions are essential for organizing and managing files in Next.js projects</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="FETCH REQUEST">
      <data key="d4">1.0</data>
      <data key="d5">Fetch Request is a fundamental operation in Next.js for data retrieval and API interaction</data>
      <data key="d6">4ce3b8264c29bdceda24edfe6f9bda41</data>
    </edge>
    <edge source="NEXT.JS" target="LOADING">
      <data key="d4">7.0</data>
      <data key="d5">Loading is a feature of Next.js that allows for instant loading states built on Suspense</data>
      <data key="d6">a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="GLOBAL ERROR">
      <data key="d4">14.0</data>
      <data key="d5">Global error handling is a feature of Next.js that allows for error management at the application root
Global Error handling is a feature of Next.js that allows for managing errors at the application level</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82,a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="LOADING FILE">
      <data key="d4">7.0</data>
      <data key="d5">The loading file is a feature of Next.js that enhances user experience by providing instant loading states</data>
      <data key="d6">a046fdf9fbebaa56c0d37da25e453974</data>
    </edge>
    <edge source="NEXT.JS" target="HOOKS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the use of Hooks for managing state and lifecycle in functional components</data>
      <data key="d6">77bf22c1fcd1e61ff866f696397b3a69</data>
    </edge>
    <edge source="NEXT.JS" target="DEFAULT.JS">
      <data key="d4">1.0</data>
      <data key="d5">default.js is a file convention used within the Next.js framework to handle routing and active state recovery</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="NEXT.JS" target="PROPS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js utilizes props to configure components, including the Image Component</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="NEXT.JS" target="ANALYTICS SLOT">
      <data key="d4">6.0</data>
      <data key="d5">Next.js includes the @analytics slot for managing analytics rendering on web pages</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="NEXT.JS" target="FORMATS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports various image formats through its Image Optimization API</data>
      <data key="d6">affc1268c54094ecde29441589759673</data>
    </edge>
    <edge source="NEXT.JS" target="PROXY/CDN">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be configured to work with a Proxy/CDN to enhance performance and manage requests effectively</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="NEXT.JS" target="CACHING BEHAVIOR">
      <data key="d4">7.0</data>
      <data key="d5">Next.js implements specific caching behavior to manage how images are stored and served</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="NEXT.JS" target="SVG IMAGES">
      <data key="d4">7.0</data>
      <data key="d5">Next.js provides specific handling for SVG images to optimize their delivery and security</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="NEXT.JS" target="FORM">
      <data key="d4">9.0</data>
      <data key="d5">The &lt;Form&gt; component is a part of the Next.js framework, enhancing the functionality of standard HTML forms
The &lt;Form&gt; component is a feature of the Next.js framework, enabling form handling and navigation</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680,f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="NEXT.JS" target="GET METHOD">
      <data key="d4">6.0</data>
      <data key="d5">Next.js utilizes the GET method for forms to submit data and navigate to specified URLs</data>
      <data key="d6">f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="NEXT.JS" target="CLIENT-SIDE NAVIGATION">
      <data key="d4">8.0</data>
      <data key="d5">Next.js supports client-side navigation, allowing for smoother transitions between pages without full reloads</data>
      <data key="d6">f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="NEXT.JS" target="TS_CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">The tsconfig.json file is used to configure the Next.js application for TypeScript support</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="NEXT.JS" target="MIGRATING FROM VITE">
      <data key="d4">6.0</data>
      <data key="d5">Migrating from Vite is an event that involves transitioning to the Next.js framework</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION CHANGES">
      <data key="d4">5.0</data>
      <data key="d5">Version Changes document the updates made to the Next.js framework</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="NEXT.JS" target="SPA">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be used to create Single-Page Applications (SPAs) that enhance user experience</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="NEXT.JS" target="BUILD OUTPUT DIRECTORY">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows customization of the build output directory for project files</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP://LOCALHOST:3000">
      <data key="d4">8.0</data>
      <data key="d5">The application can be accessed at http://localhost:3000 after running the Next.js development server</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="NEXT.JS" target="REACT ROUTER">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can be used as an alternative to React Router for routing in applications
Migrating from React Router to Next.js App Router is a recommended step for developers to take advantage of Next.js features</data>
      <data key="d6">9da317a323ff76913285228d8243413e,cc73438c54108f8ee25c9221d62bafca</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION MIGRATION">
      <data key="d4">1.0</data>
      <data key="d5">The process of migrating an application involves transitioning from Vite to Next.js</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="NEXT.JS" target="BASE_PATH">
      <data key="d4">7.0</data>
      <data key="d5">The base path setting in Next.js allows for a structured routing system by adding a prefix to all routes</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="NEXT.JS" target="GITIGNORE">
      <data key="d4">1.0</data>
      <data key="d5">The .gitignore file is updated to include Next.js specific files that should not be tracked by Git</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="NEXT.JS" target="MIGRATION">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is the target framework for migrating applications built with Create React App to improve performance and features</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="NEXT.JS" target="ROOTLAYOUT">
      <data key="d4">8.0</data>
      <data key="d5">RootLayout is a component built using Next.js framework, which provides the structure for the application</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NEXT.JS" target="TAILWIND">
      <data key="d4">14.0</data>
      <data key="d5">Tailwind can be integrated into Next.js applications for styling purposes
Next.js can be styled using Tailwind CSS, allowing for a seamless integration of design and functionality.</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,4e07cca41acd33806d13242f5e21f621</data>
    </edge>
    <edge source="NEXT.JS" target="ROBOTS.TXT">
      <data key="d4">6.0</data>
      <data key="d5">Robots.txt is automatically managed by Next.js when placed in the app directory</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NEXT.JS" target="CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">Client-side rendering is a key feature of Next.js, allowing for dynamic user interactions</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC ASSET">
      <data key="d4">7.0</data>
      <data key="d5">Static assets are served by Next.js to improve loading times and performance</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NEXT.JS" target="CATCH-ALL ROUTE">
      <data key="d4">1.0</data>
      <data key="d5">Catch-all routes are a routing feature in Next.js that allows for flexible URL handling</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NEXT.JS" target="CRA APPLICATION">
      <data key="d4">7.0</data>
      <data key="d5">The CRA application can be migrated to Next.js to take advantage of server-side rendering and static site generation</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e</data>
    </edge>
    <edge source="NEXT.JS" target="LAYOUTS">
      <data key="d4">7.0</data>
      <data key="d5">Layouts are a key feature of Next.js that enhance the organization of UI components, showing a direct relationship with the framework</data>
      <data key="d6">6ebc8c74b9b797357659151a46693a88</data>
    </edge>
    <edge source="NEXT.JS" target="DEVELOPMENT SERVER">
      <data key="d4">16.0</data>
      <data key="d5">The Development Server is part of the Next.js framework, enabling real-time development and testing
The development server is used to run and test Next.js applications during the development phase</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd,8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="NEXT.JS" target="STYLING">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides capabilities for styling components using CSS and other styling methods</data>
      <data key="d6">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 14">
      <data key="d4">8.0</data>
      <data key="d5">Version 14 is an upgrade of the Next.js framework, introducing new features and improvements</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 15">
      <data key="d4">8.0</data>
      <data key="d5">Version 15 is the next upgrade of the Next.js framework, building upon the changes made in version 14</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </edge>
    <edge source="NEXT.JS" target="REACT-DOM">
      <data key="d4">9.0</data>
      <data key="d5">Next.js uses React-DOM for rendering React components in web applications</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </edge>
    <edge source="NEXT.JS" target="LEGACY BEHAVIOR">
      <data key="d4">5.0</data>
      <data key="d5">Next.js includes the legacyBehavior prop to help maintain compatibility with older link behaviors during updates</data>
      <data key="d6">0425ac334d3d5bd221bd8a5bcee35ed9</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC EXPORTS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js enables static exports, allowing applications to be built as static sites or SPAs, enhancing performance</data>
      <data key="d6">ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP PROXY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can use an HTTP proxy to route requests to the correct zone, enabling multi-zone functionality</data>
      <data key="d6">ebecafe0b9c1dfc514b9df4c48e6eb30</data>
    </edge>
    <edge source="NEXT.JS" target="API.EXAMPLE.COM">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can fetch data from API endpoints like api.example.com during the build process</data>
      <data key="d6">e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC RENDERING">
      <data key="d4">15.0</data>
      <data key="d5">Static Rendering is a method used by Next.js to improve performance by pre-rendering pages
Static rendering is a feature of Next.js that allows pages to be rendered without user sessions</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </edge>
    <edge source="NEXT.JS" target="CACHING">
      <data key="d4">17.0</data>
      <data key="d5">Caching is an optimization technique used in Next.js to enhance performance and reduce network requests
Next.js utilizes caching techniques to improve performance and reduce load times
Caching is a key feature of Next.js that enhances performance and reduces costs
Next.js employs caching to optimize performance by reusing previously fetched data</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e,7ad571c896064ee6e36a4acd93898e88,adb5bec4b54e83924618cafc99d40e24,dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="NEXT.JS" target="JS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js applications rely on JavaScript for client-side interactivity and functionality</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTING">
      <data key="d4">32.0</data>
      <data key="d5">Routing is a fundamental feature of Next.js that allows navigation between different pages
Next.js provides a framework for implementing routing in web applications, allowing developers to create dynamic and static routes
Next.js provides routing capabilities that allow developers to define how URLs correspond to application components
Next.js uses a file-system based router for defining and organizing routes</data>
      <data key="d6">1d855e055624fb34345331017d371137,2e4837fd908fed547d3170725336a52e,5214aa930e0680c0e176373359966818,a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="NEXT.JS" target="DEPLOYMENT">
      <data key="d4">8.0</data>
      <data key="d5">Deployment is a critical step in making Next.js applications accessible to users</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e</data>
    </edge>
    <edge source="NEXT.JS" target="APACHE">
      <data key="d4">5.0</data>
      <data key="d5">Next.js can also be hosted on Apache web server</data>
      <data key="d6">adb5bec4b54e83924618cafc99d40e24</data>
    </edge>
    <edge source="NEXT.JS" target="AUTHENTICATION">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides features and guidelines for implementing authentication in web applications.</data>
      <data key="d6">daf474d256367130307c452111474f61</data>
    </edge>
    <edge source="NEXT.JS" target="E2E TESTS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can be tested using E2E tests to ensure that the entire application flow works correctly.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="NEXT.JS" target="TESTING LIBRARY">
      <data key="d4">1.0</data>
      <data key="d5">React Testing Library is used to test React components in Next.js applications, focusing on how users interact with the components.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="NEXT.JS" target="JETBRAINS WEBSTORM">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be debugged in JetBrains WebStorm, which supports JavaScript debugging configurations.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="NEXT.JS" target="HEADLESS CMS">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be integrated with headless CMS to fetch and display content dynamically</data>
      <data key="d6">44eb58960277cd9fc903de7625623163</data>
    </edge>
    <edge source="NEXT.JS" target="CSP HEADER">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows developers to set CSP headers to enhance security for their applications</data>
      <data key="d6">44eb58960277cd9fc903de7625623163</data>
    </edge>
    <edge source="NEXT.JS" target="RESPONSE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js handles responses for requests made to its applications</data>
      <data key="d6">44eb58960277cd9fc903de7625623163</data>
    </edge>
    <edge source="NEXT.JS" target="MY PROJECT">
      <data key="d4">7.0</data>
      <data key="d5">My Project is built using Next.js, showcasing how to integrate MDX</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89</data>
    </edge>
    <edge source="NEXT.JS" target="MDXCOMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">MDXComponents are used within Next.js to customize how markdown content is rendered.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621</data>
    </edge>
    <edge source="NEXT.JS" target="JSCONFIG.JSON">
      <data key="d4">5.0</data>
      <data key="d5">jsconfig.json is used to configure JavaScript options for Next.js applications</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </edge>
    <edge source="NEXT.JS" target="ABSOLUTE IMPORTS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports absolute imports, allowing for easier module imports</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </edge>
    <edge source="NEXT.JS" target="MODULE PATH ALIASES">
      <data key="d4">2.0</data>
      <data key="d5">Next.js supports module path aliases, improving code organization and readability
Module Path Aliases are a feature of Next.js that enhance the import process in projects, making it easier to manage dependencies.</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b,3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="NEXT.JS" target="HTTP SERVER">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can run behind an HTTP server to handle web requests</data>
      <data key="d6">077fbb77da60b5f069a4cf5fd5e33e9b</data>
    </edge>
    <edge source="NEXT.JS" target="ESLINT PLUGIN NEXT">
      <data key="d4">8.0</data>
      <data key="d5">eslint-plugin-next is specifically designed to work with Next.js applications, providing tailored linting rules.</data>
      <data key="d6">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="ROOT DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">The root directory is where a Next.js application is typically initialized and configured.</data>
      <data key="d6">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="LINT-STAGED">
      <data key="d4">1.0</data>
      <data key="d5">lint-staged can be integrated into Next.js projects to ensure that only staged files are linted before committing.</data>
      <data key="d6">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="NEXT.JS" target="@NEXT/ENV">
      <data key="d4">7.0</data>
      <data key="d5">Next.js uses the @next/env package to load environment variables from .env files</data>
      <data key="d6">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </edge>
    <edge source="NEXT.JS" target="HOMEPAGE">
      <data key="d4">7.0</data>
      <data key="d5">The HomePage is a component that showcases the capabilities of Next.js in rendering web applications.</data>
      <data key="d6">7cf992845bf79c5ec4ae2614617a79f4</data>
    </edge>
    <edge source="NEXT.JS" target="DOCKER IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can be packaged into Docker images for consistent deployment across various environments.</data>
      <data key="d6">7cf992845bf79c5ec4ae2614617a79f4</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 15.0.0">
      <data key="d4">7.0</data>
      <data key="d5">Version 15.0.0 is a new release of the Next.js framework that adds TypeScript support.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 13.2.0">
      <data key="d4">7.0</data>
      <data key="d5">Version 13.2.0 is a new release of the Next.js framework that introduces beta support for statically typed links.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 12.0.0">
      <data key="d4">7.0</data>
      <data key="d5">Version 12.0.0 is a new release of the Next.js framework that improves build performance with SWC.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="VERSION 10.2.1">
      <data key="d4">1.0</data>
      <data key="d5">Version 10.2.1 is a new release of the Next.js framework that enhances type checking capabilities.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="EXPERIMENTAL.WEBPACKMEMORYOPTIMIZATIONS">
      <data key="d4">5.0</data>
      <data key="d5">Next.js version 15.0.0 introduces experimental Webpack memory optimizations to reduce memory usage during builds.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="EXPERIMENTAL.DEBUG.MEMORY.USAGE">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows developers to run builds with experimental debug memory usage features to monitor memory consumption.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NEXT.JS" target="GOOGLE TAG MANAGER">
      <data key="d4">8.0</data>
      <data key="d5">Google Tag Manager can be integrated into Next.js applications to manage and deploy marketing tags without modifying the code.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee</data>
    </edge>
    <edge source="NEXT.JS" target="PUBLIC">
      <data key="d4">7.0</data>
      <data key="d5">The public directory is a key feature of Next.js that allows developers to serve static assets directly.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee</data>
    </edge>
    <edge source="NEXT.JS" target="EXPERIMENTAL LIBRARY">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the use of the @next/third-parties library to improve the performance and developer experience of loading third-party libraries.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee</data>
    </edge>
    <edge source="NEXT.JS" target="THIRD-PARTY LIBRARIES">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications can utilize third-party libraries to extend their capabilities and improve user experience.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee</data>
    </edge>
    <edge source="NEXT.JS" target="GOOGLE MAPS EMBED">
      <data key="d4">6.0</data>
      <data key="d5">Google Maps Embed can be integrated into Next.js applications to provide location services</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="NEXT.JS" target="YOUTUBE EMBED">
      <data key="d4">6.0</data>
      <data key="d5">YouTube Embed can be utilized within Next.js applications to enhance multimedia content delivery</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="NEXT.JS" target="OPEN_TELEMETRY">
      <data key="d4">8.0</data>
      <data key="d5">Next.js supports OpenTelemetry instrumentation out of the box, allowing developers to monitor their applications effectively.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="NEXT.JS" target="YOUR_PROJECT">
      <data key="d4">6.0</data>
      <data key="d5">Your project can be built using Next.js, which can be instrumented with OpenTelemetry for performance monitoring.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="NEXT.JS" target="ANALYTICS">
      <data key="d4">1.0</data>
      <data key="d5">Next.js has built-in support for measuring and reporting performance metrics, contributing to analytics</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </edge>
    <edge source="NEXT.JS" target="OPEN_TELEMETRY_COLLECTOR">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can utilize the OpenTelemetry Collector to process telemetry data for observability</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </edge>
    <edge source="NEXT.JS" target="TIME TO FIRST BYTE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports measuring Time to First Byte as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="FIRST CONTENTFUL PAINT">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports measuring First Contentful Paint as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="LARGEST CONTENTFUL PAINT">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports measuring Largest Contentful Paint as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="FIRST INPUT DELAY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports measuring First Input Delay as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="CUMULATIVE LAYOUT SHIFT">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports measuring Cumulative Layout Shift as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="INTERACTION TO NEXT PAINT">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports measuring Interaction to Next Paint as part of its performance metrics</data>
      <data key="d6">6e870d62774508940749246fdee4d7b7</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZING PACKAGE BUNDLING">
      <data key="d4">9.0</data>
      <data key="d5">Next.js documentation provides guidelines on optimizing package bundling to enhance application performance</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </edge>
    <edge source="NEXT.JS" target="OPTIMIZING FONTS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js documentation includes methods for optimizing font loading to improve performance</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </edge>
    <edge source="NEXT.JS" target="ICON LIBRARY">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can optimize the loading of icon libraries to improve application performance</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </edge>
    <edge source="NEXT.JS" target="ROBOTO MONO">
      <data key="d4">6.0</data>
      <data key="d5">Roboto Mono is a font that can be integrated into Next.js applications for improved typography.</data>
      <data key="d6">e36d6ba428fb6e6b41847dce90fde4cc</data>
    </edge>
    <edge source="NEXT.JS" target="WEB WORKER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can utilize web workers to enhance performance by offloading tasks from the main thread.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="ONLOAD">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides onLoad event handlers to execute code after scripts have loaded.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="ONERROR">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides onError event handlers to handle script loading failures.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="ONREADY">
      <data key="d4">5.0</data>
      <data key="d5">Next.js provides onReady event handlers to execute code after scripts have loaded and components are mounted.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="CONFIG-BASED METADATA">
      <data key="d4">8.0</data>
      <data key="d5">Next.js allows the definition of config-based metadata for improved SEO and web shareability.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="FILE-BASED METADATA">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports file-based metadata for managing application metadata dynamically.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="OPEN GRAPH IMAGES">
      <data key="d4">6.0</data>
      <data key="d5">Next.js can generate dynamic Open Graph images for better link sharing on social media.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="SEO">
      <data key="d4">1.0</data>
      <data key="d5">Next.js provides tools and features to enhance SEO for web applications.</data>
      <data key="d6">c1f63acba6f9a58b56bd71c409dcd343</data>
    </edge>
    <edge source="NEXT.JS" target="PARENT METADATA">
      <data key="d4">5.0</data>
      <data key="d5">Next.js allows for the use of parent metadata to influence child components and pages</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC METADATA">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports static metadata that is defined at build time for better performance</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="NEXT.JS" target="VIDEO">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can utilize video content to enhance user experience and engagement through multimedia integration.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="NEXT.JS" target="IMAGE RESPONSE">
      <data key="d4">7.0</data>
      <data key="d5">Image Response is a feature of Next.js that allows for the generation of images, enhancing the performance and visual appeal of applications.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="NEXT.JS" target="JSON-LD">
      <data key="d4">6.0</data>
      <data key="d5">Next.js supports JSON-LD for structured data, allowing developers to enhance their web pages' SEO and data representation.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="NEXT.JS" target="VERCEL OG">
      <data key="d4">7.0</data>
      <data key="d5">Vercel OG is utilized within Next.js to create Open Graph images, improving the sharing capabilities of web applications.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="NEXT.JS" target="VERCEL BLOB">
      <data key="d4">15.0</data>
      <data key="d5">Next.js can utilize Vercel Blob for hosting video content, allowing developers to integrate video hosting seamlessly into their applications.
Vercel Blob is designed to work seamlessly with Next.js for video hosting solutions</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66,f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="NEXT.JS" target="MUX">
      <data key="d4">7.0</data>
      <data key="d5">Mux provides APIs that can be utilized in Next.js applications for video streaming</data>
      <data key="d6">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="NEXT.JS" target="WEB ALMANAC">
      <data key="d4">7.0</data>
      <data key="d5">Next.js is referenced in the Web Almanac for its impact on web performance and image optimization techniques</data>
      <data key="d6">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="NEXT.JS" target="S3 AMAZON">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can utilize S3 Amazon for hosting images remotely, allowing for optimized image loading</data>
      <data key="d6">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC AWAIT IMPORT">
      <data key="d4">1.0</data>
      <data key="d5">Dynamic await import is a JavaScript feature that is not supported in Next.js, affecting how modules are loaded</data>
      <data key="d6">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="NEXT.JS" target="CACHING MECHANISMS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js employs various caching mechanisms to enhance performance across server requests</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATE METADATA">
      <data key="d4">5.0</data>
      <data key="d5">Generate metadata is a function in Next.js that interacts with data fetching and rendering</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="NEXT.JS" target="GENERATE STATIC PARAMS">
      <data key="d4">1.0</data>
      <data key="d5">Generate static params is a feature in Next.js that aids in optimizing page performance</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTER CACHE">
      <data key="d4">8.0</data>
      <data key="d5">Next.js uses the Router Cache to enhance navigation speed by storing previously visited routes</data>
      <data key="d6">98b8f4a199a3050f92608604cd0974b2</data>
    </edge>
    <edge source="NEXT.JS" target="BROWSER">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications run in the browser, providing a user interface for web applications</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="NEXT.JS" target="FETCH API">
      <data key="d4">1.0</data>
      <data key="d5">The Fetch API is commonly used in Next.js applications to handle data fetching and API requests.</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c</data>
    </edge>
    <edge source="NEXT.JS" target="DYNAMIC FUNCTIONS">
      <data key="d4">21.0</data>
      <data key="d5">Dynamic Functions are utilized in Next.js to create flexible and responsive web applications that adapt to user input.
Dynamic functions are a feature of Next.js that allows for routes to be rendered based on real-time information.
Dynamic functions are a feature of Next.js that allows for flexible request handling</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c,729c604ddd30e8eb3491209028c25dde,72e1433a8550144aaf1d1fd8f3cb3774</data>
    </edge>
    <edge source="NEXT.JS" target="API KEY">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications may require API keys for accessing external services, which are managed securely on the server</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </edge>
    <edge source="NEXT.JS" target="CHANGLOG">
      <data key="d4">4.0</data>
      <data key="d5">Next.js maintains a changelog to inform developers about updates and changes made to the framework</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </edge>
    <edge source="NEXT.JS" target="STATIC">
      <data key="d4">8.0</data>
      <data key="d5">Next.js allows for static rendering of pages, enhancing performance by serving pre-rendered content</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </edge>
    <edge source="NEXT.JS" target="REACT CACHE">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can leverage React Cache to optimize data fetching and improve application performance</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752</data>
    </edge>
    <edge source="NEXT.JS" target="ESBUILD">
      <data key="d4">6.0</data>
      <data key="d5">esbuild can be used with Next.js to optimize the build process and include specific directives</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="NEXT.JS" target="BUNDLERS">
      <data key="d4">6.0</data>
      <data key="d5">Bundlers are used in the context of Next.js to optimize and package the application code</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="NEXT.JS" target="NEXTCONFIG">
      <data key="d4">6.0</data>
      <data key="d5">next.config.js is used to configure various settings and features in a Next.js application</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="NEXT.JS" target="INCREMENTAL ADOPTION">
      <data key="d4">1.0</data>
      <data key="d5">Next.js allows for Incremental Adoption of features like Partial Prerendering to improve application performance over time</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="NEXT.JS" target="CONTENT DELIVERY NETWORK">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can utilize a CDN to cache and deliver rendered content efficiently to users.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="NEXT.JS" target="STREAMING">
      <data key="d4">8.0</data>
      <data key="d5">Streaming is a built-in feature of Next.js that enhances the performance of web applications by allowing progressive rendering of UI components.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="NEXT.JS" target="HYBRID APPLICATIONS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js supports the development of Hybrid Applications that utilize both client and server components</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="NEXT.JS" target="NETWORK BOUNDARY">
      <data key="d4">7.0</data>
      <data key="d5">Next.js defines the Network Boundary to manage how client and server components interact</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="NEXT.JS" target="APPLICATION CODE">
      <data key="d4">1.0</data>
      <data key="d5">The application code in Next.js flows from the server to the client, following a unidirectional model</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER ACTION">
      <data key="d4">16.0</data>
      <data key="d5">Next.js provides the framework for implementing Server Actions in React applications
Server Actions are functions defined in Next.js that allow developers to perform server-side operations
Server actions are functions that can be utilized within Next.js applications to handle server-side logic</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019,ace34d6baa071fb6d6db3dcaaf3da1dc,af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="NEXT.JS" target="API.VERCEL.APP">
      <data key="d4">8.0</data>
      <data key="d5">Next.js applications utilize the API at vercel.app for data fetching, enabling dynamic content retrieval</data>
      <data key="d6">af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="NEXT.JS" target="DATA FETCHING AND CACHING">
      <data key="d4">7.0</data>
      <data key="d5">Data Fetching and Caching is a core feature of Next.js that enhances performance and user experience</data>
      <data key="d6">af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="NEXT.JS" target="REVALIDATE_PATH">
      <data key="d4">8.0</data>
      <data key="d5">Revalidate Path is a function in Next.js that allows developers to clear the cache for specific routes</data>
      <data key="d6">af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="NEXT.JS" target="REVALIDATE_TAG">
      <data key="d4">8.0</data>
      <data key="d5">Revalidate Tag is a function in Next.js that provides granular control over cache invalidation</data>
      <data key="d6">af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="NEXT.JS" target="ASYNC REACT SERVER COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">Async React Server Components are a feature of Next.js that allows for server-side rendering of components with asynchronous data fetching</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER-ONLY">
      <data key="d4">6.0</data>
      <data key="d5">Server-only is a package used within Next.js to manage server-side data fetching</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="NEXT.JS" target="TAINT APIS">
      <data key="d4">6.0</data>
      <data key="d5">Taint APIs are recommended practices in Next.js to protect sensitive data</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="NEXT.JS" target="MONGODB">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be used to build applications that interact with MongoDB for data storage</data>
      <data key="d6">72e1433a8550144aaf1d1fd8f3cb3774</data>
    </edge>
    <edge source="NEXT.JS" target="ROUTE HANDLER">
      <data key="d4">9.0</data>
      <data key="d5">Route Handlers are a feature of Next.js that manage HTTP requests and responses.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764</data>
    </edge>
    <edge source="NEXT.JS" target="WEBHOOK">
      <data key="d4">1.0</data>
      <data key="d5">Next.js can handle webhooks through Route Handlers, allowing integration with third-party services.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764</data>
    </edge>
    <edge source="NEXT.JS" target="MODAL">
      <data key="d4">7.0</data>
      <data key="d5">Next.js supports the implementation of modals for user interactions within applications</data>
      <data key="d6">1e914b4d28a0e4ccc7e1e87c2504a6f5</data>
    </edge>
    <edge source="NEXT.JS" target="REDIRECTING">
      <data key="d4">1.0</data>
      <data key="d5">Next.js includes features for handling redirects, which are essential for managing user navigation within the application</data>
      <data key="d6">5214aa930e0680c0e176373359966818</data>
    </edge>
    <edge source="NEXT.JS" target="PERMANENTREDIRECT">
      <data key="d4">7.0</data>
      <data key="d5">Next.js provides the PermanentRedirect function to facilitate permanent URL redirection</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </edge>
    <edge source="NEXT.JS" target="USE_ROUTER">
      <data key="d4">7.0</data>
      <data key="d5">Next.js includes the useRouter hook for programmatic navigation in client components</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </edge>
    <edge source="NEXT.JS" target="BLOOM FILTER">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can implement Bloom filters to optimize data lookup performance in middleware.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="NEXT.JS" target="LOADING UI">
      <data key="d4">1.0</data>
      <data key="d5">Next.js supports the creation of Loading UI components to enhance user experience during content loading.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="NEXT.JS" target="ERROR HANDLING">
      <data key="d4">8.0</data>
      <data key="d5">Next.js provides mechanisms for error handling to manage both expected errors and uncaught exceptions</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82</data>
    </edge>
    <edge source="NEXT.JS" target="HISTORY API">
      <data key="d4">7.0</data>
      <data key="d5">Next.js utilizes the History API to manage navigation and state changes within the application</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="NEXT.JS" target="PARTIAL RENDERING">
      <data key="d4">8.0</data>
      <data key="d5">Partial rendering is a technique used by Next.js to improve navigation performance by only re-rendering changed segments</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="NEXT.JS" target="SOFT NAVIGATION">
      <data key="d4">1.0</data>
      <data key="d5">Soft navigation is a feature of Next.js that allows for seamless transitions between pages without full reloads</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="NEXT.JS" target="TEMPLATE">
      <data key="d4">14.0</data>
      <data key="d5">Next.js supports templates that create new instances for each child on navigation, allowing for dynamic content rendering
Next.js utilizes templates to manage child components and their states during navigation</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30,1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="NEXT.JS" target="MIGRATION GUIDE">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides a migration guide to assist developers in transitioning between versions of the framework</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="NEXT.JS" target="MY-APP">
      <data key="d4">7.0</data>
      <data key="d5">My-app is a sample project created using the Next.js framework during the installation process.</data>
      <data key="d6">8b55191578f60b2d2fac3ae2f4d05b2e</data>
    </edge>
    <edge source="NEXT.JS" target="GITHUB DISCUSSIONS">
      <data key="d4">14.0</data>
      <data key="d5">GitHub Discussions is a platform for the Next.js community to ask questions and share information
The Next.js community engages in discussions on GitHub Discussions to ask questions and share information about the framework</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd,c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="BODY">
      <data key="d4">6.0</data>
      <data key="d5">The &lt;body&gt; element is where the main content of Next.js applications is rendered</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd</data>
    </edge>
    <edge source="NEXT.JS" target="MAIN">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;Main&gt; component is a key part of the Next.js framework for rendering application content</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd</data>
    </edge>
    <edge source="NEXT.JS" target="NEXTSCRIPT">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;NextScript&gt; component is essential for including necessary scripts in Next.js applications</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd</data>
    </edge>
    <edge source="NEXT.JS" target="INSTALLATION GUIDE">
      <data key="d4">7.0</data>
      <data key="d5">The Installation Guide provides essential steps for setting up Next.js</data>
      <data key="d6">514671e4a7b4b0d7573852d3d380eefd</data>
    </edge>
    <edge source="NEXT.JS" target="REACT FOUNDATIONS COURSE">
      <data key="d4">1.0</data>
      <data key="d5">The React Foundations Course provides essential knowledge that helps users understand and utilize Next.js effectively</data>
      <data key="d6">c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="TABLE OF CONTENTS">
      <data key="d4">7.0</data>
      <data key="d5">The table of contents in the Next.js documentation aids in navigating the documentation</data>
      <data key="d6">c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="NAVBAR">
      <data key="d4">1.0</data>
      <data key="d5">The docs navbar in Next.js documentation helps organize the content for users</data>
      <data key="d6">c157c439271dbeeebb69b81254b288af</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY">
      <data key="d4">73.0</data>
      <data key="d5">Next.js can be used in conjunction with Amplify to build and deploy fullstack applications
Next.js applications can be deployed using Amplify, which provides hosting and backend services for such applications.
Next.js can be used in conjunction with Amplify to build server-rendered applications that utilize AWS services.
Next.js can be integrated with Amplify to build server-rendered applications
Amplify provides tools and services that can be integrated with Next.js applications for backend functionalities
Amplify provides an adapter for Next.js, allowing integration of authentication features in Next.js applications
Next.js can be hosted and managed using Amplify, which provides backend services for Next.js applications.
Amplify APIs can be integrated with Next.js applications to provide backend services like authentication and data storage
Amplify provides backend services that can be integrated with Next.js applications for enhanced functionality.
Amplify provides backend capabilities for applications built with Next.js, facilitating fullstack development.
Next.js can be used in conjunction with Amplify to build interactive web applications</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,3a87ecd12d97d86a3bbb406e93d2c8d2,459eadcad7d141c2129458137d7d41d9,65ef73f546115ac23146d87cce61b9c8,69b8cbe6ad275c39fc40832d62145181,81518acc3db43af0161d599284ff910e,ace34d6baa071fb6d6db3dcaaf3da1dc,cb9405c9d1ffc30f045effa85b1e9e09,db7dfb25749de8f86ac15552fec549ec,f5ab02ebcf782ede1b25fdb016628a44,fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="NEXT.JS" target="AWS AMPLIFY">
      <data key="d4">431.0</data>
      <data key="d5">AWS Amplify provides backend services that can be integrated with Next.js applications for full-stack development
AWS Amplify supports deployment of applications built with Next.js
AWS Amplify can be used to deploy applications built with Next.js, allowing for seamless integration of frontend and backend workflows.
Next.js can be used in conjunction with AWS Amplify for building fullstack applications
Next.js can be hosted and deployed using AWS Amplify services, which provide backend support for web applications.
AWS Amplify provides hosting services for applications built with Next.js, enabling server-side rendering and static site generation.
AWS Amplify can be used in conjunction with Next.js to build web applications with server-side rendering capabilities
Next.js can be used with AWS Amplify to build web applications that leverage Amplify's backend services
AWS Amplify provides tools and libraries that work seamlessly with Next.js for building web applications.
AWS Amplify can be used with Next.js to build scalable applications
AWS Amplify can be used in conjunction with Next.js to build applications that leverage AWS services
Next.js can be integrated with AWS Amplify to build server-side rendered applications
Next.js can be used in conjunction with AWS Amplify to build scalable web applications that utilize cloud services
Next.js can be used in conjunction with AWS Amplify to build and connect backend services for applications
AWS Amplify provides backend services that can be integrated with Next.js applications for building full-stack applications
AWS Amplify can be used with Next.js to build server-rendered React applications
AWS Amplify can be used with Next.js to build and connect backend services for web applications
AWS Amplify can be integrated with Next.js to build and connect backend services for web applications
Next.js can be used in conjunction with AWS Amplify to build applications that utilize AWS services
Next.js can be used in conjunction with AWS Amplify to build server-side rendered applications that leverage AWS services, indicating a complementary relationship
Next.js can be used in conjunction with AWS Amplify to build applications that utilize location services
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications
Next.js can be used with AWS Amplify to build applications that utilize geolocation services
AWS Amplify can be integrated with Next.js to enhance web applications with backend services
AWS Amplify can be used in conjunction with Next.js to build server-side rendered applications
AWS Amplify can be used with Next.js to build and connect backend services for web applications
AWS Amplify can be integrated with Next.js to provide analytics and other backend services for web applications
Next.js can be integrated with AWS Amplify to build scalable applications using AWS services
Next.js can be integrated with AWS Amplify to build server-side rendered applications
Next.js can be used in conjunction with AWS Amplify to build server-side rendered applications.
Next.js can utilize AWS Amplify to manage backend services including storage
Next.js can be used in conjunction with AWS Amplify to build web applications that utilize cloud services
AWS Amplify provides backend services that can be integrated with Next.js applications for storage and other functionalities.
AWS Amplify can be used in conjunction with Next.js to build and connect backend storage solutions for web applications
Next.js can be used in conjunction with AWS Amplify to build web applications with backend storage capabilities
AWS Amplify provides first-class support for Next.js applications, enabling developers to build and connect backend services easily.
Next.js can be integrated with AWS Amplify to build server-rendered applications that utilize AWS services
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications
Next.js can be integrated with AWS Amplify to build and connect backend services for web applications
Next.js can be used in conjunction with AWS Amplify to build and connect backend services
AWS Amplify can be integrated with Next.js to build full-stack applications
AWS Amplify can be used to build applications using Next.js, integrating backend services with frontend frameworks
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications.
Next.js can be integrated with AWS Amplify to build server-rendered applications with backend support
AWS Amplify can be used in conjunction with Next.js to build and connect backend services for web applications
AWS Amplify can be used in conjunction with Next.js to build applications that require backend data management
Next.js can be integrated with AWS Amplify to build server-side rendered applications that utilize AWS services
Next.js can be used in conjunction with AWS Amplify to build and connect backend services for applications
Next.js can be used in conjunction with AWS Amplify to build server-side rendered applications that utilize Amplify's backend services
AWS Amplify can be integrated with Next.js to build and connect backend services for web applications
AWS Amplify can be integrated with Next.js to build and connect backend services for web applications
AWS Amplify provides tools and libraries that can be integrated with Next.js for building applications
AWS Amplify can be used in conjunction with Next.js to build applications that require authentication and backend services
Next.js can be used in conjunction with AWS Amplify to build web applications that utilize Amplify's features
AWS Amplify can be used with Next.js to build and connect backend services for web applications
Next.js can be used in conjunction with AWS Amplify to build scalable applications
AWS Amplify provides backend services for applications built with Next.js
AWS Amplify provides tools and services to deploy applications built with Next.js
AWS Amplify can be used to deploy applications built with Next.js, facilitating server-side rendering.
Next.js can be used with AWS Amplify to build server-side rendered applications
AWS Amplify can be integrated with Next.js to enhance the development of full-stack applications
AWS Amplify can be used with Next.js to build applications that require authentication
Next.js can be used in conjunction with AWS Amplify to build server-rendered applications that utilize Amplify's backend services.</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,03d87ab96921db9c36cf9cc05fe0b7a7,08a1975a88b44b2b7444141367047ba8,0dfb84288d523f687fe010cdbeb5603e,0ec7a9a4173bab4434075d5564d2a4c2,13036fcc04ff7a3a3d82cc055061ee52,1b140f417545903391f0e28ef4baf7c2,1e3e9559f0cf793e96c48297529ec161,1ef9b6a9263edfd718636bcbc29f4a72,2089dc10de2cb83a2c70a5f87b8d2dc2,2299dbfce715caaaef2102de232e50aa,2e537c711e153c043f8d08b926e4ba86,322dba5659c945a3d1a5389a738aee99,32ab448d1972668cba4e2c467ff116a8,33e451e77f5bd710301d6408bbd2825d,381ec0f23fc914011f1ec53f51485442,3871391b5e9d42efc3d1226580d587a0,3a9b26a380534d4aa1f17290c51aea24,3d5a944087b6833d97ac18648a394224,4ccaaec02cfc4169e423aaf4ce28263f,53995557ff9014f83cedfd38268f5f7a,58b4ec0bb9e980cc17fe0b3178671c95,5c179d6063f8fca2e1ae95779d7f3ffc,5dced807ee929bcba98d82ba0000fe33,63bae3a149e50b7452962f7bdd8724ea,6450bdd7941ff60e85c4d4acc9a73b25,6c6ccd5699a21bd365fb1e2dc13bd5da,6d2eda5548d1401141ba1fcc7bcbbdba,7040175c91fe86a908046a9b485b0410,7925e036e2025ccae5e0f72fe8f556ac,89e3b86d249ae10742dcef7c4e2d582d,8c8075430684b38bdd1c6ce9fc9f7205,92bcd3df485df362e04da4f60878ff3b,9435f5063dc16afb92c8c68706b77d2b,960cd708b2617651d0d7b1a22712d9fa,a3d633e1c801de300a4724738b7290c3,a45591637d0b47a7bce4ac92c8eb5ea6,a525cbfc03ba1b986f30ce2280067dda,aed1999377a9138038f56696b28a18c4,afa4163fc1d3fab31d1294afed0bcc86,b3ba0d2a5daf3ce8f284099dd931ef14,bc4893f2f489d14f0975fa64ffca1df8,bcd2d66297bc7f44d44a249af2225403,bf926fe785180e6ba0afb391db266523,c143d279740f3e9c59920d2a6720240e,c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c6c993134aa9ac5f833c8bf4d26c0dbd,d479485461737c6760b5fb421f0541ea,d5671c2494c6418a266da35fff705101,d7f9d6d81c47c8666bdbe05c89629447,dcf0763f48070d41b43f528c6ac2928a,de818dec85e98671fc18154ccd8eaf7d,df84fd0c2737b715a0714932e9cfa24e,e3c6466a080dbad6e05f99bda0212547,eb0ab8a0b2738dcfb761cbfe242d18c4,f0a75595032bbb539a5844dc72a00955,f0c17549b011af117faf3f7556948996,f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5,f5bfba3eb957f9e621d0b55561a5f466,f98c0fd002ba589c06bf3b605fe3f189,fa4079c109c67561ad52ce2f338d0fa0,fc0b23383bad27c21e52b0c819eb7874,fca72cef7aaa748346e02aa5f929c2c1,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="NEXT.JS" target="AUTHENTICATOR">
      <data key="d4">7.0</data>
      <data key="d5">The Authenticator component can be integrated into Next.js applications to provide user authentication.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 can be used with Next.js applications for managing secrets and environment variables</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="NEXT.JS" target="HOME CREATE FORM">
      <data key="d4">8.0</data>
      <data key="d5">Home Create Form is a component that is built using the Next.js framework for managing user input.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="NEXT.JS" target="FORM LIFECYCLE">
      <data key="d4">8.0</data>
      <data key="d5">The form lifecycle is a key concept in Next.js applications for managing user input and interactions effectively.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="NEXT.JS" target="TODOCREATEFORM">
      <data key="d4">14.0</data>
      <data key="d5">TodoCreateForm can be used within Next.js applications to create todo items.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="NEXT.JS" target="PUBSUB">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can implement PubSub for real-time messaging capabilities</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d</data>
    </edge>
    <edge source="NEXT.JS" target="AWS">
      <data key="d4">25.0</data>
      <data key="d5">Next.js can be deployed on AWS services, leveraging AWS's cloud infrastructure for hosting applications.
Next.js applications can leverage AWS services through Amplify for enhanced functionality
Next.js is a framework that runs on AWS infrastructure, enabling server-side rendering and static site generation
Next.js applications can be deployed on AWS, leveraging its cloud services for scalability and performance.</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8,69b8cbe6ad275c39fc40832d62145181,bcb8bed3236fce81cd5b966a435370ba,f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="NEXT.JS" target="API GATEWAY">
      <data key="d4">6.0</data>
      <data key="d5">Next.js applications can utilize Amazon API Gateway to manage and secure their REST APIs</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="NEXT.JS" target="AMAZON PINPOINT">
      <data key="d4">5.0</data>
      <data key="d5">Amazon Pinpoint can be utilized within Next.js applications to send targeted messages to users</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="NEXT.JS" target="GEOCODER COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The geocoder component can be integrated into applications built with Next.js for location searching</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="NEXT.JS" target="AMAZON LOCATION SERVICE">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be used to build applications that utilize Amazon Location Service for mapping functionalities</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY GEO">
      <data key="d4">7.0</data>
      <data key="d5">Next.js can be used to build applications that integrate Amplify Geo for location-based services</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY NEXT.JS ADAPTER">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify Next.js adapter is specifically designed to work with Next.js applications</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY CONSOLE">
      <data key="d4">7.0</data>
      <data key="d5">The Amplify Console can be used in conjunction with Next.js to manage backend data for applications built with the framework.</data>
      <data key="d6">e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY GRAPHQL API">
      <data key="d4">7.0</data>
      <data key="d5">Next.js applications can connect to the Amplify GraphQL API to fetch and manage data efficiently.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="NEXT.JS" target="SERVER-SIDE RUNTIMES">
      <data key="d4">1.0</data>
      <data key="d5">Next.js applications run on server-side runtimes to handle requests and render pages dynamically.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY DATA">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Data can be integrated with Next.js to build and connect backend services for applications</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="NEXT.JS" target="MULTI-FACTOR AUTHENTICATION">
      <data key="d4">5.0</data>
      <data key="d5">Multi-factor authentication can be implemented in applications built with Next.js using AWS Amplify</data>
      <data key="d6">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="NEXT.JS" target="GUEST ACCESS">
      <data key="d4">1.0</data>
      <data key="d5">Guest access can be utilized in Next.js applications to allow users to access features without signing in</data>
      <data key="d6">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY AUTH">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Auth can be integrated into Next.js applications to manage user authentication</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY UI GEO">
      <data key="d4">14.0</data>
      <data key="d5">Amplify UI Geo components are designed to work seamlessly with Next.js applicationsNext.js applications can utilize Amplify UI Geo for interactive mapping features</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI components are designed to work seamlessly with Next.js applications
Amplify UI is designed to work with Next.js for building user interfaces</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37,b394b4eeaf1a9df4b16937daeed33e3a</data>
    </edge>
    <edge source="NEXT.JS" target="AMPLIFY UI REACT">
      <data key="d4">1.0</data>
      <data key="d5">Amplify UI React is designed to work with Next.js for building user interfaces in React applications.</data>
      <data key="d6">f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="NPM" target="NODE.JS">
      <data key="d4">49.0</data>
      <data key="d5">Node.js uses npm as its default package manager for managing dependencies.
Node.js uses npm as its default package manager for managing dependencies
Node.js applications often use NPM to manage their dependencies.
npm is the default package manager for Node.js, used to manage its packages.
NPM is the default package manager for Node.js, allowing developers to manage packages
NPM is used to manage packages for Node.js applications</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,856c945b28eacce9c83378e56652fee3,a8b53f4a9be046988ebd8eae20825df3,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="NPM" target="YARN">
      <data key="d4">18.0</data>
      <data key="d5">npm and Yarn are both package managers used for managing JavaScript dependencies.
NPM and Yarn are both package managers used in JavaScript development, often compared for their features.
NPM and Yarn are both package managers used in JavaScript development, often compared for their performance and features.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,21fafbece16fa47f1f530df2b5f0817b,a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NPM" target="PNPM">
      <data key="d4">18.0</data>
      <data key="d5">npm and pnpm are both package managers used for managing JavaScript dependencies.
NPM and PNPM are both package managers for JavaScript, with PNPM being known for its efficiency.
NPM and PNPM are both package managers for JavaScript, with PNPM focusing on efficiency and disk space usage.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,21fafbece16fa47f1f530df2b5f0817b,a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NPM" target="TERMINAL">
      <data key="d4">32.0</data>
      <data key="d5">npm commands are executed in the terminal to manage JavaScript packages.
Terminal is used to execute npm commands for installing packages
The terminal is used to run NPM commands for managing packages in a Node.js environment
The terminal is used to execute npm commands for installing and managing JavaScript packages</data>
      <data key="d6">6a27b514d5ea49bd1a6dd159d44aaf87,6bb5264a8b72d26916099f27337032fe,7b388f79ffb6d5d09b2f36b2618f109d,a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="NPM" target="GITHUB">
      <data key="d4">7.0</data>
      <data key="d5">NPM packages are often hosted and shared on GitHub, facilitating collaboration among developers.
Many NPM packages are hosted on GitHub, showing a relationship between the package manager and the version control platform.</data>
      <data key="d6">b02497cb2bc6f667d39aa316235e09d5,b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="NPM" target="PACKAGE.JSON">
      <data key="d4">7.0</data>
      <data key="d5">NPM is used to manage the dependencies listed in the package.json file for JavaScript projects</data>
      <data key="d6">f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="NPM" target="CYPRESS">
      <data key="d4">14.0</data>
      <data key="d5">npm is used to install Cypress as a development dependency in JavaScript projects
NPM is used to install Cypress as a dependency in JavaScript projects</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78,f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="NPM" target="JEST">
      <data key="d4">9.0</data>
      <data key="d5">Jest can be installed as a package using NPM, which is a package manager for JavaScript.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="NPM" target="VITEST">
      <data key="d4">8.0</data>
      <data key="d5">Vitest can be installed and managed through NPM, indicating a direct relationship between the package manager and the testing framework.</data>
      <data key="d6">b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="NPM" target="CI">
      <data key="d4">1.0</data>
      <data key="d5">Continuous Integration processes often utilize NPM to install dependencies and run tests automatically.</data>
      <data key="d6">b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="NPM" target="AMPLIFY">
      <data key="d4">19.0</data>
      <data key="d5">NPM is used to manage packages and dependencies in AWS Amplify projects
NPM is used to manage packages and dependencies for projects developed using the Amplify framework
AWS Amplify can be installed and managed using NPM, which is essential for JavaScript application development</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab,56488edd7cf127c0da3442fbce7f97db,e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="NPM" target="AWS AMPLIFY">
      <data key="d4">24.0</data>
      <data key="d5">AWS Amplify uses NPM for managing JavaScript packages and dependencies in its applications
NPM is used in conjunction with AWS Amplify for managing dependencies in projects
NPM is used to install AWS Amplify dependencies in JavaScript applications.
NPM is used to install AWS Amplify packages, indicating a relationship between the package manager and the framework.</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52,4d25b33f699aef8a075e8858bf0ad630,94a4bc63d08f1f8dd8fa4630608aee68,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="NPM" target="AMPLIFY APP">
      <data key="d4">6.0</data>
      <data key="d5">NPM is used to manage dependencies for the Amplify app during the build process</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="NPM" target="AMPLIFY.YML">
      <data key="d4">5.0</data>
      <data key="d5">NPM commands are used in the amplify.yml file to manage dependencies during the build process</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="NPM" target="AMAZON TRANSLATE">
      <data key="d4">6.0</data>
      <data key="d5">NPM is used to install the Amazon Translate SDK, which is necessary for integrating translation capabilities</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="NPM" target="POLLY CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">NPM is used to install the Amazon Polly SDK, which is necessary for the Polly Client to function in applications.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="NPM" target="APP">
      <data key="d4">7.0</data>
      <data key="d5">npm is used to manage packages and dependencies for the application being developed</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="NPM" target="CREATE REACT APP">
      <data key="d4">6.0</data>
      <data key="d5">Create React App can be installed and managed using NPM</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="NPM" target="AMPLIFY UI">
      <data key="d4">7.0</data>
      <data key="d5">NPM is used to install the Amplify UI library, making it accessible for developers</data>
      <data key="d6">818fcb4044a83bd6eead8a24e57319ad</data>
    </edge>
    <edge source="ESLINT" target="NEXT.LINT">
      <data key="d4">8.0</data>
      <data key="d5">The next lint command utilizes ESLint to analyze JavaScript code for potential issues.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="ESLINT" target="PRETTIER">
      <data key="d4">8.0</data>
      <data key="d5">ESLint and Prettier can be integrated to avoid conflicts in code formatting rules.</data>
      <data key="d6">4baf287e38f64339e2ce2ed9f18befe3</data>
    </edge>
    <edge source="ESLINT" target="SECURITY">
      <data key="d4">6.0</data>
      <data key="d5">ESLint helps ensure security by catching accessibility issues early, which is a part of broader security practices.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="ESLINT" target="TERMINAL">
      <data key="d4">6.0</data>
      <data key="d5">The terminal is used to run ESLint commands, such as 'yarn lint', to check for code quality in a Next.js application.</data>
      <data key="d6">2f935bf8dd94b80e38c90109f4e620a3</data>
    </edge>
    <edge source="ESLINT" target="ESLINT CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">The ESLint configuration file (.eslintrc.json) is used to define the rules and settings for ESLint in a Next.js project.</data>
      <data key="d6">2f935bf8dd94b80e38c90109f4e620a3</data>
    </edge>
    <edge source="ESLINT" target="STRICT">
      <data key="d4">8.0</data>
      <data key="d5">The Strict configuration option in ESLint is recommended for developers using Next.js for the first time to ensure high code quality.</data>
      <data key="d6">2f935bf8dd94b80e38c90109f4e620a3</data>
    </edge>
    <edge source="ESLINT" target="BASE">
      <data key="d4">1.0</data>
      <data key="d5">The Base configuration option in ESLint provides a standard set of rules for Next.js applications without additional strictness.</data>
      <data key="d6">2f935bf8dd94b80e38c90109f4e620a3</data>
    </edge>
    <edge source="ESLINT" target="CACHE">
      <data key="d4">5.0</data>
      <data key="d5">ESLint uses caching to improve performance by storing processed file information, which can be disabled if necessary.</data>
      <data key="d6">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="HTTPS" target="TERMINAL">
      <data key="d4">1.0</data>
      <data key="d5">HTTPS commands can be executed in the terminal for secure communication setups.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="APPLICATION" target="APPLICATION DIRECTORY">
      <data key="d4">8.0</data>
      <data key="d5">The application directory is where the Next.js application files are located</data>
      <data key="d6">bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="APPLICATION" target="LINK COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The application utilizes the Link component to enable navigation between different parts of the web application.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da</data>
    </edge>
    <edge source="APPLICATION" target="INSTRUMENTATION">
      <data key="d4">5.0</data>
      <data key="d5">The application can implement instrumentation to monitor its performance and track errors effectively.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da</data>
    </edge>
    <edge source="APPLICATION" target="DATA ACCESS LAYER">
      <data key="d4">7.0</data>
      <data key="d5">The application interacts with the Data Access Layer to manage data requests and ensure secure access to user information</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="APPLICATION" target="SECURITY">
      <data key="d4">1.0</data>
      <data key="d5">The application must implement security protocols to safeguard user data and maintain integrity</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="APPLICATION" target="TODO">
      <data key="d4">7.0</data>
      <data key="d5">The application allows users to manage their todos, providing a user interface for interaction.</data>
      <data key="d6">374f53811273c5cffe3558d227a0e4ec</data>
    </edge>
    <edge source="APPLICATION" target="REAL-TIME API">
      <data key="d4">9.0</data>
      <data key="d5">The application utilizes a real-time API to provide live updates to users when todos are created or modified.</data>
      <data key="d6">374f53811273c5cffe3558d227a0e4ec</data>
    </edge>
    <edge source="APPLICATION" target="REACT">
      <data key="d4">1.0</data>
      <data key="d5">The application is built using React, leveraging its capabilities for creating dynamic user interfaces.</data>
      <data key="d6">374f53811273c5cffe3558d227a0e4ec</data>
    </edge>
    <edge source="APPLICATION" target="TERMINAL">
      <data key="d4">6.0</data>
      <data key="d5">Developers use the terminal to interact with and manage the application</data>
      <data key="d6">fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="APPLICATION" target="AMPLIFY CONSOLE">
      <data key="d4">7.0</data>
      <data key="d5">The application is managed and deployed through the Amplify Console</data>
      <data key="d6">fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="APPLICATION" target="DATA MANAGER">
      <data key="d4">1.0</data>
      <data key="d5">The Data Manager allows users to view and manage the application's data</data>
      <data key="d6">fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="DARWIN" target="NODE.JS">
      <data key="d4">5.0</data>
      <data key="d5">Node.js runs on the Darwin operating system, which is the foundation of macOS.</data>
      <data key="d6">b02497cb2bc6f667d39aa316235e09d5</data>
    </edge>
    <edge source="DARWIN" target="ARM64">
      <data key="d4">1.0</data>
      <data key="d5">ARM64 architecture is supported by the Darwin operating system, allowing for efficient performance on compatible devices</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="VERCEL" target="DIAGRAMS">
      <data key="d4">1.0</data>
      <data key="d5">Diagrams are created following Vercel's design guide, ensuring consistency in documentation visuals</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="VERCEL" target="NEXTRESPONSE">
      <data key="d4">5.0</data>
      <data key="d5">Vercel is the platform that hosts applications built with Next.js, which utilizes NextResponse</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="VERCEL" target="VERCEL SPEED INSIGHTS">
      <data key="d4">7.0</data>
      <data key="d5">Vercel Speed Insights is a service provided by Vercel to enhance the performance of applications hosted on their platform.</data>
      <data key="d6">86965ee0055fe16d855a4f0e993b9d85</data>
    </edge>
    <edge source="VERCEL" target="GITHUB">
      <data key="d4">15.0</data>
      <data key="d5">Vercel uses GitHub for version control and collaboration on its projects
Vercel uses GitHub for version control and collaboration on the Next.js project.
Vercel uses GitHub for version control and collaboration on the Next.js project.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248,e1b487c3c6375629c06ea480fd8dc53b,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="VERCEL" target="IMGIX">
      <data key="d4">8.0</data>
      <data key="d5">Imgix works automatically with Vercel for image optimization without requiring additional configuration.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="VERCEL" target="ANALYTICS">
      <data key="d4">16.0</data>
      <data key="d5">Vercel provides analytics tools to monitor traffic and user engagement for applications deployed on its platform
Vercel offers managed services to automatically collect and visualize performance metrics, which is a part of analytics</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d,9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="VERCEL" target="SPEED INSIGHTS">
      <data key="d4">6.0</data>
      <data key="d5">Vercel offers speed insights to help developers understand real-world performance of their applications</data>
      <data key="d6">9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="VERCEL" target="LOGGING">
      <data key="d4">1.0</data>
      <data key="d5">Vercel's logging feature assists developers in debugging and monitoring application performance in production</data>
      <data key="d6">9bc82a2671446cca168796fea771ecad</data>
    </edge>
    <edge source="VERCEL" target=".ENV">
      <data key="d4">7.0</data>
      <data key="d5">Vercel allows the configuration of environment variables through .env files for applications deployed on its platform.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="VERCEL" target="PROJECT SETTINGS">
      <data key="d4">8.0</data>
      <data key="d5">Project Settings in Vercel is where users can manage environment variables for their applications deployed on the Vercel platform.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="VERCEL" target="TERMINAL">
      <data key="d4">6.0</data>
      <data key="d5">The Terminal is used to execute commands related to Vercel, such as pulling environment variables for local development.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="VERCEL" target="OPENTELEMETRY">
      <data key="d4">7.0</data>
      <data key="d5">Vercel supports OpenTelemetry, enabling developers to connect their projects to observability providers easily.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="VERCEL" target="OPEN_TELEMETRY_COLLECTOR">
      <data key="d4">6.0</data>
      <data key="d5">OpenTelemetry Collector can be deployed on Vercel to process telemetry data from applications hosted on the platform.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="VERCEL" target="DURABLE STORAGE">
      <data key="d4">1.0</data>
      <data key="d5">Vercel uses durable storage to persist the ISR cache for Next.js applications, ensuring efficient data retrieval and page updates.</data>
      <data key="d6">d96f8e049ce9a691971e1a92b5b556af</data>
    </edge>
    <edge source="VERCEL" target="NEXTJS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is developed and maintained by Vercel, which provides hosting and deployment services for Next.js applications.</data>
      <data key="d6">a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="VERCEL" target="CDN">
      <data key="d4">7.0</data>
      <data key="d5">Vercel automatically configures a global CDN for Next.js projects, improving content delivery speed and performance.</data>
      <data key="d6">4443464e7a2cb4bcbbf667881fecb236</data>
    </edge>
    <edge source="VERCEL" target="DOCKER">
      <data key="d4">1.0</data>
      <data key="d5">Vercel and Docker are both platforms that facilitate the deployment of applications, albeit in different environments.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="VERCEL" target="CUSTOM SERVER">
      <data key="d4">4.0</data>
      <data key="d5">A custom server cannot be deployed on Vercel, which is important for developers to know</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="VERCEL" target="OPEN_TELEMETRY">
      <data key="d4">7.0</data>
      <data key="d5">Vercel provides seamless integration for deploying applications that utilize OpenTelemetry for observability.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="VERCEL" target="API">
      <data key="d4">6.0</data>
      <data key="d5">Vercel provides APIs that developers can use to interact with its services and integrate with other applications.</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c</data>
    </edge>
    <edge source="VERCEL" target="MIDDLEWARE">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can be used in conjunction with Vercel's platform to manage requests and responses effectively</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3</data>
    </edge>
    <edge source="VERCEL" target="REDIS">
      <data key="d4">7.0</data>
      <data key="d5">Vercel can utilize Redis for fast data retrieval in applications hosted on its platform.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="VERCEL" target="EDGE CONFIG">
      <data key="d4">8.0</data>
      <data key="d5">Vercel provides Edge Config as a service to enhance the performance of applications hosted on its platform.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="SAMUEL NAMARA" target="ALHAMIA PRISON">
      <data key="d4">24.0</data>
      <data key="d5">Samuel Namara was imprisoned in Alhamia Prison in Tiruzia.
Samuel Namara was held as a hostage in Alhamia Prison.
Samuel Namara was a prisoner at Alhamia Prison in Tiruzia</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="SAMUEL NAMARA" target="MEGGIE TAZBAH">
      <data key="d4">7.0</data>
      <data key="d5">Samuel Namara and Meggie Tazbah were both hostages released in the same exchange.
Samuel Namara and Meggie Tazbah were both hostages released in the same exchange.
Samuel Namara and Meggie Tazbah were exchanged in the same hostage release</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="SAMUEL NAMARA" target="DURKE BATAGLANI">
      <data key="d4">7.0</data>
      <data key="d5">Samuel Namara and Durke Bataglani were both hostages released in the same exchange.
Samuel Namara and Durke Bataglani were both hostages released in the same exchange.
Samuel Namara and Durke Bataglani were exchanged in the same hostage release</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="SAMUEL NAMARA" target="FIRUZABAD">
      <data key="d4">2.0</data>
      <data key="d5">Samuel Namara was a hostage in Firuzabad.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="ALHAMIA PRISON" target="DURKE BATAGLANI">
      <data key="d4">8.0</data>
      <data key="d5">Durke Bataglani was imprisoned in Alhamia Prison in Tiruzia.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="ALHAMIA PRISON" target="MEGGIE TAZBAH">
      <data key="d4">8.0</data>
      <data key="d5">Meggie Tazbah was imprisoned in Alhamia Prison in Tiruzia.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="ALHAMIA PRISON" target="TIRUZIA">
      <data key="d4">7.0</data>
      <data key="d5">Tiruzia is the location of Alhamia Prison where hostages were held</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b</data>
    </edge>
    <edge source="NODE" target="AWS LAMBDA">
      <data key="d4">1.0</data>
      <data key="d5">AWS Lambda functions can be written in Node.js, allowing developers to use JavaScript for serverless applications</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="NODE" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify utilizes Node as its runtime for serverless functions</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="YARN" target="NODE.JS">
      <data key="d4">35.0</data>
      <data key="d5">Node.js can also utilize Yarn as an alternative package manager.
Node.js can also use Yarn as an alternative package manager
Node.js applications can also use Yarn for dependency management.
Yarn is an alternative package manager to npm for Node.js applications.
Yarn is an alternative package manager that can be used with Node.js</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,a8b53f4a9be046988ebd8eae20825df3,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="YARN" target="PNPM">
      <data key="d4">12.0</data>
      <data key="d5">Yarn and pnpm are both package managers used for managing JavaScript dependencies.
Yarn and PNPM are both alternatives to NPM for managing JavaScript packages.</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="YARN" target="TERMINAL">
      <data key="d4">9.0</data>
      <data key="d5">Yarn commands are executed in the terminal to manage JavaScript packages.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="YARN" target="PACKAGE.JSON">
      <data key="d4">7.0</data>
      <data key="d5">Yarn is another package manager that can manage dependencies listed in the package.json file</data>
      <data key="d6">f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="YARN" target="CYPRESS">
      <data key="d4">7.0</data>
      <data key="d5">Yarn can be used to install Cypress, providing an alternative package management solution for developers</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="YARN" target="JEST">
      <data key="d4">9.0</data>
      <data key="d5">Jest can also be installed using Yarn, another package manager for JavaScript.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="YARN" target="CREATE REACT APP">
      <data key="d4">6.0</data>
      <data key="d5">Create React App can also be installed and managed using Yarn</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="YARN" target="AWS AMPLIFY">
      <data key="d4">12.0</data>
      <data key="d5">Yarn can be used to install AWS Amplify dependencies in JavaScript applications.
Yarn can also be used to install AWS Amplify packages, indicating a relationship between the package manager and the framework.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630,94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="YARN" target="AMPLIFY UI">
      <data key="d4">7.0</data>
      <data key="d5">Yarn can also be used to install the Amplify UI library, providing an alternative package management option</data>
      <data key="d6">818fcb4044a83bd6eead8a24e57319ad</data>
    </edge>
    <edge source="PNPM" target="NODE.JS">
      <data key="d4">35.0</data>
      <data key="d5">Node.js can utilize pnpm as a package manager for managing dependencies.
Node.js can utilize pnpm as a package manager for efficient dependency management
Node.js applications can utilize PNPM for efficient package management.
pnpm is another package manager for Node.js, known for its efficiency.
PNPM is another package manager that works with Node.js, providing efficient package management</data>
      <data key="d6">00f6f02bfd7f7bcf6fa53ab912dcb6dc,a8b53f4a9be046988ebd8eae20825df3,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4,f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="PNPM" target="TERMINAL">
      <data key="d4">9.0</data>
      <data key="d5">pnpm commands are executed in the terminal to manage JavaScript packages.</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3</data>
    </edge>
    <edge source="PNPM" target="CYPRESS">
      <data key="d4">7.0</data>
      <data key="d5">pnpm can also be used to install Cypress, offering a space-efficient way to manage dependencies</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="PNPM" target="JEST">
      <data key="d4">9.0</data>
      <data key="d5">Jest can be installed using PNPM, which is a package manager that optimizes disk space.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="TERMINAL" target="DARWIN KERNEL">
      <data key="d4">8.0</data>
      <data key="d5">Terminal operates on the Darwin Kernel, utilizing its services to execute commands and run applications</data>
      <data key="d6">f119ecc0390ca4c3c02719ebd18faf59</data>
    </edge>
    <edge source="TERMINAL" target="NODE.JS">
      <data key="d4">9.0</data>
      <data key="d5">Node.js applications are often run and managed through the terminal.
The terminal is used to run Node.js commands and scripts, facilitating the development and debugging process</data>
      <data key="d6">a8b53f4a9be046988ebd8eae20825df3,ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="TERMINAL" target="REACT">
      <data key="d4">7.0</data>
      <data key="d5">Terminal commands are also used to upgrade React to version 17</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="TERMINAL" target="WEBPACK 5">
      <data key="d4">1.0</data>
      <data key="d5">Terminal commands may be used to manage Webpack 5 configurations during the upgrade process</data>
      <data key="d6">bab5eb78712e4c073d8280b72cd3de79</data>
    </edge>
    <edge source="TERMINAL" target="SASS">
      <data key="d4">1.0</data>
      <data key="d5">The Terminal is used to execute commands to install Sass, which is necessary for styling in Next.js applications</data>
      <data key="d6">0b10d085541dc5564e998254b8588822</data>
    </edge>
    <edge source="TERMINAL" target="CODMODS">
      <data key="d4">1.0</data>
      <data key="d5">Codemods are executed in the terminal to apply transformations to the codebase</data>
      <data key="d6">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="TERMINAL" target="PACKAGE.JSON">
      <data key="d4">1.0</data>
      <data key="d5">Terminal is used to install dependencies listed in package.json</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89</data>
    </edge>
    <edge source="TERMINAL" target="AMPLIFY">
      <data key="d4">27.0</data>
      <data key="d5">Terminal commands are used to configure and manage Amplify applications
Commands in the terminal are used to interact with AWS Amplify for managing cloud resources.
The terminal is used to execute commands related to Amplify, including streaming logs and managing functions.
Commands run in the terminal are used to deploy and manage resources in the Amplify environment.
The terminal is used to execute commands related to AWS Amplify, including deployment and configuration tasks.</data>
      <data key="d6">374f53811273c5cffe3558d227a0e4ec,3a87ecd12d97d86a3bbb406e93d2c8d2,69b8cbe6ad275c39fc40832d62145181,db7dfb25749de8f86ac15552fec549ec,e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="TERMINAL" target="INFO">
      <data key="d4">5.0</data>
      <data key="d5">The info command is executed in the terminal to gather system information for troubleshooting.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="TERMINAL" target="MY-SHARED-BACKEND">
      <data key="d4">8.0</data>
      <data key="d5">Terminal commands are used to deploy and manage the My-Shared-Backend application</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="TERMINAL" target="SANDBOX ENVIRONMENT">
      <data key="d4">1.0</data>
      <data key="d5">The terminal is used to execute commands related to managing and interacting with the sandbox environment</data>
      <data key="d6">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="TERMINAL" target="AWS CLOUD DEVELOPMENT KIT">
      <data key="d4">6.0</data>
      <data key="d5">The AWS CDK CLI can be run from the Terminal to bootstrap the CDKToolkit stack.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="TERMINAL" target="CURL">
      <data key="d4">8.0</data>
      <data key="d5">Curl is executed from the terminal, allowing users to run commands to transfer data.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="TERMINAL" target="APP">
      <data key="d4">12.0</data>
      <data key="d5">The terminal is used to execute commands related to the app's development and deployment.
The terminal is used to execute commands related to the application development</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb,3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="PROXY" target="OBJECT">
      <data key="d4">5.0</data>
      <data key="d5">Proxy is related to Object as it is used to define custom behavior for fundamental operations on objects.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="NODE.JS" target="EDGE RUNTIME">
      <data key="d4">11.0</data>
      <data key="d5">The Edge Runtime has restrictions on native Node.js APIs
The Edge Runtime is a specific environment within Node.js that is used for executing middleware in Next.js applications</data>
      <data key="d6">234c5cf6d90b5c8b7d3583a3300a4752,b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="NODE.JS" target="NODE_OPTIONS">
      <data key="d4">7.0</data>
      <data key="d5">NODE_OPTIONS is used to configure the Node.js runtime environment, which is essential for running Next.js applications.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b</data>
    </edge>
    <edge source="NODE.JS" target="CROSS-ENV">
      <data key="d4">7.0</data>
      <data key="d5">Cross-env is used to set environment variables for Node.js applications, ensuring compatibility across different operating systems</data>
      <data key="d6">ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="NODE.JS" target="ES MODULES">
      <data key="d4">5.0</data>
      <data key="d5">ES Modules can be used in Node.js applications to manage dependencies and modularize code</data>
      <data key="d6">99aea11e8e00a31189977a03ce528a10</data>
    </edge>
    <edge source="NODE.JS" target="DOCKER IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">Docker images can be used to deploy Node.js applications, showcasing their compatibility and relationship in application deployment.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="NODE.JS" target="DEBUGGING">
      <data key="d4">1.0</data>
      <data key="d5">Node.js is the runtime environment that allows debugging of server-side code in Next.js applications.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="NODE.JS" target="CHROME DEVTOOLS">
      <data key="d4">6.0</data>
      <data key="d5">Chrome DevTools can be used to analyze and debug Node.js applications, including those built with Next.js.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NODE.JS" target="HEAP PROFILE">
      <data key="d4">7.0</data>
      <data key="d5">Heap profiles can be recorded in Node.js applications to identify memory issues and leaks.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="NODE.JS" target="FUNCTION">
      <data key="d4">8.0</data>
      <data key="d5">Functions in AWS Amplify can be written in Node.js, leveraging its capabilities for serverless applications</data>
      <data key="d6">23f821c071cb4c4cf183f5aac596db35</data>
    </edge>
    <edge source="NODE.JS" target="LAMBDA">
      <data key="d4">5.0</data>
      <data key="d5">AWS Lambda supports Node.js as a runtime for executing serverless functions</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="NODE.JS" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify supports Node.js for building server-side applications</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="NODE.JS" target="AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Amplify supports applications built with Node.js, allowing developers to create scalable applications.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="TURBOPACK" target="RUST">
      <data key="d4">1.0</data>
      <data key="d5">Turbopack is written in Rust, leveraging its performance benefits for JavaScript and TypeScript bundling</data>
      <data key="d6">b6b4173819c0a759fcd3146179f8f534</data>
    </edge>
    <edge source="TURBOPACK" target="NEXT.CONFIG.JS">
      <data key="d4">7.0</data>
      <data key="d5">next.config.js is used to configure Turbopack's settings, such as resolve aliases and module ID strategy.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="TURBOPACK" target="MODULE ID STRATEGY">
      <data key="d4">1.0</data>
      <data key="d5">Module ID strategy is a feature of Turbopack that determines how module IDs are assigned during the build process.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="TURBOPACK" target="LOADER">
      <data key="d4">1.0</data>
      <data key="d5">Turbopack can utilize various loaders to process files and manage dependencies in a Next.js application.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="TURBOPACK" target="WEBPACK">
      <data key="d4">5.0</data>
      <data key="d5">Turbopack is designed to work with Webpack's loader configuration, enhancing the build process for Next.js applications</data>
      <data key="d6">9726f4ae30b11539c429ff41c8326d46</data>
    </edge>
    <edge source="GITHUB" target="IP">
      <data key="d4">5.0</data>
      <data key="d5">GitHub uses IP addresses to identify and manage user requests and interactions with its platform</data>
      <data key="d6">febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="GITHUB" target="REPO">
      <data key="d4">1.0</data>
      <data key="d5">GitHub hosts the repository for Next.js, allowing collaboration and version control</data>
      <data key="d6">8735729cb47a3e421748c05ffb31502f</data>
    </edge>
    <edge source="GITHUB" target="FETCHGITHUBSTARS">
      <data key="d4">8.0</data>
      <data key="d5">The fetchGithubStars function retrieves data from GitHub regarding the number of stars</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e</data>
    </edge>
    <edge source="GITHUB" target="AMPLIFY">
      <data key="d4">13.0</data>
      <data key="d5">Amplify can integrate with GitHub for version control and continuous deployment of applications.
Amplify integrates with GitHub to allow users to deploy applications directly from their GitHub repositories.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="GITHUB" target="PULL REQUEST">
      <data key="d4">1.0</data>
      <data key="d5">Pull requests are a feature of GitHub that allows developers to propose changes to a repository</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="GITHUB" target="AMPLIFY CONSOLE">
      <data key="d4">5.0</data>
      <data key="d5">Issues related to the Amplify Console can be filed in the GitHub repository for Amplify Backend.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="GITHUB" target="APP">
      <data key="d4">7.0</data>
      <data key="d5">The app's code is hosted on GitHub, allowing for version control and collaboration among developers.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="GITHUB" target="REPOSITORY">
      <data key="d4">6.0</data>
      <data key="d5">Repositories are hosted on GitHub for version control and collaboration</data>
      <data key="d6">fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="GITHUB" target="AMPLIFY UI">
      <data key="d4">9.0</data>
      <data key="d5">Amplify UI's design tokens and components can be found and referenced on GitHub
Developers can provide feedback and suggestions for Amplify UI on GitHub</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d,d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="GITHUB" target="FACE LIVENESS TROUBLESHOOTING">
      <data key="d4">1.0</data>
      <data key="d5">Issues related to Face Liveness Detector can be filed on GitHub repositories for resolution.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="HMR" target="NEXTJS">
      <data key="d4">7.0</data>
      <data key="d5">Hot Module Replacement is a feature integrated into Next.js to enhance the development workflow by allowing live updates.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="REACT" target="REACT-DOM">
      <data key="d4">11.0</data>
      <data key="d5">React-DOM is used to render React components into the DOM
react-dom is used in conjunction with React to render components to the DOM.
React-DOM is used in conjunction with React to manage the DOM in web applications</data>
      <data key="d6">ab49838f472483f11a1afbcaff84ad1e,bc34912ac16bc1504d04e9019f0c8cb9,bf545f52d7ba0c458692304a2c0ca7e4</data>
    </edge>
    <edge source="REACT" target="CLIENT COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">React is the library used to create client components</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="REACT" target="SERVER COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">React is the library used to create server components</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="REACT" target="LINK">
      <data key="d4">7.0</data>
      <data key="d5">Link is a component that is used within React applications to facilitate navigation</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="REACT" target="MYCOMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">MyComponent is a React component that can be used within MDX files</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="REACT" target="SWR">
      <data key="d4">8.0</data>
      <data key="d5">SWR is a library designed to work seamlessly with React for efficient data fetching</data>
      <data key="d6">66fea93bb642287d13f3a25b8b3e0083</data>
    </edge>
    <edge source="REACT" target="JAVASCRIPT">
      <data key="d4">9.0</data>
      <data key="d5">React is a JavaScript library, meaning it is built using JavaScript and relies on it for functionality
React is a JavaScript library, meaning it is built using JavaScript and relies on it for functionality</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0,66fea93bb642287d13f3a25b8b3e0083</data>
    </edge>
    <edge source="REACT" target="SERVER COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">Server Components are a feature of React that allows components to be rendered on the server</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="ANT-DESIGN">
      <data key="d4">7.0</data>
      <data key="d5">Ant Design provides a set of components specifically designed for use with React applications</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="CHAKRA-UI">
      <data key="d4">7.0</data>
      <data key="d5">Chakra UI is a component library built for React, enhancing the development of user interfaces</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="FLUENTUI">
      <data key="d4">7.0</data>
      <data key="d5">Fluent UI is designed to work with React, providing a consistent design language across Microsoft products</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="MUI">
      <data key="d4">7.0</data>
      <data key="d5">MUI is a popular UI framework that integrates seamlessly with React for building user interfaces</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="STYLED-JSX">
      <data key="d4">7.0</data>
      <data key="d5">Styled-JSX is specifically designed for styling React components with scoped CSS</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="STYLED-COMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">Styled Components allows for styling React components using tagged template literals</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="TAMAGUI">
      <data key="d4">7.0</data>
      <data key="d5">Tamagui is a UI kit that provides components for building React Native applications</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="POSTCSS">
      <data key="d4">6.0</data>
      <data key="d5">PostCSS can be used in React applications to enhance CSS with additional features</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="TAILWIND CSS">
      <data key="d4">6.0</data>
      <data key="d5">Tailwind CSS can be integrated into React applications for utility-first styling</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="CSS MODULES">
      <data key="d4">6.0</data>
      <data key="d5">CSS Modules can be used in React applications to scope styles locally</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="CSS-IN-JS">
      <data key="d4">1.0</data>
      <data key="d5">CSS-in-JS is a popular approach for styling React components dynamically</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="UPSTREAM APIS">
      <data key="d4">8.0</data>
      <data key="d5">Upstream APIs are being developed in collaboration with the React team to enhance the handling of CSS and JavaScript assets</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="REACT" target="REQUEST MEMOIZATION">
      <data key="d4">7.0</data>
      <data key="d5">Request memoization is a feature of React that optimizes data fetching during the rendering process</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="REACT" target="SERVER COMPONENT TREE">
      <data key="d4">6.0</data>
      <data key="d5">The server component tree in React is integral to how components are rendered and can utilize memoization</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="REACT" target="POSTS">
      <data key="d4">1.0</data>
      <data key="d5">React is used to render the posts fetched from the API, displaying them in the user interface</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="REACT" target="DRIZZLE ORM">
      <data key="d4">7.0</data>
      <data key="d5">React uses Drizzle ORM to manage database interactions within its components</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="REACT" target="CACHE">
      <data key="d4">8.0</data>
      <data key="d5">React utilizes caching to optimize data fetching and improve performance</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="REACT" target="AWS AMPLIFY">
      <data key="d4">76.0</data>
      <data key="d5">AWS Amplify supports the development of applications using React, providing tools for building and deploying React applications.
React can be used with AWS Amplify to build web applications
React can be used to build user interfaces for applications that utilize AWS Amplify
AWS Amplify is often used with React to build scalable applications
AWS Amplify provides components that can be used with React to build applications more efficiently
AWS Amplify UI React is built to work seamlessly with React, allowing developers to create applications using both
AWS Amplify provides tools and libraries that integrate with React for building applications
AWS Amplify is built to work seamlessly with React, enhancing the development experience for React applications
React is often used with AWS Amplify to build user interfaces for applications
React can be integrated with AWS Amplify to build scalable web applications with backend services
AWS Amplify provides UI components that are designed to work seamlessly with React applications.</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7,1e3e9559f0cf793e96c48297529ec161,60d9151920f9b881f34c958c0c5d770b,6f492ac78ca89b7028399a30a24b9dc6,6f6e767a35b75e1c7658fbbddd94a842,b48f64ddd27370c0d0a93447e796c6b3,e28baad4e7d7ca8e43254a705cbf687f,e9839e578f896e0d269ce78abd50bae3,eb94ca06f4734af403132b3cde36904b,f0a75595032bbb539a5844dc72a00955,f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="REACT" target="IN-APP MESSAGING UI">
      <data key="d4">7.0</data>
      <data key="d5">In-App Messaging UI is designed to work seamlessly with React to provide in-app messaging features</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="REACT" target="REACT NATIVE">
      <data key="d4">8.0</data>
      <data key="d5">React Native is built on top of React, allowing developers to use React concepts to build mobile applications</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="REACT" target="AMPLIFY">
      <data key="d4">2.0</data>
      <data key="d5">React can be integrated with AWS Amplify to build applications that utilize geofencing and other AWS services.
Amplify is built to work with React, providing UI components and theming specifically for React applications.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b,5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="REACT" target="APP">
      <data key="d4">25.0</data>
      <data key="d5">The App component is built using React, leveraging its capabilities for user interface development
The App is developed using React, leveraging its capabilities for building user interfaces
The App is developed using the React library for building user interfaces</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93,453096a495a2eae0cd2491664604b080,d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="REACT" target="PAGINATION HOOK">
      <data key="d4">8.0</data>
      <data key="d5">The pagination hook is often used in React applications to enhance user navigation through paginated data</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="REACT" target="CUSTOM CREDENTIALS PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">The custom credentials provider is implemented in a React application to manage user sign-in</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="REACT" target="AMPLIFY UI">
      <data key="d4">93.0</data>
      <data key="d5">Amplify UI is built on top of React, utilizing its capabilities to create user interfaces
Amplify UI is built on top of the React library, utilizing its components and architecture
React is the underlying library that Amplify UI is built upon, enabling the creation of user interfaces.
Amplify UI is built to work with React, providing components that enhance React applications
Amplify UI components are built using React, allowing developers to integrate them into React applications
Amplify UI is built to work with React, enhancing its capabilities for UI development
Amplify UI is built on top of React, leveraging its capabilities for building user interfaces
Amplify UI is designed to work with React, providing components that integrate seamlessly with React applications
Amplify UI is built on top of React, leveraging its capabilities to create user interface components.
Amplify UI is designed to work with React, enhancing the development of user interfaces
Amplify UI components are built to work seamlessly with React, enhancing the development experience
Amplify UI is built to work with React, enhancing the development of user interfaces in React applications.
Amplify UI is designed to integrate seamlessly with the React framework, enhancing the development of user interfaces.
Amplify UI components are built with React, providing a solid foundation for building user interfaces</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,0f0c3a1733d9928c7207a0931e147afe,155e5b639ff1fbe14e9b7c7375cf5e03,1a2c25b18b52cc9adff7a263b890a3b5,32ab448d1972668cba4e2c467ff116a8,56553341236a20419cc336c60c2bed04,6634963e5bc3eae8755d15393e4c9b71,6e82a6e0427e12aef8dafce9907f3835,717f3b1fb6a6ce86c291aca158771f33,a8cc34c06c7b64595006afc28abc0ae2,aca6ad21122c65a602020d055257d45c,b4caad819b3245d1c7c01c198437baa1,d26ffe8f4908cd05e7882cd4223c3490,e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="REACT" target="STORAGE MANAGER">
      <data key="d4">15.0</data>
      <data key="d5">The Storage Manager is built using React, leveraging its component-based architecture
The Storage Manager is built using the React library, which facilitates the development of the user interface.
The Storage Manager is built using React, a JavaScript library for building user interfaces</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988,d700fb2336ddc0a563736b65003c9d4f,ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="REACT" target="MAPVIEW">
      <data key="d4">6.0</data>
      <data key="d5">React is the framework used to build the MapView component, enabling its interactive features</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3</data>
    </edge>
    <edge source="REACT" target="FACELIVENESSDETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">FaceLivenessDetector is built using React, a library for building user interfaces</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="REACT" target="FACE LIVENESS DETECTOR">
      <data key="d4">1.0</data>
      <data key="d5">Face Liveness Detector is built using React, allowing for dynamic user interface components</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="REACT" target="AUTHENTICATOR">
      <data key="d4">9.0</data>
      <data key="d5">The Authenticator component is built using React, allowing for integration in React applications.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="REACT" target="VISUALLYHIDDEN">
      <data key="d4">8.0</data>
      <data key="d5">VisuallyHidden is a React component that enhances accessibility in user interfaces.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="REACT" target="RATING">
      <data key="d4">1.0</data>
      <data key="d5">Rating is a React component that allows developers to display ratings in their applications.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="REACT" target="ACCORDION">
      <data key="d4">2.0</data>
      <data key="d5">The Accordion component is implemented using React, showcasing how to manage state and user interactions in a React application
Accordion is built using React, utilizing its features for creating interactive components</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049,eb94ca06f4734af403132b3cde36904b</data>
    </edge>
    <edge source="REACT" target="TOGGLEBUTTON">
      <data key="d4">7.0</data>
      <data key="d5">ToggleButton is built using React, leveraging its capabilities for UI development</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="REACT" target="SWITCHFIELD">
      <data key="d4">7.0</data>
      <data key="d5">SwitchField is built using React, leveraging its capabilities for UI development</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="REACT" target="SELECTFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SelectField is a component built using the React library for user interface development</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="REACT" target="SLIDERFIELD">
      <data key="d4">9.0</data>
      <data key="d5">SliderField is built using React, a library for creating user interfaces</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="REACT" target="DROPZONE">
      <data key="d4">7.0</data>
      <data key="d5">DropZone is built using the React library for creating user interfaces</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="REACT" target="NEXTJS">
      <data key="d4">9.0</data>
      <data key="d5">Next.js is built on top of React, leveraging its capabilities for server-side rendering</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="REACT" target="@AWS-AMPLIFY/UI-REACT">
      <data key="d4">9.0</data>
      <data key="d5">@aws-amplify/ui-react provides UI components specifically designed for use with React applications, enhancing the development experience.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="TYPESCRIPT" target="JAVASCRIPT">
      <data key="d4">24.0</data>
      <data key="d5">TypeScript is a superset of JavaScript, enhancing it with static typing and additional features
TypeScript is a superset of JavaScript, providing additional features like static typing
TypeScript is built on top of JavaScript, providing additional features and type safety</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0,5f794e811d0f825d9e561f1210793eb7,d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="TYPESCRIPT" target="NEXT.JS APPLICATION">
      <data key="d4">5.0</data>
      <data key="d5">Next.js Application can be developed using TypeScript for better type safety</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="TYPESCRIPT" target="CONFIGURATION FILE">
      <data key="d4">5.0</data>
      <data key="d5">TypeScript requires a configuration file to define compiler options and project settings</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="TYPESCRIPT" target="TSCONFIG.JSON">
      <data key="d4">8.0</data>
      <data key="d5">tsconfig.json is essential for configuring TypeScript projects</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="TYPESCRIPT" target="CUSTOM TYPE DECLARATIONS">
      <data key="d4">8.0</data>
      <data key="d5">Custom Type Declarations are a feature of TypeScript that allows developers to define their own types, enhancing the flexibility of the type system.</data>
      <data key="d6">735b59f53ffba96602dace4169c285ed</data>
    </edge>
    <edge source="TYPESCRIPT" target="AWS CDK">
      <data key="d4">1.0</data>
      <data key="d5">TypeScript is commonly used to write AWS CDK applications</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="TYPESCRIPT" target="AMPLIFY GEN 2">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Gen 2 uses TypeScript for defining backends and offers a unified developer experience</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="TYPESCRIPT" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify supports TypeScript for building applications, enhancing the developer experience.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="OPTIONS" target="UNSTABLE_CACHE">
      <data key="d4">1.0</data>
      <data key="d5">unstable_cache can be configured with options that dictate how the cache behaves</data>
      <data key="d6">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="OPTIONS" target="RADIOGROUPFIELD">
      <data key="d4">6.0</data>
      <data key="d5">Options is one of the choices in a disabled RadioGroupField</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="HOSTNAME" target="PROTOCOL">
      <data key="d4">7.0</data>
      <data key="d5">The protocol 'https' is used for secure communication with the hostname 's3.amazonaws.com'</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="HOSTNAME" target="PATHNAME">
      <data key="d4">6.0</data>
      <data key="d5">The hostname 's3.amazonaws.com' is used to access the resource specified by the pathname '/my-bucket/**'</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="API REFERENCE" target="OPEN GRAPH">
      <data key="d4">6.0</data>
      <data key="d5">The Open Graph protocol is documented in the API Reference for developers to implement it correctly</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="LOCALHOST" target="PLAYWRIGHT">
      <data key="d4">6.0</data>
      <data key="d5">Playwright tests are typically run against applications hosted on localhost during development</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="LOCALHOST" target="CYPRESS">
      <data key="d4">1.0</data>
      <data key="d5">Cypress tests are often executed against applications running on localhost to simulate user interactions</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="LOCALHOST" target="ABOUT">
      <data key="d4">6.0</data>
      <data key="d5">The 'About' page is accessed via the localhost server during development, indicating a relationship between the server and the event of navigating to the page.</data>
      <data key="d6">b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="LOCALHOST" target="LOGIN">
      <data key="d4">1.0</data>
      <data key="d5">The application is accessed via localhost during development, where users can log in to test functionalities.</data>
      <data key="d6">81518acc3db43af0161d599284ff910e</data>
    </edge>
    <edge source="LOCALHOST" target="MYWEBSITE.COM">
      <data key="d4">1.0</data>
      <data key="d5">Both localhost and mywebsite.com are used as callback and logout URLs in the authentication configuration</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="LOCALHOST" target="APP">
      <data key="d4">12.0</data>
      <data key="d5">The app is tested and run on localhost during development.
The application is tested and run on the localhost environment</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb,3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="DYNAMIC BUNDLE" target="HELLO1">
      <data key="d4">7.0</data>
      <data key="d5">Hello1 is a component that is part of the Dynamic Bundle example in Next.js.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="DYNAMIC BUNDLE" target="HELLO2">
      <data key="d4">7.0</data>
      <data key="d5">Hello2 is a component that is part of the Dynamic Bundle example in Next.js.</data>
      <data key="d6">453d5bb282fe98f4e12856552a025f0f</data>
    </edge>
    <edge source="DYNAMIC" target="STALERTIMES">
      <data key="d4">5.0</data>
      <data key="d5">The dynamic property in staleTimes is used for caching when the page is neither statically generated nor fully prefetched.</data>
      <data key="d6">fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="VERSION HISTORY" target="RECORD">
      <data key="d4">1.0</data>
      <data key="d5">Version History is a record of changes made to the Next.js framework, documenting updates and modifications</data>
      <data key="d6">84837300711040f4e7b736cdd8fce7d2</data>
    </edge>
    <edge source="IMPORT" target="REGISTER FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">The import statement is often used within the register function to include necessary modules or libraries in a Next.js application</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="ERROR" target="LOAD">
      <data key="d4">7.0</data>
      <data key="d5">The load event is associated with the error event, which is triggered when an image fails to load</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="ERROR" target="BOOLEAN">
      <data key="d4">3.0</data>
      <data key="d5">Boolean values can be used to represent error states in programming contexts.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="ERROR" target="INSTRUMENTATION">
      <data key="d4">8.0</data>
      <data key="d5">Errors can be logged and tracked using the instrumentation feature in Next.js to improve application reliability.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da</data>
    </edge>
    <edge source="ERROR" target="REQUEST">
      <data key="d4">7.0</data>
      <data key="d5">Requests can result in errors, which are captured and reported through the instrumentation system.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da</data>
    </edge>
    <edge source="ERROR" target="IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">Error is a callback associated with the Image component that handles scenarios when the image fails to load.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="ERROR" target="SERVER ACTION">
      <data key="d4">8.0</data>
      <data key="d5">Server Actions can throw errors which are then caught and handled to provide feedback to the user</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="ERROR" target="ERROR.JS">
      <data key="d4">8.0</data>
      <data key="d5">Errors are handled by the nearest error.js file in the application, which provides a user-friendly message</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="ERROR" target="SUSPENSE">
      <data key="d4">6.0</data>
      <data key="d5">Suspense can be used to manage loading states and errors in components that rely on asynchronous data</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="ERROR" target="GEOFENCEID">
      <data key="d4">4.0</data>
      <data key="d5">The geofenceId can be associated with an error if the geofence fails to save or delete</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="ERROR" target="CLIENT">
      <data key="d4">7.0</data>
      <data key="d5">The client handles errors that occur during data operations, providing feedback to the user</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe</data>
    </edge>
    <edge source="ERROR" target="AMPLIFY COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components provide error message styles for user feedback</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="ERROR" target="MESSAGE">
      <data key="d4">1.0</data>
      <data key="d5">Messages can indicate errors when something goes wrong, showing a direct relationship between the two</data>
      <data key="d6">35f3b0ff8ac0afd0bab73f2b8a1595ce</data>
    </edge>
    <edge source="ERROR" target="STORAGE MANAGER">
      <data key="d4">6.0</data>
      <data key="d5">An error event is handled by the Storage Manager to manage file upload failures.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="ERROR" target="DELETE USER">
      <data key="d4">7.0</data>
      <data key="d5">An Error event occurs if the account deletion fails during the Delete User process</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="ERROR" target="CUSTOM ERROR VIEW">
      <data key="d4">8.0</data>
      <data key="d5">The custom error view is designed to handle and display error messages when the Face Liveness Detector encounters issues</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="ERROR" target="AUTHENTICATOR">
      <data key="d4">7.0</data>
      <data key="d5">The Authenticator component handles errors that may occur during the authentication process.</data>
      <data key="d6">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </edge>
    <edge source="ERROR" target="ALERT">
      <data key="d4">8.0</data>
      <data key="d5">The Error alert is a specific type of Alert component in Amplify UI that conveys critical issues</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="ERROR" target="FACE LIVENESS DETECTOR">
      <data key="d4">5.0</data>
      <data key="d5">The onError callback in the Face Liveness Detector handles any errors that occur during the analysis process</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="PROFILE.PNG">
      <data key="d4">9.0</data>
      <data key="d5">Profile.png is used as an example in the Image Component documentation
The Image Component uses profile.png as an example image to demonstrate its properties</data>
      <data key="d6">24e08d5dea64dab91a3ce772d91b0e8f,7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="APP/PAGE.JS">
      <data key="d4">13.0</data>
      <data key="d5">App/page.js contains an example of how to use the Image Component in a Next.js application
app/page.js demonstrates the implementation of the Image component in a Next.js application</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9,24e08d5dea64dab91a3ce772d91b0e8f</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="IMAGE LOADER">
      <data key="d4">7.0</data>
      <data key="d5">The Image Component can utilize a custom Image Loader function to resolve image URLs
The Image Component can utilize a custom image loader to resolve image URLs</data>
      <data key="d6">24e08d5dea64dab91a3ce772d91b0e8f,7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="NEXT.CONFIG.JS">
      <data key="d4">5.0</data>
      <data key="d5">Next.config.js can be used to configure settings for the Image Component globally</data>
      <data key="d6">24e08d5dea64dab91a3ce772d91b0e8f</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="OBJECT-FIT">
      <data key="d4">6.0</data>
      <data key="d5">The Image Component can apply the object-fit CSS property to control how images are displayed within their containers</data>
      <data key="d6">24e08d5dea64dab91a3ce772d91b0e8f</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="ALT TEXT">
      <data key="d4">1.0</data>
      <data key="d5">The alt property in the Image Component is used to provide a description of the image for accessibility</data>
      <data key="d6">24e08d5dea64dab91a3ce772d91b0e8f</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="CONFIGURATION OPTIONS">
      <data key="d4">7.0</data>
      <data key="d5">The Image component can be customized through various configuration options in Next.js</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="UNOPTIMIZED">
      <data key="d4">1.0</data>
      <data key="d5">The unoptimized property can be applied to the Image component to serve images without modifications</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="APP">
      <data key="d4">14.0</data>
      <data key="d5">The Image component is utilized within the App component to render images efficiently
The Image component is used within the App to render images efficiently</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="PUBLIC URL">
      <data key="d4">1.0</data>
      <data key="d5">The Image component can serve images from a public URL in a Next.js application</data>
      <data key="d6">c1845aec41d031b5a72f6f472ab4a5f2</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="AVATAR">
      <data key="d4">1.0</data>
      <data key="d5">The Avatar component utilizes the Image component to display user images efficiently in Next.js applications.</data>
      <data key="d6">3486aab51f1c22b4f23003db40986564</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="WEB ALMANAC">
      <data key="d4">4.0</data>
      <data key="d5">Web Almanac provides insights into the impact of images on website performance, which is relevant to the features of the Image component in Next.js</data>
      <data key="d6">0b10d085541dc5564e998254b8588822</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="MOUNTAINS">
      <data key="d4">8.0</data>
      <data key="d5">The Image Component is used to display images of mountains in the Next.js application, enhancing the visual appeal of the user interface.
mountains is used in examples to illustrate the capabilities of the Image component</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9,66669d057195f54843266efcffb93a3b</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="FILL CONTAINER">
      <data key="d4">7.0</data>
      <data key="d5">The Fill Container component utilizes the Image component to create a responsive layout for displaying images effectively.</data>
      <data key="d6">66669d057195f54843266efcffb93a3b</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="BACKGROUND IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">The Background Image component uses the Image component to set an image as a background while ensuring it is optimized for performance.
Background Image is an example of how to use the Image component for background styling</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9,66669d057195f54843266efcffb93a3b</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="DEFAULT.JS">
      <data key="d4">6.0</data>
      <data key="d5">Default.js serves as a fallback for the Image Component when specific conditions are not met</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="FONT MODULE">
      <data key="d4">7.0</data>
      <data key="d5">Font Module and Image Component are both tools that optimize web performance and user experience in applications.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="PROFILE PIC">
      <data key="d4">5.0</data>
      <data key="d5">Profile Pic is used as an example in the context of the Image component in Next.js</data>
      <data key="d6">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="LCP PERFORMANCE">
      <data key="d4">9.0</data>
      <data key="d5">The Image component in Next.js is designed to improve LCP performance by optimizing image loading</data>
      <data key="d6">5ef33e2acd1009a637bf4b8ab41d49a1</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="PROFILEPIC">
      <data key="d4">8.0</data>
      <data key="d5">profilePic is used as a source for the Image component to display the author's picture</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="FILL">
      <data key="d4">6.0</data>
      <data key="d5">Fill is a property of the Image component that allows it to adjust its size based on the parent element</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9</data>
    </edge>
    <edge source="IMAGE COMPONENT" target="RESPONSIVE">
      <data key="d4">7.0</data>
      <data key="d5">Responsive is an example that shows how the Image component can be utilized for responsive design</data>
      <data key="d6">18f541d57ea407041cdaa1be5bf593d9</data>
    </edge>
    <edge source="LINK COMPONENT" target="ROUTER CACHE">
      <data key="d4">7.0</data>
      <data key="d5">The &lt;Link&gt; component interacts with the Router Cache to prefetch routes for faster navigation</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="LINK COMPONENT" target="PREFETCHING">
      <data key="d4">8.0</data>
      <data key="d5">Prefetching is a feature of the &lt;Link&gt; component that enhances navigation speed by loading routes in advance</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="LINK COMPONENT" target="MODAL">
      <data key="d4">6.0</data>
      <data key="d5">The Link component can be used to navigate away from a modal, closing it in the process</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="LINK COMPONENT" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">The Link component is a part of the AWS Amplify UI framework, which provides navigation functionality for applications</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="LINK COMPONENT" target="REACT ROUTER">
      <data key="d4">6.0</data>
      <data key="d5">The Link component can be used with React Router to facilitate navigation within a React application</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="LINK COMPONENT" target="STYLES.CSS">
      <data key="d4">5.0</data>
      <data key="d5">Styles.css defines the visual styles for the Link component, affecting its appearance in the application</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="LINK COMPONENT" target="THEME PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">The ThemeProvider allows for the customization of the Link component's appearance through theming</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="CREATE REACT APP" target="AMPLIFY UI">
      <data key="d4">5.0</data>
      <data key="d5">Amplify UI is designed to work with Create React App, providing UI components for React applications.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="CREATE REACT APP" target="MAPVIEW">
      <data key="d4">7.0</data>
      <data key="d5">The MapView component is used within Create React App projects to display maps, requiring specific configurations to avoid errors.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="CREATE REACT APP" target="BROWSERSLIST">
      <data key="d4">5.0</data>
      <data key="d5">Browserslist is used in Create React App to determine which browsers the application should support during the build process.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="CREATE REACT APP" target="WEBPACK">
      <data key="d4">6.0</data>
      <data key="d5">Create React App uses Webpack under the hood to bundle JavaScript files and manage assets.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="CREATE REACT APP" target="REACT APP REWIRED">
      <data key="d4">7.0</data>
      <data key="d5">React App Rewired is a tool that modifies the configuration of Create React App without ejecting, allowing for customization.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="CREATE REACT APP" target="CRACO">
      <data key="d4">7.0</data>
      <data key="d5">CRACO is used to customize the Create React App configuration without ejecting, providing flexibility for developers.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="NEXT/LEGACY/IMAGE" target="NEXT/IMAGE">
      <data key="d4">9.0</data>
      <data key="d5">The next/image component is the successor to the next/legacy/image component, providing enhanced features and performance.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="NEXT/LEGACY/IMAGE" target="IMGIX">
      <data key="d4">7.0</data>
      <data key="d5">Next/legacy/image can utilize Imgix as a loader for image optimization in Next.js applications.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="CI" target="CYPRESS">
      <data key="d4">8.0</data>
      <data key="d5">Cypress can be integrated into Continuous Integration pipelines to automate testing</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78</data>
    </edge>
    <edge source="APP CONTAINER" target="CUSTOM APP">
      <data key="d4">6.0</data>
      <data key="d5">The App Container was part of the Custom App component in Next.js before its deprecation</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="CUSTOM APP" target="CONTAINER">
      <data key="d4">1.0</data>
      <data key="d5">The Container component was used within the Custom App component in Next.js prior to version 9.0.4</data>
      <data key="d6">0d8e33ad02583991ccfe5560b2787274</data>
    </edge>
    <edge source="CONTAINER" target="STORAGE MANAGER">
      <data key="d4">6.0</data>
      <data key="d5">The Storage Manager is wrapped in a Container component for layout purposes</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="WEBPACK" target="NODE_MODULES">
      <data key="d4">1.0</data>
      <data key="d5">Webpack processes files located in the node_modules directory to bundle dependencies for the application.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="WEBPACK" target="NODE POLYFILL WEBPACK PLUGIN">
      <data key="d4">5.0</data>
      <data key="d5">Node Polyfill Webpack Plugin is used to polyfill Node.js globals in Webpack projects, which is necessary for compatibility with certain libraries.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="CONFIGURATION FILE" target="NEXT.JS DEPENDENCY">
      <data key="d4">8.0</data>
      <data key="d5">The Next.js Dependency must be installed before creating the configuration file for the application</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="CONFIGURATION FILE" target="BUILD OUTPUT DIRECTORY">
      <data key="d4">7.0</data>
      <data key="d5">The configuration file specifies the build output directory for the Next.js application</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="PAGE FILE" target="PUBLIC FILE">
      <data key="d4">5.0</data>
      <data key="d5">A public file and a page file cannot have the same path in Next.js, leading to a conflict.</data>
      <data key="d6">ad18f1240db75ed731ff9f7ec075320e</data>
    </edge>
    <edge source="PAGE FILE" target="CONFLICTING FILE">
      <data key="d4">1.0</data>
      <data key="d5">A page file can become a conflicting file if it shares the same path as a public file.</data>
      <data key="d6">ad18f1240db75ed731ff9f7ec075320e</data>
    </edge>
    <edge source="HEAD COMPONENT" target="DOCUMENT HEAD">
      <data key="d4">1.0</data>
      <data key="d5">The Head component is designed to modify the Document Head for individual pages in Next.js applications.</data>
      <data key="d6">96fde1ac5a19b66e5f6c4fce318a1b02</data>
    </edge>
    <edge source="URL" target="REDIRECTING">
      <data key="d4">1.0</data>
      <data key="d5">URLs are used in redirecting to specify the source and destination paths for navigation</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="URL" target="WEBAASSEMBLY">
      <data key="d4">4.0</data>
      <data key="d5">URL is used in conjunction with WebAssembly for creating object URLs, establishing a relationship.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="URL" target="NEXTRESPONSE">
      <data key="d4">1.0</data>
      <data key="d5">The URL object can be used to create new URLs for redirection in the NextResponse</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="URL" target="PRODUCTS">
      <data key="d4">1.0</data>
      <data key="d5">Each URL generated in the sitemap corresponds to a specific product listed on the website.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="URL" target="FORM">
      <data key="d4">7.0</data>
      <data key="d5">The &lt;Form&gt; component modifies the URL by appending query parameters based on user input upon submission</data>
      <data key="d6">f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="URL" target="LINK TO STORAGE FILE">
      <data key="d4">8.0</data>
      <data key="d5">The link to a storage file is a specific URL that directs users to access the file stored in the cloud</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="URL" target="DEFAULT THEME">
      <data key="d4">1.0</data>
      <data key="d5">The URL leads to the documentation for the Default Theme in Amplify UI</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="PAGES/_DOCUMENT.JS" target="STYLED-JSX">
      <data key="d4">7.0</data>
      <data key="d5">Styled-jsx should not be used in the pages/_document.js file according to Next.js guidelines</data>
      <data key="d6">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="PAGES/_APP.JS" target="GOOGLE ANALYTICS">
      <data key="d4">7.0</data>
      <data key="d5">The Google Analytics component is included in pages/_app.js to track user interactions across all routes</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="PAGES/_APP.JS" target="GLOBAL STYLES">
      <data key="d4">7.0</data>
      <data key="d5">The _app.js file is responsible for importing global styles that affect the entire application.</data>
      <data key="d6">3a82472230692a8c3ac8444f7738b625</data>
    </edge>
    <edge source="SCRIPT COMPONENT" target="THIRD-PARTY SCRIPT">
      <data key="d4">8.0</data>
      <data key="d5">The Script component is used to load third-party scripts in a Next.js application</data>
      <data key="d6">c05ef5dba44db89bf8b7415f5e2ad7fc</data>
    </edge>
    <edge source="SCRIPT COMPONENT" target="DASHBOARD">
      <data key="d4">11.0</data>
      <data key="d5">The Script Component can be used within the Dashboard to load external scripts necessary for its functionality
The Script Component can be used within the Dashboard to load external scripts</data>
      <data key="d6">77bf22c1fcd1e61ff866f696397b3a69,d5c8e583b99d40e21e52e5d76498cb0d</data>
    </edge>
    <edge source="SCRIPT COMPONENT" target="FONT MODULE">
      <data key="d4">7.0</data>
      <data key="d5">Script Component and Font Module both focus on optimizing resources to enhance application performance.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="HTML CONTENT" target="NEXT.CONFIG.JS">
      <data key="d4">1.0</data>
      <data key="d5">HTML Content is often generated and manipulated based on the configurations set in next.config.js</data>
      <data key="d6">16332d9a8715d2cac034c2aa3c4f12f6</data>
    </edge>
    <edge source="HTML CONTENT" target="NEXT.JS APPLICATION">
      <data key="d4">1.0</data>
      <data key="d5">HTML Content is rendered by the Next.js Application to display information to users</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="HTML CONTENT" target="PAGE">
      <data key="d4">8.0</data>
      <data key="d5">HTML Content is generated by the Page component to display information</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="MYDOCUMENT" target="DOCUMENT">
      <data key="d4">17.0</data>
      <data key="d5">MyDocument is a custom implementation of the Document component in Next.js
MyDocument extends the Document class to customize the document structure</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5,ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="MYDOCUMENT" target="HTML">
      <data key="d4">7.0</data>
      <data key="d5">MyDocument renders HTML as part of the document structure</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="HEAD">
      <data key="d4">6.0</data>
      <data key="d5">MyDocument includes a HEAD section for meta-information</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="BODY">
      <data key="d4">6.0</data>
      <data key="d5">MyDocument contains a BODY section for the main content</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="MAIN">
      <data key="d4">6.0</data>
      <data key="d5">MyDocument includes a MAIN section to represent the main content</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="NEXTSCRIPT">
      <data key="d4">1.0</data>
      <data key="d5">MyDocument uses NextScript to include necessary scripts in the document</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="DOCUMENTCONTEXT">
      <data key="d4">7.0</data>
      <data key="d5">MyDocument uses DocumentContext to manage the rendering context of the document</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="MYDOCUMENT" target="DOCUMENTINITIALPROPS">
      <data key="d4">1.0</data>
      <data key="d5">MyDocument returns DocumentInitialProps to provide initial properties for the document</data>
      <data key="d6">c4efc37a62b19ea7ba04b6eccea112c5</data>
    </edge>
    <edge source="DOCUMENT" target="AMPLIFY UI">
      <data key="d4">7.0</data>
      <data key="d5">The document provides information and documentation about the Amplify UI library for React.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe</data>
    </edge>
    <edge source="IMAGE" target="THEME IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">The Theme Image component utilizes the Image component to display images based on the user's theme</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="IMAGE" target="FILL">
      <data key="d4">13.0</data>
      <data key="d5">The fill prop is used in the Image component to control how the image fills its container
The fill prop in the Image component allows the image to adapt to the size of its parent element</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="IMAGE" target="LAZY LOADING">
      <data key="d4">14.0</data>
      <data key="d5">The Image component in Next.js uses lazy loading to optimize performance by loading images only when they are in view
Lazy loading is often used in conjunction with the Image component in Next.js to improve loading performance</data>
      <data key="d6">ccacadee21d69e15eb428a9a9d8de65f,f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="IMAGE" target="FETCH PRIORITY">
      <data key="d4">1.0</data>
      <data key="d5">Fetch Priority is a prop that can be set on the Image component to manage loading behavior</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="IMAGE" target="SIZES">
      <data key="d4">12.0</data>
      <data key="d5">The sizes property is a part of the Image component that helps optimize image loading based on viewport size
The sizes property in the Image component affects how images are served based on the viewport size</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE" target="PRIORITY">
      <data key="d4">14.0</data>
      <data key="d5">The priority property is used in the Image component to control the loading behavior of images
The priority prop indicates that the image should be loaded with high priority, affecting its rendering</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE" target="PLACEHOLDER">
      <data key="d4">12.0</data>
      <data key="d5">The placeholder property is used in the Image component to enhance user experience while images are loading
The placeholder prop specifies what to show while the image is loading, enhancing user experience</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb,8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE" target="OBJECT FIT">
      <data key="d4">7.0</data>
      <data key="d5">The object fit property is applied to the Image component to control how images fit within their containers</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE" target="OBJECT POSITION">
      <data key="d4">7.0</data>
      <data key="d5">The object position property is applied to the Image component to control the positioning of images within their containers</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE" target="ASYNCHRONOUS DECODING">
      <data key="d4">6.0</data>
      <data key="d5">Asynchronous decoding is a feature that affects how images are processed and displayed in Next.js applications</data>
      <data key="d6">ccacadee21d69e15eb428a9a9d8de65f</data>
    </edge>
    <edge source="IMAGE" target="NEXT">
      <data key="d4">8.0</data>
      <data key="d5">The Image component is a part of the Next.js framework, designed for image optimization</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="IMAGE" target="LOADER">
      <data key="d4">13.0</data>
      <data key="d5">The loader prop is used within the Image component to manage how images are loaded
The loader is used to optimize how images are loaded in a Next.js application</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb,9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="IMAGE" target="OBJECT-FIT">
      <data key="d4">5.0</data>
      <data key="d5">The object-fit property is used to control how the image is resized within its container in the Image component</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="IMAGE" target="QUALITY">
      <data key="d4">6.0</data>
      <data key="d5">The quality prop in the Image component determines the image's file size and visual quality</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="IMAGE" target="STYLE">
      <data key="d4">1.0</data>
      <data key="d5">The style prop allows for custom CSS styles to be applied to the Image component, affecting its appearance</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="IMAGE" target="PROFILEIMAGE">
      <data key="d4">7.0</data>
      <data key="d5">ProfileImage utilizes the Image component to render a user profile image with specific styles.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="UNOPTIMIZED IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">The Unoptimized Image component is a variant of the Image component that serves images without optimization.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="IMAGE STYLE">
      <data key="d4">7.0</data>
      <data key="d5">Image Style is applied to the Image component to control its visual presentation, such as border and shape.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="LOADING COMPLETE">
      <data key="d4">8.0</data>
      <data key="d5">Loading Complete is a callback associated with the Image component that executes after the image has loaded.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="LOADING">
      <data key="d4">6.0</data>
      <data key="d5">Loading defines how the Image component behaves in terms of when it loads, either lazily or eagerly.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="BLURDATAURL">
      <data key="d4">1.0</data>
      <data key="d5">BlurDataURL is used in conjunction with the Image component to provide a placeholder while the main image loads.</data>
      <data key="d6">4132dfa96e84fb89d3908b0e9dea6a62</data>
    </edge>
    <edge source="IMAGE" target="DIMENSIONS">
      <data key="d4">8.0</data>
      <data key="d5">The dimensions of an image are crucial for ensuring proper layout and preventing shifts when the image loads</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="IMAGE" target="PUBLIC URL">
      <data key="d4">6.0</data>
      <data key="d5">The public URL is used to serve images in a web application, allowing them to be accessed directly</data>
      <data key="d6">9da317a323ff76913285228d8243413e</data>
    </edge>
    <edge source="IMAGE" target="SONG">
      <data key="d4">7.0</data>
      <data key="d5">The Song data model can have an associated Image representing its cover art</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="IMAGE" target="STORAGE MANAGER">
      <data key="d4">7.0</data>
      <data key="d5">The Storage Manager displays images using the Image component to show previews of uploaded files.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="IMAGE" target="CARD">
      <data key="d4">5.0</data>
      <data key="d5">Images can be displayed within a Card component to enhance visual appeal and provide context</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="IMAGE" target="AUTOCOMPLETE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete options can include images to provide a richer user experience</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="IMAGE" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">The Image primitive is a component of Amplify UI used for displaying responsive images</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="LINK" target="PAGES">
      <data key="d4">16.0</data>
      <data key="d5">Pages are navigated using the Link component in Next.js for client-side routing
Link is used to navigate between different pages in a Next.js application</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c,ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="LINK" target="CODE EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Links are used within code examples to navigate between different sections of the documentation</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="LINK" target="DASHBOARD">
      <data key="d4">36.0</data>
      <data key="d5">The &lt;Link&gt; component is used to navigate to the Dashboard route in Next.js
The Link component is used to navigate to the Dashboard route in a Next.js application
Dashboard is a route that can be accessed using the Link component
The Link component is used to navigate to the Dashboard in a Next.js application
The &lt;Link&gt; component is used to navigate to the Dashboard route</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73,77bf22c1fcd1e61ff866f696397b3a69,7ebeb57bb18774254a901eafc1cb096f,d5c8e583b99d40e21e52e5d76498cb0d,dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="LINK" target="HOMEPAGE">
      <data key="d4">13.0</data>
      <data key="d5">The &lt;Link&gt; component is used to navigate to the Homepage route in Next.js
The Link component is used in the homepage to navigate to other pages, such as the About page</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73,66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="LINK" target="ABOUT US">
      <data key="d4">15.0</data>
      <data key="d5">The &lt;Link&gt; component is used to navigate to the About Us route in Next.js
The About Us page can be accessed through the Link component in the Next.js application</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73,d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="LINK" target="BLOG POST">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;Link&gt; component is used to navigate to individual Blog Post routes in Next.js
The Blog Post page can be accessed through the Link component in the Next.js application</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73,d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="LINK" target="STYLED-COMPONENTS">
      <data key="d4">5.0</data>
      <data key="d5">Link can be styled using styled-components to enhance its appearance</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="LINK" target="EMOTION">
      <data key="d4">5.0</data>
      <data key="d5">Link can be styled using Emotion to enhance its appearance</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="LINK" target="DYNAMIC ROUTES">
      <data key="d4">7.0</data>
      <data key="d5">Link can be used to navigate to dynamic routes in a Next.js application</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="LINK" target="HREF">
      <data key="d4">9.0</data>
      <data key="d5">The HREF attribute in Link specifies the destination URL for navigation</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="LINK" target="NAVIGATION">
      <data key="d4">9.0</data>
      <data key="d5">Link facilitates navigation within a Next.js application
Links are essential components of navigation, enabling users to move between different sections of the application</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c,99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="LINK" target="CLIENT-SIDE NAVIGATION">
      <data key="d4">1.0</data>
      <data key="d5">Link enables client-side navigation, allowing for faster transitions between pages</data>
      <data key="d6">07e97df1a8257492f53460b3979b0e3c</data>
    </edge>
    <edge source="LINK" target="ROUTER">
      <data key="d4">15.0</data>
      <data key="d5">Link and router work together in Next.js to facilitate navigation and routing, including locale changes
The router manages navigation between pages, while Link facilitates that navigation</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2,7cd464b0f42ff05e87fa7e149d7e2997</data>
    </edge>
    <edge source="LINK" target="HOME">
      <data key="d4">7.0</data>
      <data key="d5">The Home page can be accessed through the Link component in the Next.js application</data>
      <data key="d6">d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="LINK" target="PAGE">
      <data key="d4">15.0</data>
      <data key="d5">Page is navigated to using the Link component in Next.js
The Page component uses the Link component to navigate to the About page, facilitating user interaction within the application.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c,dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="LINK" target="NAVLINK">
      <data key="d4">7.0</data>
      <data key="d5">NavLink is a custom component that utilizes the Link component for navigation</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="LINK" target="ABOUT">
      <data key="d4">8.0</data>
      <data key="d5">The About page component uses the Link component to navigate back to the homepage, allowing users to return easily.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="LINK" target="CARD">
      <data key="d4">7.0</data>
      <data key="d5">The Card component uses the Link component to enable navigation, allowing users to click on the card to go to a different route.</data>
      <data key="d6">735b59f53ffba96602dace4169c285ed</data>
    </edge>
    <edge source="LINK" target="ROUTE">
      <data key="d4">1.0</data>
      <data key="d5">Routes are linked using the Link component in Next.js, enabling navigation between different pages in the application.</data>
      <data key="d6">735b59f53ffba96602dace4169c285ed</data>
    </edge>
    <edge source="LINK" target="BREADCRUMBS">
      <data key="d4">1.0</data>
      <data key="d5">The Link component is used within the Breadcrumbs component to create navigational links for users</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="LINK" target="THEMED LINK">
      <data key="d4">6.0</data>
      <data key="d5">Themed Link is an application of the Link component styled according to the Amplify theme</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="LINK" target="STYLES.CSS">
      <data key="d4">5.0</data>
      <data key="d5">styles.css provides the styling rules that affect the appearance of the Link component</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="LINK" target="CSS VARIABLES">
      <data key="d4">5.0</data>
      <data key="d5">CSS Variables are used to define the colors and styles applied to the Link component</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="LINK" target="LOCAL STYLING">
      <data key="d4">6.0</data>
      <data key="d5">Local Styling allows for specific styles to be applied to individual Link components, enhancing customization</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="LINK" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">Links are customizable elements in Amplify UI for navigation</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="HEAD" target="NEXT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js uses the Head component to manage the head section of web pages for SEO purposes</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="HEAD" target="PAGES">
      <data key="d4">1.0</data>
      <data key="d5">The Head component is used within pages to manage and update the document head dynamically, affecting SEO and page behavior.</data>
      <data key="d6">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </edge>
    <edge source="FONT" target="OPTIMIZATION">
      <data key="d4">6.0</data>
      <data key="d5">Fonts can be optimized in Next.js applications to improve loading times and performance</data>
      <data key="d6">ecc794f2647ea18dc504fd09133f90c8</data>
    </edge>
    <edge source="FONT" target="AMPLIFY COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components incorporate different font styles for text presentation</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="FONT" target="AMPLIFY UI">
      <data key="d4">7.0</data>
      <data key="d5">FONT settings are part of Amplify UI that allow customization of text appearance in applications</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </edge>
    <edge source="PAGES" target="GETSTATICPROPS">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps is used within pages to fetch data at build time, enhancing the static generation process.</data>
      <data key="d6">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </edge>
    <edge source="PAGES" target="API ROUTES">
      <data key="d4">6.0</data>
      <data key="d5">API Routes are mapped to specific pages in the Next.js application</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="PAGES" target="CLIENT ROUTER FILTER">
      <data key="d4">7.0</data>
      <data key="d5">The client router filter helps manage transitions between pages in a Next.js application, ensuring smooth navigation</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="PAGES" target="ROUTE SEGMENTS">
      <data key="d4">6.0</data>
      <data key="d5">Route segments define the structure of pages in a Next.js application, allowing for organized routing and rendering</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="CSS MODULES" target="BUTTON">
      <data key="d4">1.0</data>
      <data key="d5">The Button component utilizes CSS Modules for its styling, ensuring unique class names.</data>
      <data key="d6">3a82472230692a8c3ac8444f7738b625</data>
    </edge>
    <edge source="CSS MODULES" target="DASHBOARD LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">The Dashboard Layout can utilize CSS Modules for component-level styling</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a</data>
    </edge>
    <edge source="STYLES.CSS" target="AMPLIFY UI">
      <data key="d4">28.0</data>
      <data key="d5">styles.css is used to define the styles for components in the Amplify UI library
styles.css is used to define custom styles for components in Amplify UI
styles.css contains the styling rules for components in Amplify UI, including radio buttons and their states
styles.css is used to style components within the Amplify UI library
Styles.css is used to define custom styles for components in the Amplify UI library
The styles.css file is used to customize the appearance of components in Amplify UI</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049,52fc958abba47a16871f909ed3cc2d5a,6f822244ad945944fb292c514cfddc13,85d9171dd6e70ffdb5803e227ecacbc4,c7af2749681510be539a408772ae1755,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="STYLES.CSS" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">Styles.css is used to style components within the AWS Amplify framework, affecting the appearance of the application</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="STYLES.CSS" target="PHONE NUMBER FIELD">
      <data key="d4">9.0</data>
      <data key="d5">The visual presentation of the PhoneNumberField is defined in the STYLES.CSS file</data>
      <data key="d6">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="STYLES.CSS" target="MAPVIEW">
      <data key="d4">5.0</data>
      <data key="d5">MapView requires styles from styles.css for proper rendering</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="APP ROUTER" target="SCRIPT">
      <data key="d4">5.0</data>
      <data key="d5">The App Router can utilize scripts for enhanced functionality in applications</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="APP ROUTER" target="PAGES ROUTER">
      <data key="d4">9.0</data>
      <data key="d5">Both the App Router and Pages Router are features of Next.js that handle routing in web applications
The App Router is designed to replace the Pages Router in Next.js, providing a more efficient routing mechanism</data>
      <data key="d6">20652ea1750ad5513b326c308672d886,2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="APP ROUTER" target="ROOT LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">The Root Layout is a component that wraps around pages in an application using the App Router</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="APP ROUTER" target="PAGES DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">The App Router works alongside the pages directory to allow for incremental adoption of routing features</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="APP ROUTER" target="ERROR UI">
      <data key="d4">5.0</data>
      <data key="d5">Error UI is utilized by the App Router to manage error states in routing</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="APP ROUTER" target="LOADING UI">
      <data key="d4">5.0</data>
      <data key="d5">Loading UI is used by the App Router to indicate loading states during data fetching</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="APP ROUTER" target="NOT FOUND UI">
      <data key="d4">5.0</data>
      <data key="d5">Not Found UI is employed by the App Router to handle non-existent routes</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="PAGES ROUTER" target="SCRIPT">
      <data key="d4">5.0</data>
      <data key="d5">The Pages Router can utilize scripts for enhanced functionality in pages</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="SCRIPT" target="BROWSER">
      <data key="d4">8.0</data>
      <data key="d5">Scripts are executed within the browser environment, enabling dynamic functionality on web pages</data>
      <data key="d6">80a786416360b0f3873c10b0b635c67b</data>
    </edge>
    <edge source="SCRIPT" target="CLIENT COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">Client Components can utilize scripts to enhance interactivity and user experience</data>
      <data key="d6">80a786416360b0f3873c10b0b635c67b</data>
    </edge>
    <edge source="SCRIPT" target="SERVER COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">Server Components can load scripts to prepare data and functionality before rendering to the client</data>
      <data key="d6">80a786416360b0f3873c10b0b635c67b</data>
    </edge>
    <edge source="SCRIPT" target="WEB WORKER">
      <data key="d4">1.0</data>
      <data key="d5">Web Workers execute scripts in the background, allowing for non-blocking operations in web applications</data>
      <data key="d6">80a786416360b0f3873c10b0b635c67b</data>
    </edge>
    <edge source="SCRIPT" target="PAGE">
      <data key="d4">6.0</data>
      <data key="d5">Pages often contain scripts that enhance their functionality and interactivity</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="SCRIPT" target="LAZYONLOAD">
      <data key="d4">7.0</data>
      <data key="d5">Scripts can be loaded using the lazyOnload strategy to optimize performance</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="SCRIPT" target="ONLOAD">
      <data key="d4">8.0</data>
      <data key="d5">The onLoad property allows executing code after a script has loaded, enhancing interactivity</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="SCRIPT" target="ONREADY">
      <data key="d4">7.0</data>
      <data key="d5">The onReady property allows re-initializing scripts every time a component is mounted</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="SCRIPT" target="ONERROR">
      <data key="d4">1.0</data>
      <data key="d5">The onError property allows handling script loading errors, improving robustness</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="SERVER-SIDE" target="SERVER COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">Server-side operations are typically handled by server components in React</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="SERVER-SIDE" target="GETSTATICPROPS">
      <data key="d4">10.0</data>
      <data key="d5">getStaticProps is executed on the server-side to pre-render pages before they are sent to the client
getStaticProps runs exclusively on the server-side to generate static pages</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="SERVER COMPONENT">
      <data key="d4">22.0</data>
      <data key="d5">Client components and server components are two types of components in React that handle different aspects of rendering
Client components can interact with server components to fetch data and render it dynamically
Client Components and Server Components are both part of the React framework, serving different purposes in rendering and interactivity.
Server Components and Client Components are two types of components in React that serve different purposes in application rendering
Client Components can accept Server Components as props, allowing for a combination of interactivity and static content</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2,20660998cc2c85257c6b7502427f85d3,234c5cf6d90b5c8b7d3583a3300a4752,39e13e59ba48563c8ec1c8c813746dac,bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="APP DIRECTORY">
      <data key="d4">1.0</data>
      <data key="d5">The app directory allows for the creation of client components that can manage state and effects</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="APP">
      <data key="d4">38.0</data>
      <data key="d5">App is a client component that contains the main logic and UI elements for the application
Client Components are part of the App component's rendering process in Next.jsThe App component is responsible for rendering Client Components in a Next.js application
The App is built using Client Components to provide a dynamic user experience in the browser.
The App component utilizes Client Components to manage dynamic interactions within the application</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,39e13e59ba48563c8ec1c8c813746dac,9f6dc0f379759d79c664c445c0051202,c1845aec41d031b5a72f6f472ab4a5f2</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Page serves as an entry point for the Client Component in Next.js
Pages can also be defined as client components to allow for interactivity and state management</data>
      <data key="d6">1d855e055624fb34345331017d371137,9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="DYNAMIC IMPORT">
      <data key="d4">7.0</data>
      <data key="d5">Dynamic import is used to load Client Components asynchronously in Next.js
Dynamic import is used to load Client Components asynchronously, improving performance</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e,9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="USESELECTEDLAYOUTSEGMENT">
      <data key="d4">9.0</data>
      <data key="d5">useSelectedLayoutSegment is a Client Component hook that allows reading the active route segment</data>
      <data key="d6">b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="USESEARCHPARAMS">
      <data key="d4">9.0</data>
      <data key="d5">useSearchParams is a Client Component hook that allows reading the current URL's query string</data>
      <data key="d6">b134d3f66855ad9639688a0ef9bc8d25</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="USEPATHNAME">
      <data key="d4">9.0</data>
      <data key="d5">usePathname is a hook that can only be used within Client Components in Next.js</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="SERVER ACTION">
      <data key="d4">7.0</data>
      <data key="d5">The Client Component can utilize a Server Action to handle form submissions and redirects</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="FORMDATA">
      <data key="d4">1.0</data>
      <data key="d5">The Client Component uses FormData to gather input from users before redirecting</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="ROOT LAYOUT">
      <data key="d4">2.0</data>
      <data key="d5">Client Components can be used within root layouts to provide dynamic behavior and access to the current pathname.
The Root Layout wraps Client Components, providing a structure for the application</data>
      <data key="d6">a5566406ae5db585eb3829f4a25e7025,d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="HOME PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The Home Page is implemented as a Client Component that receives recent posts as props</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="ROUTING HOOKS">
      <data key="d4">6.0</data>
      <data key="d5">Routing Hooks are used within Client Components to manage navigation and state</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="STYLE REGISTRY">
      <data key="d4">7.0</data>
      <data key="d5">Client Components utilize the style registry to manage CSS rules during rendering</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="USE SERVER INSERTED HTML HOOK">
      <data key="d4">8.0</data>
      <data key="d5">The useServerInsertedHTML hook is used within Client Components to inject styles before rendering</data>
      <data key="d6">d405678be18c78d7d78d7a6521a58a56</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="SERVER-ONLY">
      <data key="d4">8.0</data>
      <data key="d5">Server-only package ensures that server-only code is not imported into Client Components, maintaining separation of concerns.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="ACME-CAROUSEL">
      <data key="d4">7.0</data>
      <data key="d5">Acme-carousel's Carousel component can only be used within Client Components due to its reliance on client-only features.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="SEARCHBAR">
      <data key="d4">7.0</data>
      <data key="d5">SearchBar is an example of a Client Component that handles user input and interactivity</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="PROPS">
      <data key="d4">8.0</data>
      <data key="d5">Props are used to pass data from Server Components to Client Components, facilitating communication between them</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="RSC PAYLOAD">
      <data key="d4">1.0</data>
      <data key="d5">RSC Payload is utilized by React to manage the rendering of Client Components based on the output of Server Components</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="CLIENT COMPONENT" target="SERVER ACTIONS">
      <data key="d4">7.0</data>
      <data key="d5">Client Components can invoke Server Actions to handle data submissions and interactions</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="SERVER COMPONENT" target="DATA FETCHING">
      <data key="d4">9.0</data>
      <data key="d5">Server components in Next.js are designed to handle data fetching on the server side</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="SERVER COMPONENT" target="APP DIRECTORY">
      <data key="d4">16.0</data>
      <data key="d5">The app directory in Next.js is designed to support server components by default
The app directory contains Server Components that handle data fetching and rendering</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e,8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="SERVER COMPONENT" target="FORCE-DYNAMIC">
      <data key="d4">1.0</data>
      <data key="d5">The force-dynamic option affects how server components are rendered in Next.js</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="SERVER COMPONENT" target="USEPATHNAME">
      <data key="d4">1.0</data>
      <data key="d5">usePathname is not supported in Server Components, emphasizing the distinction between the two types</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="SERVER COMPONENT" target="APP">
      <data key="d4">8.0</data>
      <data key="d5">The App component can include Server Components to fetch data and render HTML on the server</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e</data>
    </edge>
    <edge source="SERVER COMPONENT" target="POSTS">
      <data key="d4">6.0</data>
      <data key="d5">Server Components fetch posts data to be displayed on the Home Page</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="SERVER COMPONENT" target="DATA FETCHING APIS">
      <data key="d4">7.0</data>
      <data key="d5">Data Fetching APIs are utilized within Server Components to retrieve data for rendering</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="SERVER COMPONENT" target="LOGO">
      <data key="d4">5.0</data>
      <data key="d5">Logo is typically implemented as a Server Component to render static branding elements</data>
      <data key="d6">bd1557f5f20d5d232df2cbf55be7cb8d</data>
    </edge>
    <edge source="SERVER COMPONENT" target="SERVER ACTIONS">
      <data key="d4">8.0</data>
      <data key="d5">Server Components can define Server Actions that are executed on the server</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="SERVER COMPONENT" target="PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Pages can be defined as server components to enable server-side rendering and data fetching</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="CONTEXT PROVIDER" target="USE HOOK">
      <data key="d4">1.0</data>
      <data key="d5">Context Providers often utilize use hooks to manage and provide state</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="DATA FETCHING" target="PROMISE">
      <data key="d4">8.0</data>
      <data key="d5">Promises are often used in data fetching to handle asynchronous operations</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="DATA FETCHING" target="FETCH API">
      <data key="d4">1.0</data>
      <data key="d5">The Fetch API is commonly used for data fetching in web applications</data>
      <data key="d6">20660998cc2c85257c6b7502427f85d3</data>
    </edge>
    <edge source="DATA FETCHING" target="FORM">
      <data key="d4">6.0</data>
      <data key="d5">Forms in Next.js can trigger data fetching processes when submitted to create or update data</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="DATA FETCHING" target="SERVER COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">Data Fetching is a key benefit of Server Components, allowing for improved performance by retrieving data on the server.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="PROMISE" target="FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">Functions can return promises, making them related in asynchronous programming.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="PROMISE" target="SUSPENSE">
      <data key="d4">1.0</data>
      <data key="d5">Promises are used in conjunction with Suspense to handle asynchronous data fetching</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="PROMISE" target="MUTATION">
      <data key="d4">9.0</data>
      <data key="d5">A promise is returned when a mutation request is made, allowing for handling success or failure of the operation</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe</data>
    </edge>
    <edge source="PROMISE" target="CANCEL">
      <data key="d4">8.0</data>
      <data key="d5">Canceling a promise allows users to abort an ongoing mutation request</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe</data>
    </edge>
    <edge source="FETCH API" target="POSTS">
      <data key="d4">7.0</data>
      <data key="d5">The Fetch API is used to retrieve posts from a specified URL, allowing for dynamic content loading</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="SCRIPT OPTIMIZATION" target="DASHBOARD LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">The Dashboard Layout allows for script optimization techniques to be applied for better performance on multiple routes.</data>
      <data key="d6">e36d6ba428fb6e6b41847dce90fde4cc</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="GOOGLE TAG MANAGER">
      <data key="d4">14.0</data>
      <data key="d5">Google Analytics can be configured through Google Tag Manager to track user interactions and events
Google Tag Manager can be used to configure Google Analytics directly, allowing for streamlined tracking and reporting of website traffic</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="EVENT BUTTON">
      <data key="d4">16.0</data>
      <data key="d5">The Event Button can send events to Google Analytics via Google Tag Manager, allowing for measurement of user interactions
The Event Button is designed to send event data to Google Analytics when clicked, allowing for tracking of user interactions</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e,d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="PAGES/INDEX.JS">
      <data key="d4">7.0</data>
      <data key="d5">The Google Analytics component can be included in pages/index.js to track user interactions on that specific page</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="GA ID">
      <data key="d4">9.0</data>
      <data key="d5">The GA ID is essential for Google Analytics to identify and track data for a specific property</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="MEASUREMENT ID">
      <data key="d4">9.0</data>
      <data key="d5">The Measurement ID is used in Google Analytics 4 to send data to the correct property</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="GOOGLE ANALYTICS" target="ENHANCED MEASUREMENT">
      <data key="d4">1.0</data>
      <data key="d5">Enhanced Measurement is a feature of Google Analytics that simplifies tracking of user interactions</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="BROWSERSLIST" target="PACKAGE.JSON">
      <data key="d4">5.0</data>
      <data key="d5">Browserslist configuration is typically defined in the package.json file to specify supported browsers for a project</data>
      <data key="d6">5e8e906cb9a58f6e52be1a99d31da8cf</data>
    </edge>
    <edge source="PACKAGE.JSON" target="GITIGNORE">
      <data key="d4">6.0</data>
      <data key="d5">The .gitignore file is often updated alongside the package.json file to exclude build artifacts from version control
The .gitignore file is used alongside package.json to manage files that should not be tracked in a Git repository</data>
      <data key="d6">c1845aec41d031b5a72f6f472ab4a5f2,f33afd1ad915755b5724c85e5bdb3c98</data>
    </edge>
    <edge source="PACKAGE.JSON" target="CYPRESS">
      <data key="d4">1.0</data>
      <data key="d5">Cypress configuration and scripts are defined in the package.json file</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78</data>
    </edge>
    <edge source="PACKAGE.JSON" target="JEST">
      <data key="d4">16.0</data>
      <data key="d5">The package.json file includes scripts to run Jest tests in a Next.js application
The package.json file includes scripts for running Jest tests, integrating it into the project workflow.</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6,b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="PACKAGE.JSON" target="TEST SCRIPT">
      <data key="d4">6.0</data>
      <data key="d5">The test script in package.json is used to run tests defined in the project, often utilizing Vitest</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="PACKAGE.JSON" target="MODULE PATH ALIASES">
      <data key="d4">1.0</data>
      <data key="d5">The package.json file can be configured to support Module Path Aliases, making imports cleaner and more manageable.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="PACKAGE.JSON" target="CYPRESS.CONFIG.JS">
      <data key="d4">8.0</data>
      <data key="d5">cypress.config.js and package.json are both essential files for configuring and running tests in a Cypress environment</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd</data>
    </edge>
    <edge source="PACKAGE.JSON" target="E2E TESTING">
      <data key="d4">7.0</data>
      <data key="d5">The scripts defined in package.json are used to run E2E tests, linking the two entities</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd</data>
    </edge>
    <edge source="PACKAGE.JSON" target="COMPONENT TESTING">
      <data key="d4">1.0</data>
      <data key="d5">Scripts in package.json can also be used to run component tests, indicating a relationship</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd</data>
    </edge>
    <edge source="PACKAGE.JSON" target="AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Package.json defines the dependencies and scripts for AWS Amplify projects</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="PACKAGE.JSON" target="ADMIN DASHBOARD">
      <data key="d4">6.0</data>
      <data key="d5">Package.json defines the dependencies and scripts for the Admin Dashboard application</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="PACKAGE.JSON" target="MARKETING SITE">
      <data key="d4">6.0</data>
      <data key="d5">Package.json defines the dependencies and scripts for the Marketing Site application</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="FIREFOX" target="BROWSER">
      <data key="d4">7.0</data>
      <data key="d5">Firefox is a type of web browser that has specific bugs and features affecting its performance and user experience.</data>
      <data key="d6">2238ba4c005a726e011e67cd17d3a576</data>
    </edge>
    <edge source="SAFARI" target="BROWSER">
      <data key="d4">7.0</data>
      <data key="d5">Safari is a type of web browser that has specific bugs and features affecting its performance and user experience.</data>
      <data key="d6">2238ba4c005a726e011e67cd17d3a576</data>
    </edge>
    <edge source="VS CODE" target="LAUNCH.JSON">
      <data key="d4">1.0</data>
      <data key="d5">Visual Studio Code uses launch.json to configure debugging settings for applications, including those built with Next.js.</data>
      <data key="d6">0aae21b170363fb93fdbbb65d9c7576b</data>
    </edge>
    <edge source="VS CODE" target="DEBUGGING">
      <data key="d4">8.0</data>
      <data key="d5">Visual Studio Code provides tools and configurations for debugging applications, including Next.js.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="COMMUNITY" target="DOCUMENTATION">
      <data key="d4">8.0</data>
      <data key="d5">The Next.js community contributes to the documentation, enhancing the resources available for developers.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9</data>
    </edge>
    <edge source="COMMUNITY" target="CONTRIBUTION GUIDE">
      <data key="d4">8.0</data>
      <data key="d5">The Contribution Guide is aimed at the Next.js community to facilitate contributions to the documentation and improve resources.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9</data>
    </edge>
    <edge source="DOCUMENTATION" target="MDX">
      <data key="d4">1.0</data>
      <data key="d5">MDX is used in the Next.js documentation to allow for the inclusion of React components within markdown files.</data>
      <data key="d6">243626df7b8124420b4844165c42f9b9</data>
    </edge>
    <edge source="MDX" target="MARKDOWN">
      <data key="d4">15.0</data>
      <data key="d5">MDX extends markdown by allowing the inclusion of React components
MDX extends Markdown by allowing JSX components to be embedded within markdown content</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89,6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="MDX" target="TAILWIND">
      <data key="d4">7.0</data>
      <data key="d5">Tailwind can be used to style MDX content, providing utility classes for typography and layout.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="MDX" target="TAILWIND TYPOGRAPHY PLUGIN">
      <data key="d4">1.0</data>
      <data key="d5">The Tailwind Typography Plugin can be applied to MDX content to enhance its visual presentation using Tailwind's styling framework.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="MDX" target="MDXREMOTE">
      <data key="d4">8.0</data>
      <data key="d5">MDXRemote renders MDX content, allowing for the integration of JSX components within markdown files.</data>
      <data key="d6">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </edge>
    <edge source="MDX" target="SERIALIZE">
      <data key="d4">7.0</data>
      <data key="d5">Serialize converts MDX text into a format suitable for rendering, facilitating the use of dynamic content in Next.js applications.</data>
      <data key="d6">7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </edge>
    <edge source="MDX" target="MDX COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">MDX allows the use of custom MDX Components to enhance markdown rendering</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89</data>
    </edge>
    <edge source="MDX" target="REACT COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">React Components can be used within MDX files to enhance interactivity and functionality</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89</data>
    </edge>
    <edge source="GOOGLE FONTS" target="INTER">
      <data key="d4">7.0</data>
      <data key="d5">Inter is a font available through Google Fonts, which provides various font styles and weights for web use.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="SHARED PAGES" target="SOURCE">
      <data key="d4">7.0</data>
      <data key="d5">The Source field is used in Shared Pages to pull content from one page into another in Next.js documentation</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="METADATA" target="REQUIRED FIELDS">
      <data key="d4">8.0</data>
      <data key="d5">Required Fields are part of the Metadata block that must be included for a page in Next.js documentation</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="METADATA" target="OPTIONAL FIELDS">
      <data key="d4">6.0</data>
      <data key="d5">Optional Fields can be included in the Metadata block to enhance the information provided about a page</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="METADATA" target="RELATED">
      <data key="d4">1.0</data>
      <data key="d5">The Related field is part of the Metadata block that allows for linking to related pages in Next.js documentation</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="METADATA" target="NEXT">
      <data key="d4">8.0</data>
      <data key="d5">Next.js utilizes metadata to enhance SEO and manage page properties</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="METADATA" target="LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">The layout can define static metadata for the pages it contains in Next.js</data>
      <data key="d6">dea59f788f9645dcf527f4f5f4f12ae7</data>
    </edge>
    <edge source="METADATA" target="PROCESS FILE">
      <data key="d4">1.0</data>
      <data key="d5">Metadata is added during the process file event to provide additional information about the uploaded file.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="OPTIONAL FIELDS" target="NAV TITLE">
      <data key="d4">5.0</data>
      <data key="d5">Nav Title is an example of an Optional Field that can be used in the Metadata block</data>
      <data key="d6">2d826219271d5b48e83835028c04e88b</data>
    </edge>
    <edge source="SOURCE" target="REDIRECTS">
      <data key="d4">16.0</data>
      <data key="d5">The source is the starting point for a redirect, which is defined in the redirect configuration
The source is the original URL path specified in a redirect rule</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e,de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="SOURCE" target="REWRITE">
      <data key="d4">8.0</data>
      <data key="d5">Rewrites are applied based on the source URL path</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="SOURCE" target="QUERY">
      <data key="d4">6.0</data>
      <data key="d5">The source can include query parameters that affect how rewrites are applied</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="SOURCE" target="COOKIE">
      <data key="d4">5.0</data>
      <data key="d5">The source can be matched based on the presence of specific cookies</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="SOURCE" target="HOST">
      <data key="d4">1.0</data>
      <data key="d5">The source can be matched based on the host domain</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="SOURCE" target="NEXT.CONFIG.JS">
      <data key="d4">7.0</data>
      <data key="d5">The next.config.js file defines the source path for which headers are applied in a Next.js application</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="SOURCE" target="PICTURE">
      <data key="d4">8.0</data>
      <data key="d5">Source elements are used within the Picture element to provide different media resources</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="JAVASCRIPT" target="JSX">
      <data key="d4">8.0</data>
      <data key="d5">JSX is used within JavaScript files to create React components, bridging the gap between HTML and JavaScript</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="JAVASCRIPT" target="ACME">
      <data key="d4">2.0</data>
      <data key="d5">ACME employs JavaScript for interactive features on its website
Acme utilizes JavaScript for generating images and handling dynamic content</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115,85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="JAVASCRIPT" target="NEXT.JS APPLICATION">
      <data key="d4">9.0</data>
      <data key="d5">Next.js Application is built on JavaScript, which is essential for its functionality</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="JAVASCRIPT" target="HTML">
      <data key="d4">16.0</data>
      <data key="d5">JavaScript is often used to manipulate HTML elements on a web page
HTML and JavaScript work together to create dynamic and interactive web applications</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0,60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="JAVASCRIPT" target="APP">
      <data key="d4">7.0</data>
      <data key="d5">JavaScript is used in the app for creating interactive features</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="JAVASCRIPT" target="INDEX.HTML">
      <data key="d4">1.0</data>
      <data key="d5">JavaScript is used in the index.html file to add interactivity to the webpage, establishing a direct relationship</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="JAVASCRIPT" target="DOM">
      <data key="d4">8.0</data>
      <data key="d5">JavaScript manipulates the DOM to create dynamic web pages</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="JAVASCRIPT" target="AMPLIFY GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 supports JavaScript frontends, allowing integration with TypeScript backends</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="JAVASCRIPT" target="RADIOGROUPFIELD">
      <data key="d4">7.0</data>
      <data key="d5">RadioGroupField utilizes JavaScript for interactivity and state management</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="JAVASCRIPT" target="DIJSBADGE">
      <data key="d4">1.0</data>
      <data key="d5">DiJsBadge represents JavaScript, indicating its association with the programming language</data>
      <data key="d6">6edc6c7e13a23d971e48b75724b50d5f</data>
    </edge>
    <edge source="CODE EXAMPLE" target="TRANSFORM.TOOLS">
      <data key="d4">7.0</data>
      <data key="d5">Transform.tools is used to convert TypeScript code examples into JavaScript, facilitating easier understanding</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="CODE EXAMPLE" target="NOTES">
      <data key="d4">5.0</data>
      <data key="d5">Notes provide supplementary information related to the code examples, enhancing user comprehension</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="CODE EXAMPLE" target="HIGHLIGHT PROP">
      <data key="d4">6.0</data>
      <data key="d5">The highlight prop is utilized in code examples to draw attention to specific lines, enhancing user engagement</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="CODE EXAMPLE" target="CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">Code examples provide guidance on how clients can implement features in AWS Amplify</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="NOTES" target="SINGLE LINE NOTE">
      <data key="d4">5.0</data>
      <data key="d5">Single line notes are a type of note used to provide quick, important information in documentation</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="NOTES" target="MULTI-LINE NOTES">
      <data key="d4">5.0</data>
      <data key="d5">Multi-line notes are a more detailed form of notes that can contain several related pieces of information</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="FIELD" target="PAGE TEMPLATES">
      <data key="d4">6.0</data>
      <data key="d5">Fields are essential components of page templates, defining the structure and content of documentation pages</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="API TABLES" target="REFERENCE PAGES">
      <data key="d4">7.0</data>
      <data key="d5">API tables are often included in reference pages to summarize available functions and methods</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="CONCEPTUAL PAGES" target="REFERENCE PAGES">
      <data key="d4">1.0</data>
      <data key="d5">Conceptual pages and reference pages serve different purposes in documentation, with the former explaining concepts and the latter detailing APIs</data>
      <data key="d6">5f794e811d0f825d9e561f1210793eb7</data>
    </edge>
    <edge source="MIDDLEWARE" target="MIGRATION">
      <data key="d4">7.0</data>
      <data key="d5">Migration is necessary to adapt existing Middleware to the new API introduced in Next.js</data>
      <data key="d6">2faaabdabafa263524b931c68674e9cd</data>
    </edge>
    <edge source="MIDDLEWARE" target="API">
      <data key="d4">7.0</data>
      <data key="d5">The Middleware APIs in Next.js define how developers can implement and utilize Middleware in their applications</data>
      <data key="d6">2faaabdabafa263524b931c68674e9cd</data>
    </edge>
    <edge source="MIDDLEWARE" target="DASHBOARD">
      <data key="d4">17.0</data>
      <data key="d5">The dashboard route can trigger Middleware for specific logic
Middleware is used to manage access to the Dashboard route based on user authentication status
The Dashboard page may require Middleware to ensure the user is authenticated before access
Middleware can manage access and processing for the dashboard event</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61,abfaa2f8370cae9120fe1eaf629cda39,d5c8e583b99d40e21e52e5d76498cb0d,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="ABOUT">
      <data key="d4">6.0</data>
      <data key="d5">The about route can trigger Middleware for specific logic
Middleware can be configured to handle requests to the about event</data>
      <data key="d6">abfaa2f8370cae9120fe1eaf629cda39,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="REQUEST">
      <data key="d4">18.0</data>
      <data key="d5">Middleware processes incoming requests to apply custom logic before they reach the application
The request is processed by the middleware function in Next.js</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668,abfaa2f8370cae9120fe1eaf629cda39</data>
    </edge>
    <edge source="MIDDLEWARE" target="REWRITE">
      <data key="d4">8.0</data>
      <data key="d5">Middleware can perform URL rewrites to change the destination of requests</data>
      <data key="d6">abfaa2f8370cae9120fe1eaf629cda39</data>
    </edge>
    <edge source="MIDDLEWARE" target="REDIRECT">
      <data key="d4">14.0</data>
      <data key="d5">Middleware can perform redirects to send users to different URLs based on conditions
Middleware can utilize the Redirect function to redirect users based on conditions</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1,abfaa2f8370cae9120fe1eaf629cda39</data>
    </edge>
    <edge source="MIDDLEWARE" target="AUTHORIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Middleware can handle authorization checks to ensure users have the right permissions</data>
      <data key="d6">abfaa2f8370cae9120fe1eaf629cda39</data>
    </edge>
    <edge source="MIDDLEWARE" target="NEXTREQUEST">
      <data key="d4">31.0</data>
      <data key="d5">Middleware functions utilize NextRequest to access request data
NextRequest is the parameter passed to the middleware function, representing the incoming request
NextRequest is used in middleware to access and manipulate details of the incoming request
Middleware utilizes NextRequest to access and manipulate incoming request data</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668,113e44bf79d1dd5dbde02354435765e3,ba06ed84686152cb5106e54e4887fa28,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="NEXTRESPONSE">
      <data key="d4">31.0</data>
      <data key="d5">Middleware functions utilize NextResponse to send responses
NextResponse is used within the middleware to manipulate the outgoing response
NextResponse is utilized within middleware to manage the response of incoming requests
Middleware uses NextResponse to generate and send responses back to the client</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668,113e44bf79d1dd5dbde02354435765e3,ba06ed84686152cb5106e54e4887fa28,dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="URLPATTERN">
      <data key="d4">7.0</data>
      <data key="d5">URLPattern is used in middleware to accurately match URLs</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="MIDDLEWARE" target="NEXTJS">
      <data key="d4">22.0</data>
      <data key="d5">Next.js utilizes middleware to enhance the functionality of web applications
Middleware is a feature of Next.js that allows developers to run code before a request is completed.
Middleware is a feature of Next.js that allows for request and response manipulation</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668,a30c1b22a2bba568f986171e6685170b,ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="MIDDLEWARE" target="USER AGENT">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can utilize the user agent to determine device type and modify requests accordingly</data>
      <data key="d6">cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </edge>
    <edge source="MIDDLEWARE" target="USER">
      <data key="d4">9.0</data>
      <data key="d5">The middleware checks the user's session status to determine access to protected routes like the dashboard.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="MIDDLEWARE" target="FAVICON.ICO">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can process requests that include favicon.ico to manage how the website is represented in browser tabs</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="MIDDLEWARE" target="SITEMAP.XML">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can handle requests for sitemap.xml to provide search engines with information about the website structure</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="MIDDLEWARE" target="ROBOTS.TXT">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can process requests for robots.txt to control how search engines interact with the website</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="MIDDLEWARE" target="CORS">
      <data key="d4">18.0</data>
      <data key="d5">CORS can be implemented in middleware to manage cross-origin requests in Next.js applications.
Middleware can be used to set CORS headers to manage cross-origin requests
Middleware can configure CORS headers to manage cross-origin requests effectively</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3,3b86536c72cd33dea29dc82250012d80,a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="MIDDLEWARE" target="RESPONSE COOKIES">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can be used to set response cookies in Next.js applications.</data>
      <data key="d6">a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="MIDDLEWARE" target="REQUEST HEADERS">
      <data key="d4">6.0</data>
      <data key="d5">Middleware can modify request headers before processing the request in Next.js applications.
Middleware can manipulate request headers before they reach the server</data>
      <data key="d6">44eb58960277cd9fc903de7625623163,a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="MIDDLEWARE" target="AUTHENTICATION">
      <data key="d4">15.0</data>
      <data key="d5">Authentication is often implemented in middleware to ensure that only authorized users can access certain routes in Next.js applications.
Middleware can be used to handle authentication processes, ensuring that only authorized users can access certain resources</data>
      <data key="d6">3b86536c72cd33dea29dc82250012d80,a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="MIDDLEWARE" target="ANALYTICS PLATFORM">
      <data key="d4">1.0</data>
      <data key="d5">Middleware can be used to send data to an analytics platform for tracking user behavior in Next.js applications.</data>
      <data key="d6">a30c1b22a2bba568f986171e6685170b</data>
    </edge>
    <edge source="MIDDLEWARE" target="RUNTIME">
      <data key="d4">7.0</data>
      <data key="d5">Middleware operates within the Edge runtime environment in Next.js, allowing for efficient request processing</data>
      <data key="d6">c8d58fd330c4f217c52b50590414e517</data>
    </edge>
    <edge source="MIDDLEWARE" target="LEGACY PREFIXES">
      <data key="d4">6.0</data>
      <data key="d5">Middleware can utilize legacy prefixes to manage routing for older URL patterns in Next.js</data>
      <data key="d6">c8d58fd330c4f217c52b50590414e517</data>
    </edge>
    <edge source="MIDDLEWARE" target="URL NORMALIZATION">
      <data key="d4">7.0</data>
      <data key="d5">URL normalization can be controlled by middleware settings in Next.js to ensure proper URL handling</data>
      <data key="d6">c8d58fd330c4f217c52b50590414e517</data>
    </edge>
    <edge source="MIDDLEWARE" target="AUTHENTICATE">
      <data key="d4">7.0</data>
      <data key="d5">Middleware can use the Authenticate function to check user permissions before allowing access to certain routes</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="MIDDLEWARE" target="BLOOM FILTER">
      <data key="d4">7.0</data>
      <data key="d5">Bloom filters are used in middleware to optimize redirect lookups</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd</data>
    </edge>
    <edge source="MIDDLEWARE" target="REDIS">
      <data key="d4">6.0</data>
      <data key="d5">Redis can be used in middleware for fast data retrieval, enhancing performance</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd</data>
    </edge>
    <edge source="MIDDLEWARE" target="RESPONSE">
      <data key="d4">1.0</data>
      <data key="d5">The middleware function manipulates the response before it is sent back to the client</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="MIDDLEWARE" target="AUTH">
      <data key="d4">5.0</data>
      <data key="d5">Authentication is often managed through middleware in Next.js applications</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="MIDDLEWARE" target="AUTH LIBRARY">
      <data key="d4">14.0</data>
      <data key="d5">Middleware uses the Auth Library to perform authorization checks on user sessions
Middleware uses the Auth library to ensure that routes are protected and that user sessions are valid</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5,acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="MIDDLEWARE" target="OPTIMISTIC AUTH CHECKS">
      <data key="d4">7.0</data>
      <data key="d5">Middleware can perform optimistic auth checks to quickly verify user permissions</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="MIDDLEWARE" target="SECURE AUTH CHECKS">
      <data key="d4">1.0</data>
      <data key="d5">Middleware can also implement secure auth checks to ensure sensitive operations are protected</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="MIDDLEWARE" target="ROUTE HANDLERS">
      <data key="d4">7.0</data>
      <data key="d5">Middleware interacts with route handlers to process requests and responses effectively</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="HOME">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can redirect users to the home event after processing requests</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="MIDDLEWARE.TS">
      <data key="d4">8.0</data>
      <data key="d5">middleware.ts is the primary file where middleware functionalities are defined in a Next.js application</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="MIDDLEWARE.JS">
      <data key="d4">8.0</data>
      <data key="d5">middleware.js serves a similar purpose as middleware.ts, allowing for middleware functionalities in JavaScript</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="MATCHER">
      <data key="d4">6.0</data>
      <data key="d5">Matcher is a configuration used in middleware to specify which paths the middleware should apply to</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="CONDITIONAL STATEMENTS">
      <data key="d4">1.0</data>
      <data key="d5">Conditional statements are used within middleware to determine actions based on request paths</data>
      <data key="d6">dc74aa0cbe86d8235a59d0f6809f6184</data>
    </edge>
    <edge source="MIDDLEWARE" target="LOCALE">
      <data key="d4">14.0</data>
      <data key="d5">Middleware can redirect users based on their preferred locale, enhancing user experience</data>
      <data key="d6">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </edge>
    <edge source="MIDDLEWARE" target="USE_ROUTER">
      <data key="d4">5.0</data>
      <data key="d5">Middleware can be used in conjunction with the useRouter hook for enhanced navigation control</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </edge>
    <edge source="MIDDLEWARE" target="ROUTE HANDLER">
      <data key="d4">7.0</data>
      <data key="d5">Middleware often interacts with Route Handlers to process requests and manage redirects in Next.js applications.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="API" target="REQUEST">
      <data key="d4">1.0</data>
      <data key="d5">A request is made to an API to fetch or send data, establishing a connection between the client and the server</data>
      <data key="d6">febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="API" target="FETCH">
      <data key="d4">8.0</data>
      <data key="d5">Fetch is commonly used to make requests to APIs to retrieve or send data</data>
      <data key="d6">febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="API" target="HTTP">
      <data key="d4">17.0</data>
      <data key="d5">APIs use HTTP as a protocol for communication between clients and servers
APIs use HTTP as a protocol for communication between clients and servers</data>
      <data key="d6">0a447cfbac33fa416ddcd2ffd57d0335,2e0b7ff508cb8313a540ecc1a356120e</data>
    </edge>
    <edge source="API" target="CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">The client interacts with the API to request and send data to the server
The client interacts with the API to perform data operations and manage application data</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe,0a447cfbac33fa416ddcd2ffd57d0335</data>
    </edge>
    <edge source="API" target="FETCHER">
      <data key="d4">7.0</data>
      <data key="d5">The Fetcher function interacts with the API to retrieve necessary data for the application</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="API" target="DATABASE">
      <data key="d4">7.0</data>
      <data key="d5">APIs are commonly used to interact with databases, allowing for data retrieval and manipulation</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="API" target="CORS SETTINGS">
      <data key="d4">1.0</data>
      <data key="d5">CORS settings are applied to APIs to manage cross-origin requests</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="API" target="FUNCTION">
      <data key="d4">8.0</data>
      <data key="d5">APIs often invoke functions to perform backend operations</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="API" target="AMPLIFY DATA">
      <data key="d4">10.0</data>
      <data key="d5">Amplify Data interacts with APIs to perform data operations in applications
The API is utilized by Amplify Data to facilitate data operations and interactions with the backend</data>
      <data key="d6">f0df8a5e739e43b9c43840817e1bd7d1,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="API" target="AMPLIFY GEN 2">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Gen 2 allows developers to create and manage APIs for their applications</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="CUSTOM MATCHER" target="ROOT MIDDLEWARE">
      <data key="d4">1.0</data>
      <data key="d5">The custom matcher feature is part of the new Root Middleware structure, allowing for more flexible route definitions</data>
      <data key="d6">2faaabdabafa263524b931c68674e9cd</data>
    </edge>
    <edge source="NESTED MIDDLEWARE" target="ROOT MIDDLEWARE">
      <data key="d4">8.0</data>
      <data key="d5">The transition from Nested Middleware to Root Middleware represents a significant change in how Middleware is structured and executed in Next.js</data>
      <data key="d6">2faaabdabafa263524b931c68674e9cd</data>
    </edge>
    <edge source="DASHBOARD" target="LOGIN">
      <data key="d4">7.0</data>
      <data key="d5">The login event leads to a transition to the dashboard page upon successful authentication</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="DASHBOARD" target="AUTH TOKEN">
      <data key="d4">1.0</data>
      <data key="d5">The presence of an Auth Token determines which version of the Dashboard a user is redirected to</data>
      <data key="d6">d5c8e583b99d40e21e52e5d76498cb0d</data>
    </edge>
    <edge source="DASHBOARD" target="USEISAUTHECED">
      <data key="d4">8.0</data>
      <data key="d5">The useIsAuthed hook is utilized to determine the correct Dashboard view based on user authentication</data>
      <data key="d6">d5c8e583b99d40e21e52e5d76498cb0d</data>
    </edge>
    <edge source="DASHBOARD" target="GETSERVERPROPS">
      <data key="d4">14.0</data>
      <data key="d5">The Dashboard component can utilize getServerSideProps to fetch data before rendering
The Dashboard component uses getServerSideProps to fetch data on the server before rendering</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343,56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="DASHBOARD" target="GETSTATICPROPS">
      <data key="d4">11.0</data>
      <data key="d5">The Dashboard component can utilize getStaticProps to fetch data at build time
The Dashboard component can also utilize getStaticProps for pre-rendering at build time</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343,56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="DASHBOARD" target="FETCH">
      <data key="d4">1.0</data>
      <data key="d5">The Dashboard component uses fetch to retrieve project data from an API</data>
      <data key="d6">56ab21d16e9b86cd9d551ec941e65b04</data>
    </edge>
    <edge source="DASHBOARD" target="BLOG">
      <data key="d4">4.0</data>
      <data key="d5">Both the blog and dashboard are sections of the Next.js application that serve different user needs and content</data>
      <data key="d6">cb4791e4249947cbab8022435c79aa13</data>
    </edge>
    <edge source="DASHBOARD" target="USER">
      <data key="d4">1.0</data>
      <data key="d5">The user accesses the dashboard event after successful authentication and session management.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="DASHBOARD" target="LOGIN PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The login page redirects users to the dashboard upon successful authentication</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd</data>
    </edge>
    <edge source="DASHBOARD" target="AUTHENTICATION">
      <data key="d4">9.0</data>
      <data key="d5">Successful authentication is required to access the dashboard</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd</data>
    </edge>
    <edge source="DASHBOARD" target="SEARCHBAR">
      <data key="d4">6.0</data>
      <data key="d5">The dashboard contains the SearchBar component for user interaction</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="DASHBOARD" target="ROUTER">
      <data key="d4">1.0</data>
      <data key="d5">Dashboard is a route managed by the Router component for navigation</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="DASHBOARD" target="BUTTON">
      <data key="d4">9.0</data>
      <data key="d5">The button navigates to the Dashboard route when clicked</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="DASHBOARD" target="AUTH DASHBOARD">
      <data key="d4">12.0</data>
      <data key="d5">Auth Dashboard is a specific type of Dashboard that requires user authentication
The Auth Dashboard is a type of Dashboard that is accessible only to authenticated users</data>
      <data key="d6">77bf22c1fcd1e61ff866f696397b3a69,dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="DASHBOARD" target="PUBLIC DASHBOARD">
      <data key="d4">7.0</data>
      <data key="d5">Public Dashboard is a specific type of Dashboard that does not require user authentication
The Public Dashboard is a type of Dashboard that is accessible to all users</data>
      <data key="d6">77bf22c1fcd1e61ff866f696397b3a69,dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="DASHBOARD" target="APP DIRECTORY">
      <data key="d4">7.0</data>
      <data key="d5">The app directory allows colocating data fetching in the Dashboard component</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="DASHBOARD" target="PROJECTS">
      <data key="d4">9.0</data>
      <data key="d5">The Dashboard component displays a list of projects fetched from an API</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="DASHBOARD" target="GALLERY">
      <data key="d4">1.0</data>
      <data key="d5">Dashboards can include galleries to showcase images or data visually</data>
      <data key="d6">1e914b4d28a0e4ccc7e1e87c2504a6f5</data>
    </edge>
    <edge source="DASHBOARD" target="SERVER ACTIONS">
      <data key="d4">7.0</data>
      <data key="d5">The Dashboard is the target for redirection after successful execution of Server Actions, such as user signup</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82</data>
    </edge>
    <edge source="DASHBOARD" target="USE_ROUTER HOOK">
      <data key="d4">7.0</data>
      <data key="d5">The useRouter hook can be used to programmatically navigate to the Dashboard route</data>
      <data key="d6">7ebeb57bb18774254a901eafc1cb096f</data>
    </edge>
    <edge source="DASHBOARD" target="REDIRECT FUNCTION">
      <data key="d4">1.0</data>
      <data key="d5">The redirect function can be used to navigate to the Dashboard route based on certain conditions</data>
      <data key="d6">7ebeb57bb18774254a901eafc1cb096f</data>
    </edge>
    <edge source="DASHBOARD" target="LAYOUT">
      <data key="d4">12.0</data>
      <data key="d5">Dashboards can utilize layouts to maintain a consistent user interface across different views
The layout provides shared UI for the dashboard route segment and its child components</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b,1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="DASHBOARD" target="URL PATH">
      <data key="d4">7.0</data>
      <data key="d5">The dashboard is accessed through a specific URL path that corresponds to its route segment</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="DASHBOARD" target="ROUTE SEGMENTS">
      <data key="d4">1.0</data>
      <data key="d5">The dashboard is a specific route segment within the application structure</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="ABOUT" target="APP">
      <data key="d4">8.0</data>
      <data key="d5">The About page component is part of the overall App being developed using Next.js</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="ABOUT" target="PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The Page component includes a link to the About page, allowing navigation between the two pages in the Next.js application.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="REWRITE" target="DESTINATION">
      <data key="d4">8.0</data>
      <data key="d5">Rewrites define a destination URL path for requests that match the source</data>
      <data key="d6">b3759902cd429c22cd4896b10b00848d</data>
    </edge>
    <edge source="REDIRECT" target="404">
      <data key="d4">6.0</data>
      <data key="d5">The redirect object can be used to handle cases where a 404 error occurs, directing users to a different page</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73</data>
    </edge>
    <edge source="REDIRECT" target="RESPONSE">
      <data key="d4">8.0</data>
      <data key="d5">A redirect event occurs as a response to a request when the original URL is not valid</data>
      <data key="d6">d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="REDIRECT" target="SERVER ACTION">
      <data key="d4">16.0</data>
      <data key="d5">The Server Action can invoke the redirect method to navigate users to a new URL
Redirect is a common operation performed in server actions to navigate users after completing an action</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019,b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="REDIRECT" target="NEXTRESPONSE">
      <data key="d4">8.0</data>
      <data key="d5">NextResponse provides a method to perform redirects to a specified URL</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6</data>
    </edge>
    <edge source="REDIRECT" target="CREATEPOST">
      <data key="d4">18.0</data>
      <data key="d5">The CreatePost event leads to a Redirect event to navigate to the new post pageThe Redirect event occurs after the CreatePost event to navigate to the new post page</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="REDIRECT" target="POSTPAGE">
      <data key="d4">1.0</data>
      <data key="d5">PostPage is the destination of the Redirect event after creating a post</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="AUTHORIZATION" target="SESSION MANAGEMENT">
      <data key="d4">8.0</data>
      <data key="d5">Session management is essential for authorization, as it maintains the user's authenticated state to determine access rights.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="AUTHORIZATION" target="USER">
      <data key="d4">21.0</data>
      <data key="d5">The user undergoes authorization checks to determine their access rights within the application based on their session data.
The User function retrieves the authorization header to authenticate the user
Authorization determines the permissions of the user within the application</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6,7040175c91fe86a908046a9b485b0410,9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="AUTHORIZATION" target="API GATEWAY">
      <data key="d4">1.0</data>
      <data key="d5">API Gateway uses authorization mechanisms to secure access to APIs</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="AUTHORIZATION" target="COGNITO USER POOLS">
      <data key="d4">8.0</data>
      <data key="d5">Cognito User Pools provides user authentication and authorization for applications</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="AUTHORIZATION" target="IAM">
      <data key="d4">1.0</data>
      <data key="d5">IAM policies are used to manage permissions for accessing AWS resources</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="AUTHORIZATION" target="SALARY">
      <data key="d4">7.0</data>
      <data key="d5">Authorization rules are applied to salary records to restrict access based on user roles</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86</data>
    </edge>
    <edge source="AUTHORIZATION" target="USER POOL">
      <data key="d4">6.0</data>
      <data key="d5">Authorization rules are applied to user pools to manage access to resources in applications</data>
      <data key="d6">8c8075430684b38bdd1c6ce9fc9f7205</data>
    </edge>
    <edge source="AUTHORIZATION" target="TEAM">
      <data key="d4">5.0</data>
      <data key="d5">The Team model's access is governed by authorization rules that determine who can interact with it.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="AUTHORIZATION" target="MEMBER">
      <data key="d4">5.0</data>
      <data key="d5">The Member model's access is governed by authorization rules that determine who can interact with it.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="AUTHORIZATION" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides built-in authorization mechanisms to manage access to data and operations</data>
      <data key="d6">92bcd3df485df362e04da4f60878ff3b</data>
    </edge>
    <edge source="AUTHORIZATION" target="COGNITO">
      <data key="d4">1.0</data>
      <data key="d5">Cognito handles user authorization by determining user permissions and access to resources within applications</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="AUTHORIZATION" target="ACCESS TOKEN">
      <data key="d4">6.0</data>
      <data key="d5">Authorization processes often rely on access tokens to determine user permissions</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="REQUEST" target="NEXTREQUEST">
      <data key="d4">8.0</data>
      <data key="d5">The HTTP request is represented by the NextRequest class in Next.js middleware</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="REQUEST" target="EDGE RUNTIME">
      <data key="d4">8.0</data>
      <data key="d5">Request objects are processed within the Edge Runtime to handle incoming HTTP requests.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="REQUEST" target="RESPONSE">
      <data key="d4">29.0</data>
      <data key="d5">A request is followed by a response from the server, completing the client-server interaction
A request is made to the server, which processes it and sends back a response
A response is generated as a result of a request made to the server
A request is made by a client and a response is returned by the server as a result of that request
A request is made to the server, which then generates a response based on the request's content.</data>
      <data key="d6">19bb9589361b1370de913cae6e3e1fd8,72e1433a8550144aaf1d1fd8f3cb3774,c5461cfa4259c43255132d8f916b1764,d4880ef934642aac0f85ca34038b847d,db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="HEADERS">
      <data key="d4">15.0</data>
      <data key="d5">Headers are included in requests to provide additional context and information about the request being made
Headers are included in a request to provide additional information to the server</data>
      <data key="d6">72e1433a8550144aaf1d1fd8f3cb3774,febb4f969f596319fd061f8b7238dfa9</data>
    </edge>
    <edge source="REQUEST" target="HEADER">
      <data key="d4">7.0</data>
      <data key="d5">Headers are included in requests to provide additional context and information</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="COOKIE">
      <data key="d4">8.0</data>
      <data key="d5">Cookies are sent with requests to maintain user sessions and preferences</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="NEXT-ROUTER-PREFETCH">
      <data key="d4">6.0</data>
      <data key="d5">Requests can include the next-router-prefetch header to indicate that the request is for prefetching resources</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="PURPOSE">
      <data key="d4">6.0</data>
      <data key="d5">Requests can include the purpose header to specify the intent behind the request</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="X-PRESENT">
      <data key="d4">6.0</data>
      <data key="d5">Requests can include the x-present header to indicate the presence of certain features</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="X-MISSING">
      <data key="d4">1.0</data>
      <data key="d5">Requests can include the x-missing header to indicate the absence of certain features</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="REQUEST" target="FILTER">
      <data key="d4">6.0</data>
      <data key="d5">The filter function is applied to requests to ensure only valid requests are processed</data>
      <data key="d6">d4880ef934642aac0f85ca34038b847d</data>
    </edge>
    <edge source="REQUEST" target="NEXTRESPONSE">
      <data key="d4">14.0</data>
      <data key="d5">The NextResponse object can be created or modified based on the incoming request
NextResponse is used to handle and modify the incoming request</data>
      <data key="d6">b6f71d64cf5764914e58142430b460e6,c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="REQUEST" target="CONTEXT">
      <data key="d4">1.0</data>
      <data key="d5">The context provides additional information about the request, which can help in understanding the circumstances of any errors that occur.</data>
      <data key="d6">a0a19960cdaef7a85c598591f06454da</data>
    </edge>
    <edge source="REQUEST" target="COOKIES">
      <data key="d4">7.0</data>
      <data key="d5">Cookies can be sent with a request to maintain session state or user preferences</data>
      <data key="d6">72e1433a8550144aaf1d1fd8f3cb3774</data>
    </edge>
    <edge source="REQUEST" target="SEARCH PARAMETERS">
      <data key="d4">8.0</data>
      <data key="d5">Search parameters are included in a request to specify the details of the data being queried from the server.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764</data>
    </edge>
    <edge source="REQUEST" target="FORM DATA">
      <data key="d4">8.0</data>
      <data key="d5">Form data is often part of a request when submitting information through a web form.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764</data>
    </edge>
    <edge source="REQUEST" target="SAY-HELLO">
      <data key="d4">1.0</data>
      <data key="d5">The 'say-hello' function can create a request object to interact with external services or APIs during its execution.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="NEXTREQUEST" target="NEXTRESPONSE">
      <data key="d4">23.0</data>
      <data key="d5">NextRequest is used to create an instance that allows access to NextResponse methods for handling responses
NextRequest and NextResponse work together in middleware to handle incoming requests and produce outgoing responses
NextRequest is processed to generate a NextResponse, which is sent back to the client</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3,3b86536c72cd33dea29dc82250012d80,ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="NEXTREQUEST" target="USER AGENT">
      <data key="d4">6.0</data>
      <data key="d5">User Agent helper is used to extract properties from the NextRequest object</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="NEXTREQUEST" target="COOKIE">
      <data key="d4">14.0</data>
      <data key="d5">NextRequest can access and manipulate cookies sent with the HTTP request
NextRequest provides methods to access and manipulate cookies sent with the request</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3,ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="NEXTREQUEST" target="NEXTJS">
      <data key="d4">16.0</data>
      <data key="d5">NextRequest is a part of the Next.js framework, specifically designed for managing incoming requests in middleware.
NextRequest is a feature of the Next.js framework that enhances the handling of web requests</data>
      <data key="d6">a30c1b22a2bba568f986171e6685170b,c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="NEXTREQUEST" target="HEADERS">
      <data key="d4">8.0</data>
      <data key="d5">NextRequest allows access to the headers of the incoming HTTP request</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3</data>
    </edge>
    <edge source="NEXTREQUEST" target="REQUEST HEADERS">
      <data key="d4">1.0</data>
      <data key="d5">NextRequest provides methods to manipulate request headers before they are sent to the server</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3</data>
    </edge>
    <edge source="NEXTRESPONSE" target="EXAMPLE.COM">
      <data key="d4">1.0</data>
      <data key="d5">Example.com is used in documentation to illustrate how to set cookies in NextResponse</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="NEXTRESPONSE" target="COOKIE">
      <data key="d4">7.0</data>
      <data key="d5">NextResponse can set, clear, and manage cookies in the HTTP response
NextResponse allows setting cookies in the response to be sent back to the client</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3,ba06ed84686152cb5106e54e4887fa28</data>
    </edge>
    <edge source="NEXTRESPONSE" target="RESPONSE">
      <data key="d4">2.0</data>
      <data key="d5">The HTTP response is represented by the NextResponse class in Next.js middleware
NextResponse is responsible for generating the outgoing response based on the incoming request</data>
      <data key="d6">ba06ed84686152cb5106e54e4887fa28,c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="NEXTRESPONSE" target="NEXTJS">
      <data key="d4">24.0</data>
      <data key="d5">NextResponse is a part of the Next.js framework, providing methods to handle HTTP responses
NextResponse is a part of the Next.js framework, specifically designed for managing responses in middleware.
NextResponse is a part of the Next.js framework that enhances response handling capabilities</data>
      <data key="d6">19bb9589361b1370de913cae6e3e1fd8,a30c1b22a2bba568f986171e6685170b,c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="NEXTRESPONSE" target="HEADERS">
      <data key="d4">7.0</data>
      <data key="d5">Headers can be manipulated using NextResponse to customize the HTTP response</data>
      <data key="d6">c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="NEXTRESPONSE" target="RESPONSE HEADERS">
      <data key="d4">8.0</data>
      <data key="d5">NextResponse can set response headers to control how the client should handle the response</data>
      <data key="d6">113e44bf79d1dd5dbde02354435765e3</data>
    </edge>
    <edge source="EXAMPLE.COM" target="NEXT.CONFIG.JS">
      <data key="d4">5.0</data>
      <data key="d5">example.com is used as a reference in documentation for configuring redirects and rewrites in next.config.js</data>
      <data key="d6">7e9fce61758916e4d2b7de2f2f4d1704</data>
    </edge>
    <edge source="EXAMPLE.COM" target="REWRITES">
      <data key="d4">1.0</data>
      <data key="d5">Example.com is used as a destination in rewrite rules for demonstration purposes</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b</data>
    </edge>
    <edge source="EXAMPLE.COM" target="ACME">
      <data key="d4">1.0</data>
      <data key="d5">ACME's sitemap includes links to Example.com as part of its web services</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="NEXTJS" target="SERVER COMPONENTS HMR CACHE">
      <data key="d4">7.0</data>
      <data key="d5">The serverComponentsHmrCache is an experimental feature of the Next.js framework aimed at improving performance during development.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="REACT STRICT MODE">
      <data key="d4">6.0</data>
      <data key="d5">React Strict Mode is a feature that is supported by Next.js to help developers identify issues in their applications.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="REDIRECTS">
      <data key="d4">1.0</data>
      <data key="d5">Redirects are a functionality provided by Next.js to manage incoming request paths effectively.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="NEXT.CONFIG.JS">
      <data key="d4">8.0</data>
      <data key="d5">next.config.js is a crucial part of Next.js applications, allowing developers to configure various options and features.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="FETCH CACHE">
      <data key="d4">6.0</data>
      <data key="d5">The fetch cache is utilized within Next.js to optimize data fetching and improve application performance.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="TYPE SCRIPT">
      <data key="d4">1.0</data>
      <data key="d5">TypeScript is commonly used in Next.js applications to provide type safety and improve code quality.</data>
      <data key="d6">8c16e2baedacd39ce0384eac61e5ee79</data>
    </edge>
    <edge source="NEXTJS" target="IMAGE_RESPONSE">
      <data key="d4">1.0</data>
      <data key="d5">ImageResponse is a feature introduced in Next.js for generating dynamic images</data>
      <data key="d6">c219d208ec8254181cab570f210dac3f</data>
    </edge>
    <edge source="NEXTJS" target="LOADING">
      <data key="d4">7.0</data>
      <data key="d5">Loading states are implemented in Next.js to enhance user experience during data fetching</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="NEXTJS" target="EXPORTS">
      <data key="d4">6.0</data>
      <data key="d5">Exports are a fundamental part of JavaScript modules, which are utilized in Next.js for component and function sharing</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="NEXTJS" target="MDXCOMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">MDXComponents are utilized in Next.js to define custom components for rendering Markdown</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="NEXTJS" target="CONFIG">
      <data key="d4">6.0</data>
      <data key="d5">The config object is part of Next.js Middleware, allowing for configuration of middleware behavior</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="NEXTJS" target="BREADCRUMBS">
      <data key="d4">7.0</data>
      <data key="d5">Breadcrumbs can be used with Next.js to enhance navigation within web applications</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="RESPONSE" target="EDGE RUNTIME">
      <data key="d4">8.0</data>
      <data key="d5">Response objects are generated within the Edge Runtime to send back HTTP responses.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="RESPONSE" target="FETCH">
      <data key="d4">1.0</data>
      <data key="d5">The fetch method is used to obtain a response from the API</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="RESPONSE" target="HEADER">
      <data key="d4">7.0</data>
      <data key="d5">Headers are included in responses to convey information about the response</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="RESPONSE" target="COOKIE">
      <data key="d4">1.0</data>
      <data key="d5">Cookies can be set in responses to store user preferences on the client side</data>
      <data key="d6">db459e8194ba2f087761e7727b876b9d</data>
    </edge>
    <edge source="RESPONSE" target="STATUS CODE">
      <data key="d4">1.0</data>
      <data key="d5">A response includes a status code that indicates the outcome of the request</data>
      <data key="d6">0a447cfbac33fa416ddcd2ffd57d0335</data>
    </edge>
    <edge source="RESPONSE" target="ASYNC OPERATION">
      <data key="d4">1.0</data>
      <data key="d5">An async operation may result in a response being sent back to the client once the operation is complete</data>
      <data key="d6">0a447cfbac33fa416ddcd2ffd57d0335</data>
    </edge>
    <edge source="RESPONSE" target="NEXT.JS APPLICATION">
      <data key="d4">1.0</data>
      <data key="d5">Next.js Application can generate Response objects to handle API responses</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="RESPONSE" target="REQUEST HEADERS">
      <data key="d4">4.0</data>
      <data key="d5">Response headers are set based on the request headers received from the client</data>
      <data key="d6">44eb58960277cd9fc903de7625623163</data>
    </edge>
    <edge source="RESPONSE" target="NEXTFETCHEVENT">
      <data key="d4">1.0</data>
      <data key="d5">NextFetchEvent can be used to modify the response of a request in middleware</data>
      <data key="d6">3b86536c72cd33dea29dc82250012d80</data>
    </edge>
    <edge source="RESPONSE" target="HEADERS">
      <data key="d4">8.0</data>
      <data key="d5">Headers are included in a response to provide additional information to the client</data>
      <data key="d6">72e1433a8550144aaf1d1fd8f3cb3774</data>
    </edge>
    <edge source="RESPONSE" target="COOKIES">
      <data key="d4">1.0</data>
      <data key="d5">Cookies can be set in a response to store data on the client side</data>
      <data key="d6">72e1433a8550144aaf1d1fd8f3cb3774</data>
    </edge>
    <edge source="RESPONSE" target="JSON">
      <data key="d4">1.0</data>
      <data key="d5">Responses from the server are often formatted in JSON to facilitate easy data exchange between client and server.</data>
      <data key="d6">c5461cfa4259c43255132d8f916b1764</data>
    </edge>
    <edge source="COOKIE" target="USER">
      <data key="d4">8.0</data>
      <data key="d5">The user&#8217;s session is verified through cookies that store session data sent with each request.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="COOKIE" target="SET DRAFT MODE">
      <data key="d4">1.0</data>
      <data key="d5">Setting Draft Mode involves creating a cookie that enables the draft viewing functionality</data>
      <data key="d6">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="COOKIE" target="LOCALE">
      <data key="d4">6.0</data>
      <data key="d5">The NEXT_LOCALE cookie is used to store the user's preferred locale for a web application</data>
      <data key="d6">7cd464b0f42ff05e87fa7e149d7e2997</data>
    </edge>
    <edge source="COOKIE" target="SERVER ACTION">
      <data key="d4">8.0</data>
      <data key="d5">Cookies can be set or deleted through server actions in Next.js</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568</data>
    </edge>
    <edge source="RUST" target="LIGHTNING CSS">
      <data key="d4">6.0</data>
      <data key="d5">Lightning CSS is developed using the Rust programming language, leveraging its performance capabilities</data>
      <data key="d6">9726f4ae30b11539c429ff41c8326d46</data>
    </edge>
    <edge source="API ROUTE" target="AUTHENTICATION">
      <data key="d4">1.0</data>
      <data key="d5">The API route processes the authentication request sent from the login form, handling user verification.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="API ROUTE" target="SIGNAL HANDLING">
      <data key="d4">1.0</data>
      <data key="d5">Signal handling can be implemented in API routes to ensure proper cleanup and resource management when the server is shutting down.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="API ROUTE" target="TOKEN">
      <data key="d4">8.0</data>
      <data key="d5">The token is used in the API route to authenticate requests</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="API ROUTE" target="SLUG">
      <data key="d4">6.0</data>
      <data key="d5">The slug is a parameter used in the API route to specify which content to preview</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="API ROUTE" target="DRAFT MODE">
      <data key="d4">6.0</data>
      <data key="d5">Draft Mode is enabled through an API Route in Next.js that sets a cookie</data>
      <data key="d6">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="API ROUTE" target="HEADLESS CMS">
      <data key="d4">5.0</data>
      <data key="d5">A headless CMS can securely access Draft Mode through an API Route in Next.js</data>
      <data key="d6">ef6fa1b3e61aee8ae358b362e18f319d</data>
    </edge>
    <edge source="API ROUTE" target="FORMDATA">
      <data key="d4">6.0</data>
      <data key="d5">FormData is used in API Routes to handle form submissions and send data to the server.</data>
      <data key="d6">a0ed25040eb1637a5c82493764f822ac</data>
    </edge>
    <edge source="TWITTER" target="TWITTER CARD">
      <data key="d4">1.0</data>
      <data key="d5">Twitter Card is a feature developed by Twitter to enhance user engagement through rich media in tweets.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="TWITTER" target="TWITTER CARD MARKUP">
      <data key="d4">1.0</data>
      <data key="d5">Twitter Card Markup is a feature provided by Twitter to enhance tweets with rich media, which can be utilized by Next.js applications.</data>
      <data key="d6">24cc1d3b813f206f9d57e59cc3b4d1ee</data>
    </edge>
    <edge source="AUTH0" target="AWS COGNITO">
      <data key="d4">6.0</data>
      <data key="d5">Auth0 can be integrated with AWS Cognito to provide federated identity management</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="DATA ACCESS LAYER">
      <data key="d4">1.0</data>
      <data key="d5">The Data Access Layer can be invoked within Server Components to verify user sessions and fetch data</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="USER">
      <data key="d4">5.0</data>
      <data key="d5">Server Components can render different views based on the user's role, providing role-based access</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="END-TO-END TYPE SAFETY">
      <data key="d4">7.0</data>
      <data key="d5">Server Components contribute to End-to-End Type Safety by allowing direct data fetching on the server without serialization, enhancing type safety across the application.</data>
      <data key="d6">735b59f53ffba96602dace4169c285ed</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="DYNAMIC IMPORTS">
      <data key="d4">6.0</data>
      <data key="d5">Server Components can also utilize Dynamic Imports to manage loading behavior</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="APP PAGE">
      <data key="d4">1.0</data>
      <data key="d5">The app/page.js file can also include Server Components for rendering on the server side</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="FETCH REQUESTS">
      <data key="d4">1.0</data>
      <data key="d5">Fetch requests are automatically memoized in Server Components to optimize data retrieval</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="CLIENT COMPONENTS">
      <data key="d4">9.0</data>
      <data key="d5">Client Components and Server Components are both part of the rendering strategies in Next.js
Server Components and Client Components work together in Next.js to optimize rendering and interactivity.
Server components and client components work together in Next.js to create a seamless user experience</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c,5214aa930e0680c0e176373359966818,69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="SECURITY">
      <data key="d4">8.0</data>
      <data key="d5">Security is enhanced by using Server Components, as sensitive data remains on the server and is not exposed to the client.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="CACHING">
      <data key="d4">7.0</data>
      <data key="d5">Caching is a benefit of Server Components, allowing for the reuse of rendered results to improve performance.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="PERFORMANCE">
      <data key="d4">8.0</data>
      <data key="d5">Server Components contribute to overall performance optimization in web applications by reducing client-side load.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="INITIAL PAGE LOAD">
      <data key="d4">9.0</data>
      <data key="d5">Server Components facilitate a faster Initial Page Load by generating HTML on the server.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="FIRST CONTENTFUL PAINT">
      <data key="d4">8.0</data>
      <data key="d5">Server Components can improve the First Contentful Paint metric by rendering content on the server before client-side execution.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="REACT SERVER COMPONENT PAYLOAD">
      <data key="d4">9.0</data>
      <data key="d5">The React Server Component Payload is generated by Server Components to update the client-side DOM efficiently.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="STATIC RENDERING">
      <data key="d4">7.0</data>
      <data key="d5">Static Rendering is one of the strategies employed by Server Components to optimize performance.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="DYNAMIC RENDERING">
      <data key="d4">8.0</data>
      <data key="d5">Dynamic Rendering allows Server Components to provide personalized content for users at request time.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="SERVER COMPONENTS" target="STREAMING">
      <data key="d4">1.0</data>
      <data key="d5">Streaming is a feature of Server Components that allows for progressive rendering of content to enhance user experience.</data>
      <data key="d6">69ac19d7db15ae11c7884ce391807330</data>
    </edge>
    <edge source="JEST" target="REACT TESTING LIBRARY">
      <data key="d4">9.0</data>
      <data key="d5">React Testing Library is often used alongside Jest for testing React components
Jest is frequently used with React Testing Library for testing React components</data>
      <data key="d6">0ef0d7dfd239c67d2b08d6be68926b78,407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="JEST" target="COVERAGE">
      <data key="d4">9.0</data>
      <data key="d5">Jest collects coverage information during tests to help developers understand which parts of their code are not being tested.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="SETUP FILES">
      <data key="d4">8.0</data>
      <data key="d5">Setup files are used in Jest to configure the testing environment before each test is run.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="NODE_MODULES">
      <data key="d4">6.0</data>
      <data key="d5">Node_modules are typically ignored in Jest tests to prevent unnecessary processing and to focus on the application code.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="MAPPING">
      <data key="d4">1.0</data>
      <data key="d5">Mapping is a configuration in Jest that helps resolve module paths correctly during testing.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="JEST.CONFIG.JS">
      <data key="d4">9.0</data>
      <data key="d5">jest.config.js is the configuration file that defines how Jest operates, including settings for coverage, module resolution, and test execution.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="TEST PATH IGNORE PATTERNS">
      <data key="d4">8.0</data>
      <data key="d5">Test path ignore patterns are part of Jest's configuration to prevent certain directories from being included in test runs.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="MODULE NAME MAPPER">
      <data key="d4">7.0</data>
      <data key="d5">Module name mapper is a configuration in Jest that helps resolve module paths correctly during testing.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="TRANSFORM IGNORE PATTERNS">
      <data key="d4">6.0</data>
      <data key="d5">Transform ignore patterns are part of Jest's configuration to specify which files should not be transformed during testing.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="SETUP FILES AFTER ENV">
      <data key="d4">1.0</data>
      <data key="d5">Setup files after environment is a configuration option in Jest that allows for additional setup scripts to run after the test environment is initialized.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="JEST" target="TESTING LIBRARY">
      <data key="d4">8.0</data>
      <data key="d5">Jest can be extended with the Testing Library to provide custom matchers for testing React components
Testing Library provides utilities that work seamlessly with Jest for testing React components.</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6,b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="JEST" target="JEST SETUP">
      <data key="d4">1.0</data>
      <data key="d5">Jest setup is necessary to configure Jest for testing React applications</data>
      <data key="d6">444fc385d67c401653f1a2c133ba95e6</data>
    </edge>
    <edge source="JEST" target="NODE_ENV">
      <data key="d4">6.0</data>
      <data key="d5">Jest tests can be configured to run in different environments based on the NODE_ENV variable.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="JEST" target="VITEST">
      <data key="d4">6.0</data>
      <data key="d5">Both Vitest and Jest are testing frameworks used in JavaScript projects, often compared for their performance and features</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="JEST" target="JEST.CONFIG">
      <data key="d4">8.0</data>
      <data key="d5">The Jest.config file is used to configure the Jest testing framework for specific project needs.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="JEST" target="ASYNC COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Jest can be used to test async components, although it currently does not support async Server Components directly.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="JEST" target="JEST.SETUP">
      <data key="d4">8.0</data>
      <data key="d5">The Jest.setup file is used to configure Jest before running tests, allowing for custom setups like importing matchers.</data>
      <data key="d6">b0a7c0b65015814bd16809b55a84c5cc</data>
    </edge>
    <edge source="JEST" target="TESTING">
      <data key="d4">6.0</data>
      <data key="d5">Jest is a framework that supports the testing process by providing tools for unit testing in JavaScript applications.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="JEST" target="SNAPSHOT TEST">
      <data key="d4">1.0</data>
      <data key="d5">Snapshot tests are a feature of Jest that allows developers to track changes in the rendered output of components over time.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="JEST" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can be tested using Jest, which is a common practice for ensuring the functionality of applications built with Amplify.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="BABEL" target="TRANSFORM">
      <data key="d4">8.0</data>
      <data key="d5">Babel is used as a transformer in Jest to transpile modern JavaScript code into a format that can be executed in older environments.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="FAST REFRESH" target="MODULE">
      <data key="d4">7.0</data>
      <data key="d5">Fast Refresh allows for live reloading of modules in Next.js applications, enhancing the development experience.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="FAST REFRESH" target="DEBUGGING">
      <data key="d4">1.0</data>
      <data key="d5">Debugging in Next.js can be enhanced by using Fast Refresh, which allows for quick feedback during development</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="EMOTION" target="AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Amplify is compatible with Emotion, enabling developers to use Emotion's styling capabilities with Amplify components.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="TRANSPILEPACKAGES">
      <data key="d4">6.0</data>
      <data key="d5">transpilePackages is a specific option that can be set within next.config.js to manage package transpilation.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="TRAILINGSLASH">
      <data key="d4">7.0</data>
      <data key="d5">trailingSlash is another configuration option that can be defined in next.config.js to control URL behavior.
trailingSlash is a setting in next.config.js that affects the output directory structure</data>
      <data key="d6">6160e6925dba648999d09c55006ab046,d1675bdf7576ae8e63e95f4105fcb693</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="SERVEREXTERNALPACKAGES">
      <data key="d4">6.0</data>
      <data key="d5">serverExternalPackages is a configuration option that can be set in next.config.js to manage external dependencies.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="LOADER">
      <data key="d4">6.0</data>
      <data key="d5">next.config.js can be configured to use various loaders to handle different types of files in a Next.js application.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="MODULE RESOLUTION">
      <data key="d4">7.0</data>
      <data key="d5">next.config.js allows for configuration of module resolution through aliases and extensions.</data>
      <data key="d6">6160e6925dba648999d09c55006ab046</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="RUNTIME CONFIG">
      <data key="d4">6.0</data>
      <data key="d5">next.config.js is where developers define the Runtime Config settings for their Next.js applications</data>
      <data key="d6">d5597c0b98fb6d7afb8e40f53a3b0be7</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="REDIRECTS">
      <data key="d4">16.0</data>
      <data key="d5">next.config.js is used to configure redirects in Next.js applications
Redirects are another feature defined within next.config.js for managing URL redirection
Redirects are defined within the next.config.js file to manage URL redirection rules</data>
      <data key="d6">7e9fce61758916e4d2b7de2f2f4d1704,d5597c0b98fb6d7afb8e40f53a3b0be7,de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="REWRITES">
      <data key="d4">16.0</data>
      <data key="d5">Rewrites are a feature defined within next.config.js to manage URL routing
The next.config.js file is where developers define rewrites for routing in Next.js applications</data>
      <data key="d6">16332d9a8715d2cac034c2aa3c4f12f6,7e9fce61758916e4d2b7de2f2f4d1704</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="HEADERS">
      <data key="d4">7.0</data>
      <data key="d5">The next.config.js file is used to define custom headers in a Next.js application
next.config.js defines the headers that can be applied to requests and responses in a Next.js application.</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf,bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="KEY">
      <data key="d4">7.0</data>
      <data key="d5">The next.config.js file specifies the key for custom headers in the headers array</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="VALUE">
      <data key="d4">7.0</data>
      <data key="d5">The next.config.js file assigns values to custom headers in the headers array</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="BASEPATH">
      <data key="d4">12.0</data>
      <data key="d5">The next.config.js file can include a basePath configuration that affects header matching
next.config.js allows developers to configure a base path for their application routes.</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf,bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="LOCALE">
      <data key="d4">6.0</data>
      <data key="d5">The next.config.js file can include a locale configuration that affects header matching</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="HAS">
      <data key="d4">6.0</data>
      <data key="d5">The next.config.js file can define conditions using the has array for applying headers</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="MISSING">
      <data key="d4">6.0</data>
      <data key="d5">The next.config.js file can define conditions using the missing array for not applying headers</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="WILDCARD PATH MATCHING">
      <data key="d4">5.0</data>
      <data key="d5">The next.config.js file can utilize wildcard path matching for flexible routing</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="REGEX PATH MATCHING">
      <data key="d4">5.0</data>
      <data key="d5">The next.config.js file can utilize regex path matching for precise routing</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="CACHE-CONTROL">
      <data key="d4">6.0</data>
      <data key="d5">next.config.js can be used to set Cache-Control headers for responses in a Next.js application.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="I18N">
      <data key="d4">1.0</data>
      <data key="d5">next.config.js can be configured to support internationalization (i18n) in Next.js applications.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="GENERATEBUILDID">
      <data key="d4">6.0</data>
      <data key="d5">generateBuildId is a configuration option defined in next.config.js to create a unique build ID</data>
      <data key="d6">d1675bdf7576ae8e63e95f4105fcb693</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="GENERATEETAGS">
      <data key="d4">13.0</data>
      <data key="d5">generateEtags is a configuration option defined in next.config.js to control etag generation
The generateEtags option is a setting within next.config.js that controls etag generation for HTML pages</data>
      <data key="d6">a9c779cfa21a679f557dbbc90283565f,d1675bdf7576ae8e63e95f4105fcb693</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="EXPORTPATHMAP">
      <data key="d4">7.0</data>
      <data key="d5">exportPathMap is a feature that can be configured in next.config.js for page export mapping
ExportPathMap is a configuration option that was used in next.config.js for defining custom export paths</data>
      <data key="d6">a9c779cfa21a679f557dbbc90283565f,d1675bdf7576ae8e63e95f4105fcb693</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="PHASE_DEVELOPMENT_SERVER">
      <data key="d4">2.0</data>
      <data key="d5">The PHASE_DEVELOPMENT_SERVER constant is used within next.config.js to determine the configuration settings when the application is in development mode.
The configuration in next.config.js can change based on the PHASE_DEVELOPMENT_SERVER context</data>
      <data key="d6">4647f3f9cf6eaae5dadd71a1dc2e58ae,cbe1cbb01bd5b9f4a5f9276b9f1aaa77</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="MINIMUMCACHETTL">
      <data key="d4">7.0</data>
      <data key="d5">The minimumCacheTTL setting in next.config.js defines how long cached images are retained</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="DANGEROUSLY ALLOW SVG">
      <data key="d4">6.0</data>
      <data key="d5">The dangerouslyAllowSVG option in next.config.js allows for the use of SVG images in Next.js applications</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="CONTENT DISPOSITION TYPE">
      <data key="d4">1.0</data>
      <data key="d5">The contentDispositionType setting in next.config.js controls how images are served to the browser</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="REWRITE RULES">
      <data key="d4">6.0</data>
      <data key="d5">The next.config.js file is where rewrite rules are defined to manage routing in a Next.js application</data>
      <data key="d6">cb4791e4249947cbab8022435c79aa13</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="OPTIMIZING BUNDLING">
      <data key="d4">1.0</data>
      <data key="d5">next.config.js is used to configure settings related to optimizing the bundling of packages in Next.js applications</data>
      <data key="d6">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="MATCHING CHARACTERS">
      <data key="d4">1.0</data>
      <data key="d5">Matching characters are utilized in the next.config.js file to define complex routing patterns</data>
      <data key="d6">de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="ASSET PREFIX">
      <data key="d4">8.0</data>
      <data key="d5">The assetPrefix option in next.config.js allows developers to specify a custom path for serving static assets in Next.js applications.</data>
      <data key="d6">4443464e7a2cb4bcbbf667881fecb236</data>
    </edge>
    <edge source="NEXT.CONFIG.JS" target="BASE PATH">
      <data key="d4">1.0</data>
      <data key="d5">The basePath option in next.config.js enables applications to be served from a specified sub-path, enhancing deployment flexibility.</data>
      <data key="d6">4443464e7a2cb4bcbbf667881fecb236</data>
    </edge>
    <edge source="ERROR BOUNDARIES" target="CLIENT COMPONENTS">
      <data key="d4">1.0</data>
      <data key="d5">Client Components can utilize Error Boundaries to catch errors and display fallback UI</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82</data>
    </edge>
    <edge source="COMPONENT" target="FUNCTION COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">Function components are a type of component in React that allows for a simpler syntax and the use of hooks.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="COMPONENT" target="AUTHOR">
      <data key="d4">6.0</data>
      <data key="d5">The author explains how components are used in web development, specifically in the context of responsive images</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="FUNCTION COMPONENT" target="HOOKS">
      <data key="d4">9.0</data>
      <data key="d5">Function components can utilize hooks to manage state and lifecycle events, making them more powerful and flexible.</data>
      <data key="d6">478ca906eeeb1b1356949c55e289c4d3</data>
    </edge>
    <edge source="USEEFFECT" target="PAGE">
      <data key="d4">15.0</data>
      <data key="d5">The useEffect hook is used within the Page component to perform side effects based on the router's query parameters
useEffect is commonly used within pages to handle side effects related to rendering and data fetching.</data>
      <data key="d6">170893bac86ced48a278abde4d144710,223233d7a3658c1a7836573abacf9175</data>
    </edge>
    <edge source="USEEFFECT" target="FETCH">
      <data key="d4">8.0</data>
      <data key="d5">useEffect is commonly used to trigger fetch requests when a component mounts or updates</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="USEEFFECT" target="INCREMENTVIEWS">
      <data key="d4">7.0</data>
      <data key="d5">useEffect is used to call the incrementViews function to update the view count when the component mounts or updates</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="USEEFFECT" target="VIEWS">
      <data key="d4">6.0</data>
      <data key="d5">The total views are updated using the useEffect hook whenever the component mounts or updates</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="USEEFFECT" target="POSTS">
      <data key="d4">7.0</data>
      <data key="d5">useEffect is often used to fetch posts from an API when the component mounts, allowing for dynamic data loading</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="STATIC" target="STALERTIMES">
      <data key="d4">1.0</data>
      <data key="d5">The static property in staleTimes is used for caching statically generated pages.</data>
      <data key="d6">fc0ba612fedfd66b2e97651149105594</data>
    </edge>
    <edge source="NODE_OPTIONS" target="CROSS-ENV">
      <data key="d4">7.0</data>
      <data key="d5">Cross-env is used to set the NODE_OPTIONS environment variable for consistent debugging across platforms</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="EDGE RUNTIME" target="NETWORK APIS">
      <data key="d4">7.0</data>
      <data key="d5">Network APIs are part of the Edge Runtime, enabling the handling of network requests and responses.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="CRYPTO APIS">
      <data key="d4">7.0</data>
      <data key="d5">Crypto APIs are utilized within the Edge Runtime to provide cryptographic functionalities.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="WEB STANDARD APIS">
      <data key="d4">1.0</data>
      <data key="d5">Web Standard APIs are integrated into the Edge Runtime to support various web functionalities.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="BLOB">
      <data key="d4">5.0</data>
      <data key="d5">Blob is a data type that can be utilized within the Edge Runtime for handling binary data.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="FETCH">
      <data key="d4">7.0</data>
      <data key="d5">Fetch is an API supported by the Edge Runtime for making network requests.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="FETCHEVENT">
      <data key="d4">6.0</data>
      <data key="d5">FetchEvent is an event type that is handled within the Edge Runtime during network requests.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="FILE">
      <data key="d4">5.0</data>
      <data key="d5">File objects can be processed within the Edge Runtime for handling file-related operations.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="FORMDATA">
      <data key="d4">6.0</data>
      <data key="d5">FormData can be utilized within the Edge Runtime to manage form submissions and data handling.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="HEADERS">
      <data key="d4">7.0</data>
      <data key="d5">Headers are manipulated within the Edge Runtime to manage HTTP request and response headers.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="URLSEARCHPARAMS">
      <data key="d4">5.0</data>
      <data key="d5">URLSearchParams can be used within the Edge Runtime to manage query parameters in URLs.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="WEBSOCKET">
      <data key="d4">6.0</data>
      <data key="d5">WebSocket connections can be established and managed within the Edge Runtime for real-time communication.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="TEXTDECODER">
      <data key="d4">5.0</data>
      <data key="d5">TextDecoder is used within the Edge Runtime to decode binary data into text.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="TEXTENCODER">
      <data key="d4">5.0</data>
      <data key="d5">TextEncoder is used within the Edge Runtime to encode text into binary data.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="READABLESTREAM">
      <data key="d4">6.0</data>
      <data key="d5">ReadableStream is a data type that can be utilized within the Edge Runtime for streaming data.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="WRITABLESTREAM">
      <data key="d4">6.0</data>
      <data key="d5">WritableStream is a data type that can be utilized within the Edge Runtime for writing data streams.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="TRANSFORMSTREAM">
      <data key="d4">1.0</data>
      <data key="d5">TransformStream is a data type that can be utilized within the Edge Runtime for transforming data streams.</data>
      <data key="d6">c12e1c591cd7bdbcdc7ba0c3cbc8aafa</data>
    </edge>
    <edge source="EDGE RUNTIME" target="EVAL">
      <data key="d4">9.0</data>
      <data key="d5">The eval function is restricted in the Edge Runtime due to security concerns</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="EDGE RUNTIME" target="UNSUPPORTED APIS">
      <data key="d4">1.0</data>
      <data key="d5">The Edge Runtime defines the context in which unsupported APIs are restricted, establishing a relationship.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="FETCH" target="DATA">
      <data key="d4">8.0</data>
      <data key="d5">Fetch is used to retrieve data from an API, which can then be utilized in Next.js applications.</data>
      <data key="d6">e1b487c3c6375629c06ea480fd8dc53b</data>
    </edge>
    <edge source="FETCH" target="SERVER-SIDE PROPS">
      <data key="d4">7.0</data>
      <data key="d5">The fetch method is used to retrieve data that is then passed as server-side props to a Next.js page component</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73</data>
    </edge>
    <edge source="FETCH" target="GETSTATICPROPS">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps uses the fetch API to retrieve data from external sources
getStaticProps uses fetch to retrieve data from an API at build time</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343,98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="FETCH" target="NAVIGATOR">
      <data key="d4">7.0</data>
      <data key="d5">Navigator can utilize the Fetch API to send data to servers using methods like sendBeacon and fetch</data>
      <data key="d6">91a237014868fc106c5edbdc4ad2b520</data>
    </edge>
    <edge source="FETCH" target="GENERATESTATICPARAMS">
      <data key="d4">7.0</data>
      <data key="d5">generateStaticParams uses fetch to retrieve product data for generating static parameters</data>
      <data key="d6">dea59f788f9645dcf527f4f5f4f12ae7</data>
    </edge>
    <edge source="FETCH" target="POSTS">
      <data key="d4">9.0</data>
      <data key="d5">The fetch function is used to retrieve posts data from an external API
The fetch API is used to retrieve posts from an external source, such as an API, in Next.js applications</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693,af00e01481cac23e3b67c635215254ab</data>
    </edge>
    <edge source="FETCH" target="GETSERVERPROPS">
      <data key="d4">7.0</data>
      <data key="d5">getServerSideProps uses fetch to retrieve data from an API</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="FETCH" target="GETSTATICPATHS">
      <data key="d4">5.0</data>
      <data key="d5">getStaticPaths may use fetch to retrieve data for defining dynamic paths</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="FETCH" target="GETSTATICPARAMS">
      <data key="d4">5.0</data>
      <data key="d5">getStaticParams may utilize fetch to retrieve data for posts, indicating a functional relationship</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="FETCH" target="ABORTCONTROLLER">
      <data key="d4">5.0</data>
      <data key="d5">AbortController can be used to abort fetch requests, providing control over network requests</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="FETCH" target="DATA CACHE">
      <data key="d4">14.0</data>
      <data key="d5">Fetch requests in Next.js can interact with the Data Cache to improve performance
Data retrieved using fetch is automatically cached in the Data Cache to improve performance in Next.js applications</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b,c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="FILE" target="PREDICTIONS">
      <data key="d4">6.0</data>
      <data key="d5">Predictions can analyze files as input sources for detecting entities</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="FILE" target="STORAGE PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The Storage page allows users to manage files stored in Amplify Storage</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="FILE" target="FOLDER">
      <data key="d4">7.0</data>
      <data key="d5">Files can be organized within folders in the storage system</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="FILE" target="STORAGE MANAGER">
      <data key="d4">2.0</data>
      <data key="d5">The Storage Manager allows users to upload and manage files within the AWS Amplify framework
Files are managed and uploaded through the Storage Manager component</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea,ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="FILE" target="DOWNLOAD DATA API">
      <data key="d4">9.0</data>
      <data key="d5">The Download Data API is used to retrieve files from storage, allowing users to access their content</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="FILE" target="FILE NAME">
      <data key="d4">7.0</data>
      <data key="d5">The file name is used to identify and access a specific file in storage systems</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="FILE" target="CACHE CONTROL">
      <data key="d4">1.0</data>
      <data key="d5">Cache control settings can affect how files are retrieved and stored in web applications</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="FILE" target="UPLOAD DATA">
      <data key="d4">8.0</data>
      <data key="d5">The file is the object being transferred during the upload data event</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa</data>
    </edge>
    <edge source="FORMDATA" target="SERVER ACTIONS">
      <data key="d4">2.0</data>
      <data key="d5">FormData is used in server actions to perform operations based on user input
Server Actions can process FormData to handle form submissions</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d,407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="FORMDATA" target="FORM">
      <data key="d4">7.0</data>
      <data key="d5">The Form collects data into FormData for processing</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORMDATA" target="CUSTOMERID">
      <data key="d4">8.0</data>
      <data key="d5">FormData includes the customerId field, which is essential for identifying the customer</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORMDATA" target="AMOUNT">
      <data key="d4">8.0</data>
      <data key="d5">FormData includes the amount field, which specifies the invoice amount</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORMDATA" target="STATUS">
      <data key="d4">8.0</data>
      <data key="d5">FormData includes the status field, which indicates the invoice's current state</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORMDATA" target="SERVER ACTION">
      <data key="d4">13.0</data>
      <data key="d5">FormData is used in server actions to handle data submitted from forms
Server Actions often utilize FormData to handle form submissions and data processing</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1,4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="FORMDATA" target="USERNAME">
      <data key="d4">7.0</data>
      <data key="d5">Username is a property of the FormData object that stores the user's chosen identifier.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="FORMDATA" target="PASSWORD">
      <data key="d4">7.0</data>
      <data key="d5">Password is a property of the FormData object that stores the user's secret key for authentication.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="FORMDATA" target="ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">Attributes is a property of the FormData object that contains additional user information, including email.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="HEADERS" target="HTTP HEADERS">
      <data key="d4">8.0</data>
      <data key="d5">Headers are a type of HTTP header that can be set in a Next.js application</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="HEADERS" target="ARRAY">
      <data key="d4">8.0</data>
      <data key="d5">Headers are defined as an array of objects in the Next.js configuration</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="HEADERS" target="OBJECT">
      <data key="d4">1.0</data>
      <data key="d5">Headers are defined as objects containing properties like source and headers in the Next.js configuration</data>
      <data key="d6">743d216d66ffda2efe23e0e9a8d0f0cf</data>
    </edge>
    <edge source="HEADERS" target="PAGE">
      <data key="d4">14.0</data>
      <data key="d5">The Page component utilizes the headers function to read incoming request headers</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6</data>
    </edge>
    <edge source="HEADERS" target="USER">
      <data key="d4">14.0</data>
      <data key="d5">The User function uses the headers function to obtain the authorization header for fetching user data</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6</data>
    </edge>
    <edge source="HEADERS" target="IP">
      <data key="d4">8.0</data>
      <data key="d5">The IP function relies on the headers function to access IP-related headers</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6</data>
    </edge>
    <edge source="URLSEARCHPARAMS" target="SEARCH">
      <data key="d4">7.0</data>
      <data key="d5">The search parameter is a value that can be retrieved from the URLSearchParams interface</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="READABLESTREAM" target="NEXT.JS APPLICATION">
      <data key="d4">4.0</data>
      <data key="d5">Next.js Application can implement ReadableStream for handling streaming data</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="BLOB" target="NEXT.JS APPLICATION">
      <data key="d4">4.0</data>
      <data key="d5">Next.js Application can handle Blob objects for managing binary data</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="BLOB" target="S3">
      <data key="d4">1.0</data>
      <data key="d5">The Blob data type is used to create file-like objects that can be uploaded to S3</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="ASYNCLOCALSTORAGE" target="ENVIRONMENT VARIABLES">
      <data key="d4">5.0</data>
      <data key="d5">AsyncLocalStorage can utilize environment variables for configuration in Next.js applications.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="SETUP FILES">
      <data key="d4">7.0</data>
      <data key="d5">Environment variables can be loaded in setup files to configure the testing environment for Jest.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="DEFAULTS">
      <data key="d4">5.0</data>
      <data key="d5">Defaults are the pre-defined values for Environment Variables that can be set for different environments in an application.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="DB_HOST">
      <data key="d4">5.0</data>
      <data key="d5">DB_HOST is an example of an environment variable used in Next.js applications</data>
      <data key="d6">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="DB_USER">
      <data key="d4">5.0</data>
      <data key="d5">DB_USER is an example of an environment variable used in Next.js applications</data>
      <data key="d6">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="DB_PASS">
      <data key="d4">1.0</data>
      <data key="d5">DB_PASS is an example of an environment variable used in Next.js applications</data>
      <data key="d6">6a27b514d5ea49bd1a6dd159d44aaf87</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="AMPLIFY GEN 2">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Gen 2 allows for the management of environment variables for applications</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="REACT_APP_TEST_VARIABLE">
      <data key="d4">4.0</data>
      <data key="d5">REACT_APP_TEST_VARIABLE is an example of an environment variable that can be set in the Amplify console</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="LAMBDA">
      <data key="d4">1.0</data>
      <data key="d5">AWS Lambda functions can utilize environment variables for configuration</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="SAY-HELLO">
      <data key="d4">6.0</data>
      <data key="d5">The 'say-hello' function utilizes environment variables to configure its runtime behavior.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="ENVIRONMENT VARIABLES" target="AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Environment variables are used in Amplify to manage configuration settings across different environments</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="MIDDLEWARE CONFIGURATION" target="DYNAMIC CODE EVALUATION">
      <data key="d4">6.0</data>
      <data key="d5">Middleware configuration allows for specific dynamic code evaluation settings in Next.js</data>
      <data key="d6">b1787ce5e713d63d1f4f1203762380a3</data>
    </edge>
    <edge source="FLOAT64ARRAY" target="FLOAT32ARRAY">
      <data key="d4">5.0</data>
      <data key="d5">Float32Array and Float64Array are related as they both represent typed arrays for floating point numbers but differ in precision.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="MAP" target="MARKER">
      <data key="d4">6.0</data>
      <data key="d5">Markers are added to the map to indicate specific locations or points of interest</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="MAP" target="SEARCH COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The search component is integrated into the map to allow users to search for locations</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="MAP" target="MARKERS">
      <data key="d4">8.0</data>
      <data key="d5">Markers are displayed on a map to indicate specific locations or features</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="MAP" target="CSS FILE">
      <data key="d4">6.0</data>
      <data key="d5">CSS files are used to style the map component, ensuring it displays correctly</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="MAP" target="MAP STYLES">
      <data key="d4">1.0</data>
      <data key="d5">Different map styles can be applied to enhance the visual representation of the map</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="MAP" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify can be used to integrate maps into web applications</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="MAP" target="MAPLIBRE">
      <data key="d4">9.0</data>
      <data key="d5">MapLibre is used to create and display maps on web applications</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="MAP" target="MYAMPLIFYGEOESRISTREETMAP">
      <data key="d4">6.0</data>
      <data key="d5">myAmplifyGeoEsriStreetMap is a specific map style that can be rendered on a webpage</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="MAP" target="MYAMPLIFYGEOESRITOPOMAP">
      <data key="d4">6.0</data>
      <data key="d5">myAmplifyGeoEsriTopographicMap is a specific map style that can be rendered on a webpage</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="MAP" target="LOCATION SEARCH">
      <data key="d4">8.0</data>
      <data key="d5">Maps are essential for displaying results from location searches, providing context to the search results</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="MAP" target="MYMAP">
      <data key="d4">7.0</data>
      <data key="d5">MyMap is a specific instance of a map resource created in the geo stack</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="JSON" target="OBJECT">
      <data key="d4">6.0</data>
      <data key="d5">JSON is a format for representing objects in JavaScript, thus they are closely related.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="JSON" target="REDIRECT MAP">
      <data key="d4">6.0</data>
      <data key="d5">Redirect maps are often stored in JSON format for easy retrieval and management in web applications.</data>
      <data key="d6">84b5c29553feb2883a2e93ffbac5b791</data>
    </edge>
    <edge source="RANGEERROR" target="TYPEERROR">
      <data key="d4">4.0</data>
      <data key="d5">RangeError and TypeError are both types of errors that indicate issues with values in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="SYNTAXERROR" target="EVALERROR">
      <data key="d4">4.0</data>
      <data key="d5">EvalError and SyntaxError are both types of errors that can occur during code execution in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="WEB VITALS" target="PERFORMANCEEVENTTIMING">
      <data key="d4">7.0</data>
      <data key="d5">Web Vitals can be analyzed using PerformanceEventTiming to identify issues affecting user experience</data>
      <data key="d6">7849b1ca8bbfc8c3240def9d244f008d</data>
    </edge>
    <edge source="WEB VITALS" target="PERFORMANCENAVIGATIONTIMING">
      <data key="d4">7.0</data>
      <data key="d5">Web Vitals can be measured using PerformanceNavigationTiming to assess navigation performance</data>
      <data key="d6">7849b1ca8bbfc8c3240def9d244f008d</data>
    </edge>
    <edge source="WEB VITALS" target="PERFORMANCERESOURCETIMING">
      <data key="d4">1.0</data>
      <data key="d5">Web Vitals can be evaluated using PerformanceResourceTiming to understand resource loading performance</data>
      <data key="d6">7849b1ca8bbfc8c3240def9d244f008d</data>
    </edge>
    <edge source="WEB VITALS" target="USE REPORT WEB VITALS">
      <data key="d4">1.0</data>
      <data key="d5">The useReportWebVitals hook is specifically designed to report Web Vitals metrics, which are essential for assessing web performance.</data>
      <data key="d6">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </edge>
    <edge source="WEB VITALS" target="CUMULATIVE LAYOUT SHIFT">
      <data key="d4">6.0</data>
      <data key="d5">Cumulative Layout Shift is one of the Web Vitals metrics that measures visual stability</data>
      <data key="d6">1a9f90261d97f4e9455bb0fa22f4ee9c</data>
    </edge>
    <edge source="WEB VITALS" target="LARGEST CONTENTFUL PAINT">
      <data key="d4">1.0</data>
      <data key="d5">Largest Contentful Paint is another Web Vitals metric that measures loading performance</data>
      <data key="d6">1a9f90261d97f4e9455bb0fa22f4ee9c</data>
    </edge>
    <edge source="WEB VITALS" target="LAYOUT">
      <data key="d4">7.0</data>
      <data key="d5">Web Vitals is included in the Layout component to track performance metrics</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="WEB VITALS" target="METRIC">
      <data key="d4">8.0</data>
      <data key="d5">Web Vitals metrics are reported using the useReportWebVitals hook</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="LOCKFILE" target="GIT">
      <data key="d4">1.0</data>
      <data key="d5">The lockfile must be committed to Git to maintain consistency in Next.js projects</data>
      <data key="d6">89def9941cbf0a381e1e4a28a703e201</data>
    </edge>
    <edge source="CACHE-CONTROL" target="IMAGE OPTIMIZATION API">
      <data key="d4">7.0</data>
      <data key="d5">Cache-Control headers are used in conjunction with the Image Optimization API to manage how images are cached</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="CACHE-CONTROL" target="GETSERVERPROPS">
      <data key="d4">6.0</data>
      <data key="d5">Cache-Control headers can be set in responses from getServerSideProps</data>
      <data key="d6">3678e68072101ac922b838851eaa8465</data>
    </edge>
    <edge source="GIT" target="AWS AMPLIFY">
      <data key="d4">27.0</data>
      <data key="d5">AWS Amplify integrates with Git for version control and deployment of applications
AWS Amplify can integrate with Git for version control and deployment of applications
AWS Amplify can integrate with Git for version control of application code
AWS Amplify uses Git for version control and deployment of applications.</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52,856c945b28eacce9c83378e56652fee3,d5671c2494c6418a266da35fff705101,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="GIT" target="BRANCH_NAME">
      <data key="d4">5.0</data>
      <data key="d5">Branch name is a variable used in Git to specify the branch being deployed</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="GIT" target="PULL REQUEST">
      <data key="d4">9.0</data>
      <data key="d5">Pull requests are a feature of Git that allows developers to propose changes to the codebase</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="GIT" target="AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Amplify integrates with Git to enable CI/CD for web applications, allowing for easy deployment and version control.
Git is used to manage version control for projects developed using Amplify</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9,81518acc3db43af0161d599284ff910e</data>
    </edge>
    <edge source="GIT" target="APP">
      <data key="d4">6.0</data>
      <data key="d5">Git is used to manage version control for the application</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="GIT" target="USER">
      <data key="d4">6.0</data>
      <data key="d5">Users commit changes to their applications using Git to manage version control</data>
      <data key="d6">7040175c91fe86a908046a9b485b0410</data>
    </edge>
    <edge source="LOADER" target="IMAGE SIZING">
      <data key="d4">8.0</data>
      <data key="d5">The loader function in Next.js is responsible for generating URLs that consider image sizing for optimal loading</data>
      <data key="d6">0cdf0d09b72c24c28afa3a7823b5507d</data>
    </edge>
    <edge source="LOADER" target="AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">The Loader component is integrated into the Amplify framework to enhance user experience during file operations</data>
      <data key="d6">6534102a2bcab0d166b971b8fc0e8eb1</data>
    </edge>
    <edge source="LOADER" target="STORAGE MANAGER">
      <data key="d4">1.0</data>
      <data key="d5">The Storage Manager includes a Loader component to indicate the progress of file uploads to users.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="LOADER" target="FACELIVENESSDETECTOR">
      <data key="d4">7.0</data>
      <data key="d5">Loader is displayed while the FaceLivenessDetector is fetching session data</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="LOADER" target="AMPLIFY UI">
      <data key="d4">10.0</data>
      <data key="d5">Loader is a component that indicates loading states in the Amplify UI library
Loader is another component provided by Amplify UI for React that indicates processing or waiting for a result
Loaders are components in Amplify UI that indicate processing actions</data>
      <data key="d6">51eb03a68a36f040cb248c3d2430e43a,85d9171dd6e70ffdb5803e227ecacbc4,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="LOADER" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Loader is a component provided by AWS Amplify to indicate loading states in applications</data>
      <data key="d6">e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="LOADER" target="THEME PROVIDER">
      <data key="d4">5.0</data>
      <data key="d5">The Loader component is often wrapped in a Theme Provider to ensure consistent styling</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="REDIRECTS" target="WILDCARD PATH MATCHING">
      <data key="d4">7.0</data>
      <data key="d5">Wildcard path matching is a specific type of redirect that allows for flexible URL handling</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="REGEX PATH MATCHING">
      <data key="d4">7.0</data>
      <data key="d5">Regex path matching is another method of implementing redirects based on complex URL patterns</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="HEADER MATCHING">
      <data key="d4">6.0</data>
      <data key="d5">Header matching is a condition that can trigger a redirect</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="COOKIE MATCHING">
      <data key="d4">6.0</data>
      <data key="d5">Cookie matching is a condition that can trigger a redirect</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="QUERY MATCHING">
      <data key="d4">1.0</data>
      <data key="d5">Query matching is a condition that can trigger a redirect</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="PARAMETER">
      <data key="d4">5.0</data>
      <data key="d5">Parameters are used in redirects to dynamically match and redirect users based on their input</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e</data>
    </edge>
    <edge source="REDIRECTS" target="DESTINATION">
      <data key="d4">16.0</data>
      <data key="d5">The destination is the endpoint for a redirect, guiding users to a new URL
The destination is the target URL path specified in a redirect rule</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e,de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="REDIRECTS" target="PERMANENT">
      <data key="d4">7.0</data>
      <data key="d5">The permanent attribute defines the nature of the redirect, indicating if it is a long-term change
The permanent flag indicates the type of redirect being applied in the redirect rules</data>
      <data key="d6">3728034c20ff061a6f5bcaadac49b04e,de5d774b63da599b2e72cb96a3e61337</data>
    </edge>
    <edge source="REDIRECTS" target="HTTP CLIENTS">
      <data key="d4">4.0</data>
      <data key="d5">Redirects may need to consider older HTTP clients for proper handling</data>
      <data key="d6">21183997adb6288a64caa86bfd107612</data>
    </edge>
    <edge source="PLAYWRIGHT" target="CYPRUS">
      <data key="d4">6.0</data>
      <data key="d5">Playwright and Cypress are both tools used for testing web applications, focusing on end-to-end testing</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="PLAYWRIGHT" target="CYPRESS">
      <data key="d4">1.0</data>
      <data key="d5">Both Cypress and Playwright are testing frameworks used for E2E testing, indicating they serve similar purposes</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd</data>
    </edge>
    <edge source="POSTCSS" target="TAILWIND">
      <data key="d4">1.0</data>
      <data key="d5">PostCSS is used to process Tailwind CSS in Next.js applications, enabling utility-first styling</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="LOCALE" target="DEFAULT LOCALE">
      <data key="d4">6.0</data>
      <data key="d5">The default locale is a specific type of locale that is used when no other locale is specified</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="LOCALE" target="HREFLANG">
      <data key="d4">1.0</data>
      <data key="d5">hreflang tags are used to inform search engines about the language and regional targeting of different locale versions of a page</data>
      <data key="d6">7cd464b0f42ff05e87fa7e149d7e2997</data>
    </edge>
    <edge source="LOCALE" target="DICTIONARIES">
      <data key="d4">2.0</data>
      <data key="d5">Dictionaries provide localized strings based on the user's locale, facilitating content translation</data>
      <data key="d6">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </edge>
    <edge source="HTTP CLIENTS" target="STATUS CODE">
      <data key="d4">8.0</data>
      <data key="d5">HTTP clients interpret status codes to understand the outcome of their requests</data>
      <data key="d6">7e9fce61758916e4d2b7de2f2f4d1704</data>
    </edge>
    <edge source="DYNAMIC ROUTES" target="GETSTATICPATHS">
      <data key="d4">8.0</data>
      <data key="d5">Dynamic routes are generated using getStaticPaths in Next.js, allowing for the creation of pages based on data.</data>
      <data key="d6">e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="DYNAMIC ROUTES" target="GETSTATICPROPS">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps can be used in conjunction with dynamic routes to fetch data for pages that are generated based on dynamic parameters</data>
      <data key="d6">7cd464b0f42ff05e87fa7e149d7e2997</data>
    </edge>
    <edge source="BLOG" target="ACME">
      <data key="d4">8.0</data>
      <data key="d5">ACME maintains a Blog to share updates and articles with its audience</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="QUERY" target="AMPLIFY DATA">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Data allows developers to define and execute queries to retrieve data from connected data sources</data>
      <data key="d6">f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="QUERY" target="MUTATION">
      <data key="d4">6.0</data>
      <data key="d5">Queries and mutations are both types of operations that can be performed on data in APIs</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="QUERY" target="SUBSCRIPTION">
      <data key="d4">1.0</data>
      <data key="d5">Subscriptions can be used alongside queries to provide real-time data updates based on query results</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="QUERY" target="CUSTOMER">
      <data key="d4">1.0</data>
      <data key="d5">Queries can be executed on the Customer model to retrieve customer data based on various parameters</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="DOCKER" target="KUBERNETES">
      <data key="d4">8.0</data>
      <data key="d5">Docker containers can be managed and orchestrated using Kubernetes</data>
      <data key="d6">adb5bec4b54e83924618cafc99d40e24</data>
    </edge>
    <edge source="MONOREPO" target="PACKAGES">
      <data key="d4">1.0</data>
      <data key="d5">Packages are often organized within a monorepo structure, allowing for better dependency management.</data>
      <data key="d6">7481573bcc2c3c6d105c0bf358bec2e6</data>
    </edge>
    <edge source="MONOREPO" target="AWS AMPLIFY">
      <data key="d4">12.0</data>
      <data key="d5">AWS Amplify supports monorepo workflows for fullstack builds
AWS Amplify can be configured to support monorepo setups for managing multiple projects</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="MONOREPO" target="AMPLIFY">
      <data key="d4">5.0</data>
      <data key="d5">Amplify can be used in a monorepo setup to manage multiple projects within a single repository</data>
      <data key="d6">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="CLOUDFLARE" target="FASTLY">
      <data key="d4">7.0</data>
      <data key="d5">Both Cloudflare and Fastly provide content delivery network services, competing in the same market space.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="CONTENTFUL" target="GUMLET">
      <data key="d4">5.0</data>
      <data key="d5">Contentful can utilize Gumlet for optimizing images that are managed within its content management system.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="FASTLY" target="IMGIX">
      <data key="d4">6.0</data>
      <data key="d5">Fastly and Imgix both offer services that enhance the delivery and processing of images for web applications.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="FASTLY" target="SIRV">
      <data key="d4">1.0</data>
      <data key="d5">Sirv and Fastly both provide solutions for image hosting and delivery, often used in conjunction with web applications.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="FASTLY" target="VERCEL BLOB">
      <data key="d4">1.0</data>
      <data key="d5">Fastly enhances the delivery speed of videos hosted on Vercel Blob through its CDN services</data>
      <data key="d6">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="GUMLET" target="PIXELBIN">
      <data key="d4">5.0</data>
      <data key="d5">Gumlet and PixelBin both provide image optimization services, catering to similar needs in web development.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="IMAGEENGINE" target="THUMBOR">
      <data key="d4">6.0</data>
      <data key="d5">ImageEngine and Thumbor both focus on image processing and optimization for web applications.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="IMGIX" target="CACHE BEHAVIOR">
      <data key="d4">1.0</data>
      <data key="d5">Cache behavior is relevant to Imgix as it describes how optimized images are cached and served.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="SANITY" target="SUPABASE">
      <data key="d4">4.0</data>
      <data key="d5">Sanity and Supabase can be integrated to manage and deliver structured content and images effectively.</data>
      <data key="d6">2d1db23990399e0c3a7fe2300114d685</data>
    </edge>
    <edge source="KEY" target="FILES">
      <data key="d4">7.0</data>
      <data key="d5">The key is used to uniquely identify and manage each file within the Storage Manager.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="VALUE" target="SWITCHFIELD">
      <data key="d4">6.0</data>
      <data key="d5">value property defines what data is submitted with the form when the SwitchField is used</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="QUINTARA" target="AURELIA">
      <data key="d4">7.0</data>
      <data key="d5">Quintara negotiated the release of Aurelian hostages from Firuzabad.
Quintara is negotiating the release of hostages for Aurelia.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="QUINTARA" target="FIRUZABAD">
      <data key="d4">7.0</data>
      <data key="d5">Quintara facilitated the hostage exchange involving Firuzabad.
Quintara is facilitating the hostage exchange involving Firuzabad.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="QUINTARA" target="KROHAARA">
      <data key="d4">1.0</data>
      <data key="d5">Krohaara is the capital of Quintara, involved in the negotiations for the hostages.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="AURELIA" target="FIRUZABAD">
      <data key="d4">8.0</data>
      <data key="d5">Firuzabad held Aurelian hostages, leading to negotiations for their release.
Firuzabad is involved in a hostage situation with Aurelia, which is seeking the release of hostages.
Aurelia and Firuzabad may be involved in geopolitical discussions or conflicts</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,8a15ba0e9c228225918d6207fc8b6a8d,bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="AURELIA" target="CASHION">
      <data key="d4">7.0</data>
      <data key="d5">Cashion is the capital of Aurelia, where the released hostages are headed.</data>
      <data key="d6">bd13629205b4661186b2631023139a53</data>
    </edge>
    <edge source="FIRUZABAD" target="KROHAARA">
      <data key="d4">19.0</data>
      <data key="d5">Firuzabad and Krohaara are related through the hostage exchange negotiations
Firuzabad negotiated a hostage exchange with Krohaara
Firuzabad and Krohaara are related through the context of the hostage exchange involving Aurelian nationals.
Firuzabad and Krohaara are related through the recent hostage negotiations involving Quintara.
Firuzabad is the location from which hostages were exchanged and taken to Krohaara, indicating a geographical relationship in the context of the event.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="FIRUZABAD" target="CASHION">
      <data key="d4">10.0</data>
      <data key="d5">Cashion is related to Firuzabad as the destination for the hostages released from Firuzabad
Firuzabad is involved in the negotiations for the release of hostages to Cashion
Cashion is related to Firuzabad as the capital of Aurelia, which was involved in the hostage exchange.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621,5eccc9b6c90fe181c8a1389dcb99435b,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="FIRUZABAD" target="HOSTAGE EXCHANGE">
      <data key="d4">6.0</data>
      <data key="d5">The hostage exchange event is directly related to Firuzabad as it is the location where hostages were held</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b</data>
    </edge>
    <edge source="FIRUZABAD" target="MEGGIE TAZBAH">
      <data key="d4">2.0</data>
      <data key="d5">Meggie Tazbah was a hostage in Firuzabad.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="FIRUZABAD" target="DURKE BATAGLANI">
      <data key="d4">1.0</data>
      <data key="d5">Durke Bataglani was a hostage in Firuzabad.</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421</data>
    </edge>
    <edge source="FIRUZABAD" target="TIRUZIA">
      <data key="d4">20.0</data>
      <data key="d5">Tiruzia is the capital of Firuzabad, indicating a geographical relationship.
Tiruzia is the capital of Firuzabad, where hostages were held.
Tiruzia is the capital of Firuzabad, indicating a direct geographical relationship.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="KROHAARA" target="CASHION">
      <data key="d4">3.0</data>
      <data key="d5">Krohaara and Cashion are related through the context of the hostage exchange, where hostages were returned to Aurelia.
Krohaara and Cashion are related through the exchange of hostages between their respective countries.
Krohaara is the destination for the Aurelian hostages after their release, indicating a relationship between the two geographical locations.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621,735b59f53ffba96602dace4169c285ed,b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="CASHION" target="HOSTAGE EXCHANGE">
      <data key="d4">1.0</data>
      <data key="d5">The hostage exchange event involves the movement of hostages to Cashion</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b</data>
    </edge>
    <edge source="DURKE BATAGLANI" target="MEGGIE TAZBAH">
      <data key="d4">7.0</data>
      <data key="d5">Meggie Tazbah and Durke Bataglani were both hostages released in the same exchange.
Meggie Tazbah and Durke Bataglani were both hostages released in the same exchange.
Meggie Tazbah and Durke Bataglani were exchanged in the same hostage release</data>
      <data key="d6">45fc1e950172cd0fb4a7f0162afae421,bd13629205b4661186b2631023139a53,e99cfa8c07448d7a84d08d3a5ba6dc7a</data>
    </edge>
    <edge source="I18N" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">I18n is a part of AWS Amplify, enhancing its capabilities for internationalization</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="CORS" target="API ROUTES">
      <data key="d4">5.0</data>
      <data key="d5">API Routes do not specify CORS headers by default</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="CORS" target="APIGATEWAY">
      <data key="d4">6.0</data>
      <data key="d5">API Gateway implements CORS settings to manage cross-origin requests</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="CORS" target="API GATEWAY">
      <data key="d4">6.0</data>
      <data key="d5">CORS settings are configured in API Gateway to manage cross-origin requests</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="CORS" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">CORS policies are important for AWS Amplify to manage how resources are shared across different domains.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="GETSTATICPROPS" target="FALLBACK">
      <data key="d4">5.0</data>
      <data key="d5">getStaticProps can be used in conjunction with fallback to manage static pages with loading states</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="GETSTATICPROPS" target="E-COMMERCE SITE">
      <data key="d4">7.0</data>
      <data key="d5">getStaticProps is useful for generating product pages on e-commerce sites</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="GETSTATICPROPS" target="PRODUCT PAGES">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps is used to statically generate product pages at build time</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="GETSTATICPROPS" target="APP DIRECTORY">
      <data key="d4">7.0</data>
      <data key="d5">The app directory replaces getStaticProps with a simpler data fetching API</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="GETSTATICPROPS" target="POST">
      <data key="d4">14.0</data>
      <data key="d5">The getStaticProps function is used to fetch data for a specific post, linking the static data-fetching method to the dynamic post display.
getStaticProps is used to fetch data for a post to be pre-rendered in a Next.js application.</data>
      <data key="d6">249a768c4964d383be47267af810ece7,db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="GETSTATICPROPS" target="INCREMENTALSTATICREGENERATION">
      <data key="d4">1.0</data>
      <data key="d5">Incremental Static Regeneration allows for the automatic regeneration of pages fetched by getStaticProps, linking the two concepts in the context of data fetching.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="GETSTATICPROPS" target="PREVIEW MODE">
      <data key="d4">5.0</data>
      <data key="d5">getStaticProps can be influenced by the preview mode to fetch different data</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="GETSTATICPROPS" target="DRAFT MODE">
      <data key="d4">7.0</data>
      <data key="d5">getStaticProps can be modified to support Draft Mode, allowing for dynamic data fetching based on the draft status</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe</data>
    </edge>
    <edge source="GETSTATICPROPS" target="CMS">
      <data key="d4">7.0</data>
      <data key="d5">getStaticProps can be used to fetch data from a headless CMS at build time</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="LIB">
      <data key="d4">6.0</data>
      <data key="d5">getStaticProps can utilize shared functions from the lib/ directory for data fetching</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="DATABASE">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps can directly query a database to fetch data for static generation</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="CLIENT-SIDE">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps does not run on the client-side, ensuring that sensitive server-side code is not exposed</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="INITIAL RENDER">
      <data key="d4">8.0</data>
      <data key="d5">getStaticProps is called before the initial render to fetch necessary data</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="INCREMENTAL STATIC REGENERATION">
      <data key="d4">7.0</data>
      <data key="d5">getStaticProps can be used in conjunction with Incremental Static Regeneration to update static pages</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="PROPS">
      <data key="d4">1.0</data>
      <data key="d5">getStaticProps returns props that are passed to the page component for rendering</data>
      <data key="d6">98961c89bf003488bbe6223bc946b205</data>
    </edge>
    <edge source="GETSTATICPROPS" target="GETSTATICPATHS">
      <data key="d4">15.0</data>
      <data key="d5">getStaticProps and getStaticPaths are both functions in Next.js that facilitate static generation of pages
getStaticProps and getStaticPaths are both functions used for data fetching and routing in a web application, indicating a functional relationship</data>
      <data key="d6">7cd464b0f42ff05e87fa7e149d7e2997,8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="GETSTATICPROPS" target="PAGES DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">getStaticProps is used within the pages directory for static site generation</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="GETSTATICPROPS" target="CACHE">
      <data key="d4">6.0</data>
      <data key="d5">getStaticProps can utilize caching to improve performance during static site generation</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="GETSERVERSIDEPROPS" target="PAGE">
      <data key="d4">6.0</data>
      <data key="d5">A page can utilize getServerSideProps to fetch data on each request for server-side rendering.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248</data>
    </edge>
    <edge source="GETSTATICPATHS" target="PREVIEW MODE">
      <data key="d4">1.0</data>
      <data key="d5">getStaticPaths can also be affected by the preview mode to generate dynamic routes</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="GETSTATICPATHS" target="DRAFT MODE">
      <data key="d4">1.0</data>
      <data key="d5">getStaticPaths can also be adapted to work with Draft Mode, enabling pre-rendering of dynamic routes based on draft content</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe</data>
    </edge>
    <edge source="GETSTATICPATHS" target="POST">
      <data key="d4">7.0</data>
      <data key="d5">getStaticPaths is used to define the paths for dynamic posts that should be pre-rendered in a Next.js application.</data>
      <data key="d6">249a768c4964d383be47267af810ece7</data>
    </edge>
    <edge source="GETSTATICPATHS" target="REVALIDATE">
      <data key="d4">5.0</data>
      <data key="d5">getStaticPaths can work in conjunction with revalidate to manage page regeneration, indicating a relationship in functionality</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="STATIC IMAGE IMPORTS" target="PUBLIC URL">
      <data key="d4">5.0</data>
      <data key="d5">The public URL is used to serve static images in a web application, allowing for direct access to image assets</data>
      <data key="d6">0e3c564b3dd53e829befef4d6241c23e</data>
    </edge>
    <edge source="PROCESS.ENV" target="SAY-HELLO">
      <data key="d4">1.0</data>
      <data key="d5">The 'say-hello' function accesses environment variables through the process.env object in Node.js.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="TYPE SCRIPT" target="ACME">
      <data key="d4">12.0</data>
      <data key="d5">ACME uses TypeScript in the development of its web applications
Acme utilizes TypeScript for writing the image generation code</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115,85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="TYPE SCRIPT" target="AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">TypeScript is used in AWS Amplify projects to define backend resources and manage application structure</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="NEXT.CONFIG.MJS" target="CREATEMDX">
      <data key="d4">7.0</data>
      <data key="d5">createMDX is used within next.config.mjs to enable MDX support in Next.js</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="USE_ROUTER" target="ROUTER OBJECT">
      <data key="d4">9.0</data>
      <data key="d5">useRouter returns the router object, which contains information about the current route and methods for navigation.</data>
      <data key="d6">4a99c636fb9adfcf5771118fe58ce017</data>
    </edge>
    <edge source="USE_ROUTER" target="ACTIVE LINK">
      <data key="d4">1.0</data>
      <data key="d5">ActiveLink uses the useRouter hook to access the router object for navigation purposes.</data>
      <data key="d6">4a99c636fb9adfcf5771118fe58ce017</data>
    </edge>
    <edge source="USE_ROUTER" target="ROUTER">
      <data key="d4">1.0</data>
      <data key="d5">useRouter is a hook that provides access to the Router object in Next.js applications.</data>
      <data key="d6">223233d7a3658c1a7836573abacf9175</data>
    </edge>
    <edge source="CPU" target="OS">
      <data key="d4">1.0</data>
      <data key="d5">The operating system (OS) interacts with the CPU to manage hardware resources and execute programs.</data>
      <data key="d6">4a99c636fb9adfcf5771118fe58ce017</data>
    </edge>
    <edge source="PAGE" target="USESTATE">
      <data key="d4">8.0</data>
      <data key="d5">The useState hook is utilized within the Page component to manage the count state</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="PAGE" target="ROUTER">
      <data key="d4">9.0</data>
      <data key="d5">The Router manages the navigation between different pages in a Next.js application.</data>
      <data key="d6">223233d7a3658c1a7836573abacf9175</data>
    </edge>
    <edge source="PAGE" target="GETINITIALPROPS">
      <data key="d4">6.0</data>
      <data key="d5">A page can utilize getInitialProps to fetch data before rendering.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248</data>
    </edge>
    <edge source="PAGE" target="REPO">
      <data key="d4">8.0</data>
      <data key="d5">The page fetches data from a specific GitHub repository to display information such as the number of stars.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248</data>
    </edge>
    <edge source="PAGE" target="NEXT">
      <data key="d4">9.0</data>
      <data key="d5">Pages are built using the Next.js framework</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="PAGE" target="ART DIRECTION">
      <data key="d4">7.0</data>
      <data key="d5">Art Direction is implemented in pages to provide different images based on screen size</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="PAGE" target="ROOTLAYOUT">
      <data key="d4">8.0</data>
      <data key="d5">RootLayout is used to structure the Page component in Next.js applications</data>
      <data key="d6">9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="PAGE" target="HOMEPAGE">
      <data key="d4">8.0</data>
      <data key="d5">The homepage is a specific page within the Next.js application that displays content to users.</data>
      <data key="d6">21bbed2998c7a9b202d76d56c78cb512</data>
    </edge>
    <edge source="PAGE" target="TEAM">
      <data key="d4">1.0</data>
      <data key="d5">Teams may have specific pages dedicated to their activities or information within the application</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065</data>
    </edge>
    <edge source="PAGE" target="USER">
      <data key="d4">8.0</data>
      <data key="d5">Users interact with pages, indicating a relationship where users navigate through the application</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065</data>
    </edge>
    <edge source="PAGE" target="GENERATESTATICPARAMS">
      <data key="d4">8.0</data>
      <data key="d5">The generateStaticParams function is used to create parameters that define the routes for the page component in the web application.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="PRODUCT">
      <data key="d4">7.0</data>
      <data key="d5">The page component can display products based on the parameters generated by generateStaticParams.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="APP">
      <data key="d4">24.0</data>
      <data key="d5">The app is composed of multiple pages, each potentially generated with dynamic parameters.
The Page component is part of the overall App being developed using Next.js
The app structure in Next.js includes pages that are rendered as part of the application</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c,9e3cdf604b5960851cad4f9699d3ba89,b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="SLUG">
      <data key="d4">1.0</data>
      <data key="d5">The slug is used in the URL of the page to identify specific products or categories dynamically.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="DYNAMIC SEGMENT">
      <data key="d4">8.0</data>
      <data key="d5">Dynamic segments are used within pages to create routes that can change based on parameters.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="CATCH-ALL DYNAMIC SEGMENT">
      <data key="d4">7.0</data>
      <data key="d5">Catch-all dynamic segments allow pages to handle a wide range of routes without predefined paths.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="STATIC RENDERING">
      <data key="d4">9.0</data>
      <data key="d5">Static rendering is a method used to generate pages at build time for improved performance.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="DYNAMIC PARAMS">
      <data key="d4">1.0</data>
      <data key="d5">Dynamic parameters are utilized in pages to create flexible and responsive routing based on user input.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PAGE" target="PRODUCTS">
      <data key="d4">1.0</data>
      <data key="d5">Products are displayed on different pages in the Next.js application, each corresponding to a specific route</data>
      <data key="d6">dea59f788f9645dcf527f4f5f4f12ae7</data>
    </edge>
    <edge source="PAGE" target="LAYOUT">
      <data key="d4">9.0</data>
      <data key="d5">Layouts are used to define the structure for pages in Next.js, ensuring consistent design across multiple pages
Layouts wrap pages to provide a consistent UI structure</data>
      <data key="d6">1d855e055624fb34345331017d371137,64c02a535c1519ef24ded4a2a368f2be</data>
    </edge>
    <edge source="PAGE" target="ROUTE">
      <data key="d4">9.0</data>
      <data key="d5">Each page in Next.js corresponds to a specific route, allowing users to navigate to different parts of the application</data>
      <data key="d6">64c02a535c1519ef24ded4a2a368f2be</data>
    </edge>
    <edge source="PAGE" target="FETCH REQUESTS">
      <data key="d4">7.0</data>
      <data key="d5">Fetch requests are often made within pages to load data dynamically when the page is rendered</data>
      <data key="d6">64c02a535c1519ef24ded4a2a368f2be</data>
    </edge>
    <edge source="PAGE" target="DYNAMIC API">
      <data key="d4">6.0</data>
      <data key="d5">Pages in Next.js can utilize the Dynamic API to handle search parameters dynamically</data>
      <data key="d6">52bf7bb5a492d2cb5b2f5f06d6507a81</data>
    </edge>
    <edge source="PAGE" target="SEARCH PARAMETERS">
      <data key="d4">6.0</data>
      <data key="d5">Pages can access search parameters to render content based on user queries in Next.js</data>
      <data key="d6">52bf7bb5a492d2cb5b2f5f06d6507a81</data>
    </edge>
    <edge source="PAGE" target="POST">
      <data key="d4">6.0</data>
      <data key="d5">Post is displayed on a specific page in the application</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="PAGE" target="WORKER">
      <data key="d4">5.0</data>
      <data key="d5">Pages can utilize workers to perform background tasks without blocking the main thread</data>
      <data key="d6">e50d0654e953ff5fe60c725be1dea551</data>
    </edge>
    <edge source="PAGE" target="INTER">
      <data key="d4">8.0</data>
      <data key="d5">The Page component uses the Inter font style for rendering text</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="LORA">
      <data key="d4">8.0</data>
      <data key="d5">The Page component uses the Lora font style for rendering text</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="SOURCE_SANS_3">
      <data key="d4">8.0</data>
      <data key="d5">The Page component uses the Source Sans 3 font style for rendering text</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="GREAT VIBES">
      <data key="d4">8.0</data>
      <data key="d5">The Page component uses the Great Vibes font style for rendering text</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">Components are utilized within the Page to render various UI elements</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="PAGE" target="DASHBOARD LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">The Dashboard Layout is a specific type of page in the app that organizes content for the dashboard</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a</data>
    </edge>
    <edge source="PAGE" target="SERVER-ONLY">
      <data key="d4">1.0</data>
      <data key="d5">Page is a Server Component that cannot use server-only features like useState, which is required by the Carousel component.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="PAGE" target="ACME-CAROUSEL">
      <data key="d4">6.0</data>
      <data key="d5">Page attempts to use the Carousel component directly, which leads to an error due to its server-side context.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="PAGE" target="DYNAMIC COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">Pages in Next.js can include dynamic components to enhance interactivity and user experience</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="PAGE" target="STATIC COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">Pages can also include static components to display content that does not change</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="PAGE" target="TABLE COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The Page component can include the Table component to display data</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </edge>
    <edge source="PAGE" target="SEARCHPARAMS">
      <data key="d4">5.0</data>
      <data key="d5">The Page component can receive search parameters to control its rendering behavior</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </edge>
    <edge source="PAGE" target="FORM">
      <data key="d4">8.0</data>
      <data key="d5">The Page component contains the Form element, allowing user interactions and submissions</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="PAGE" target="ITEM">
      <data key="d4">7.0</data>
      <data key="d5">Item is a component that can be rendered within a Page in a Next.js application</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="PAGE" target="PRELOAD">
      <data key="d4">7.0</data>
      <data key="d5">Preload is used in the Page component to fetch data before rendering</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="PAGE" target="CHECK IS AVAILABLE">
      <data key="d4">7.0</data>
      <data key="d5">Check Is Available is called within the Page component to determine if an item can be displayed</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="PAGE" target="MODAL">
      <data key="d4">1.0</data>
      <data key="d5">A page can include a modal component to enhance user interaction and display additional information</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="PAGE" target="TEMPLATE">
      <data key="d4">5.0</data>
      <data key="d5">Templates create new instances of pages on navigation, affecting how they are rendered</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="PAGE" target="METADATA API">
      <data key="d4">6.0</data>
      <data key="d5">Pages can utilize the Metadata API to dynamically set metadata for SEO purposes</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="PAGE" target="PAGINATION">
      <data key="d4">1.0</data>
      <data key="d5">Pagination allows users to navigate through multiple pages of content</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="LOGIN" target="USER">
      <data key="d4">25.0</data>
      <data key="d5">The user initiates the login event to authenticate and create a session for accessing the application.
Users must log in to access their accounts and manage their to-do items.
Users participate in the Login event to access their accounts</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a,81518acc3db43af0161d599284ff910e,9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="LOGIN" target="AUTH">
      <data key="d4">7.0</data>
      <data key="d5">The login event is associated with the @auth slot, which handles user authentication processes</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="LOGIN" target="DEFAULT.JS">
      <data key="d4">1.0</data>
      <data key="d5">The login event may trigger the rendering of default.js if no specific login page is found</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="LOGIN" target="MODAL">
      <data key="d4">15.0</data>
      <data key="d5">The modal is used to present the login interface to users without navigating away from the current page
The login event typically triggers the display of a modal for user authentication</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4,a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="LOGIN" target="AUTHUSER">
      <data key="d4">8.0</data>
      <data key="d5">The Login event is directly related to the AuthUser as it is the process through which the user is authenticated</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="LOGIN" target="LOGINCOMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Login component is directly related to the Login event as it facilitates the user authentication process</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="LOGIN" target="AUTHENTICATOR">
      <data key="d4">16.0</data>
      <data key="d5">Login is an event managed by the Authenticator component
The Login event is managed by the Authenticator component to facilitate user sign-in</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a,7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="ROUTER" target="PUSH">
      <data key="d4">7.0</data>
      <data key="d5">The push method is a function of the router that allows navigation to a new page</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="ROUTER" target="REPLACE">
      <data key="d4">7.0</data>
      <data key="d5">The replace method is a function of the router that allows navigation to a new page without adding to the history</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="ROUTER" target="PREFETCH">
      <data key="d4">7.0</data>
      <data key="d5">The prefetch method is a function of the router that allows pre-loading of pages for faster transitions</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="ROUTER" target="BEFOREPOPSTATE">
      <data key="d4">1.0</data>
      <data key="d5">The beforePopState method is a function of the router that allows custom behavior before handling popstate events</data>
      <data key="d6">170893bac86ced48a278abde4d144710</data>
    </edge>
    <edge source="ROUTER" target="HANDLE ROUTE CHANGE">
      <data key="d4">1.0</data>
      <data key="d5">The router is utilized within the handle route change function to manage navigation based on user authentication.</data>
      <data key="d6">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </edge>
    <edge source="ROUTER" target="USESEARCHPARAMS">
      <data key="d4">7.0</data>
      <data key="d5">useSearchParams interacts with the Router to manage query parameters in the URL</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="ROUTER" target="USEPATHNAME">
      <data key="d4">1.0</data>
      <data key="d5">usePathname works with the Router to provide the current URL pathname for components</data>
      <data key="d6">7ad571c896064ee6e36a4acd93898e88</data>
    </edge>
    <edge source="USESTATE" target="POSTS">
      <data key="d4">8.0</data>
      <data key="d5">useState is used to manage the state of posts in a React component, allowing for updates when new data is fetched</data>
      <data key="d6">0bfaadafcf31828f19e4b2657565944a</data>
    </edge>
    <edge source="HISTORY" target="WINDOW">
      <data key="d4">8.0</data>
      <data key="d5">The Window object provides access to the History object, allowing navigation through the browser's history.</data>
      <data key="d6">223233d7a3658c1a7836573abacf9175</data>
    </edge>
    <edge source="USE REPORT WEB VITALS" target="MYAPP">
      <data key="d4">9.0</data>
      <data key="d5">MyApp uses the useReportWebVitals hook to report performance metrics for monitoring web application performance.</data>
      <data key="d6">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </edge>
    <edge source="MYAPP" target="THEME PROVIDER">
      <data key="d4">9.0</data>
      <data key="d5">ThemeProvider applies the defined theme to the MyApp component and all its child components</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="HANDLE ROUTE CHANGE" target="USER">
      <data key="d4">7.0</data>
      <data key="d5">The user is checked within the handle route change function to determine if they should be redirected to the login page.</data>
      <data key="d6">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </edge>
    <edge source="HANDLE ROUTE CHANGE" target="LOADING">
      <data key="d4">6.0</data>
      <data key="d5">The loading state is evaluated in the handle route change function to decide if the user should be redirected.</data>
      <data key="d6">fbb05e41116fc030ff4f57b77c6ebd29</data>
    </edge>
    <edge source="USER" target="SESSION MANAGEMENT LIBRARY">
      <data key="d4">7.0</data>
      <data key="d5">The user utilizes the session management library to securely manage their session data during interactions with the web application.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="DATABASE">
      <data key="d4">8.0</data>
      <data key="d5">The user&#8217;s session data is stored and managed in the database for secure access and manipulation.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="API ROUTES">
      <data key="d4">6.0</data>
      <data key="d5">The user interacts with API routes to perform actions such as logging in and managing their session.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="SESSION ID">
      <data key="d4">7.0</data>
      <data key="d5">The user is associated with a unique session ID that allows the server to identify and manage their session securely.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="OPTIMISTIC CHECKS">
      <data key="d4">6.0</data>
      <data key="d5">The user benefits from optimistic checks that provide quick access to UI elements based on their session data.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="SECURE CHECKS">
      <data key="d4">1.0</data>
      <data key="d5">The user is subject to secure checks for sensitive operations that require verification against the database.</data>
      <data key="d6">9755f3d6b34a8ac25f409b1d0fe38854</data>
    </edge>
    <edge source="USER" target="SESSION">
      <data key="d4">26.0</data>
      <data key="d5">A user is associated with a session during their interaction with a web application, which tracks their authentication status.
Users have sessions that track their interactions with the application
A session is associated with a user, containing their authentication details and role information
Session data is associated with the user, containing their roles and permissions</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2,715bdaaae1cb7470e0e54efac993beb5,7b0e16fa06f15b959c34b3d3401845e8,acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="USER" target="ADMIN">
      <data key="d4">9.0</data>
      <data key="d5">An admin is a specific type of user with additional privileges and responsibilities within a web application.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="USER" target="TEAM">
      <data key="d4">6.0</data>
      <data key="d5">Users can belong to a team, indicating a collaborative relationship within the application</data>
      <data key="d6">0087b03cba217e40a9fa75c83b21f065</data>
    </edge>
    <edge source="USER" target="SIGNUP FORM">
      <data key="d4">8.0</data>
      <data key="d5">The User interacts with the Signup Form to create a new account</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="USER" target="SESSION MANAGEMENT">
      <data key="d4">8.0</data>
      <data key="d5">The User's authenticated state is managed through Session Management after account creation</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="USER" target="DAL">
      <data key="d4">8.0</data>
      <data key="d5">Users interact with the DAL to check their roles and permissions</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="LAYOUTS">
      <data key="d4">7.0</data>
      <data key="d5">Layouts manage the rendering of user interfaces based on user roles and permissions</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="AUTH CHECK">
      <data key="d4">9.0</data>
      <data key="d5">Auth checks are performed to verify user permissions before accessing components</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="SERVER ACTIONS">
      <data key="d4">8.0</data>
      <data key="d5">Server Actions require user authentication and role verification before proceeding</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="ROUTE HANDLERS">
      <data key="d4">8.0</data>
      <data key="d5">Route Handlers check user authentication and authorization for API requests</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="CONTEXT PROVIDERS">
      <data key="d4">6.0</data>
      <data key="d5">Context Providers supply session data to users in the application</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="USER" target="CLIENT">
      <data key="d4">9.0</data>
      <data key="d5">The user interacts with the client, which is the interface through which they access the web application.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="USER" target="REQUEST-RESPONSE LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">The Request-Response Lifecycle is initiated by user actions, which trigger requests to the server.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="USER" target="FORM">
      <data key="d4">16.0</data>
      <data key="d5">The User interacts with the Form to submit their information
Users interact with forms to create new to-do items in the application.</data>
      <data key="d6">81518acc3db43af0161d599284ff910e,9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="USER" target="UPDATE USER">
      <data key="d4">1.0</data>
      <data key="d5">The Update User action processes the data submitted by the User</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="USER" target="MESSAGE INTERACTION">
      <data key="d4">1.0</data>
      <data key="d5">Users interact with messages through various events such as receiving, displaying, and taking action on messages</data>
      <data key="d6">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </edge>
    <edge source="USER" target="AMAZON PINPOINT">
      <data key="d4">8.0</data>
      <data key="d5">The user sends their information to Amazon Pinpoint for tracking and analytics purposes</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="USER" target="SEATTLE">
      <data key="d4">5.0</data>
      <data key="d5">The user's location is specified as Seattle, which is relevant for analytics</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="USER" target="IDENTIFY USER">
      <data key="d4">8.0</data>
      <data key="d5">The Identify User API is used to send user data to Amazon Pinpoint</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="USER" target="USERPROFILE">
      <data key="d4">8.0</data>
      <data key="d5">The user data is structured in a UserProfile format for sending to Amazon Pinpoint</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="USER" target="TODO">
      <data key="d4">16.0</data>
      <data key="d5">Users create and manage to-do items within the application.
Users create and manage to-do items within the application</data>
      <data key="d6">81518acc3db43af0161d599284ff910e,fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="USER" target="POST CONFIRMATION">
      <data key="d4">8.0</data>
      <data key="d5">A user is confirmed when they verify their account, triggering the post confirmation event</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="USER" target="USER PROFILE">
      <data key="d4">7.0</data>
      <data key="d5">When a user is confirmed, a user profile record is automatically created for them</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="USER" target="AMPLIFY AUTH">
      <data key="d4">16.0</data>
      <data key="d5">Users are authenticated and managed through the Amplify Auth service
Users interact with Amplify Auth to manage their authentication and user accounts
Users authenticate through Amplify Auth to access application features</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c,3bedaf75477c620e5f8469d8d96cfae3,aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="CURRENT SONG">
      <data key="d4">8.0</data>
      <data key="d5">The user manages the current song, including its metadata and associated files</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="USER" target="LOCATION">
      <data key="d4">5.0</data>
      <data key="d5">The User model can reference the Location type to indicate the last known location of the user</data>
      <data key="d6">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </edge>
    <edge source="USER" target="POST">
      <data key="d4">1.0</data>
      <data key="d5">The Post model can be associated with a User to indicate who created the post</data>
      <data key="d6">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </edge>
    <edge source="USER" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Users utilize AWS Amplify to build and manage their applications</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="COGNITO IDENTITY PROVIDER">
      <data key="d4">8.0</data>
      <data key="d5">Users authenticate through the Cognito Identity Provider to access their accounts</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="RESET PASSWORD">
      <data key="d4">19.0</data>
      <data key="d5">Users can initiate a reset password event to regain access to their accounts
The user engages in the Reset Password event to change their password after requesting a reset.
Users participate in the Reset Password event to change their passwords</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a,aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="UPDATE PASSWORD">
      <data key="d4">6.0</data>
      <data key="d5">Users can update their password while logged into their account</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="ADMIN ADD USER TO GROUP">
      <data key="d4">5.0</data>
      <data key="d5">Administrators can add users to groups using the Admin Add User to Group event</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="RESET PASSWORD API">
      <data key="d4">6.0</data>
      <data key="d5">Users can call the Reset Password API to initiate the password recovery process</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="CONFIRM RESET PASSWORD API">
      <data key="d4">6.0</data>
      <data key="d5">Users can use the Confirm Reset Password API to finalize their password reset</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="UPDATE PASSWORD API">
      <data key="d4">1.0</data>
      <data key="d5">Users can call the Update Password API to change their password</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="USER" target="COGNITO">
      <data key="d4">9.0</data>
      <data key="d5">Users are managed through Cognito, which handles their authentication and account management</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="USER" target="AUTH EVENTS">
      <data key="d4">6.0</data>
      <data key="d5">Auth events are related to user actions such as signing in and signing out</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="USER" target="DELETE USER API">
      <data key="d4">8.0</data>
      <data key="d5">The Delete User API allows users to delete their accounts, impacting user management</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="USER" target="GDPR">
      <data key="d4">1.0</data>
      <data key="d5">GDPR regulations require applications to provide users with the ability to delete their accounts and associated data</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="USER" target="SIGN IN">
      <data key="d4">23.0</data>
      <data key="d5">The user interacts with the sign in event to authenticate their identity
The user participates in the Sign In event to access their account.
Users participate in the Sign In event to access their accounts</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a,9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="USER" target="MULTI-FACTOR AUTHENTICATION">
      <data key="d4">6.0</data>
      <data key="d5">The user may be required to complete multi-factor authentication to enhance security during sign in</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="USER" target="SIGN-UP">
      <data key="d4">9.0</data>
      <data key="d5">A user participates in the sign-up event to create an account</data>
      <data key="d6">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="USER" target="AUTHENTICATOR">
      <data key="d4">34.0</data>
      <data key="d5">A user interacts with the Authenticator component to sign in or sign out
The user interacts with the Authenticator component to manage their authentication process.
The user interacts with the Authenticator to manage their authentication processes such as signing in and signing up.
Users interact with the Authenticator to sign in or create accounts
The user interacts with the Authenticator component to sign in and manage their account</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80,24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,793ee29fd3ae616dbc82df13c1d4f39b,9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="USER" target="USERNAME">
      <data key="d4">9.0</data>
      <data key="d5">A username is associated with a user account in AWS Amplify</data>
      <data key="d6">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="USER" target="PASSWORD">
      <data key="d4">2.0</data>
      <data key="d5">A password is linked to a user account for authentication purposes in AWS Amplify
The user must enter their password to authenticate during the sign-in process.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="USER" target="COGNITO USER POOL">
      <data key="d4">8.0</data>
      <data key="d5">Users are managed within the Cognito User Pool for authentication and access control</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="USER" target="AUTHENTICATOR APP">
      <data key="d4">9.0</data>
      <data key="d5">Users utilize the Authenticator app to generate TOTP codes for authentication</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="USER" target="MFA">
      <data key="d4">8.0</data>
      <data key="d5">Users can enable Multi-Factor Authentication (MFA) to enhance their account security</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="USER" target="SMS">
      <data key="d4">7.0</data>
      <data key="d5">Users can receive SMS codes as part of the MFA process for account verification</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="USER" target="CODE">
      <data key="d4">9.0</data>
      <data key="d5">Users must enter a verification code to complete the authentication process</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="USER" target="AMPLIFY ADMIN">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Admin is a specific user role that interacts with AWS services</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="USER" target="CLOUD SANDBOX">
      <data key="d4">6.0</data>
      <data key="d5">Users can test their applications in the cloud sandbox before deploying to production
Users can sign up and test their applications in the cloud sandbox environment</data>
      <data key="d6">7040175c91fe86a908046a9b485b0410,fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="USER" target="AUTHENTICATION TOKEN">
      <data key="d4">8.0</data>
      <data key="d5">The authentication token is used by the user to access the application securely</data>
      <data key="d6">7040175c91fe86a908046a9b485b0410</data>
    </edge>
    <edge source="USER" target="USERPOOL">
      <data key="d4">1.0</data>
      <data key="d5">UserPool manages the user accounts and authentication processes for users</data>
      <data key="d6">7040175c91fe86a908046a9b485b0410</data>
    </edge>
    <edge source="USER" target="IDENTITY ID">
      <data key="d4">7.0</data>
      <data key="d5">The Identity ID is associated with a user in AWS Cognito, allowing for personalized data management</data>
      <data key="d6">32ab448d1972668cba4e2c467ff116a8</data>
    </edge>
    <edge source="USER" target="FACELIVENESSDETECTOR">
      <data key="d4">1.0</data>
      <data key="d5">Users interact with the FaceLivenessDetector for authentication purposes</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="USER" target="DELETE USER">
      <data key="d4">9.0</data>
      <data key="d5">The User initiates the Delete User event to permanently remove their account from the application</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="USER" target="APP">
      <data key="d4">8.0</data>
      <data key="d5">The user interacts with the App component to authenticate and access the application features</data>
      <data key="d6">abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="USER" target="HOME">
      <data key="d4">7.0</data>
      <data key="d5">The Home component displays a personalized welcome message to the authenticated user</data>
      <data key="d6">abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="USER" target="SIGN OUT">
      <data key="d4">8.0</data>
      <data key="d5">The user can trigger the Sign Out event to log out of the application
The user participates in the Sign Out event to log out of their account.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="USER" target="SIGN UP">
      <data key="d4">15.0</data>
      <data key="d5">The user participates in the Sign Up event to create a new account.
Users participate in the Sign Up event to create their accounts in the application</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="USER" target="FORGOT PASSWORD">
      <data key="d4">13.0</data>
      <data key="d5">The user may initiate the Forgot Password event if they cannot remember their password.
Users may initiate the Forgot Password event to regain access to their accounts</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf,353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="USER" target="TERMS AND CONDITIONS">
      <data key="d4">7.0</data>
      <data key="d5">Users must agree to the Terms and Conditions during the Sign Up process</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="USER" target="SIGN UP PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Users interact with the Sign Up Page to create their accounts</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="USER" target="REGISTER">
      <data key="d4">8.0</data>
      <data key="d5">Users participate in the Register event to create new accounts</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="USER" target="DARK MODE">
      <data key="d4">1.0</data>
      <data key="d5">The user can customize the application to use dark mode for a better visual experience</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </edge>
    <edge source="USER TIMING API" target="REPORT WEB VITALS">
      <data key="d4">8.0</data>
      <data key="d5">The User Timing API is utilized by Report Web Vitals to measure and report performance metrics</data>
      <data key="d6">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </edge>
    <edge source="IP" target="X-FORWARDED-FOR">
      <data key="d4">5.0</data>
      <data key="d5">The IP function can utilize the x-forwarded-for header to determine the client's original IP address</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6</data>
    </edge>
    <edge source="IP" target="X-REAL-IP">
      <data key="d4">1.0</data>
      <data key="d5">The IP function can utilize the x-real-ip header to determine the client's real IP address</data>
      <data key="d6">102262d1b2a41d767a543121d96412c6</data>
    </edge>
    <edge source="REPO" target="STARS">
      <data key="d4">8.0</data>
      <data key="d5">The number of stars is a key attribute of a GitHub repository, indicating its popularity.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248</data>
    </edge>
    <edge source="REPO" target="API.GITHUB">
      <data key="d4">1.0</data>
      <data key="d5">API.GITHUB is used to access information about repositories on GitHub, including their star counts.</data>
      <data key="d6">57aa8258500bb7c522d2a394931d9248</data>
    </edge>
    <edge source="DATA" target="AMPLIFY">
      <data key="d4">17.0</data>
      <data key="d5">AWS Amplify provides data management capabilities through its Data resource, allowing for seamless data storage and retrieval.
Data management is a core feature of Amplify, allowing developers to handle various data types and operations</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc,c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="DATA" target="AMPLIFY BACKEND">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Backend works with Data to manage application data and storage services.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="DATA" target="AWS AMPLIFY">
      <data key="d4">24.0</data>
      <data key="d5">Data is a resource of AWS Amplify that facilitates data management and storage solutions
AWS Amplify provides Data as a resource for managing application data through APIs
AWS Amplify connects with the Data resource for managing application data effectively.</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef,502c34bc5ff7e00594c0a0d9df58834d,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="DATA" target="DYNAMODB">
      <data key="d4">9.0</data>
      <data key="d5">DynamoDB is often used as a data storage solution within AWS Amplify applications</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="DATA" target="FIREHOSE">
      <data key="d4">1.0</data>
      <data key="d5">Data is sent to the Firehose for processing and storage</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="DATA" target="SCHEMA">
      <data key="d4">8.0</data>
      <data key="d5">Data is structured according to the defined schema, which dictates how it is organized and accessed
Data module utilizes the schema to define data interactions</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e,1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="FALLBACK" target="GETINITIALPROPS">
      <data key="d4">1.0</data>
      <data key="d5">getInitialProps can be used to manage loading states during page transitions</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="FALLBACK" target="E-COMMERCE SITE">
      <data key="d4">5.0</data>
      <data key="d5">Fallback can be beneficial for e-commerce sites with a large number of product pages</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="FALLBACK" target="PRODUCT PAGES">
      <data key="d4">1.0</data>
      <data key="d5">Fallback can be used to manage loading states for product pages that are not yet generated</data>
      <data key="d6">ccf507e98d23ff18f3ca206f0a8f29a2</data>
    </edge>
    <edge source="GETINITIALPROPS" target="APP DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">The app directory simplifies data fetching, moving away from getInitialProps</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="INCREMENTAL STATIC REGENERATION" target="CACHE">
      <data key="d4">1.0</data>
      <data key="d5">Incremental Static Regeneration utilizes caching to serve pre-rendered pages quickly while allowing for updates in the background</data>
      <data key="d6">ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="INCREMENTAL STATIC REGENERATION" target="CACHE FUNCTION">
      <data key="d4">1.0</data>
      <data key="d5">The cache function is used to optimize data fetching in the context of incremental static regeneration</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="HOMEPAGE" target="VITEST">
      <data key="d4">1.0</data>
      <data key="d5">The homepage can be tested using Vitest to ensure it renders correctly</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="HOMEPAGE" target="PREVIEW MODE">
      <data key="d4">1.0</data>
      <data key="d5">The homepage can utilize Preview Mode to display draft content from a headless CMS</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="HOMEPAGE" target="BUTTON">
      <data key="d4">1.0</data>
      <data key="d5">The button is a component on the homepage that users can interact with.</data>
      <data key="d6">21bbed2998c7a9b202d76d56c78cb512</data>
    </edge>
    <edge source="HOMEPAGE" target="APP">
      <data key="d4">9.0</data>
      <data key="d5">The homepage is a part of the Next.js application, serving as the main entry point for users.</data>
      <data key="d6">21bbed2998c7a9b202d76d56c78cb512</data>
    </edge>
    <edge source="HOMEPAGE" target="BREADCRUMBS">
      <data key="d4">1.0</data>
      <data key="d5">Breadcrumbs typically include links to the homepage as part of their navigation structure</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="USER-GENERATED CONTENT" target="404">
      <data key="d4">5.0</data>
      <data key="d5">User-generated content can lead to a 404 error if the content is removed by its author</data>
      <data key="d6">3c09a802c38a10e785a119f2ba114c73</data>
    </edge>
    <edge source="404" target="DEFAULT.JS">
      <data key="d4">7.0</data>
      <data key="d5">Default.js is rendered when a 404 error occurs due to a missing page</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="NAVIGATION" target="SETTINGS">
      <data key="d4">6.0</data>
      <data key="d5">The settings page is accessed through the navigation system of the application, allowing users to reach it easily</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="NAVIGATION" target="ROLES">
      <data key="d4">5.0</data>
      <data key="d5">User roles can affect navigation options, determining which pages or features are accessible to different users</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="CLIENT-SIDE NAVIGATION" target="FORM">
      <data key="d4">7.0</data>
      <data key="d5">The &lt;Form&gt; component enables client-side navigation, enhancing user experience by avoiding full page reloads</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="BROWSER" target="AVIF">
      <data key="d4">6.0</data>
      <data key="d5">AVIF is supported by modern web browsers, enhancing image loading capabilities on the web.</data>
      <data key="d6">2238ba4c005a726e011e67cd17d3a576</data>
    </edge>
    <edge source="BROWSER" target="IMAGE LOADING">
      <data key="d4">8.0</data>
      <data key="d5">The browser is responsible for managing the image loading process on a webpage, determining which images to download based on specified properties</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="OBJECT-FIT" target="OBJECT-POSITION">
      <data key="d4">7.0</data>
      <data key="d5">Object-fit and object-position are both CSS properties that work together to control the display of images and videos in a container</data>
      <data key="d6">7b971bc32d696dda8aea178d02a73fea</data>
    </edge>
    <edge source="OBJECT-FIT" target="NEXT IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">Next Image can use the object-fit property to control how images are displayed within their containers</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="WEB.DEV" target="MDN">
      <data key="d4">1.0</data>
      <data key="d5">Both web.dev and MDN provide documentation and resources for web developers, including image optimization techniques</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="SIZES" target="FILL">
      <data key="d4">1.0</data>
      <data key="d5">The sizes property influences how the fill property behaves by determining the appropriate image size to download based on the viewport</data>
      <data key="d6">7b971bc32d696dda8aea178d02a73fea</data>
    </edge>
    <edge source="SIZES" target="SELECTFIELD">
      <data key="d4">6.0</data>
      <data key="d5">Sizes are options that can be set for the SelectField component</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="CONFIGURATION OPTIONS" target="REMOTE PATTERNS">
      <data key="d4">6.0</data>
      <data key="d5">Configuration options include the use of remote patterns to secure external image sources</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="CONFIGURATION OPTIONS" target="DOMAINS">
      <data key="d4">1.0</data>
      <data key="d5">Configuration options also include domains for specifying allowed hostnames for images, though this is deprecated</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="REMOTE PATTERNS" target="NEXT/IMAGE">
      <data key="d4">6.0</data>
      <data key="d5">The next/image component requires remote patterns to be configured for using external image URLs.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="REMOTE PATTERNS" target="ACME">
      <data key="d4">1.0</data>
      <data key="d5">Acme's assets can be configured in remote patterns for image optimization in Next.js</data>
      <data key="d6">affc1268c54094ecde29441589759673</data>
    </edge>
    <edge source="LAZY LOADING" target="EAGER LOADING">
      <data key="d4">6.0</data>
      <data key="d5">Lazy loading and eager loading are two different strategies for managing image loading behavior in web applications</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="LAZY LOADING" target="DOM ELEMENT">
      <data key="d4">1.0</data>
      <data key="d5">Lazy loading requires a DOM element to function as the reference point for loading images</data>
      <data key="d6">ccacadee21d69e15eb428a9a9d8de65f</data>
    </edge>
    <edge source="BLUR DATA URL" target="LOAD">
      <data key="d4">8.0</data>
      <data key="d5">Blur Data URL is used as a placeholder during the load event of an image</data>
      <data key="d6">4c49dc5beda0203ac9ac135243ec127e</data>
    </edge>
    <edge source="ACME" target="SITEMAP">
      <data key="d4">8.0</data>
      <data key="d5">Acme's website can utilize a sitemap for better search engine indexing
ACME has created a sitemap to help search engines understand its website structure</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568,85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="ACME" target="ABOUT PAGE">
      <data key="d4">8.0</data>
      <data key="d5">ACME has an About Page that provides details about the company</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="ACME" target="SITEMAP.XML">
      <data key="d4">9.0</data>
      <data key="d5">ACME's Sitemap.xml file is essential for search engines to index its web pages</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="ACME" target="IMAGE SITEMAPS">
      <data key="d4">6.0</data>
      <data key="d5">ACME utilizes Image Sitemaps to enhance the visibility of images on its website</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="ACME" target="LOCALIZED SITEMAP">
      <data key="d4">7.0</data>
      <data key="d5">ACME's Localized Sitemap helps users find content in their preferred language</data>
      <data key="d6">85fc82d441624fc7d477f417afcce94e</data>
    </edge>
    <edge source="ACME" target="OPENGRAPH-IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">Acme utilizes the opengraph-image route handler to generate images for social media sharing</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115</data>
    </edge>
    <edge source="ACME" target="TWITTER-IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">Acme utilizes the twitter-image route handler to generate images for sharing on Twitter</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115</data>
    </edge>
    <edge source="ACME" target="IMAGE RESPONSE">
      <data key="d4">8.0</data>
      <data key="d5">Acme uses the Image Response API to create images based on dynamic content</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115</data>
    </edge>
    <edge source="ACME" target="INTER SEMI BOLD">
      <data key="d4">6.0</data>
      <data key="d5">Acme employs the Inter Semi Bold font in the image generation process</data>
      <data key="d6">63ad6476d7970e4ee569325f59f21115</data>
    </edge>
    <edge source="ACME" target="ROBOTS.TXT">
      <data key="d4">5.0</data>
      <data key="d5">Acme generates a robots.txt file to manage search engine crawling on its website.</data>
      <data key="d6">5791705a1f965d3a768f111e7fdcade1</data>
    </edge>
    <edge source="ACME" target="LOGO.PNG">
      <data key="d4">1.0</data>
      <data key="d5">Acme uses logo.png as part of its branding in web applications.</data>
      <data key="d6">5791705a1f965d3a768f111e7fdcade1</data>
    </edge>
    <edge source="IMAGE OPTIMIZATION API" target="CACHING BEHAVIOR">
      <data key="d4">7.0</data>
      <data key="d5">Caching behavior is a critical aspect of the Image Optimization API, affecting how images are served and stored</data>
      <data key="d6">5eccc9b6c90fe181c8a1389dcb99435b</data>
    </edge>
    <edge source="IMAGE OPTIMIZATION API" target="MINIMUMCACHETTL">
      <data key="d4">7.0</data>
      <data key="d5">MinimumCacheTTL is used to define the caching duration for images optimized by the Image Optimization API</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="IMAGE OPTIMIZATION API" target="CONTENTDISPOSITIONTYPE">
      <data key="d4">7.0</data>
      <data key="d5">ContentDispositionType is used to set the Content-Disposition header for images served through the Image Optimization API</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="IMAGE OPTIMIZATION API" target="CACHE">
      <data key="d4">1.0</data>
      <data key="d5">The Image Optimization API utilizes caching to serve optimized images quickly</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="DEVICE SIZES" target="IMAGE SIZES">
      <data key="d4">6.0</data>
      <data key="d5">Device sizes and image sizes are both configurations used in Next.js to optimize image delivery based on user devices.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="SVG" target="CONTENT SECURITY POLICY">
      <data key="d4">6.0</data>
      <data key="d5">SVG images can pose security risks, hence the need for a Content Security Policy when serving them</data>
      <data key="d6">179a1a7e8e9c1777096b12c6bb6ff93c</data>
    </edge>
    <edge source="SVG" target="ICON">
      <data key="d4">2.0</data>
      <data key="d5">Icons in Amplify UI are displayed using SVG format, allowing for scalable and high-quality graphics
SVG is often used to create icons due to its scalability and quality, making it suitable for various applications</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7,6634963e5bc3eae8755d15393e4c9b71</data>
    </edge>
    <edge source="CONTENT SECURITY POLICY" target="CACHE-CONTROL HEADER">
      <data key="d4">1.0</data>
      <data key="d5">Cache-Control headers must be configured alongside Content Security Policy to ensure secure and efficient resource loading</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="CONTENT SECURITY POLICY" target="SVG IMAGES">
      <data key="d4">1.0</data>
      <data key="d5">Content Security Policy is recommended when serving SVG images to mitigate security risks</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="STATIC IMAGE IMPORT" target="SVG IMAGES">
      <data key="d4">4.0</data>
      <data key="d5">Static Image Import can be used for SVG images, which are a common format in web development</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="NEXT" target="APP">
      <data key="d4">8.0</data>
      <data key="d5">Next.js is the framework used to build the application structure referred to as App</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="NEXT" target="USESEARCHPARAMS">
      <data key="d4">6.0</data>
      <data key="d5">Next.js provides the useSearchParams hook as part of its routing capabilities</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="NEXT" target="CLIENT COMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">Client Components are a feature of Next.js that enhance the functionality of the framework</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="NEXT" target="CONFIGURATION">
      <data key="d4">1.0</data>
      <data key="d5">Configuration settings in next.config.js are essential for customizing Next.js applications</data>
      <data key="d6">20f099859bc84200865a67d0cbf4c8bb</data>
    </edge>
    <edge source="APP" target="ROOTLAYOUT">
      <data key="d4">8.0</data>
      <data key="d5">RootLayout defines the structure for the App component, including the HTML document's head and body sections</data>
      <data key="d6">9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="APP" target="DYNAMIC IMPORT">
      <data key="d4">7.0</data>
      <data key="d5">The App component utilizes dynamic imports to load components asynchronously, enhancing performance</data>
      <data key="d6">c1845aec41d031b5a72f6f472ab4a5f2</data>
    </edge>
    <edge source="APP" target="BUTTON">
      <data key="d4">6.0</data>
      <data key="d5">The App component can include the Button component, applying global styles to it.
The App uses Button components to trigger the display of messages</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93,3a82472230692a8c3ac8444f7738b625</data>
    </edge>
    <edge source="APP" target="GLOBAL STYLES">
      <data key="d4">6.0</data>
      <data key="d5">The App component imports global styles to ensure they are applied across all pages in the Next.js application.</data>
      <data key="d6">3a82472230692a8c3ac8444f7738b625</data>
    </edge>
    <edge source="APP" target="RUNTIME">
      <data key="d4">9.0</data>
      <data key="d5">The runtime of the app is when it is actively processing requests and serving content to users.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="APP" target="NEXT.FONT">
      <data key="d4">7.0</data>
      <data key="d5">next/font is a module used within the App to manage font styles</data>
      <data key="d6">b6c19fc60714c90b16c67bd7df9573f9</data>
    </edge>
    <edge source="APP" target="LAYOUT.JS">
      <data key="d4">6.0</data>
      <data key="d5">The app structure includes layout.js which defines the layout for the application</data>
      <data key="d6">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="APP" target="ROBOTO">
      <data key="d4">7.0</data>
      <data key="d5">Roboto is used in the app for styling text</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="INTER">
      <data key="d4">7.0</data>
      <data key="d5">Inter is used in the app for styling text</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="NEXT FONT">
      <data key="d4">9.0</data>
      <data key="d5">Next Font is the library that facilitates the use of fonts in the app</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="GLOBAL EXCHANGE">
      <data key="d4">6.0</data>
      <data key="d5">The app utilizes the Global Exchange platform for displaying fonts</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="FONT API REFERENCE">
      <data key="d4">1.0</data>
      <data key="d5">The app refers to the Font API Reference for guidelines on font usage</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="TYPED SCRIPT">
      <data key="d4">7.0</data>
      <data key="d5">TypeScript is used in the app for building and structuring the code</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="CSS VARIABLE">
      <data key="d4">1.0</data>
      <data key="d5">CSS Variables are used in the app for styling and theming</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="APP" target="ROOT LAYOUT">
      <data key="d4">9.0</data>
      <data key="d5">The Root Layout is a fundamental component of the app that wraps all pages and applies global styles</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a</data>
    </edge>
    <edge source="APP" target="SIGNUP">
      <data key="d4">1.0</data>
      <data key="d5">The Signup event is part of the app's user registration process</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="APP" target="AMPLIFY">
      <data key="d4">17.0</data>
      <data key="d5">AWS Amplify provides tools and services to build and deploy applications efficiently
The app is built using Amplify, which provides the necessary tools and services for development.
The App utilizes Amplify's services to implement in-app messaging and storage functionalities</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93,2599c1b415576410d2f9b23f4299c4cb,56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="APP" target="TANSTACK QUERY">
      <data key="d4">16.0</data>
      <data key="d5">The App component uses TanStack Query to manage data fetching and state management for real estate properties
The App component utilizes TanStack Query for managing server state and data fetching</data>
      <data key="d6">453096a495a2eae0cd2491664604b080,e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="APP" target="AMPLIFY DATA API">
      <data key="d4">8.0</data>
      <data key="d5">The App component interacts with the Amplify Data API to perform CRUD operations on real estate properties</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="APP" target="REAL ESTATE PROPERTIES">
      <data key="d4">8.0</data>
      <data key="d5">The App component displays and manages real estate properties</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="APP" target="USEQUERY HOOK">
      <data key="d4">8.0</data>
      <data key="d5">The App component utilizes the useQuery hook to fetch real estate properties from the Amplify Data API</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="APP" target="USEMUTATION HOOK">
      <data key="d4">8.0</data>
      <data key="d5">The App component uses the useMutation hook to handle optimistic updates for real estate properties</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="APP" target="REAL ESTATE PROPERTY">
      <data key="d4">16.0</data>
      <data key="d5">The App component is responsible for managing and updating real estate property records through queries and mutations.
The App manages real estate properties through various functionalities like listing, creating, and updating.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7,b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="APP" target="QUERY CLIENT">
      <data key="d4">16.0</data>
      <data key="d5">The App component utilizes the Query Client to manage data fetching and caching for real estate properties.
The App uses the Query Client to handle data fetching and state management for real estate properties.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7,b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="APP" target="SCHEMA">
      <data key="d4">7.0</data>
      <data key="d5">The App component interacts with the Schema to define and manage the structure of real estate property data.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7</data>
    </edge>
    <edge source="APP" target="AWS AMPLIFY">
      <data key="d4">24.0</data>
      <data key="d5">The App component is configured to use AWS Amplify for backend services
The App is built using AWS Amplify, which provides backend services for the application
Apps built using AWS Amplify can leverage its features for backend and frontend development
The App is built using AWS Amplify services for backend and frontend functionalities</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93,290d8b37bd253372b8a78b79be1eca98,453096a495a2eae0cd2491664604b080,d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="APP" target="GLOBAL LOADING INDICATOR">
      <data key="d4">14.0</data>
      <data key="d5">The Global Loading Indicator is a component within the App that shows loading states during data fetching
The App component utilizes the Global Loading Indicator to show loading status during data fetching.
The Global Loading Indicator is used within the App to inform users about loading states during data operations.</data>
      <data key="d6">453096a495a2eae0cd2491664604b080,b79fdaa9cac2c2fbf9ccc392ed341f6e,e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="APP" target="REAL ESTATE PROPERTY DETAILS">
      <data key="d4">7.0</data>
      <data key="d5">The App component manages Real Estate Property Details through various operations and hooks</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="APP" target="MUTATION">
      <data key="d4">8.0</data>
      <data key="d5">The App component utilizes mutations to modify real estate property data</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="APP" target="CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">The App interacts with the Client to perform API requests for real estate properties.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="APP" target="USE QUERY">
      <data key="d4">8.0</data>
      <data key="d5">The App uses the Use Query hook to fetch real estate properties data from the API.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="APP" target="USE MUTATION">
      <data key="d4">8.0</data>
      <data key="d5">The App uses the Use Mutation hook to handle create, update, and delete operations for real estate properties.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="APP" target="AMPLIFY CONSOLE">
      <data key="d4">7.0</data>
      <data key="d5">The App utilizes the Amplify Console to manage its backend data and user interface components.</data>
      <data key="d6">e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="APP" target="CURRENT PHOTO ALBUM">
      <data key="d4">1.0</data>
      <data key="d5">The Current Photo Album is part of the App built using AWS Amplify</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="APP" target="CONVERTTEXTTOSPEECH">
      <data key="d4">8.0</data>
      <data key="d5">The App component invokes the ConvertTextToSpeech function to synthesize text into audio output</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="APP" target="MAIN">
      <data key="d4">1.0</data>
      <data key="d5">The Main component initializes the App and loads the necessary configurations for functionality</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="APP" target="POLLY">
      <data key="d4">8.0</data>
      <data key="d5">The App component utilizes Amazon Polly to convert text into speech audio output</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="APP" target="AUDIO BUFFER">
      <data key="d4">1.0</data>
      <data key="d5">The App component manages the Audio Buffer for playback of the generated speech</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="APP" target="TODO LIST">
      <data key="d4">9.0</data>
      <data key="d5">The app includes a to-do list feature for task management.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="APP" target="AUTHENTICATOR UI">
      <data key="d4">8.0</data>
      <data key="d5">The app integrates the Authenticator UI for managing user authentication.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="APP" target="DELETED FUNCTIONALITY">
      <data key="d4">8.0</data>
      <data key="d5">The app implements delete functionality to allow users to manage their to-do items effectively.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="APP" target="LOCAL DEVELOPMENT ENVIRONMENT">
      <data key="d4">7.0</data>
      <data key="d5">The app is developed and tested in a local development environment before being deployed to the cloud.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="APP" target="CLOUD SANDBOX">
      <data key="d4">9.0</data>
      <data key="d5">The app utilizes a cloud sandbox for testing backend changes without impacting the live application.
The cloud sandbox provides a separate backend for the application to allow for isolated development</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb,3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="APP" target="PER-USER AUTHORIZATION">
      <data key="d4">1.0</data>
      <data key="d5">The app implements per-user authorization to ensure data privacy and security for individual users.</data>
      <data key="d6">2599c1b415576410d2f9b23f4299c4cb</data>
    </edge>
    <edge source="APP" target="AUTHENTICATOR">
      <data key="d4">32.0</data>
      <data key="d5">The application integrates the Authenticator component for user authentication
The App component is wrapped with the Authenticator.Provider to manage authentication states
The Authenticator is used within the App component to handle user authentication
The App uses the Authenticator component to manage user sign-in and sign-up processes.</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6,73680e5bf87090f014e7bd9d2b8e582a,abdfd668c78186087ff9da2146979893,cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="APP" target="SIGN OUT">
      <data key="d4">7.0</data>
      <data key="d5">The sign out action is part of the user authentication process within the application</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="APP" target="AUTH BACKEND">
      <data key="d4">1.0</data>
      <data key="d5">The auth backend provides authentication services for the application</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="APP" target="STORAGE MANAGER">
      <data key="d4">8.0</data>
      <data key="d5">The App integrates the Storage Manager to provide file upload functionality within the user interface.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="APP" target="DICTIONARY">
      <data key="d4">6.0</data>
      <data key="d5">The App uses the dictionary to provide localized text for different languages in the user interface.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="APP" target="TOGGLE BUTTON GROUP">
      <data key="d4">7.0</data>
      <data key="d5">The App includes a Toggle Button Group to allow users to select their preferred language.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="APP" target="STORAGE IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">The App includes the Storage Image component to load images from Amplify Storage</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="CUSTOM BANNER MESSAGE">
      <data key="d4">6.0</data>
      <data key="d5">The App displays a Custom Banner Message using Amplify's in-app messaging</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="CUSTOM MODAL MESSAGE">
      <data key="d4">6.0</data>
      <data key="d5">The App displays a Custom Modal Message using Amplify's in-app messaging</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="IN-APP MESSAGING">
      <data key="d4">7.0</data>
      <data key="d5">The App integrates In-App Messaging to display messages to users</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="STYLES PROP">
      <data key="d4">6.0</data>
      <data key="d5">The App utilizes Styles Prop to customize the appearance of UI components</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">The App uses a configuration object to initialize AWS Amplify services</data>
      <data key="d6">1d0207e2e11503628d08eefd24849d93</data>
    </edge>
    <edge source="APP" target="USEAUTHENTICATOR">
      <data key="d4">8.0</data>
      <data key="d5">The App component utilizes the useAuthenticator hook to access user authentication context</data>
      <data key="d6">abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="APP" target="VIEW">
      <data key="d4">1.0</data>
      <data key="d5">The View component is used within the App to display the main content of the application</data>
      <data key="d6">abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="APP" target="THEME PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">The ThemeProvider wraps the App component to apply custom styles</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a</data>
    </edge>
    <edge source="APP" target="FACE LIVENESS DETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">The App component integrates the Face Liveness Detector to provide user authentication features</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="APP" target="AMPLIFY UI">
      <data key="d4">9.0</data>
      <data key="d5">The App component serves as the main entry point for the Amplify UI application</data>
      <data key="d6">818fcb4044a83bd6eead8a24e57319ad</data>
    </edge>
    <edge source="CSS" target="INDEX.HTML">
      <data key="d4">8.0</data>
      <data key="d5">CSS is used to style the index.html file, indicating a direct relationship in the context of web development</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="CSS" target="STYLE PROPS">
      <data key="d4">7.0</data>
      <data key="d5">Style props allow users to apply CSS properties directly to components for styling</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="CSS" target="AMPLIFY UI">
      <data key="d4">35.0</data>
      <data key="d5">CSS is used to style components in Amplify UI
Amplify UI components can be styled using CSS, allowing for customization beyond the default theme
CSS is used to style the components provided by Amplify UI, ensuring they are visually appealing
CSS is used to style the components in Amplify UI, ensuring a visually appealing interface
Amplify UI uses CSS for styling its components, allowing for customization and theming</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d,6634963e5bc3eae8755d15393e4c9b71,818fcb4044a83bd6eead8a24e57319ad,d26ffe8f4908cd05e7882cd4223c3490,f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="CSS" target="RADIOGROUPFIELD">
      <data key="d4">7.0</data>
      <data key="d5">RadioGroupField uses CSS for styling and presentation</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="CSS" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">CSS is used to style AWS Amplify components, enhancing their visual presentation</data>
      <data key="d6">e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="BACKGROUND IMAGE" target="IMAGE-SET">
      <data key="d4">1.0</data>
      <data key="d5">Background Image can utilize the image-set CSS function for optimization</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="MEDIA QUERY" target="DARK MODE">
      <data key="d4">6.0</data>
      <data key="d5">Media queries are used to detect dark mode preferences in user settings</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="MEDIA QUERY" target="LIGHT MODE">
      <data key="d4">6.0</data>
      <data key="d5">Media queries are used to detect light mode preferences in user settings</data>
      <data key="d6">f4e8cc1d9894ee07a7020eb056ec9d8a</data>
    </edge>
    <edge source="DARK MODE" target="AMPLIFY UI">
      <data key="d4">1.0</data>
      <data key="d5">Dark Mode is a feature provided by Amplify UI to allow users to switch color themes</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356</data>
    </edge>
    <edge source="DARK MODE" target="THEME PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">Dark Mode is a feature that can be managed through the Theme Provider in Amplify UI
The ThemeProvider accepts a colorMode prop which can be set to dark mode</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="DARK MODE" target="MY THEME">
      <data key="d4">8.0</data>
      <data key="d5">Dark Mode is an override feature included in My Theme to enhance user experience in low-light environments</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="NEXT/IMAGE" target="ALT PROP">
      <data key="d4">8.0</data>
      <data key="d5">The alt prop is a mandatory attribute for the next/image component, ensuring that all images have alternative text for accessibility.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="NEXT/IMAGE" target="LOADER PROP">
      <data key="d4">7.0</data>
      <data key="d5">The loader prop in the next/image component allows customization of how image URLs are resolved, enhancing flexibility in image handling.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="NEXT/IMAGE" target="WIDTH PROP">
      <data key="d4">8.0</data>
      <data key="d5">The width prop is essential for the next/image component to determine the rendered size of the image.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="NEXT/IMAGE" target="HEIGHT PROP">
      <data key="d4">1.0</data>
      <data key="d5">The height prop is essential for the next/image component to determine the rendered size of the image.</data>
      <data key="d6">ca4cf87ea29b0d3f9a148fa9aeabce4b</data>
    </edge>
    <edge source="PLACEHOLDER" target="SELECTFIELD">
      <data key="d4">7.0</data>
      <data key="d5">Placeholder text guides users on what to select when the SelectField is empty</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="PLACEHOLDER" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">The Placeholder component is also part of the AWS Amplify UI library, used for loading states in applications.</data>
      <data key="d6">a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="PLACEHOLDER" target="AMPLIFY UI">
      <data key="d4">16.0</data>
      <data key="d5">Placeholder is a component provided by Amplify UI for React to enhance user experience during loading times
The Placeholder component is part of Amplify UI, used while content loads asynchronously</data>
      <data key="d6">51eb03a68a36f040cb248c3d2430e43a,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="IMAGE LOADING" target="PERFORMANCE METRICS">
      <data key="d4">9.0</data>
      <data key="d5">The efficiency of image loading directly impacts performance metrics, influencing user experience and page speed</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="IMAGE LOADING" target="VIEWPORT">
      <data key="d4">1.0</data>
      <data key="d5">The size of the viewport affects how images are loaded and displayed, as it determines which sizes are appropriate for the images</data>
      <data key="d6">8eb965e4d19780deabbcf7d96ed2a45f</data>
    </edge>
    <edge source="VIEWPORT" target="CHARACTER ENCODING">
      <data key="d4">1.0</data>
      <data key="d5">Character encoding and viewport settings are both essential for rendering web pages correctly across different devices</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="CACHE BEHAVIOR" target="OUTPUT">
      <data key="d4">6.0</data>
      <data key="d5">The output of the image optimization process is influenced by the caching behavior defined for the images.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="CACHE BEHAVIOR" target="CACHE CONTROL HEADER">
      <data key="d4">6.0</data>
      <data key="d5">Cache Control Header settings affect the caching behavior of optimized images.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="CACHE BEHAVIOR" target="MINIMUM CACHE TTL">
      <data key="d4">1.0</data>
      <data key="d5">Minimum Cache TTL is a specific setting that influences the overall caching behavior for optimized images.</data>
      <data key="d6">e90648c68d5bac977f4df1b052ea3636</data>
    </edge>
    <edge source="FONT MODULE" target="CACHE-CONTROL HEADER">
      <data key="d4">5.0</data>
      <data key="d5">The Font Module in Next.js may interact with Cache-Control headers to optimize font loading</data>
      <data key="d6">db79d898afcf0c4fadf71858f0b3e795</data>
    </edge>
    <edge source="CACHE-CONTROL HEADER" target="MAX AGE">
      <data key="d4">7.0</data>
      <data key="d5">The Cache-Control header works in conjunction with Max Age to define caching policies for images</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="INTER" target="ROBOTO MONO">
      <data key="d4">5.0</data>
      <data key="d5">Roboto Mono can be used alongside Inter to provide a diverse typography experience in web applications</data>
      <data key="d6">7bc622b9dda4deed82c3382772daca19</data>
    </edge>
    <edge source="INTER" target="NEXT FONT">
      <data key="d4">8.0</data>
      <data key="d5">Inter is another font that can be imported and used through the Next Font library in web applications</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="FONT WEIGHT" target="VARIABLE FONT">
      <data key="d4">8.0</data>
      <data key="d5">Variable fonts allow for a range of font weights to be specified, enhancing typographic flexibility.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="FONT STYLE" target="VARIABLE FONT">
      <data key="d4">8.0</data>
      <data key="d5">Variable fonts can include multiple styles, such as italic and normal, within a single font file.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="FONT DISPLAY" target="VARIABLE FONT">
      <data key="d4">5.0</data>
      <data key="d5">Font display settings can affect how variable fonts are rendered while loading on a webpage.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="FALLBACK FONT" target="VARIABLE FONT">
      <data key="d4">6.0</data>
      <data key="d5">Fallback fonts are used when a variable font cannot be loaded, ensuring text is still displayed.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="CSS VARIABLE" target="VARIABLE FONT">
      <data key="d4">1.0</data>
      <data key="d5">CSS variables can be used to define and manage font properties dynamically in web design.</data>
      <data key="d6">f29e8a7f61e2c8934f86db0f78127d28</data>
    </edge>
    <edge source="CSS VARIABLE" target="TAILWIND CSS">
      <data key="d4">6.0</data>
      <data key="d5">CSS Variables can be integrated with Tailwind CSS to create dynamic and responsive styles in web applications</data>
      <data key="d6">7bc622b9dda4deed82c3382772daca19</data>
    </edge>
    <edge source="VERSION 12" target="VERSION 13">
      <data key="d4">1.0</data>
      <data key="d5">Version 13 builds upon the features introduced in Version 12, enhancing the framework further</data>
      <data key="d6">564b1122ed77a335ef83dd856be6b406</data>
    </edge>
    <edge source="ROOT LAYOUT" target="APP DIRECTORY">
      <data key="d4">23.0</data>
      <data key="d5">The Root Layout is defined at the top level of the app directory in a Next.js project, establishing the structure for all pages
The app directory contains the root layout file which defines the overall structure of the Next.js application.
The root layout is defined within the app directory and serves as the foundational structure for the application.</data>
      <data key="d6">8b55191578f60b2d2fac3ae2f4d05b2e,a5566406ae5db585eb3829f4a25e7025,d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="ROOT LAYOUT" target="METADATA API">
      <data key="d4">7.0</data>
      <data key="d5">The Metadata API is used within the Root Layout to manage the metadata of the web pages</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="ROOT LAYOUT" target="DYNAMIC ROUTE PARAMETERS">
      <data key="d4">6.0</data>
      <data key="d5">Dynamic route parameters are utilized within root layouts to manage routing and rendering of components based on URL segments.</data>
      <data key="d6">a5566406ae5db585eb3829f4a25e7025</data>
    </edge>
    <edge source="ROOT LAYOUT" target="HTML">
      <data key="d4">9.0</data>
      <data key="d5">The root layout in Next.js defines the &lt;html&gt; tag which is essential for rendering web pages.</data>
      <data key="d6">a5566406ae5db585eb3829f4a25e7025</data>
    </edge>
    <edge source="ROOT LAYOUT" target="BODY">
      <data key="d4">9.0</data>
      <data key="d5">The root layout in Next.js includes the &lt;body&gt; tag which contains the main content of the web application.</data>
      <data key="d6">a5566406ae5db585eb3829f4a25e7025</data>
    </edge>
    <edge source="ROOT LAYOUT" target="APPLICATION SCRIPTS">
      <data key="d4">1.0</data>
      <data key="d5">The Root Layout is responsible for loading application scripts that are executed across all routes in the Next.js application.</data>
      <data key="d6">e36d6ba428fb6e6b41847dce90fde4cc</data>
    </edge>
    <edge source="ROOT LAYOUT" target="GLOBAL STYLES">
      <data key="d4">8.0</data>
      <data key="d5">The Root Layout imports global styles to apply them across all routes in the application</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a</data>
    </edge>
    <edge source="ROOT LAYOUT" target="THEME PROVIDER">
      <data key="d4">8.0</data>
      <data key="d5">Theme Provider is rendered within the Root Layout to provide theme context to all child components.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="GETSERVERPROPS" target="APP DIRECTORY">
      <data key="d4">8.0</data>
      <data key="d5">The app directory replaces getServerSideProps with a simpler data fetching API
The app directory exposes new functions for data fetching, similar to getServerSideProps</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343,8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="GETSERVERPROPS" target="DYNAMIC RESPONSES">
      <data key="d4">8.0</data>
      <data key="d5">getServerSideProps is used to generate dynamic responses based on user requests</data>
      <data key="d6">3678e68072101ac922b838851eaa8465</data>
    </edge>
    <edge source="GETSERVERPROPS" target="PAGES DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">getServerSideProps is used within the pages directory to fetch data</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="GETSERVERPROPS" target="REVALIDATE">
      <data key="d4">6.0</data>
      <data key="d5">getServerSideProps can use the revalidate option to control data caching</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="GENERATESTATICPARAMS" target="POST">
      <data key="d4">6.0</data>
      <data key="d5">The generateStaticParams function defines the parameters for the Post event, establishing a relationship between dynamic routing and the specific post being displayed.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="GENERATESTATICPARAMS" target="DYNAMICPARAMS">
      <data key="d4">6.0</data>
      <data key="d5">The dynamicParams property controls the behavior of parameters defined in generateStaticParams, linking the handling of dynamic segments to the parameter generation logic.
dynamicParams works alongside generateStaticParams to manage route parameters, indicating a relationship in routing behavior</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a,db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="GENERATESTATICPARAMS" target="GETSTATICPARAMS">
      <data key="d4">7.0</data>
      <data key="d5">generateStaticParams serves a similar purpose to getStaticParams, indicating a relationship in functionality</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="API ROUTES" target="DATA ACCESS LAYER">
      <data key="d4">1.0</data>
      <data key="d5">API Routes often interact with the Data Access Layer to manage data securely and efficiently in web applications.</data>
      <data key="d6">7b0e16fa06f15b959c34b3d3401845e8</data>
    </edge>
    <edge source="API ROUTES" target="PREVIEW MODE">
      <data key="d4">5.0</data>
      <data key="d5">Preview Mode in Next.js often requires the use of API Routes to enable draft content previews</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="API ROUTES" target="FORM">
      <data key="d4">1.0</data>
      <data key="d5">API Routes are used to handle form submissions securely in Next.js applications</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="API ROUTES" target="HTTP METHODS">
      <data key="d4">7.0</data>
      <data key="d5">API Routes can handle various HTTP Methods for processing requests</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="API ROUTES" target="BODY PARSER">
      <data key="d4">6.0</data>
      <data key="d5">Body Parser is automatically enabled in API Routes to handle request bodies</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="API ROUTES" target="REQUEST HELPERS">
      <data key="d4">7.0</data>
      <data key="d5">Request Helpers are utilized within API Routes to manage incoming requests</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="API ROUTES" target="RESPONSE HELPERS">
      <data key="d4">1.0</data>
      <data key="d5">Response Helpers are methods used in API Routes to send responses</data>
      <data key="d6">08316a3a770ad75c98250e17ce7ddf51</data>
    </edge>
    <edge source="API ROUTES" target="PAGES DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">API Routes are typically organized within the pages directory, indicating a structural relationship</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="API ROUTES" target="ROUTE HANDLERS">
      <data key="d4">1.0</data>
      <data key="d5">Route Handlers replace traditional API Routes in the app directory, indicating a relationship in functionality and structure</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="PAGES DIRECTORY" target="APP DIRECTORY">
      <data key="d4">7.0</data>
      <data key="d5">The pages directory is being replaced by the app directory in Next.js for improved routing and component management</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="PAGES DIRECTORY" target="POST">
      <data key="d4">1.0</data>
      <data key="d5">The pages directory contains the Post event, linking the static routing structure to the dynamic content being displayed.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="APP DIRECTORY" target="ROUTING HOOKS">
      <data key="d4">1.0</data>
      <data key="d5">The app directory introduces new routing hooks for better navigation management</data>
      <data key="d6">8023a6acc1593be80b1d65bbe4d5fb3e</data>
    </edge>
    <edge source="APP DIRECTORY" target="INDEX">
      <data key="d4">6.0</data>
      <data key="d5">The app directory contains the Index event, establishing a structural relationship between the directory and the main entry point of the application.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="APP DIRECTORY" target="CACHE">
      <data key="d4">1.0</data>
      <data key="d5">The app directory allows for cache management in data fetching</data>
      <data key="d6">28003ee6fb44c56e3a5598cedee41343</data>
    </edge>
    <edge source="APP DIRECTORY" target="POSTLAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">PostLayout is part of the app directory structure, showing their organizational relationship</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="APP DIRECTORY" target="ROUTE HANDLERS">
      <data key="d4">18.0</data>
      <data key="d5">Route Handlers are defined within the app directory, allowing for custom request handling</data>
      <data key="d6">a332c6db30f7b29cd4dcb1117bd6eab3</data>
    </edge>
    <edge source="APP DIRECTORY" target="PAGE.JS">
      <data key="d4">9.0</data>
      <data key="d5">The page.js file is essential for making a route publicly accessible within the app directory structure.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="APP DIRECTORY" target="ROUTE SEGMENT">
      <data key="d4">8.0</data>
      <data key="d5">Each folder in the app directory represents a route segment that maps to a corresponding segment in a URL path.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="APP DIRECTORY" target="PRIVATE FOLDERS">
      <data key="d4">6.0</data>
      <data key="d5">Private folders can be created within the app directory to separate implementation details from routable files.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="APP DIRECTORY" target="ROUTE GROUPS">
      <data key="d4">7.0</data>
      <data key="d5">Route groups are organizational tools that can be used within the app directory to group routes without affecting the URL path.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="APP DIRECTORY" target="ROUTING SYSTEM">
      <data key="d4">8.0</data>
      <data key="d5">The routing system relies on the structure defined in the app directory to determine how routes are accessed and displayed.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="APP DIRECTORY" target="URL PATH">
      <data key="d4">7.0</data>
      <data key="d5">The app directory contains files that define the URL paths for routing in Next.js applications</data>
      <data key="d6">5214aa930e0680c0e176373359966818</data>
    </edge>
    <edge source="APP DIRECTORY" target="LAYOUT">
      <data key="d4">6.0</data>
      <data key="d5">Layouts are defined within the app directory to provide a consistent structure across different pages</data>
      <data key="d6">5214aa930e0680c0e176373359966818</data>
    </edge>
    <edge source="APP DIRECTORY" target="HOME PAGE">
      <data key="d4">1.0</data>
      <data key="d5">The home page is typically created within the app directory, serving as the main entry point for users.</data>
      <data key="d6">8b55191578f60b2d2fac3ae2f4d05b2e</data>
    </edge>
    <edge source="PROJECTS" target="INDEX">
      <data key="d4">8.0</data>
      <data key="d5">The Index event fetches and displays the projects, linking the main entry point of the application to the organizational tasks being managed.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="PROJECTS" target="POST">
      <data key="d4">7.0</data>
      <data key="d5">The Post event displays a specific project, indicating a relationship between the individual post and the collection of projects.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="INDEX" target="GETPROJECTS">
      <data key="d4">8.0</data>
      <data key="d5">The Index event calls the getProjects function to fetch project data, establishing a direct relationship between the main entry point and the data-fetching logic.</data>
      <data key="d6">db6f031874217fc604efd6e2661bace2</data>
    </edge>
    <edge source="POST" target="SLUG">
      <data key="d4">5.0</data>
      <data key="d5">Slug is used to uniquely identify and access a specific post in the application</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="POST" target="POSTPAGE">
      <data key="d4">7.0</data>
      <data key="d5">The PostPage displays the content of a specific Post</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="POST" target="POSTLAYOUT">
      <data key="d4">8.0</data>
      <data key="d5">PostLayout is used to structure the display of a post, indicating a direct relationship between the two</data>
      <data key="d6">8139e8b58a97f9e03ee08d82f3d2858a</data>
    </edge>
    <edge source="POST" target="DATABASE">
      <data key="d4">9.0</data>
      <data key="d5">The post is fetched from the database using queries</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="POST" target="SUSPENSE">
      <data key="d4">6.0</data>
      <data key="d5">Suspense is used to manage the loading state of the post while it is being fetched</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="POST" target="SCHEMA">
      <data key="d4">2.0</data>
      <data key="d5">The Post type is defined within the schema to represent a specific data model in the application
The schema defines the structure and types for the Post event in the Amplify application</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="POST" target="CHRIS">
      <data key="d4">16.0</data>
      <data key="d5">Chris created a post using the Amplify Data client
Chris is the author of the Post being created in the example</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e,ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="POST" target="POSTTABLE">
      <data key="d4">8.0</data>
      <data key="d5">Post items are stored in the PostTable in DynamoDB</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e</data>
    </edge>
    <edge source="POST" target="AUTHOR">
      <data key="d4">10.0</data>
      <data key="d5">An author creates a post, linking the authorId to the postId in the database
An author is responsible for creating a post, establishing a direct relationship between the person and the content.</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488,5acf474a9e428eea738206bbcbd17f29</data>
    </edge>
    <edge source="POST" target="CUSTOM QUERIES">
      <data key="d4">6.0</data>
      <data key="d5">Custom queries can be used to retrieve Post data from the backend</data>
      <data key="d6">ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="POST" target="MUTATIONS">
      <data key="d4">6.0</data>
      <data key="d5">Mutations can be used to create, update, or delete Post records in the backend</data>
      <data key="d6">ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="POST" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">The Post model is part of the AWS Amplify framework, which provides tools for building applications</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="POST" target="TODO">
      <data key="d4">5.0</data>
      <data key="d5">Both Post and Todo are data models defined within the Amplify framework, allowing for CRUD operations</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="POST" target="USERPOOL">
      <data key="d4">7.0</data>
      <data key="d5">User Pool manages the authorization for creating and managing Post items in AWS Amplify</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="POST" target="IDENTITYPOOL">
      <data key="d4">1.0</data>
      <data key="d5">Identity Pool allows users to access Post items with temporary AWS credentials</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="POST" target="CRUD OPERATIONS">
      <data key="d4">9.0</data>
      <data key="d5">CRUD operations can be performed on Post items, allowing users to manage their content</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="POST" target="PUBLIC API KEY">
      <data key="d4">5.0</data>
      <data key="d5">Public API keys allow unauthenticated users to read Post items</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="POST" target="MODEL-LEVEL AUTHORIZATION RULE">
      <data key="d4">7.0</data>
      <data key="d5">The Post model has a model-level authorization rule that controls access to its fields</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="POST" target="TAG">
      <data key="d4">14.0</data>
      <data key="d5">The Post can have multiple Tags associated with it, indicating a many-to-many relationship between Posts and Tags.The Tag can be associated with multiple Posts, indicating a many-to-many relationship between Tags and Posts.</data>
      <data key="d6">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </edge>
    <edge source="POST" target="PERSON">
      <data key="d4">8.0</data>
      <data key="d5">The Post can have separate relationships with a Person model for author and editor, indicating multiple relationships between Posts and Persons.The Person can have authored and edited Posts, indicating a relationship where a Person can be linked to multiple Posts as an author or editor.
A person can author or edit a post, establishing a relationship between the individual and the content they manage.</data>
      <data key="d6">06d355f57266e139e2c21ab1cbe5f8e6,5acf474a9e428eea738206bbcbd17f29</data>
    </edge>
    <edge source="POST" target="EDITOR">
      <data key="d4">8.0</data>
      <data key="d5">An editor is responsible for modifying a post, establishing a direct relationship between the person and the content.</data>
      <data key="d6">5acf474a9e428eea738206bbcbd17f29</data>
    </edge>
    <edge source="POST" target="CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">The client fetches and interacts with posts, establishing a relationship between the application and the content.</data>
      <data key="d6">5acf474a9e428eea738206bbcbd17f29</data>
    </edge>
    <edge source="TAILWIND CSS" target="TAILWIND CSS CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">Tailwind CSS Config is used to customize the settings of Tailwind CSS, which is utilized in Next.js applications.</data>
      <data key="d6">e36d6ba428fb6e6b41847dce90fde4cc</data>
    </edge>
    <edge source="REACT SUSPENSE" target="VIDEO COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Video Component can be used with React Suspense to manage loading states while the video is being fetched and embedded.</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="METADATA API" target="OPEN GRAPH IMAGES">
      <data key="d4">6.0</data>
      <data key="d5">Metadata API and Open Graph images are both related to improving SEO and social sharing capabilities of applications.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="ROOT LAYOUT COMPONENT" target="INDEX.HTML">
      <data key="d4">8.0</data>
      <data key="d5">The Root Layout Component replaces the index.html file in a Next.js application, providing a new structure</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="ROOT LAYOUT COMPONENT" target="GLOBAL CSS FILE">
      <data key="d4">6.0</data>
      <data key="d5">The global CSS file is imported into the Root Layout Component to apply styles across the application</data>
      <data key="d6">d8317c2b832a421e629375219f74e12f</data>
    </edge>
    <edge source="INDEX.HTML" target="ROOTLAYOUT">
      <data key="d4">13.0</data>
      <data key="d5">Index.html content is integrated into the RootLayout component to define the structure of the application
The index.html file is replaced by the RootLayout component in a Next.js application</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5,9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="INDEX.HTML" target="AMPLIFY GEO">
      <data key="d4">1.0</data>
      <data key="d5">The creation of index.html is part of the process to implement Amplify Geo, showing a direct relationship in the tutorial context</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="INDEX.HTML" target="HTML">
      <data key="d4">8.0</data>
      <data key="d5">The creation of index.html involves writing HTML code, establishing a direct relationship between the two</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="INDEX.HTML" target="AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">The index.html file is used to set up and configure Amplify services in a web application</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="AUTOPREFIXER" target="IE11">
      <data key="d4">7.0</data>
      <data key="d5">Autoprefixer ensures that CSS rules are compatible with Internet Explorer 11 by adding necessary vendor prefixes</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe</data>
    </edge>
    <edge source="VITE" target="AWS AMPLIFY">
      <data key="d4">13.0</data>
      <data key="d5">Vite is used as a build tool in projects that utilize AWS Amplify for development.
Vite can be used to develop applications that integrate with AWS Amplify, providing a fast development environment.</data>
      <data key="d6">374f53811273c5cffe3558d227a0e4ec,f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="VITE" target="AMPLIFY UI">
      <data key="d4">7.0</data>
      <data key="d5">Vite can be used in conjunction with Amplify UI to create modern web applications efficiently
Amplify UI can be used in projects built with Vite, enhancing the development experience.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="VITE" target="TUTORIAL">
      <data key="d4">1.0</data>
      <data key="d5">The tutorial provides guidance on how to use Vite with Amplify UI, demonstrating practical applications</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="VITE" target="SHOPPING CART">
      <data key="d4">7.0</data>
      <data key="d5">The shopping cart component is built using Vite.js, which provides a fast development environment.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf</data>
    </edge>
    <edge source="HTTP" target="COOKIES">
      <data key="d4">9.0</data>
      <data key="d5">Cookies are set and managed through HTTP requests and responses</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568</data>
    </edge>
    <edge source="SERVER-SIDE RENDERING" target="NUXT.JS">
      <data key="d4">9.0</data>
      <data key="d5">Nuxt.js supports server-side rendering, allowing for dynamic content generation on the server</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="STATIC SITE GENERATION" target="NUXT.JS">
      <data key="d4">9.0</data>
      <data key="d5">Nuxt.js also supports static site generation, enabling faster page loads and better performance</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="ROOTLAYOUT" target="FAVICON">
      <data key="d4">1.0</data>
      <data key="d5">Favicon is included in the head section of the RootLayout component</data>
      <data key="d6">9f6dc0f379759d79c664c445c0051202</data>
    </edge>
    <edge source="ROOTLAYOUT" target="CHILDREN">
      <data key="d4">9.0</data>
      <data key="d5">RootLayout renders its children components within the main layout structure</data>
      <data key="d6">455e168c432979d018ea3d145e2547b5</data>
    </edge>
    <edge source="NGINX" target="404.HTML">
      <data key="d4">7.0</data>
      <data key="d5">Nginx can be configured to serve the 404.html error page when a resource is not found</data>
      <data key="d6">2e4837fd908fed547d3170725336a52e</data>
    </edge>
    <edge source="PACKAGE-LOCK.JSON" target="AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">Package-lock.json ensures that the same versions of dependencies are used in AWS Amplify projects</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="HTML FILE" target="STATIC EXPORT">
      <data key="d4">9.0</data>
      <data key="d5">HTML files are the output of the static export process in Next.js, created for each route in the application.</data>
      <data key="d6">e871ceb5e34368061b569a8df8c57c33</data>
    </edge>
    <edge source="PREFETCHING" target="FORM">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;Form&gt; component in Next.js prefetches the path when it becomes visible, enhancing loading times
The &lt;Form&gt; component supports prefetching of shared UI when it becomes visible, improving navigation speed</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680,f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="CORE WEB VITALS" target="TYPE SAFETY">
      <data key="d4">5.0</data>
      <data key="d5">Type safety practices help improve the overall quality and performance of applications, which relates to Core Web Vitals metrics.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="ANALYTICS" target="PAGE VIEWS">
      <data key="d4">8.0</data>
      <data key="d5">Page views are tracked within the @analytics slot, providing insights into user engagement</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="ANALYTICS" target="VISITORS">
      <data key="d4">8.0</data>
      <data key="d5">Visitors are tracked within the @analytics slot, offering data on unique user interactions</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="ANALYTICS" target="AMAZON PERSONALIZE">
      <data key="d4">1.0</data>
      <data key="d5">Analytics is a key function of Amazon Personalize, enabling the service to generate recommendations based on user interactions</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="ANALYTICS" target="SESSION">
      <data key="d4">8.0</data>
      <data key="d5">Analytics tracks user sessions to monitor user engagement and behavior in applications</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="ANALYTICS" target="PAGE VIEW">
      <data key="d4">8.0</data>
      <data key="d5">Analytics captures page view events to analyze user interaction with web pages</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="ANALYTICS" target="AMPLIFY GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 provides capabilities for collecting and analyzing user data through the Analytics category</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="CACHE" target="DISTDIR">
      <data key="d4">6.0</data>
      <data key="d5">The &lt;distDir&gt; is used to store cached images, which are part of the caching process in Next.js</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="CACHE" target="MAX AGE">
      <data key="d4">6.0</data>
      <data key="d5">Max Age is a critical component of the caching process that determines how long cached images remain valid</data>
      <data key="d6">b0ea8bc9e77f37505a6e3b25a48b4dbb</data>
    </edge>
    <edge source="STATIC ASSETS" target="CACHE CONTROL">
      <data key="d4">1.0</data>
      <data key="d5">Cache-Control headers are applied to static assets to manage their caching behavior in browsers.</data>
      <data key="d6">4248e6bed3ca383db55da9c5251a47ee</data>
    </edge>
    <edge source="DRAFT MODE" target="HEADLESS CMS">
      <data key="d4">14.0</data>
      <data key="d5">The headless CMS is utilized in conjunction with Draft Mode to manage and display draft content
The headless CMS utilizes Draft Mode to allow users to preview unpublished content before it goes live</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="DRAFT MODE" target="DRAFT API ROUTE">
      <data key="d4">9.0</data>
      <data key="d5">The Draft API Route is used to enable Draft Mode, allowing access to unpublished content</data>
      <data key="d6">78b4dd6ed52242dca68aec48915841fe</data>
    </edge>
    <edge source="DRAFT MODE" target="ROUTE HANDLER">
      <data key="d4">15.0</data>
      <data key="d5">Draft Mode is enabled through a Route Handler that sets a cookie for subsequent requests
The Route Handler checks for the Draft Mode cookie to determine if unpublished content should be displayed</data>
      <data key="d6">44eb58960277cd9fc903de7625623163,e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="AUTHENTICATION" target="SESSION MANAGEMENT">
      <data key="d4">9.0</data>
      <data key="d5">Authentication is a prerequisite for session management, as it verifies the user's identity before tracking their session.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="AUTHENTICATION" target="LOGIN FORM">
      <data key="d4">9.0</data>
      <data key="d5">The login form is the interface through which users submit their credentials for authentication.</data>
      <data key="d6">53559278a11544ca19ad7864a7c3319c</data>
    </edge>
    <edge source="AUTHENTICATION" target="LOGIN PAGE">
      <data key="d4">1.0</data>
      <data key="d5">Authentication occurs on the login page before accessing the dashboard</data>
      <data key="d6">3bade0d5baadc8c11b8cf85372738fdd</data>
    </edge>
    <edge source="AUTHENTICATION" target="SIGNUP FORM">
      <data key="d4">7.0</data>
      <data key="d5">The Signup Form is a component that facilitates the Authentication process by capturing user credentials.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="AUTHENTICATION" target="AUTH LIBRARIES">
      <data key="d4">7.0</data>
      <data key="d5">Authentication Libraries provide built-in solutions for implementing Authentication processes in applications.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="AUTHENTICATION" target="SIGNIN">
      <data key="d4">9.0</data>
      <data key="d5">Authentication is the process that occurs during SignIn to verify user credentials</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AUTHENTICATION" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provides tools and services for user authentication</data>
      <data key="d6">bc4893f2f489d14f0975fa64ffca1df8</data>
    </edge>
    <edge source="AUTHENTICATION" target="MFA">
      <data key="d4">1.0</data>
      <data key="d5">Multi-Factor Authentication is a method used during the authentication process to enhance security</data>
      <data key="d6">bc4893f2f489d14f0975fa64ffca1df8</data>
    </edge>
    <edge source="AUTHENTICATION" target="COGNITO">
      <data key="d4">1.0</data>
      <data key="d5">Cognito provides authentication services that are utilized in the AWS Amplify framework</data>
      <data key="d6">fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="SESSION MANAGEMENT" target="AUTH">
      <data key="d4">7.0</data>
      <data key="d5">Auth processes often require session management to maintain user state and security during interactions with web applications</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="DATABASE" target="AUTHENTICATION PROVIDER">
      <data key="d4">9.0</data>
      <data key="d5">The Authentication Provider stores user credentials in the Database after validation</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="DATABASE" target="HASHED PASSWORD">
      <data key="d4">1.0</data>
      <data key="d5">The Database stores the Hashed Password along with other user information</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="DATABASE" target="SESSION">
      <data key="d4">8.0</data>
      <data key="d5">Sessions are stored in the database to manage user interactions with the application</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="DATABASE" target="DATA ACCESS LAYER">
      <data key="d4">8.0</data>
      <data key="d5">The Data Access Layer communicates with the database to retrieve and manipulate user data securely</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="DATABASE" target="CMS">
      <data key="d4">7.0</data>
      <data key="d5">A CMS often relies on a database to store and manage content</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="DATABASE" target="AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Amplify provides tools to connect and manage various types of databases, including MySQL and PostgreSQL</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="DATABASE" target="SQL LAMBDA">
      <data key="d4">9.0</data>
      <data key="d5">SQL Lambda allows querying and writing data to the database</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </edge>
    <edge source="SESSION ID" target="FACELIVENESSDETECTOR">
      <data key="d4">1.0</data>
      <data key="d5">Session ID is generated and used by FaceLivenessDetector to track the liveness session</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="SESSION ID" target="FACE LIVENESS DETECTOR">
      <data key="d4">14.0</data>
      <data key="d5">Session ID is used to uniquely identify and manage a user's session within the Face Liveness Detector
The session ID is passed to the Face Liveness Detector to manage the user's authentication session</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="DATA ACCESS LAYER" target="AUTH LIBRARY">
      <data key="d4">7.0</data>
      <data key="d5">The Data Access Layer utilizes the Auth library to manage user sessions and authorization</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="SESSION" target="AUTH LIBRARY">
      <data key="d4">9.0</data>
      <data key="d5">The Auth Library manages the creation and handling of sessions for user authentication</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="SESSION" target="VERCEL REDIS">
      <data key="d4">7.0</data>
      <data key="d5">Vercel Redis can be used to store session data for faster retrieval</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="SESSION" target="COOKIES">
      <data key="d4">8.0</data>
      <data key="d5">Sessions are stored in cookies to maintain user authentication across browser sessions</data>
      <data key="d6">acfd457359d2693c084c6ab2341189be</data>
    </edge>
    <edge source="SESSION" target="PAGE VIEW">
      <data key="d4">1.0</data>
      <data key="d5">A session includes multiple page view events as users navigate through a web application</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="ADMIN" target="COGNITO USER POOL">
      <data key="d4">7.0</data>
      <data key="d5">Administrators manage user accounts and settings within the Cognito User Pool</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="CYPRESS" target="CYPRESS TESTING SUITE">
      <data key="d4">8.0</data>
      <data key="d5">The Cypress testing suite is initiated to run tests on web applications, including those built with Next.js</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="CYPRESS" target="E2E TESTING">
      <data key="d4">18.0</data>
      <data key="d5">Cypress supports E2E testing, allowing developers to validate the complete flow of their applications
Cypress is a framework specifically designed for E2E testing, indicating a strong relationship</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd,f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="CYPRESS" target="COMPONENT TESTING">
      <data key="d4">23.0</data>
      <data key="d5">Cypress provides functionality for component testing, enabling developers to test individual components of their applications
Cypress is used to perform component testing for web applications
Cypress can also be used for component testing, showing its versatility in testing methodologies</data>
      <data key="d6">03f7555dc3d6cacee4fb80d112de29dd,0ef0d7dfd239c67d2b08d6be68926b78,f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="CYPRESS" target="CYPRESS.CONFIG.JS">
      <data key="d4">8.0</data>
      <data key="d5">cypress.config.js is essential for configuring Cypress tests and defining how they should run</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="CYPRESS" target="CYPRESS/E2E/APP.CY.JS">
      <data key="d4">1.0</data>
      <data key="d5">app.cy.js is a test file that is part of the Cypress testing framework, specifically for E2E tests</data>
      <data key="d6">f180dd367ecf063eddddd218ef6dbc1e</data>
    </edge>
    <edge source="CYPRESS" target="NODE_ENV">
      <data key="d4">6.0</data>
      <data key="d5">Cypress tests can also be configured to run in different environments based on the NODE_ENV variable.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="CYPRESS" target="TESTING">
      <data key="d4">6.0</data>
      <data key="d5">Cypress is a tool used for testing web applications, which is a key part of the testing process in software development.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="COMPONENT TESTING" target="UNIT TESTING">
      <data key="d4">8.0</data>
      <data key="d5">Component testing is a specialized form of unit testing that focuses specifically on React components</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="COMPONENT TESTING" target="SNAPSHOT TESTING">
      <data key="d4">1.0</data>
      <data key="d5">Snapshot testing is often used in conjunction with component testing to ensure that components render correctly over time</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="COVERAGE" target="COVERAGE PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">Coverage provider is a setting in Jest that determines how coverage information is collected during tests.</data>
      <data key="d6">01379aeac4a4cce03362928b2dfe7c39</data>
    </edge>
    <edge source="TESTING LIBRARY" target="VITEST">
      <data key="d4">13.0</data>
      <data key="d5">Vitest can be used in conjunction with Testing Library to facilitate testing of React components
Vitest is often used in conjunction with the React Testing Library to facilitate testing of React components.</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d,b45c653df41952b7c0b22c7926afe5f7</data>
    </edge>
    <edge source="TESTING LIBRARY" target="TESTING">
      <data key="d4">6.0</data>
      <data key="d5">React Testing Library is a tool that aids in the testing process by allowing developers to test React components effectively.</data>
      <data key="d6">62cbc95f20c7b902a0c2e3e9af7dd83c</data>
    </edge>
    <edge source="CSP" target="THEME PROVIDER">
      <data key="d4">5.0</data>
      <data key="d5">The ThemeProvider can be configured to work with Content-Security-Policy (CSP) rules</data>
      <data key="d6">b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="NONCE" target="CSP HEADER">
      <data key="d4">1.0</data>
      <data key="d5">Nonces are used in conjunction with CSP headers to allow specific scripts to run while blocking others</data>
      <data key="d6">44eb58960277cd9fc903de7625623163</data>
    </edge>
    <edge source="CHROME DEVTOOLS" target="DEBUGGER">
      <data key="d4">9.0</data>
      <data key="d5">The debugger is a feature within Chrome DevTools that allows developers to step through their code and inspect variables</data>
      <data key="d6">ce540af7d610dfd65c29afa83f46b65e</data>
    </edge>
    <edge source="CHROME DEVTOOLS" target="DEBUGGING">
      <data key="d4">8.0</data>
      <data key="d5">Chrome DevTools is a tool used for debugging web applications, including those built with Next.js.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="CHROME DEVTOOLS" target="HEAP SNAPSHOT">
      <data key="d4">7.0</data>
      <data key="d5">Heap snapshots can be analyzed in Chrome DevTools to visualize memory usage in applications.</data>
      <data key="d6">ea73c6964570e6f8578712d657ef12d4</data>
    </edge>
    <edge source="DEBUGGING" target="JETBRAINS WEBSTORM">
      <data key="d4">8.0</data>
      <data key="d5">JetBrains WebStorm provides debugging capabilities for JavaScript applications, including Next.js.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="DEBUGGING" target="LAUNCH CONFIGURATION">
      <data key="d4">7.0</data>
      <data key="d5">Launch configuration is used to set up debugging sessions for applications, including Next.js.</data>
      <data key="d6">45d1b0474e5a4ef2a69bdf70528aedb4</data>
    </edge>
    <edge source="APPLICATIONS" target="TEXT">
      <data key="d4">9.0</data>
      <data key="d5">Text is the input that applications use to generate speech through Amazon Polly, enabling voice interactions.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="APPLICATIONS" target="SPEECH CAPABILITIES">
      <data key="d4">8.0</data>
      <data key="d5">Applications utilize speech capabilities to enhance user experience by providing voice interactions and accessibility features.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="APPLICATIONS" target="QUICKSTART GUIDE">
      <data key="d4">8.0</data>
      <data key="d5">The Quickstart guide helps developers set up applications that integrate Amazon Polly, facilitating the use of text-to-speech features.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="CROSS-ENV" target="WINDOWS">
      <data key="d4">12.0</data>
      <data key="d5">Windows users can utilize cross-env to set environment variables in Node.js applications, overcoming platform-specific limitations
Windows users can use cross-env to set environment variables in a way that is compatible with their operating system</data>
      <data key="d6">ce540af7d610dfd65c29afa83f46b65e,fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="VITEST" target="VITEST.CONFIG">
      <data key="d4">7.0</data>
      <data key="d5">The vitest.config.ts file is used to configure the Vitest testing framework</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="VITEST" target="JS.DOM">
      <data key="d4">8.0</data>
      <data key="d5">jsdom is used as the testing environment in Vitest for simulating browser behavior</data>
      <data key="d6">66c478df0b5dc48b45a6c5e00867576d</data>
    </edge>
    <edge source="PREVIEW MODE" target="HEADLESS CMS">
      <data key="d4">7.0</data>
      <data key="d5">The headless CMS allows users to enter preview mode to see unpublished content</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="TOKEN" target="ROUTE HANDLER">
      <data key="d4">8.0</data>
      <data key="d5">The Route Handler uses a token for authentication to ensure secure access to draft content</data>
      <data key="d6">e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="TOKEN" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Tokens are part of AWS Amplify's theming system, allowing customization of UI components like the Rating component.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="TOKEN" target="SLIDERFIELD">
      <data key="d4">6.0</data>
      <data key="d5">Tokens are used to define the styling properties of the SliderField component</data>
      <data key="d6">a8cc34c06c7b64595006afc28abc0ae2</data>
    </edge>
    <edge source="TOKEN" target="SEARCHFIELD">
      <data key="d4">1.0</data>
      <data key="d5">Tokens are used to define the styling properties of the SearchField component</data>
      <data key="d6">a8cc34c06c7b64595006afc28abc0ae2</data>
    </edge>
    <edge source="SLUG" target="ROUTE HANDLER">
      <data key="d4">1.0</data>
      <data key="d5">The Route Handler processes the slug parameter to redirect users to the correct content path</data>
      <data key="d6">e5f2d84dedb3e3e056a2a9003aeaa38e</data>
    </edge>
    <edge source="PREVIEW API" target="YOUR-SITE">
      <data key="d4">6.0</data>
      <data key="d5">Your-site hosts the preview API for content management</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="PREVIEW API" target="DRAFT POSTS">
      <data key="d4">7.0</data>
      <data key="d5">The preview API allows users to view draft posts before they are published</data>
      <data key="d6">a114c731efa8589ee311d40c0106c001</data>
    </edge>
    <edge source="SASS" target="AMPLIFY UI">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI components can also be styled using Sass, providing more control over the styling process</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="CUSTOM SERVER" target="SERVER">
      <data key="d4">6.0</data>
      <data key="d5">A custom server is a specific implementation of a server that handles requests in a unique way</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="CUSTOM SERVER" target="SERVER.TS">
      <data key="d4">1.0</data>
      <data key="d5">server.ts is an example of how to implement a custom server in a Next.js application</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="SERVER" target="CLIENT">
      <data key="d4">17.0</data>
      <data key="d5">The server provides resources and services to the client, which requests them over a network
The client sends requests to the server, which processes these requests and sends back responses.</data>
      <data key="d6">0a447cfbac33fa416ddcd2ffd57d0335,729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="SERVER" target="SERVER ACTION">
      <data key="d4">8.0</data>
      <data key="d5">Server actions are executed on a server to manage resources and data</data>
      <data key="d6">4da3554b7826cf4b6dd608127da53568</data>
    </edge>
    <edge source="SERVER" target="REQUEST-RESPONSE LIFECYCLE">
      <data key="d4">1.0</data>
      <data key="d5">The Request-Response Lifecycle describes the server's role in processing requests and sending responses back to the client.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="MARKDOWN" target="HTML">
      <data key="d4">1.0</data>
      <data key="d5">Markdown is converted to HTML when rendered in a web application</data>
      <data key="d6">6bb5264a8b72d26916099f27337032fe</data>
    </edge>
    <edge source="HTML" target="FORM">
      <data key="d4">1.0</data>
      <data key="d5">The &lt;Form&gt; component is built upon the standard HTML &lt;form&gt; element, utilizing its structure and behavior</data>
      <data key="d6">f4e17ed362ae0155d86b249ad8a6653b</data>
    </edge>
    <edge source="HTML" target="VIDEO">
      <data key="d4">1.0</data>
      <data key="d5">HTML provides the structure and elements necessary to embed video content in web applications, such as the &lt;video&gt; tag.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="HTML" target="GLOBALERROR">
      <data key="d4">7.0</data>
      <data key="d5">The GlobalError component is structured using HTML elements, including the body tag</data>
      <data key="d6">7ebeb57bb18774254a901eafc1cb096f</data>
    </edge>
    <edge source="HTML" target="RADIOGROUPFIELD">
      <data key="d4">7.0</data>
      <data key="d5">RadioGroupField is implemented using HTML to create the structure of the component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="JOHN DOE" target="WELCOME">
      <data key="d4">3.0</data>
      <data key="d5">John Doe is often used as a placeholder in examples related to the Welcome event.</data>
      <data key="d6">4e07cca41acd33806d13242f5e21f621</data>
    </edge>
    <edge source="JOHN DOE" target="SIGN-UP API">
      <data key="d4">8.0</data>
      <data key="d5">John Doe is used as an example to illustrate the configuration of custom user attributes during the sign-up process using the sign-up API</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="JOHN DOE" target="UPDATE USER ATTRIBUTE API">
      <data key="d4">1.0</data>
      <data key="d5">John Doe's attributes can be updated using the update user attribute API, showcasing how to manage user data</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="JOHN DOE" target="COGNITO">
      <data key="d4">6.0</data>
      <data key="d5">John Doe is an example user for the sign-in process using Cognito</data>
      <data key="d6">fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="MDX PAGE" target="WELCOME">
      <data key="d4">13.0</data>
      <data key="d5">The Welcome message is often included at the beginning of an MDX page to introduce the content and engage the reader.
Welcome is an example of content that can be rendered in an MDX page</data>
      <data key="d6">11e614f4c015c7f8295c0c49ac211a89,a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="MDX PAGE" target="SHARED LAYOUT">
      <data key="d4">9.0</data>
      <data key="d5">Shared Layout is used to wrap MDX content, providing a consistent structure and style across different pages.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="CUSTOMH1" target="OVERRIDE COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">CustomH1 is an example of an override component that replaces the default H1 element in MDX, showcasing customization capabilities.</data>
      <data key="d6">a4afb71ec5010173b514ca4604c40002</data>
    </edge>
    <edge source="REMARK" target="REHYPE">
      <data key="d4">8.0</data>
      <data key="d5">Remark and rehype are part of the markdown processing ecosystem, where remark parses markdown and rehype transforms it into HTML.
Remark and rehype are often used together to process markdown into sanitized HTML</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0,7de6e744f7ef4ab90e5a1db6bfad49c3</data>
    </edge>
    <edge source="REMARK" target="AST">
      <data key="d4">6.0</data>
      <data key="d5">Remark generates an AST when parsing markdown content</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="REHYPE" target="AST">
      <data key="d4">1.0</data>
      <data key="d5">Rehype processes an AST to transform it into HTML</data>
      <data key="d6">0dc4f8c1cc6105e325f2d84d2083a4c0</data>
    </edge>
    <edge source="NODE_ENV" target="TEST ENVIRONMENT">
      <data key="d4">6.0</data>
      <data key="d5">The Test Environment is determined by the NODE_ENV variable, which specifies the environment in which tests are run.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source=".ENV" target=".GITIGNORE">
      <data key="d4">1.0</data>
      <data key="d5">The .gitignore file is used to exclude .env files from being tracked in a Git repository, ensuring sensitive information is not shared.</data>
      <data key="d6">5e1697c043b2eb0208b7ae196db74f56</data>
    </edge>
    <edge source="BUTTON" target="FORM">
      <data key="d4">33.0</data>
      <data key="d5">The button is part of the form and is used to submit the user's email for signup
Buttons are commonly used in forms to submit data or trigger actions
Button is used within a Form to submit user input
Button is used to submit the form</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e,7510b258e7a4194c8664e8c8ba088ecc,93e4ae7768c14468bccb3caa2eb8fb2b,e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="BUTTON" target="PENDING">
      <data key="d4">7.0</data>
      <data key="d5">The pending state affects the button's disabled status during the signup process</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="BUTTON" target="GLOBALERROR">
      <data key="d4">1.0</data>
      <data key="d5">The GlobalError component includes a button that allows users to reset the error state</data>
      <data key="d6">7ebeb57bb18774254a901eafc1cb096f</data>
    </edge>
    <edge source="BUTTON" target="STYLE PROPS">
      <data key="d4">13.0</data>
      <data key="d5">Style Props can be applied to the Button component to modify its appearanceThe Button component can utilize Style Props for styling adjustments</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="BUTTON" target="GRID">
      <data key="d4">7.0</data>
      <data key="d5">Buttons are placed within a grid layout to organize UI components effectively</data>
      <data key="d6">e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="BUTTON" target="VIEW">
      <data key="d4">14.0</data>
      <data key="d5">Buttons are often contained within views to manage layout and positioning
View can render a button element, allowing for user interaction within the UI</data>
      <data key="d6">56553341236a20419cc336c60c2bed04,e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="BUTTON" target="TEXT">
      <data key="d4">21.0</data>
      <data key="d5">Text is often displayed on buttons to indicate their function
Text components can be used within Button components to label the buttons
Text is often displayed alongside Button to provide context or instructions for the user
Text is used to label the button for user interaction
Buttons often contain text to indicate their function, providing context to users</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1,229e08ddbc773881c8e1ca68ba06dea8,6edc6c7e13a23d971e48b75724b50d5f,e7727282a239fcb7a1e69d029f0709ba,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="BUTTON" target="MARGIN AND PADDING STYLING EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The margin and padding styling example shows how to style buttons with spacing</data>
      <data key="d6">e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="BUTTON" target="POSITION STYLING EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The position styling example demonstrates how to position buttons within a view</data>
      <data key="d6">e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="BUTTON" target="SHADOW STYLING EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The shadow styling example illustrates how to add shadow effects to buttons
Shadow Styling Example demonstrates the use of the Button component with shadow styles</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e,e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="BUTTON" target="AMPLIFY UI">
      <data key="d4">50.0</data>
      <data key="d5">Button is a component provided by Amplify UI for building user interfaces
Button is a component provided by Amplify UI for triggering actions in forms
Button is a component provided by the Amplify UI library to facilitate user interactions in forms.
Button is a component provided by the Amplify UI library for user interaction
The Button component is included in the Amplify UI library, used to trigger actions
The Button primitive is a part of Amplify UI for triggering actions
The Button component is part of the Amplify UI library, providing interactive functionality</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149,818fcb4044a83bd6eead8a24e57319ad,85d9171dd6e70ffdb5803e227ecacbc4,9939e974ca8f24b6b7f34bbf89addb7e,c7af2749681510be539a408772ae1755,da8a5f647964e74661f5f6b0ad4f6a74,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="BUTTON" target="SHADOW THEME TOKEN EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Shadow Theme Token Example shows how to apply theme-based shadow styles to a Button component</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="BUTTON" target="SHADOW TOKEN NAME EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Shadow Token Name Example demonstrates the use of a design token name to style a Button component</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="BUTTON" target="CARD">
      <data key="d4">6.0</data>
      <data key="d5">Button is typically included in a Card component to allow user interaction, such as changing settings or submitting forms.
Buttons can be included within a Card component to trigger actions related to the content of the card</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33,868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="BUTTON" target="THEME PROVIDER">
      <data key="d4">6.0</data>
      <data key="d5">The Button component can be styled using the theme provided by the ThemeProvider</data>
      <data key="d6">b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="BUTTON" target="STORAGE MANAGER">
      <data key="d4">13.0</data>
      <data key="d5">The Storage Manager includes buttons that allow users to perform actions like uploading files and canceling uploads.
The Button component is used within the Storage Manager to trigger actions like clearing files</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988,d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="BUTTON" target="MAPVIEW">
      <data key="d4">7.0</data>
      <data key="d5">The Button component is used within the MapView to trigger map animations and actions</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3</data>
    </edge>
    <edge source="BUTTON" target="MORDOR">
      <data key="d4">1.0</data>
      <data key="d5">The Button triggers an action to fly to the location of Mordor on the map</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3</data>
    </edge>
    <edge source="BUTTON" target="CUSTOM ERROR VIEW">
      <data key="d4">7.0</data>
      <data key="d5">The button in the custom error view allows users to retry the operation after an error occurs</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="BUTTON" target="AUTHENTICATOR">
      <data key="d4">7.0</data>
      <data key="d5">The Button component is used within the Authenticator to allow users to sign out or perform other actions.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="BUTTON" target="ICON">
      <data key="d4">16.0</data>
      <data key="d5">Icons are often used within Button components to enhance user interface and experience.
Icons can be added to buttons to enhance their functionality and appearance in the AWS Amplify UI for React.
Buttons can include icons to visually represent their action, improving user interaction</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630,6edc6c7e13a23d971e48b75724b50d5f,e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="BUTTON" target="FLEX">
      <data key="d4">38.0</data>
      <data key="d5">Button components can be placed inside Flex components for better layout control
Button can be arranged within a Flex component for better UI layout
Flex is used to layout the Button component within forms, allowing for responsive design
The Flex component is used to arrange the Button in a column layout alongside other components.
The Button is also contained within the Flex component, allowing for a cohesive layout of form elements
The button is contained within the Flex component, which organizes the form layout
The Button is also contained within the Flex component, indicating that both components are part of the same layout structure
Flex layout can be used to arrange buttons in a responsive manner, adapting to different screen sizes</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1,229e08ddbc773881c8e1ca68ba06dea8,26dcbf3b494b9d9117cffa213b39f7cf,27665866f8a25b886ee05eef06c3054c,6edc6c7e13a23d971e48b75724b50d5f,7fea5fbe98eba1d68851892af6df2407,ddc8b27b83cca7d4613a25a5e5a519c9,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="BUTTON" target="AWS AMPLIFY">
      <data key="d4">31.0</data>
      <data key="d5">Button is a component provided by AWS Amplify that allows users to trigger actions
Button is a component provided by AWS Amplify for user interface development
Buttons are a key component in AWS Amplify's UI library, allowing users to perform actions within applications built using the platform.
Button is a UI component provided by AWS Amplify for user interactions.</data>
      <data key="d6">12c9fa6332d9cd62a8cbe8be18fd540e,8b2761fb86513e3cf4d313a43b80f9fc,98fcf483b563a8d8b54ee85b2f6fa533,a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="BUTTON" target="TEXTFIELD">
      <data key="d4">8.0</data>
      <data key="d5">TextField can be used in conjunction with Button to submit user input
TextField can be submitted or interacted with using a Button component in AWS Amplify</data>
      <data key="d6">12c9fa6332d9cd62a8cbe8be18fd540e,7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="BUTTON" target="SWITCHFIELD">
      <data key="d4">12.0</data>
      <data key="d5">SwitchField can be toggled using a Button component in AWS Amplify
Button can be used in conjunction with SwitchField to submit forms or trigger actions based on the switch's state</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1,12c9fa6332d9cd62a8cbe8be18fd540e</data>
    </edge>
    <edge source="BUTTON" target="SLIDERFIELD">
      <data key="d4">1.0</data>
      <data key="d5">Buttons can be used to control the behavior of SliderField, such as hiding or showing values</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="BUTTON" target="PHONE NUMBER FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The Phone Number Field and Button are both components used in the AWS Amplify UI, often used together in forms.</data>
      <data key="d6">27665866f8a25b886ee05eef06c3054c</data>
    </edge>
    <edge source="BUTTON" target="DEFAULT">
      <data key="d4">6.0</data>
      <data key="d5">The Default style is one of the appearances that can be applied to the Button component in the AWS Amplify UI.</data>
      <data key="d6">27665866f8a25b886ee05eef06c3054c</data>
    </edge>
    <edge source="BUTTON" target="QUIET">
      <data key="d4">1.0</data>
      <data key="d5">The Quiet style is another appearance option that can be applied to the Button component in the AWS Amplify UI.</data>
      <data key="d6">27665866f8a25b886ee05eef06c3054c</data>
    </edge>
    <edge source="BUTTON" target="PASSWORD FIELD">
      <data key="d4">8.0</data>
      <data key="d5">The Button is used to submit the form that includes the PasswordField, indicating a direct interaction between the two components</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="BUTTON" target="DROPZONE">
      <data key="d4">7.0</data>
      <data key="d5">The button in the DropZone component allows users to open the file picker
Both DropZone and Button are components from the AWS Amplify UI for React, used for user interactions in web applications.</data>
      <data key="d6">7668a790c01b22add1e76afc928004db,e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="BUTTON" target="AMPLIFY CSS VARIABLES">
      <data key="d4">6.0</data>
      <data key="d5">Amplify CSS Variables can be used to customize the styling of the Button component.</data>
      <data key="d6">e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="BUTTON" target="DROPDOWN">
      <data key="d4">5.0</data>
      <data key="d5">Dropdowns can be used in conjunction with buttons to provide users with additional options in the AWS Amplify UI for React.</data>
      <data key="d6">e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="BUTTON" target="ICON SAVE">
      <data key="d4">1.0</data>
      <data key="d5">The Icon Save is often used within buttons to visually represent the save action in applications.</data>
      <data key="d6">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </edge>
    <edge source="BUTTON" target="BUTTON GROUP">
      <data key="d4">7.0</data>
      <data key="d5">Button Group organizes multiple buttons, ensuring they share the same size or variation for a cohesive user experience.</data>
      <data key="d6">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </edge>
    <edge source="BUTTON" target="LOADING STATE">
      <data key="d4">8.0</data>
      <data key="d5">Loading State is often displayed on buttons to indicate that an action is in progress, preventing further clicks until the action is complete.</data>
      <data key="d6">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </edge>
    <edge source="BUTTON" target="DISABLED">
      <data key="d4">9.0</data>
      <data key="d5">A button can be in a disabled state, which means it cannot be interacted with until it is enabled again.</data>
      <data key="d6">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </edge>
    <edge source="BUTTON" target="FULL WIDTH">
      <data key="d4">1.0</data>
      <data key="d5">The full width property allows buttons to stretch across their container, making them more prominent in the UI.</data>
      <data key="d6">8b2761fb86513e3cf4d313a43b80f9fc</data>
    </edge>
    <edge source="BUTTON" target="CHECKBOXFIELD">
      <data key="d4">7.0</data>
      <data key="d5">CheckboxField can be linked to a Button for form submission</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="BUTTON" target="CONTROLLED TABS">
      <data key="d4">1.0</data>
      <data key="d5">Buttons are used within Controlled Tabs to trigger tab changes</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="BUTTON" target="ALERT">
      <data key="d4">7.0</data>
      <data key="d5">Buttons can be used to dismiss or trigger alerts in the Amplify UI</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="TSCONFIG.JSON" target="AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">Tsconfig.json configures TypeScript settings for AWS Amplify projects</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="TSCONFIG.JSON" target="ADMIN DASHBOARD">
      <data key="d4">6.0</data>
      <data key="d5">Tsconfig.json provides TypeScript configuration for the Admin Dashboard application</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="TSCONFIG.JSON" target="MARKETING SITE">
      <data key="d4">1.0</data>
      <data key="d5">Tsconfig.json provides TypeScript configuration for the Marketing Site application</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="GOOGLE TAG MANAGER" target="EVENT BUTTON">
      <data key="d4">8.0</data>
      <data key="d5">The Event Button sends events to Google Tag Manager when clicked, facilitating user interaction tracking</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE TAG MANAGER" target="GOOGLE MAPS EMBED">
      <data key="d4">5.0</data>
      <data key="d5">Google Maps Embed can be integrated with Google Tag Manager for tracking interactions with the map</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE TAG MANAGER" target="YOUTUBE EMBED">
      <data key="d4">1.0</data>
      <data key="d5">YouTube Embed can be tracked through Google Tag Manager to measure user engagement with video content</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE TAG MANAGER" target="DATA LAYER">
      <data key="d4">7.0</data>
      <data key="d5">The data layer is utilized by Google Tag Manager to manage and send data to various analytics and marketing tools</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="EVENT BUTTON" target="SEND GTM EVENT">
      <data key="d4">9.0</data>
      <data key="d5">The Event Button triggers the sendGTMEvent function when clicked, sending an event to Google Tag Manager</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="EVENT BUTTON" target="SEND GA EVENT">
      <data key="d4">9.0</data>
      <data key="d5">The Event Button triggers the sendGAEvent function when clicked, sending an event to Google Analytics</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="GOOGLE MAPS EMBED" target="BROOKLYN BRIDGE">
      <data key="d4">1.0</data>
      <data key="d5">Google Maps Embed can display the location and details of the Brooklyn Bridge</data>
      <data key="d6">5372e12cf32e25741c25f62d7e23221e</data>
    </edge>
    <edge source="YOUTUBE EMBED" target="PAGES/INDEX.JS">
      <data key="d4">1.0</data>
      <data key="d5">The YouTube Embed component is included in pages/index.js to display a YouTube video on that page</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="SEND GA EVENT" target="DATA LAYER">
      <data key="d4">8.0</data>
      <data key="d5">The sendGAEvent function uses the data layer to send event data to Google Analytics</data>
      <data key="d6">d9dae7c77623e42007ddaf28a19fa9b8</data>
    </edge>
    <edge source="DYNAMIC IMPORTS" target="SUSPENSE">
      <data key="d4">6.0</data>
      <data key="d5">Dynamic imports can be used with Suspense to provide a loading state while components are being fetched</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282</data>
    </edge>
    <edge source="DYNAMIC IMPORTS" target="CLIENT COMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">Client Components can be loaded dynamically using Dynamic Imports to improve performance</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="SUSPENSE" target="DYNAMIC HEADER">
      <data key="d4">1.0</data>
      <data key="d5">Dynamic Header can be rendered with a Suspense fallback while it is being loaded</data>
      <data key="d6">3da6822267f4aca1b29b1233660a9282</data>
    </edge>
    <edge source="SUSPENSE" target="SEARCHBAR">
      <data key="d4">1.0</data>
      <data key="d5">Suspense is used to manage the loading state of the SearchBar component</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="SUSPENSE" target="NAVIGATION EVENTS">
      <data key="d4">8.0</data>
      <data key="d5">Navigation Events is wrapped in a Suspense boundary to manage client-side rendering</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="SUSPENSE" target="SERVERCOMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">ServerComponent can be wrapped in Suspense to manage loading states for dynamic content in Next.js</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="CLIENT COMPONENTS" target="APP PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The app/page.js file is where Client Components are defined and rendered in a Next.js application</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="CLIENT COMPONENTS" target="MODAL">
      <data key="d4">1.0</data>
      <data key="d5">Client Components can be used to create modals that enhance user interaction in a web application</data>
      <data key="d6">82c6ef4d52bb277665ade9f274822be3</data>
    </edge>
    <edge source="CLIENT COMPONENTS" target="COUNTER">
      <data key="d4">7.0</data>
      <data key="d5">Counter is an example of a Client Component that utilizes state and event listeners</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </edge>
    <edge source="CLIENT COMPONENTS" target="TABLE">
      <data key="d4">6.0</data>
      <data key="d5">The Table component can be used as a Client Component to render data dynamically</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </edge>
    <edge source="CLIENT COMPONENTS" target="GLOBALERROR">
      <data key="d4">8.0</data>
      <data key="d5">The GlobalError component is a Client Component that handles errors in Next.js applications</data>
      <data key="d6">7ebeb57bb18774254a901eafc1cb096f</data>
    </edge>
    <edge source="OPENTELEMETRY" target="@OPENTELEMETRY/API">
      <data key="d4">9.0</data>
      <data key="d5">The @opentelemetry/api package is a core component of OpenTelemetry, providing essential functions for creating spans and traces.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="OPENTELEMETRY" target="@OPENTELEMETRY/RESOURCES">
      <data key="d4">7.0</data>
      <data key="d5">The @opentelemetry/resources package is part of OpenTelemetry, providing resource attributes that enhance telemetry data.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="OPENTELEMETRY" target="@OPENTELEMETRY/SEMANTIC-CONVENTIONS">
      <data key="d4">1.0</data>
      <data key="d5">The @opentelemetry/semantic-conventions package helps standardize the attributes used in OpenTelemetry, ensuring consistent data collection.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="OPENTELEMETRY" target="INSTRUMENTATION">
      <data key="d4">9.0</data>
      <data key="d5">OpenTelemetry is used for instrumentation to monitor applications</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e</data>
    </edge>
    <edge source="OPENTELEMETRY" target="SEMANTIC CONVENTIONS">
      <data key="d4">1.0</data>
      <data key="d5">OpenTelemetry uses semantic conventions to standardize telemetry data</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e</data>
    </edge>
    <edge source="OPEN_TELEMETRY_COLLECTOR" target="CUSTOM_EXPORTERS">
      <data key="d4">7.0</data>
      <data key="d5">Custom Exporters can be used with OpenTelemetry Collector to send telemetry data to specific destinations.
The OpenTelemetry Collector can be configured to use custom exporters for specific telemetry data handling</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d,f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="OPEN_TELEMETRY_COLLECTOR" target="@OPENTELEMETRY/EXPORTER-TRACE-OTLP-HTTP">
      <data key="d4">6.0</data>
      <data key="d5">The @opentelemetry/exporter-trace-otlp-http package is used to send trace data to the OpenTelemetry Collector for processing.</data>
      <data key="d6">f4599158722218aadb2ccd78fa2745ad</data>
    </edge>
    <edge source="OPEN_TELEMETRY_COLLECTOR" target="CUSTOM_SPANS">
      <data key="d4">7.0</data>
      <data key="d5">Custom spans can be created and managed through the OpenTelemetry Collector for enhanced observability</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </edge>
    <edge source="INSTRUMENTATION" target="REGISTER FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">The register function is part of the instrumentation process to set up monitoring</data>
      <data key="d6">2e0b7ff508cb8313a540ecc1a356120e</data>
    </edge>
    <edge source="INSTRUMENTATION" target="OPEN_TELEMETRY">
      <data key="d4">8.0</data>
      <data key="d5">OpenTelemetry provides tools and libraries for instrumentation, enabling developers to add observability to their applications.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="SPANS" target="TRACES">
      <data key="d4">9.0</data>
      <data key="d5">Spans are the building blocks of traces, representing individual operations within a trace.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="BUNDLE ANALYZER" target="ANALYZE">
      <data key="d4">1.0</data>
      <data key="d5">The ANALYZE event is related to the functionality of the @next/bundle-analyzer, which analyzes bundles</data>
      <data key="d6">5afd0d2ef8220eea43b9a4e3736e7bee</data>
    </edge>
    <edge source="ANALYZE" target="OPTIMIZING PACKAGE BUNDLING">
      <data key="d4">6.0</data>
      <data key="d5">The analyze process is part of the broader effort to optimize package bundling in Next.js</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </edge>
    <edge source="ANALYZE" target="OPTIMIZING FONTS">
      <data key="d4">1.0</data>
      <data key="d5">The analysis of bundles can also include font optimization as part of improving overall application performance</data>
      <data key="d6">2d13fb0b0bfe03d14a0f41e4d7920e31</data>
    </edge>
    <edge source="EVENT HANDLERS" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">Event handlers are associated with the Input component to manage user interactions and data entry</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ROBOTO MONO" target="NEXT FONT">
      <data key="d4">8.0</data>
      <data key="d5">Roboto Mono can also be imported and used through the Next Font library in web applications</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="LOCAL FONT" target="NEXT FONT">
      <data key="d4">7.0</data>
      <data key="d5">Local Font can be utilized in conjunction with the Next Font library for better performance in web applications</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="FILL PROP" target="NEXT IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">The fill prop in Next Image allows for responsive image behavior by adjusting the image size to fit its container</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="STYLESHEET" target="GLOBAL STYLES">
      <data key="d4">8.0</data>
      <data key="d5">Global styles are a type of stylesheet that applies to the entire application</data>
      <data key="d6">a19a92a20fca1ccc164ea11570a4b26a</data>
    </edge>
    <edge source="STYLESHEET" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">Stylesheets are used in AWS Amplify applications to define the visual presentation of components</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="SWR" target="FETCHER">
      <data key="d4">1.0</data>
      <data key="d5">SWR uses a fetcher function to retrieve data from APIs, making it a key component of the data fetching process</data>
      <data key="d6">66fea93bb642287d13f3a25b8b3e0083</data>
    </edge>
    <edge source="SWR" target="LAYOUT">
      <data key="d4">7.0</data>
      <data key="d5">The Layout component utilizes SWR for efficient data fetching and caching of navigation links</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="FORM" target="FORM VALIDATION">
      <data key="d4">9.0</data>
      <data key="d5">Form validation is a critical step before submitting forms to ensure data integrity</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="FORM" target="FORM DATA">
      <data key="d4">9.0</data>
      <data key="d5">Forms collect user input as form data, which can be submitted to a server</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="FORM" target="ERROR HANDLING">
      <data key="d4">1.0</data>
      <data key="d5">Error handling is essential in forms to manage submission failures and provide feedback to users</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="FORM" target="SEARCH PAGE">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;Form&gt; component navigates to the search page upon submission with the encoded search parameters</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="SEARCH BUTTON">
      <data key="d4">6.0</data>
      <data key="d5">The SearchButton component is used within the &lt;Form&gt; to submit search queries</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="ACTION">
      <data key="d4">8.0</data>
      <data key="d5">The action prop specifies the URL or function to be executed upon form submission</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="SERVER ACTION">
      <data key="d4">9.0</data>
      <data key="d5">The &lt;Form&gt; can execute a Server Action when submitted, allowing for server-side processing
The Form triggers a Server Action to process the submitted data</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680,9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORM" target="SEARCH PARAMS">
      <data key="d4">8.0</data>
      <data key="d5">The &lt;Form&gt; encodes search parameters into the URL upon submission, which are then used to fetch data</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="EVENT PREVENT DEFAULT">
      <data key="d4">6.0</data>
      <data key="d5">Using event.preventDefault() in the &lt;Form&gt; can override its default behavior, allowing for custom submission handling</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="BASE PATH">
      <data key="d4">1.0</data>
      <data key="d5">The &lt;Form&gt; component can include a base path in the formAction to specify the correct routing</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="FORM" target="SEARCHBUTTON">
      <data key="d4">7.0</data>
      <data key="d5">SearchButton is used within the Form component to submit search queries</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="FORM" target="CREATEPOST">
      <data key="d4">16.0</data>
      <data key="d5">The Form component is used to submit data that triggers the CreatePost eventThe CreatePost event is triggered when the Form component is submitted to create a new post</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="FORM" target="SERVER ACTIONS">
      <data key="d4">9.0</data>
      <data key="d5">Forms can invoke Server Actions to submit data without refreshing the page</data>
      <data key="d6">2f2dde2368e46aa812e2a39e32b3505d</data>
    </edge>
    <edge source="FORM" target="UPDATE USER">
      <data key="d4">9.0</data>
      <data key="d5">The Form triggers the Update User action upon submission</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORM" target="FORM ELEMENTS">
      <data key="d4">8.0</data>
      <data key="d5">The Form contains various form elements that allow user input</data>
      <data key="d6">9ac6b7bdb38f92b5b8fbd5762735c158</data>
    </edge>
    <edge source="FORM" target="INITIALSTATE">
      <data key="d4">5.0</data>
      <data key="d5">The initialState object is used to set up the form's initial values and state</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="FORM" target="USEACTIONSTATE">
      <data key="d4">6.0</data>
      <data key="d5">The form utilizes the useActionState hook to manage its submission state</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="FORM" target="MESSAGE">
      <data key="d4">1.0</data>
      <data key="d5">The message is displayed in the form to inform the user about the signup process outcome</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="FORM" target="TODOCREATEFORM">
      <data key="d4">18.0</data>
      <data key="d5">The TodoCreateForm is a specific type of form designed for creating todo items.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="SELECTFIELD">
      <data key="d4">16.0</data>
      <data key="d5">SelectField is a component used within forms to allow users to select options.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="STATUS">
      <data key="d4">8.0</data>
      <data key="d5">Status is a field within the form that captures the current state of a task.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="AUTOCOMPLETEFIELD">
      <data key="d4">8.0</data>
      <data key="d5">AutocompleteField is a component that enhances form input by providing suggestions based on user input.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="RADIOGROUPFIELD">
      <data key="d4">8.0</data>
      <data key="d5">RadioGroupField is a component that allows users to make a single selection from multiple options in a form.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="VALIDATIONTASKS">
      <data key="d4">7.0</data>
      <data key="d5">Validation tasks are associated with forms to ensure that user input meets specified criteria before submission.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="FORM" target="TODO MODEL">
      <data key="d4">7.0</data>
      <data key="d5">The form is used to input data that corresponds to the attributes defined in the Todo model.</data>
      <data key="d6">81518acc3db43af0161d599284ff910e</data>
    </edge>
    <edge source="FORM" target="SIGN OUT">
      <data key="d4">1.0</data>
      <data key="d5">The form event may also be involved in the sign out process, depending on the application design</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="FORM" target="SIGN IN">
      <data key="d4">6.0</data>
      <data key="d5">The form event is used to collect user credentials during the sign in process</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="FORM" target="SLIDERFIELD">
      <data key="d4">9.0</data>
      <data key="d5">SliderField is used within forms to allow users to select values</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="FORM" target="USER FEEDBACK">
      <data key="d4">7.0</data>
      <data key="d5">User feedback is often collected through forms where users can input their opinions</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="FORM" target="PHONE NUMBER">
      <data key="d4">1.0</data>
      <data key="d5">The PHONE NUMBER is a field within the FORM that collects user input for contact information.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="FORM" target="PASSWORD FIELD">
      <data key="d4">8.0</data>
      <data key="d5">Password Field is a component used within a Form to collect password input from users</data>
      <data key="d6">e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="FORM" target="TEXT">
      <data key="d4">7.0</data>
      <data key="d5">Text components provide labels and instructions within a Form to guide user input</data>
      <data key="d6">e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="FORM" target="CHECKBOXFIELD">
      <data key="d4">8.0</data>
      <data key="d5">CheckboxField is used within a form to allow users to make selections</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="FORM" target="VALIDATION ERROR">
      <data key="d4">8.0</data>
      <data key="d5">Validation error is associated with a form when user input fails to meet criteria</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="CLIENT-SIDE DATA FETCHING" target="PROFILE DATA">
      <data key="d4">7.0</data>
      <data key="d5">Client-side data fetching is often used to retrieve profile data for display in applications</data>
      <data key="d6">0fec562f1c16117484e5946f3f2df826</data>
    </edge>
    <edge source="FORM VALIDATION" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides built-in validation rules for forms generated through its UI components.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161</data>
    </edge>
    <edge source="FORM DATA" target="SIGNUP FORM">
      <data key="d4">8.0</data>
      <data key="d5">The Signup Form collects Form Data from the user for account creation</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="FORM DATA" target="AUTHENTICATION PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">The Form Data is sent to the Authentication Provider for user account creation</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="FORM DATA" target="SERVER ACTIONS">
      <data key="d4">8.0</data>
      <data key="d5">Server Actions process Form Data submitted by users, managing the state and potential errors during the signup process</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82</data>
    </edge>
    <edge source="ERROR HANDLING" target="STORAGE MANAGER">
      <data key="d4">5.0</data>
      <data key="d5">Error Handling is a feature in Storage Manager that allows users to manage errors that occur during file uploads</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="FETCHER" target="LAYOUT">
      <data key="d4">8.0</data>
      <data key="d5">The Layout component uses the Fetcher function to retrieve navigation data from the API</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="CDN" target="FACE LIVENESS DETECTOR">
      <data key="d4">6.0</data>
      <data key="d5">The Face Liveness Detector relies on a CDN for delivering its resources efficiently</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="MATCHER" target="CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">Matcher is a property within the config object that specifies the paths for middleware execution</data>
      <data key="d6">100c0297f81a6b39d0682205a4f6f668</data>
    </edge>
    <edge source="ROBOTS.TXT" target="OPEN GRAPH IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">Open Graph images can be referenced in a webpage's metadata, which is controlled by the robots.txt file for search engine indexing</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="INTERNATIONALIZATION" target="ROUTING">
      <data key="d4">5.0</data>
      <data key="d5">Routing can be adapted for internationalization, allowing for different content based on user locale</data>
      <data key="d6">3b86536c72cd33dea29dc82250012d80</data>
    </edge>
    <edge source="INTERNATIONALIZATION" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI components are designed to facilitate internationalization by using logical properties for layout adjustments</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="SUB-PATH ROUTING" target="URL PATH">
      <data key="d4">7.0</data>
      <data key="d5">The URL path is a key component of sub-path routing, which includes the locale in the path for routing purposes</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="SUB-PATH ROUTING" target="PAGES/BLOG.JS">
      <data key="d4">6.0</data>
      <data key="d5">Pages/blog.js is an example of a resource that can be accessed through sub-path routing in Next.js</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="AUTOMATIC LOCALE DETECTION" target="ACCEPT-LANGUAGE HEADER">
      <data key="d4">8.0</data>
      <data key="d5">The Accept-Language header is used in automatic locale detection to determine the user's preferred language</data>
      <data key="d6">839413fc3a58298ee6809914ff2ed3f7</data>
    </edge>
    <edge source="URL PATH" target="ROUTE SEGMENT">
      <data key="d4">1.0</data>
      <data key="d5">The URL path is directly influenced by the route segments defined in the app directory, determining how users navigate the application.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="CUSTOM 404 PAGE" target="PAGES/404.JS">
      <data key="d4">9.0</data>
      <data key="d5">The pages/404.js file is where the custom 404 page is defined in Next.js</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="CUSTOM 500 PAGE" target="PAGES/500.JS">
      <data key="d4">1.0</data>
      <data key="d5">The pages/500.js file is where the custom 500 page is defined in Next.js</data>
      <data key="d6">e5dd9b12a829becf46c92a1a02044920</data>
    </edge>
    <edge source="ROUTE HANDLERS" target="HTTP METHODS">
      <data key="d4">7.0</data>
      <data key="d5">HTTP Methods are utilized within Route Handlers to define how to handle different types of requests</data>
      <data key="d6">64c02a535c1519ef24ded4a2a368f2be</data>
    </edge>
    <edge source="CLIENT" target="REQUEST-RESPONSE LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">The Request-Response Lifecycle involves the client sending requests and receiving responses from the server.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="CLIENT" target="ROUTER CACHE">
      <data key="d4">1.0</data>
      <data key="d5">The client benefits from the Router Cache feature in Next.js, which improves navigation performance by re-using route segments</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="CLIENT" target="REAL ESTATE PROPERTY">
      <data key="d4">16.0</data>
      <data key="d5">Client interacts with the Real Estate Property model to perform CRUD operations</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </edge>
    <edge source="CLIENT" target="AMPLIFY">
      <data key="d4">33.0</data>
      <data key="d5">Amplify provides a client for developers to interact with the backend services
The client interacts with Amplify to perform data operations through the defined API
Amplify provides the Client instance to interact with the data schema
The client is configured using the Amplify library to connect to the backend services provided by Amplify.</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e,07423380fe232270f2991cb99f038a6e,1950a5e06a03170ed4dc66a00668ea47,374f53811273c5cffe3558d227a0e4ec</data>
    </edge>
    <edge source="CLIENT" target="SONG">
      <data key="d4">7.0</data>
      <data key="d5">The client creates and manages songs through the Amplify Data client</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="CLIENT" target="CHANNEL">
      <data key="d4">7.0</data>
      <data key="d5">Client interacts with the Channel model to manage subscriptions and messages</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="CLIENT" target="TODO">
      <data key="d4">19.0</data>
      <data key="d5">Client subscribes to Todo events to receive real-time updates on task changes
The Todo event can be managed through the client, which allows for creating, updating, and deleting Todo items
The client performs operations to create, read, update, and delete todos in the application.</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe,374f53811273c5cffe3558d227a0e4ec,61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="CLIENT" target="SCHEMA">
      <data key="d4">22.0</data>
      <data key="d5">Client interacts with the schema to perform operations on data models in AWS Amplify
The client interacts with the schema to perform data operations based on the defined structure of the data models
The client interacts with the schema to perform data operations in AWS Amplify
The client uses the schema to ensure type safety and provide code completion for data operations.</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe,374f53811273c5cffe3558d227a0e4ec,61cf173fbdd2221f3bcf1bc2a4df1840,f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="CLIENT" target="DATA CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">The client is an instance of the Data client that performs operations on the backend data schema</data>
      <data key="d6">92bcd3df485df362e04da4f60878ff3b</data>
    </edge>
    <edge source="CLIENT" target="MUTATION">
      <data key="d4">8.0</data>
      <data key="d5">The client is responsible for executing mutations to modify data in the backend</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe</data>
    </edge>
    <edge source="CLIENT" target="AMPLIFY DATA">
      <data key="d4">9.0</data>
      <data key="d5">The client is used to interact with Amplify Data for performing CRUD operations on data models</data>
      <data key="d6">f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="LAYOUT" target="NAVBAR">
      <data key="d4">8.0</data>
      <data key="d5">The Layout component includes the Navbar component to provide navigation links for the application</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="LAYOUT" target="FOOTER">
      <data key="d4">8.0</data>
      <data key="d5">The Layout component includes the Footer component to provide additional information at the bottom of the page</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="LAYOUT" target="NAVIGATION EVENTS">
      <data key="d4">7.0</data>
      <data key="d5">Layout includes Navigation Events as a child component to manage navigation-related events</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="LAYOUT" target="TEMPLATE">
      <data key="d4">6.0</data>
      <data key="d5">Layouts and templates are both used in Next.js to manage UI structure, but they serve different purposes in state management
Templates can be used within layouts to provide dynamic content rendering</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b,1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="LAYOUT" target="NAVLINKS">
      <data key="d4">6.0</data>
      <data key="d5">NavLinks are integrated within layouts to provide navigation across the application</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="ROUTING" target="REDIRECTING">
      <data key="d4">6.0</data>
      <data key="d5">Routing in Next.js includes handling redirects to manage user navigation</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="ROUTING" target="DYNAMIC SEGMENTS">
      <data key="d4">7.0</data>
      <data key="d5">Dynamic segments are a key feature of routing in Next.js, enabling the creation of routes based on variable data</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="ROUTING" target="CATCH-ALL SEGMENTS">
      <data key="d4">7.0</data>
      <data key="d5">Catch-all segments are a specific implementation within routing that allows for matching multiple paths</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="REDIRECTING" target="NEXTCONFIG.JS">
      <data key="d4">6.0</data>
      <data key="d5">The next.config.js file is where developers define redirect rules for managing incoming requests</data>
      <data key="d6">a8c0873902ebe92185a879561056ce61</data>
    </edge>
    <edge source="HOME" target="INAPPMSGPROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">Home component can utilize InAppMessagingProvider to manage in-app messaging</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="FILTER" target="CUSTOMER">
      <data key="d4">5.0</data>
      <data key="d5">Filters can be applied to the Customer model to narrow down search results based on specific criteria</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="FILTER" target="REAL-TIME EVENTS">
      <data key="d4">6.0</data>
      <data key="d5">Filters can be applied to real-time events to limit the data received based on specific criteria</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="FILTER" target="TODO">
      <data key="d4">6.0</data>
      <data key="d5">Filters are applied to todos to refine the list of tasks displayed to users</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="BIGINT" target="BIGINT64ARRAY">
      <data key="d4">5.0</data>
      <data key="d5">BigInt and BigInt64Array are both related as they deal with large integer representations in programming contexts.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="BIGINT" target="BIGUINT64ARRAY">
      <data key="d4">5.0</data>
      <data key="d5">BigInt and BigUint64Array are related as they both handle large integer values but differ in signedness.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="DATAVIEW" target="NEXT.JS APPLICATION">
      <data key="d4">4.0</data>
      <data key="d5">Next.js Application can use DataView to read and write data in ArrayBuffer</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="FUNCTION" target="HANDLER">
      <data key="d4">9.0</data>
      <data key="d5">A handler is a specific implementation of a function that processes requests</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="FUNCTION" target="AWS LAMBDA">
      <data key="d4">9.0</data>
      <data key="d5">Functions in AWS Amplify are executed using AWS Lambda, which handles the execution of the code</data>
      <data key="d6">23f821c071cb4c4cf183f5aac596db35</data>
    </edge>
    <edge source="FUNCTION" target="GRAPHQL">
      <data key="d4">6.0</data>
      <data key="d5">Functions are often used to handle GraphQL queries and mutations in serverless applications</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="FUNCTION" target="AUTHORIZATION RULE">
      <data key="d4">8.0</data>
      <data key="d5">Authorization rules are applied to functions to control access to resources</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="FUNCTION" target="DATA CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">The data client is used within functions to interact with the data source and perform operations</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="FUNCTION" target="DATA ACCESS">
      <data key="d4">8.0</data>
      <data key="d5">Data access is a key function that allows applications to interact with data sources and perform operations</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="FUNCTION" target="CREDENTIALS PROVIDER">
      <data key="d4">8.0</data>
      <data key="d5">The credentials provider is utilized within functions to authenticate and authorize access to resources</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="FUNCTION" target="TRIGGERS">
      <data key="d4">8.0</data>
      <data key="d5">Functions are executed as part of the triggers in AWS Amplify to customize the authentication process</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="FUNCTION" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">Functions are resources defined within AWS Amplify to handle specific backend operations</data>
      <data key="d6">bc4893f2f489d14f0975fa64ffca1df8</data>
    </edge>
    <edge source="CLEARTIMEOUT" target="CLEARINTERVAL">
      <data key="d4">5.0</data>
      <data key="d5">clearInterval and clearTimeout are related as both are used to cancel timed actions in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="DECODEURI" target="ENCODEURI">
      <data key="d4">6.0</data>
      <data key="d5">decodeURI and encodeURI are related as they are both used for encoding and decoding URIs in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="DECODEURICOMPONENT" target="ENCODEURICOMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">decodeURIComponent and encodeURIComponent are related as they are both used for encoding and decoding URI components in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="WEAKMAP" target="WEAKSET">
      <data key="d4">1.0</data>
      <data key="d5">WeakMap and WeakSet are related as they both provide collections with weak references in JavaScript.</data>
      <data key="d6">22aa4f927a16210ebb8804ace28ec79a</data>
    </edge>
    <edge source="HTTPS CERTIFICATE FILE" target="HTTPS KEY FILE">
      <data key="d4">8.0</data>
      <data key="d5">The HTTPS key file is used in conjunction with the HTTPS certificate file to establish secure connections</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="HTTPS CERTIFICATE FILE" target="HTTPS CA FILE">
      <data key="d4">9.0</data>
      <data key="d5">The HTTPS certificate file is verified against the HTTPS CA file to ensure authenticity</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="BUILD" target="START">
      <data key="d4">10.0</data>
      <data key="d5">The build process must be completed before the application can be started in production mode</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="BUILD" target="AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Build is a process in Amplify that prepares applications for deployment</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="INFO" target="LINT">
      <data key="d4">1.0</data>
      <data key="d5">The info command can provide context for any linting issues that may arise during development</data>
      <data key="d6">f85230e3fc997d23be219ba313c72951</data>
    </edge>
    <edge source="INFO" target="SYSTEM">
      <data key="d4">5.0</data>
      <data key="d5">The info command provides details about the system's configuration and environment, which is crucial for troubleshooting.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="INFO" target="AMPLIFY COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components include informational message styles for user guidance</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="INFO" target="ALERT">
      <data key="d4">8.0</data>
      <data key="d5">The Info alert is a specific type of Alert component in Amplify UI that conveys general information</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="EXPERIMENTAL" target="BRUNO THETHE">
      <data key="d4">16.0</data>
      <data key="d5">Bruno Thethe is the creator of the artwork 'Experimental'.
Bruno Thethe created the artwork titled 'Experimental'.</data>
      <data key="d6">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="MY-PROXY.COM" target="SERVER ACTIONS">
      <data key="d4">4.0</data>
      <data key="d5">My-proxy.com is listed as an allowed origin for invoking Server Actions in Next.js</data>
      <data key="d6">10386033375aedc4b4d87fd57d246c1b</data>
    </edge>
    <edge source="SERVER ACTIONS" target="COOKIES">
      <data key="d4">1.0</data>
      <data key="d5">Cookies are often manipulated in Server Actions to manage user sessions and preferences.</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c</data>
    </edge>
    <edge source="SERVER ACTIONS" target="CSRF ATTACKS">
      <data key="d4">6.0</data>
      <data key="d5">Server Actions are designed to mitigate CSRF attacks by ensuring that requests are validated against the origin</data>
      <data key="d6">ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="SERVER ACTIONS" target="HTTP METHOD">
      <data key="d4">6.0</data>
      <data key="d5">Server Actions in Next.js use the POST HTTP method to invoke actions, which helps prevent CSRF vulnerabilities</data>
      <data key="d6">ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="SERVER ACTIONS" target="SERVER ACTIONS ALLOWED ORIGINS">
      <data key="d4">6.0</data>
      <data key="d5">The allowedOrigins setting is part of the Server Actions feature in Next.js, specifying which origins can invoke server actions</data>
      <data key="d6">ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="SERVER ACTIONS" target="POST METHOD">
      <data key="d4">1.0</data>
      <data key="d5">Server Actions in Next.js are invoked using the POST method, which is essential for their functionality and security</data>
      <data key="d6">ebeae91fd404de4ca5981ecf5cc74074</data>
    </edge>
    <edge source="SERVER ACTIONS" target="SIGNUP">
      <data key="d4">1.0</data>
      <data key="d5">The Signup event is managed through Server Actions, which handle the logic for user creation and error handling</data>
      <data key="d6">33239b71158a6566c2b82b6a30b68e82</data>
    </edge>
    <edge source="CUSTOM IMAGE LOADER" target="MY IMAGE LOADER">
      <data key="d4">6.0</data>
      <data key="d5">My Image Loader is an example of a custom image loader function used in Next.js</data>
      <data key="d6">d0b7431b1eedf2a5660218e7e399d8ab</data>
    </edge>
    <edge source="ECMASCRIPT MODULES" target="AMPLIFY GEN 2">
      <data key="d4">5.0</data>
      <data key="d5">Amplify Gen 2 requires the use of ECMAScript modules for backend configuration</data>
      <data key="d6">fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="USESEARCHPARAMS" target="SEARCHBAR">
      <data key="d4">8.0</data>
      <data key="d5">SearchBar uses the useSearchParams hook to access and display search parameters in the dashboard</data>
      <data key="d6">0d45ae64c949dd150906ccaed4b6b5c2</data>
    </edge>
    <edge source="USEROUTER" target="NAVIGATION EVENTS">
      <data key="d4">1.0</data>
      <data key="d5">Navigation events can utilize the useRouter hook to manage navigation state</data>
      <data key="d6">1487c7dd4403a73c173d49bf2f73e2d8</data>
    </edge>
    <edge source="METRIC" target="PERFORMANCE API">
      <data key="d4">7.0</data>
      <data key="d5">Metrics are collected and analyzed using the Performance API</data>
      <data key="d6">bb9110629910b21a122e4dbd23ba9236</data>
    </edge>
    <edge source="USEPATHNAME" target="NAVLINKS">
      <data key="d4">7.0</data>
      <data key="d5">NavLinks utilize the usePathname hook to determine active links based on the current route</data>
      <data key="d6">1d855e055624fb34345331017d371137</data>
    </edge>
    <edge source="UNSTABLE_CACHE" target="FETCHDATA">
      <data key="d4">8.0</data>
      <data key="d5">unstable_cache utilizes the fetchData function to retrieve and cache data</data>
      <data key="d6">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="UNSTABLE_CACHE" target="PARAMETERS">
      <data key="d4">6.0</data>
      <data key="d5">unstable_cache accepts parameters that help identify and manage the cache</data>
      <data key="d6">edbe56d6713ddfcd3f28202ddbe49c7f</data>
    </edge>
    <edge source="PARAMETERS" target="REVALIDATEPATH">
      <data key="d4">1.0</data>
      <data key="d5">Parameters are used in the revalidatePath function to specify the path to be revalidated</data>
      <data key="d6">c38e2432510adf26b03148bb29ed9dda</data>
    </edge>
    <edge source="CALLBACK FUNCTION" target="SERVERLESS FUNCTION">
      <data key="d4">6.0</data>
      <data key="d5">Callback functions are often used in serverless functions to handle asynchronous operations</data>
      <data key="d6">c38e2432510adf26b03148bb29ed9dda</data>
    </edge>
    <edge source="TEAM" target="SCHEMA">
      <data key="d4">1.0</data>
      <data key="d5">The Schema defines the structure of the Team model and its relationships with other models like Member.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="TEAM" target="MEMBER">
      <data key="d4">8.0</data>
      <data key="d5">A Team can have many Members, indicating a one-to-many relationship between the Team and its Members.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="SERVER ACTION" target="SIGNUP FORM">
      <data key="d4">9.0</data>
      <data key="d5">Server Actions are used in the Signup Form to handle the submission and validation of user credentials.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="SERVER ACTION" target="ZOD">
      <data key="d4">6.0</data>
      <data key="d5">Zod can be used within Server Actions to validate the data submitted through forms like the Signup Form.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="SERVER ACTION" target="YUP">
      <data key="d4">1.0</data>
      <data key="d5">Yup can also be utilized in Server Actions for validating form data, similar to Zod.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="SERVER ACTION" target="ROUTER CACHE">
      <data key="d4">1.0</data>
      <data key="d5">Server Actions can invalidate the Router Cache, ensuring that users receive the most up-to-date content</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="SERVER ACTION" target="COOKIES">
      <data key="d4">7.0</data>
      <data key="d5">Cookies can be manipulated within server actions to manage user sessions and preferences</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="SERVER ACTION" target="AUTH">
      <data key="d4">9.0</data>
      <data key="d5">Authentication checks are often performed in server actions to ensure users have the right permissions</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="SERVER ACTION" target="CLOSURES">
      <data key="d4">7.0</data>
      <data key="d5">Closures allow server actions to access variables from their defining scope, enhancing functionality</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="SERVER ACTION" target="ENCRYPTION">
      <data key="d4">9.0</data>
      <data key="d5">Encryption is applied to sensitive data in server actions to protect it from unauthorized access</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="SERVER ACTION" target="NEXT_SERVER_ACTIONS_ENCRYPTION_KEY">
      <data key="d4">1.0</data>
      <data key="d5">The NEXT_SERVER_ACTIONS_ENCRYPTION_KEY variable ensures consistent encryption across server actions</data>
      <data key="d6">4a5b866ffddc7fba2346c94f6c037019</data>
    </edge>
    <edge source="SERVER ACTION" target="PROFILE">
      <data key="d4">5.0</data>
      <data key="d5">Server Actions can redirect users to their profile page after successful operations</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </edge>
    <edge source="SERVER ACTION" target="USERNAME">
      <data key="d4">1.0</data>
      <data key="d5">Server Actions may involve updating a user's username as part of their profile management</data>
      <data key="d6">1d939f19e04dfaa8df3664a2cd4db1f1</data>
    </edge>
    <edge source="PRODUCT" target="CATEGORY">
      <data key="d4">6.0</data>
      <data key="d5">Products are organized into categories for better navigation and retrieval in the web application.</data>
      <data key="d6">9e3cdf604b5960851cad4f9699d3ba89</data>
    </edge>
    <edge source="PRODUCT" target="PRODUCT FORM">
      <data key="d4">7.0</data>
      <data key="d5">Product is the data type being managed and submitted through the Product Form</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="PRODUCT" target="PIANO">
      <data key="d4">1.0</data>
      <data key="d5">Piano is an example of a product that can be submitted through the Product Form</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="PRODUCTS" target="SITEMAP">
      <data key="d4">8.0</data>
      <data key="d5">Sitemaps are generated to include the products available on the website.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="PRODUCTS" target="BASE_URL">
      <data key="d4">1.0</data>
      <data key="d5">BASE_URL is used to construct URLs for the products listed in the generated sitemaps.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="OPEN GRAPH" target="DYNAMIC IMAGE GENERATION">
      <data key="d4">7.0</data>
      <data key="d5">Dynamic Image Generation can be used to create Open Graph images for social media sharing</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="LAYOUT.JS" target="GLOBALS.CSS">
      <data key="d4">7.0</data>
      <data key="d5">layout.js imports globals.css to apply global styles to the application</data>
      <data key="d6">efa0be72e5e017f56fa9efbf06af7e7c</data>
    </edge>
    <edge source="ICON" target="NEXT.JS APPLICATION">
      <data key="d4">7.0</data>
      <data key="d5">The Next.js Application utilizes icons to enhance its user interface</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="ICON" target="MANIFEST.JSON">
      <data key="d4">6.0</data>
      <data key="d5">The manifest.json file includes information about the icons used in the web application</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="ICON" target="SELECTFIELD">
      <data key="d4">1.0</data>
      <data key="d5">Icon enhances the visual aspect of the SelectField, indicating its dropdown functionality</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="ICON" target="ALERT">
      <data key="d4">1.0</data>
      <data key="d5">Icons are used in alerts to visually represent the type of alert being displayed, enhancing user understanding</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ICON" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify provides tools that allow developers to create and customize icons for their applications</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7</data>
    </edge>
    <edge source="ICON" target="REACT ICONS">
      <data key="d4">8.0</data>
      <data key="d5">React Icons provides a variety of icons that can be used in applications to represent actions or concepts visually</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7</data>
    </edge>
    <edge source="ICON" target="TEXT">
      <data key="d4">6.0</data>
      <data key="d5">Icons can accompany text to enhance understanding and provide visual cues in user interfaces</data>
      <data key="d6">6edc6c7e13a23d971e48b75724b50d5f</data>
    </edge>
    <edge source="ICON" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">The Icon component is included in Amplify UI for use in other components like Buttons</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="GOOGLE" target="CUSTOM CREDENTIALS PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">The custom credentials provider allows users to sign in using their Google accounts</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="GOOGLE" target="AMAZON COGNITO">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito integrates with Google to provide authentication services through Google Sign-In.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="GOOGLE" target="DEVELOPER ACCOUNT">
      <data key="d4">7.0</data>
      <data key="d5">A developer account is required to create and manage applications on Google for authentication purposes.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="GOOGLE" target="GEN 1">
      <data key="d4">7.0</data>
      <data key="d5">Google is one of the authentication options available for users in Gen 1</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="GOOGLE" target="GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Google is one of the authentication options available for users in Gen 2</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="GOOGLE" target="AUTHENTICATOR">
      <data key="d4">1.0</data>
      <data key="d5">The Authenticator allows users to sign in using their Google accounts.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </edge>
    <edge source="APPLE" target="GEN 1">
      <data key="d4">7.0</data>
      <data key="d5">Apple is one of the authentication options available for users in Gen 1</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="APPLE" target="GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Apple is one of the authentication options available for users in Gen 2</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="APPLE" target="AUTHENTICATOR">
      <data key="d4">5.0</data>
      <data key="d5">The Authenticator allows users to sign in using their Apple accounts.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </edge>
    <edge source="APPLE" target="FRUIT">
      <data key="d4">9.0</data>
      <data key="d5">Apple is one of the options available for selection in the Fruit category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="APPLE" target="FRUITS">
      <data key="d4">7.0</data>
      <data key="d5">Apple is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="APPLE" target="AUTOCOMPLETE">
      <data key="d4">7.0</data>
      <data key="d5">Apple is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="GENERATESITEMAPS" target="SITEMAP">
      <data key="d4">8.0</data>
      <data key="d5">The generateSitemaps function is responsible for creating the sitemap files that list the URLs of the website's content.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="GENERATE IMAGE METADATA" target="IMAGE RESPONSE">
      <data key="d4">1.0</data>
      <data key="d5">Image Response is utilized within the Generate Image Metadata function to create image outputs</data>
      <data key="d6">d0c06a113103b401eb977025a69f0cee</data>
    </edge>
    <edge source="SITEMAP" target="GET PRODUCTS">
      <data key="d4">8.0</data>
      <data key="d5">Get Products function is used to fetch product data that is then utilized in the sitemap generation process</data>
      <data key="d6">d0c06a113103b401eb977025a69f0cee</data>
    </edge>
    <edge source="SITEMAP" target="GETPRODUCTS">
      <data key="d4">7.0</data>
      <data key="d5">The getProducts function fetches product data that is then included in the sitemap for search engine indexing.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="SITEMAP" target="METADATA ROUTE">
      <data key="d4">6.0</data>
      <data key="d5">The Metadata Route is used to define the structure and content of the sitemap for web pages in Next.js.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="SITEMAP" target="SITEMAP ID">
      <data key="d4">5.0</data>
      <data key="d5">The Sitemap ID is used to identify and manage different sitemap files generated for the application.</data>
      <data key="d6">c22dbf534c525258e8788bff5c1c5e66</data>
    </edge>
    <edge source="SITEMAP" target="RSS FEED">
      <data key="d4">4.0</data>
      <data key="d5">An RSS feed can be included in a sitemap to help search engines discover new content updates</data>
      <data key="d6">a67099d1f0ea66a70c07e9595443231a</data>
    </edge>
    <edge source="IMAGE RESPONSE" target="OPENGRAPH">
      <data key="d4">1.0</data>
      <data key="d5">Open Graph images can be generated using Image Response, which enhances how content is displayed on social media platforms.</data>
      <data key="d6">9b92d19ee6176284aa500c2d4bcd28a4</data>
    </edge>
    <edge source="DATA CACHE" target="CACHING">
      <data key="d4">8.0</data>
      <data key="d5">Data Cache is one of the caching mechanisms that Next.js employs to enhance performance</data>
      <data key="d6">dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="DATA CACHE" target="REVALIDATION">
      <data key="d4">1.0</data>
      <data key="d5">Revalidation is a process that can be applied to the Data Cache to ensure data freshness</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="DATA CACHE" target="ROUTER CACHE">
      <data key="d4">11.0</data>
      <data key="d5">Router Cache and Data Cache work together to optimize the performance of Next.js applications
Data Cache and Router Cache work together to enhance the performance of web applications by reducing load times.</data>
      <data key="d6">03988816c99b05a5845a71e1da91994c,c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="COOKIES" target="USER SESSION">
      <data key="d4">8.0</data>
      <data key="d5">User sessions are often stored in cookies to maintain state across requests</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="NEXT.JS APPLICATION" target="MANIFEST.JSON">
      <data key="d4">8.0</data>
      <data key="d5">The Next.js Application uses manifest.json to provide essential metadata for the web application</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="NEXT.JS APPLICATION" target="ARRAYBUFFER">
      <data key="d4">4.0</data>
      <data key="d5">Next.js Application can utilize ArrayBuffer for processing binary data</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="NEXT.JS APPLICATION" target="TYPEDARRAY">
      <data key="d4">4.0</data>
      <data key="d5">Next.js Application can work with TypedArray for efficient binary data manipulation</data>
      <data key="d6">ebf2bae9a2cdf5d2e3134ed7001d0238</data>
    </edge>
    <edge source="FETCH REQUESTS" target="CACHE OPTION">
      <data key="d4">1.0</data>
      <data key="d5">Cache options can be set for fetch requests to optimize data retrieval and improve application performance</data>
      <data key="d6">64c02a535c1519ef24ded4a2a368f2be</data>
    </edge>
    <edge source="CONFIG" target="AWS AMPLIFY">
      <data key="d4">9.0</data>
      <data key="d5">The configuration object is essential for setting up AWS Amplify in the application</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="AUTH" target="DEFAULT.JS">
      <data key="d4">5.0</data>
      <data key="d5">Default.js serves as a fallback for the @auth slot when no specific authentication route is active</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="AUTH" target="CHILDREN">
      <data key="d4">6.0</data>
      <data key="d5">Children are rendered within the @auth slot, allowing for nested components in the authentication layout</data>
      <data key="d6">99d758fe4e77c64e3d6461268ba8b6d4</data>
    </edge>
    <edge source="AUTH" target="AMPLIFY">
      <data key="d4">27.0</data>
      <data key="d5">AWS Amplify integrates with Auth to manage user authentication and authorization in applications.
Auth is a key feature of Amplify, providing user authentication and management capabilitiesAmplify provides authentication features through its Auth module, simplifying user management</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc,c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AUTH" target="AMPLIFY BACKEND">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Backend integrates with Auth to provide authentication services for applications.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AUTH" target="USER POOL">
      <data key="d4">8.0</data>
      <data key="d5">Auth utilizes User Pools to manage user authentication and access control.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AUTH" target="AWS AMPLIFY">
      <data key="d4">32.0</data>
      <data key="d5">Auth is a key resource of AWS Amplify that provides authentication capabilities for applications
AWS Amplify uses Auth for managing user authentication and authorization in applications
AWS Amplify includes authentication features to secure access to applications
AWS Amplify integrates with the Auth resource to manage user authentication in applications.</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef,1ef9b6a9263edfd718636bcbc29f4a72,502c34bc5ff7e00594c0a0d9df58834d,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AUTH" target="FIREHOSE POLICY">
      <data key="d4">6.0</data>
      <data key="d5">Auth manages the roles that are attached to the Firehose Policy for user permissions</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="AUTH" target="AUTHORIZATION RULES">
      <data key="d4">6.0</data>
      <data key="d5">Auth configuration includes authorization rules to manage user access</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AUTH" target="VERIFICATION EMAIL">
      <data key="d4">1.0</data>
      <data key="d5">Verification email is part of the authentication process for confirming user accounts</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AUTH" target="COGNITO IDENTITY POOL">
      <data key="d4">8.0</data>
      <data key="d5">Cognito Identity Pool is used by the Auth resource to manage user authentication and authorization</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="AUTH" target="STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">Auth manages access to the storage resources defined in the AWS CDK application, ensuring secure data handling.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="AUTH" target="AMPLIFY GEN 2">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Gen 2 includes built-in support for authentication and authorization through the Auth category</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AUTH" target="DELETE USER">
      <data key="d4">9.0</data>
      <data key="d5">Auth service is used to handle the deletion of user accounts when the Delete User event is triggered</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="AUTH" target="AWS AMPLIFY UI REACT">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify UI React integrates with the Auth service to manage user authentication in applications.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="PUBLIC DASHBOARD" target="AUTH DASHBOARD">
      <data key="d4">4.0</data>
      <data key="d5">Public Dashboard and Auth Dashboard are two different routes based on user authentication</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="NAVLINK" target="REDLINK">
      <data key="d4">1.0</data>
      <data key="d5">RedLink is a styled component used within the NavLink for navigation purposes</data>
      <data key="d6">dc10462a75be57d14f05bf6a26ba9731</data>
    </edge>
    <edge source="DEFAULT.JS" target="ZACK">
      <data key="d4">1.0</data>
      <data key="d5">Zack is used as an example in the context of dynamic routing in default.js</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="DEFAULT.JS" target="CHILDREN">
      <data key="d4">5.0</data>
      <data key="d5">Children is an implicit slot that requires a default.js file for rendering when the active state cannot be recovered</data>
      <data key="d6">7bf88bf4f2097fabdb3b57f7074def08</data>
    </edge>
    <edge source="ONERROR" target="FORM LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">The onError event is part of the form lifecycle, managing errors that occur during submission.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="CHILDREN" target="MODAL">
      <data key="d4">8.0</data>
      <data key="d5">The modal displays the children components passed to it, rendering them within the modal's content area</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="AUTHOR" target="NEXT IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">The author discusses the Next Image component in the context of responsive image handling in web development</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="NEXT IMAGE" target="RESPONSIVE IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">Next Image is designed to create responsive images that adapt to different viewport sizes</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="NEXT IMAGE" target="DYNAMIC IMAGE">
      <data key="d4">6.0</data>
      <data key="d5">Next Image can handle dynamic images by providing width and height for correct aspect ratios</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="NEXT IMAGE" target="STATIC IMAGE">
      <data key="d4">1.0</data>
      <data key="d5">Next Image can also work with static images, allowing for responsive design</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="NEXT IMAGE" target="CSS MEDIA QUERY">
      <data key="d4">7.0</data>
      <data key="d5">Next Image can utilize CSS media queries to serve different images based on the user's device or screen size</data>
      <data key="d6">5b4f484288a596801b79828ce9d0ba11</data>
    </edge>
    <edge source="GET METHOD" target="MEMOIZATION">
      <data key="d4">6.0</data>
      <data key="d5">The GET method in fetch requests is subject to memoization in React, optimizing performance</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="GET METHOD" target="API GATEWAY">
      <data key="d4">9.0</data>
      <data key="d5">GET method is one of the HTTP methods that can be used with APIs managed by API Gateway.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="SEARCH PAGE" target="LOADING UI">
      <data key="d4">7.0</data>
      <data key="d5">The loading UI is shown on the search page while results are being fetched after form submission</data>
      <data key="d6">439d5be2d39a5b9cedb135d149974680</data>
    </edge>
    <edge source="SEARCH BUTTON" target="SEARCHFIELD">
      <data key="d4">8.0</data>
      <data key="d5">The Search Button is part of the SearchField component, allowing users to initiate a search</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="POSTPAGE" target="GETPOST">
      <data key="d4">1.0</data>
      <data key="d5">The GetPost event is used to fetch the data displayed on the PostPage</data>
      <data key="d6">02d5f971b1d69adbfdf2a0cfc42447f7</data>
    </edge>
    <edge source="MERGE CONFLICTS" target="MIGRATION PROCESS">
      <data key="d4">6.0</data>
      <data key="d5">The migration process aims to minimize merge conflicts that can arise during data or application integration</data>
      <data key="d6">95c2ea5a0f820f012ba0ea521843d34d</data>
    </edge>
    <edge source="HOME PAGE" target="PAGE COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Home Page is a specific instance of a Page Component in a Next.js application</data>
      <data key="d6">8a317609f77f5ace7ebd5473071b9693</data>
    </edge>
    <edge source="CACHING" target="REQUEST MEMOIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Request Memoization is a specific caching mechanism used in Next.js to optimize data fetching</data>
      <data key="d6">dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="CACHING" target="FULL ROUTE CACHE">
      <data key="d4">8.0</data>
      <data key="d5">Full Route Cache is another caching mechanism that helps improve performance in Next.js</data>
      <data key="d6">dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="CACHING" target="ROUTER CACHE">
      <data key="d4">1.0</data>
      <data key="d5">Router Cache is a caching mechanism that aids in reducing server requests during navigation in Next.js</data>
      <data key="d6">dc07058d355dcb6432e4280af3eba3d0</data>
    </edge>
    <edge source="SECURITY" target="AUTH LIBRARY">
      <data key="d4">9.0</data>
      <data key="d5">The Auth library implements security measures to protect user sessions and ensure safe authentication processes</data>
      <data key="d6">715bdaaae1cb7470e0e54efac993beb5</data>
    </edge>
    <edge source="NEXT BUILD" target="NEXT START">
      <data key="d4">9.0</data>
      <data key="d5">Next build must be run before Next start to ensure the application is optimized for production.</data>
      <data key="d6">aaea03d7a1385785fae028f24c52f8a5</data>
    </edge>
    <edge source="SIGNUP FORM" target="USER CREDENTIALS">
      <data key="d4">8.0</data>
      <data key="d5">User credentials are captured through the Signup Form for the purpose of creating a new account.</data>
      <data key="d6">ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="SIGNUP FORM" target="AUTHENTICATION PROVIDER">
      <data key="d4">8.0</data>
      <data key="d5">The Signup Form interacts with an Authentication Provider to create a new user account based on the submitted credentials.
The Signup Form submits user data to the Authentication Provider for account creation</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7,ca20f99a0d6214b86e1868fcc2725709</data>
    </edge>
    <edge source="SIGNUP FORM" target="HASHED PASSWORD">
      <data key="d4">6.0</data>
      <data key="d5">The Signup Form processes the user's password to create a Hashed Password for secure storage</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="SIGNUP FORM" target="FORM STATE">
      <data key="d4">7.0</data>
      <data key="d5">The Form State is updated based on user interactions with the Signup Form</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="HASHED PASSWORD" target="BCRYPT">
      <data key="d4">9.0</data>
      <data key="d5">Bcrypt is used to create the Hashed Password from the user's plain text password</data>
      <data key="d6">17ef311a22a51eef0f55aaf7d03a5ed7</data>
    </edge>
    <edge source="SESSION MANAGEMENT LOGIC" target="USER SESSION">
      <data key="d4">9.0</data>
      <data key="d5">Session management logic is responsible for creating, updating, and deleting user sessions</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="USER SESSION" target="SESSION SECRET">
      <data key="d4">1.0</data>
      <data key="d5">The session secret is used to encrypt and decrypt user session data, ensuring security</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="USER SESSION" target="SESSION PAYLOAD">
      <data key="d4">8.0</data>
      <data key="d5">The session payload is part of the user session, containing essential user information</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="USER SESSION" target="ENCRYPTION">
      <data key="d4">9.0</data>
      <data key="d5">Encryption is used to secure the user session data, ensuring that it cannot be accessed by unauthorized parties</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="USER SESSION" target="DECRYPTION">
      <data key="d4">9.0</data>
      <data key="d5">Decryption is necessary to access the user session data after it has been encrypted</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="USER SESSION" target="DATABASE SESSIONS">
      <data key="d4">1.0</data>
      <data key="d5">Database sessions manage user sessions by storing session data in a database for persistence</data>
      <data key="d6">d0da48d43a184db7d07729aa6047ca3d</data>
    </edge>
    <edge source="VERIFYSESSION" target="GETUSER">
      <data key="d4">8.0</data>
      <data key="d5">getUser calls verifySession to check if a user session is active</data>
      <data key="d6">407c79602db9cac967822f4d34fa94d2</data>
    </edge>
    <edge source="UNIT TESTING" target="INTEGRATION TESTING">
      <data key="d4">7.0</data>
      <data key="d5">Integration testing follows unit testing to ensure that combined components work together as expected</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="INTEGRATION TESTING" target="END-TO-END TESTING">
      <data key="d4">6.0</data>
      <data key="d5">End-to-End testing encompasses integration testing by validating the complete user experience across all components</data>
      <data key="d6">fa740e66ec54695622178b0c41a679a4</data>
    </edge>
    <edge source="GLOBAL EXCHANGE" target="AMPLIFY COMPONENTS">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Components may participate in the Global Exchange by offering their products or services related to application development</data>
      <data key="d6">d5db54aea339e57737c40468d9473a13</data>
    </edge>
    <edge source="CARD" target="STYLE PROPS">
      <data key="d4">13.0</data>
      <data key="d5">Style Props can be applied to the Card component to modify its appearanceThe Card component can utilize Style Props for styling adjustments</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="CARD" target="THEME PROVIDER">
      <data key="d4">12.0</data>
      <data key="d5">Card is a component that can be used within the ThemeProvider to display themed content.
The Card component can utilize the theme defined in the ThemeProvider for consistent styling</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33,b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="CARD" target="TEXT">
      <data key="d4">12.0</data>
      <data key="d5">Text is often used within a Card component to present information in a structured manner.
Text components can be included in a Card to provide descriptive content</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33,868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="AMPLIFY UI">
      <data key="d4">16.0</data>
      <data key="d5">The Card component is a feature of Amplify UI that allows for organized content display
The Card is a component provided by Amplify UI for building user interfaces</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5,3bf357b72dac2808e7ba2223ab2c4745</data>
    </edge>
    <edge source="CARD" target="STORAGE MANAGER">
      <data key="d4">6.0</data>
      <data key="d5">The Storage Manager uses Card components to organize and present content in a visually appealing manner.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="CARD" target="NEW ZEALAND">
      <data key="d4">3.0</data>
      <data key="d5">The Card component promotes outdoor adventures in New Zealand, showcasing activities like white water rafting</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify provides the Card component for developers to use in their applications</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="FLEX">
      <data key="d4">1.0</data>
      <data key="d5">The Card component can be used within a Flex layout to organize content effectively</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="VIEW">
      <data key="d4">5.0</data>
      <data key="d5">The Card component is typically wrapped in a View component for layout and styling purposes</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="HEADING">
      <data key="d4">5.0</data>
      <data key="d5">Headings can be used within a Card component to provide titles or important information</data>
      <data key="d6">868b364b65a596f02a214b12ca0cbb6a</data>
    </edge>
    <edge source="CARD" target="CARD THEME EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Card Theme Example demonstrates the use of the Card component in Amplify UI</data>
      <data key="d6">3bf357b72dac2808e7ba2223ab2c4745</data>
    </edge>
    <edge source="CARD" target="CARD CLASS NAME EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Card Class Name Example shows how to customize the Card component using CSS classes</data>
      <data key="d6">3bf357b72dac2808e7ba2223ab2c4745</data>
    </edge>
    <edge source="CARD" target="CARD STYLE PROPS EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Card Style Props Example illustrates the customization of the Card component using style props</data>
      <data key="d6">3bf357b72dac2808e7ba2223ab2c4745</data>
    </edge>
    <edge source="OPEN_TELEMETRY" target="NODEJS">
      <data key="d4">1.0</data>
      <data key="d5">OpenTelemetry can be used with Node.js applications to enhance observability and performance tracking.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="NODEJS" target="EXPORTER">
      <data key="d4">1.0</data>
      <data key="d5">Node.js applications can utilize exporters to send telemetry data to observability backends.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="NODEJS" target="AMPLIFY UI">
      <data key="d4">1.0</data>
      <data key="d5">Amplify UI relies on Node.js for server-side operations and development environments.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="EXPORTER" target="OTEL_COLLECTOR">
      <data key="d4">8.0</data>
      <data key="d5">Exporters send telemetry data to the OpenTelemetry Collector for further processing and analysis.</data>
      <data key="d6">40b01d3865b7f98f3123b0d905e2e01d</data>
    </edge>
    <edge source="CUSTOM_SPANS" target="GETVALUE">
      <data key="d4">5.0</data>
      <data key="d5">The getValue function is used within a custom span to fetch data, demonstrating the use of spans in tracking operations</data>
      <data key="d6">7b388f79ffb6d5d09b2f36b2618f109d</data>
    </edge>
    <edge source="MODAL" target="PHOTO">
      <data key="d4">8.0</data>
      <data key="d5">A modal can be used to display a photo when a user interacts with it in a gallery</data>
      <data key="d6">1e914b4d28a0e4ccc7e1e87c2504a6f5</data>
    </edge>
    <edge source="MODAL" target="MODAL CLOSING">
      <data key="d4">7.0</data>
      <data key="d5">The modal closing event occurs when a user dismisses the modal, often through a button click</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="ROBOTO" target="NEXT FONT">
      <data key="d4">8.0</data>
      <data key="d5">Roboto is a font that can be imported and used through the Next Font library in web applications</data>
      <data key="d6">aee85ce10da1e12fe3e8ba84ec64e808</data>
    </edge>
    <edge source="FILE-BASED METADATA" target="STATIC METADATA">
      <data key="d4">5.0</data>
      <data key="d5">File-based metadata is a type of static metadata that can be used in Next.js applications</data>
      <data key="d6">deac651e6b6d2334bf79cf4c59d8ba7c</data>
    </edge>
    <edge source="VIDEO TAG" target="IFRAME TAG">
      <data key="d4">5.0</data>
      <data key="d5">Both the &lt;video&gt; and &lt;iframe&gt; tags are used for embedding media content in web pages, but they serve different types of content (video files vs. external sources).</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="VIDEO TAG" target="HTML5">
      <data key="d4">9.0</data>
      <data key="d5">The &lt;video&gt; tag is a feature of HTML5, which allows for the embedding of video content directly in web pages.</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="VIDEO TAG" target="ACCESSIBLE CONTROLS">
      <data key="d4">8.0</data>
      <data key="d5">Accessible controls are essential for the &lt;video&gt; tag to ensure that all users can interact with video content effectively.</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="IFRAME TAG" target="VIDEO HOSTING SERVICES">
      <data key="d4">1.0</data>
      <data key="d5">Video hosting services often utilize the &lt;iframe&gt; tag to allow users to embed videos on their own websites easily.</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="VERCEL BLOB" target="FFMPEG">
      <data key="d4">6.0</data>
      <data key="d5">FFmpeg can be used to compress videos before uploading them to Vercel Blob for hosting</data>
      <data key="d6">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="VERCEL BLOB" target="VIDEO HOSTING">
      <data key="d4">8.0</data>
      <data key="d5">Vercel Blob provides a solution for video hosting, allowing users to upload and manage video files</data>
      <data key="d6">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="CAPTIONS" target="SUBTITLES">
      <data key="d4">6.0</data>
      <data key="d5">Subtitles and captions both enhance video accessibility, but captions provide additional context for non-dialogue audio, making them complementary features.</data>
      <data key="d6">29423d52dd581b926bd5f6be5dac2f66</data>
    </edge>
    <edge source="SUBTITLES" target="VIDEO HOSTING">
      <data key="d4">7.0</data>
      <data key="d5">Subtitles can be integrated into videos hosted on platforms like Vercel Blob</data>
      <data key="d6">f1523e8a9fafd09d83cab1c6c14f3955</data>
    </edge>
    <edge source="FULL ROUTE CACHE" target="ROUTER CACHE">
      <data key="d4">6.0</data>
      <data key="d5">Router Cache and Full Route Cache are both caching mechanisms that improve navigation speed in Next.js</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="ROUTER CACHE" target="USE_ROUTER HOOK">
      <data key="d4">7.0</data>
      <data key="d5">The useRouter hook allows developers to manipulate the Router Cache for better navigation control</data>
      <data key="d6">c55d8ff0ea71716df1fdfba115d52035</data>
    </edge>
    <edge source="SERVER REQUEST" target="MEMOIZATION">
      <data key="d4">7.0</data>
      <data key="d5">Memoization applies to server requests in React to avoid duplicate requests during rendering</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="MEMOIZATION" target="POST METHOD">
      <data key="d4">4.0</data>
      <data key="d5">The POST method is not memoized by default in React, which is a key distinction from GET requests</data>
      <data key="d6">0a535ba637862aaba58115b1f3e1a96b</data>
    </edge>
    <edge source="POST METHOD" target="API GATEWAY">
      <data key="d4">1.0</data>
      <data key="d5">POST method is another HTTP method that can be used with APIs managed by API Gateway.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="DYNAMIC FUNCTIONS" target="CACHED">
      <data key="d4">6.0</data>
      <data key="d5">Cached data can be used in dynamic functions to improve the efficiency of data fetching during rendering.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="DYNAMIC FUNCTIONS" target="UNCACHED">
      <data key="d4">1.0</data>
      <data key="d5">Uncached data is fetched in real-time by dynamic functions, impacting the rendering strategy of a route.</data>
      <data key="d6">729c604ddd30e8eb3491209028c25dde</data>
    </edge>
    <edge source="API KEY" target="IAM">
      <data key="d4">5.0</data>
      <data key="d5">API Keys are managed through IAM to control access to AWS services</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="API KEY" target="AUTH MODE">
      <data key="d4">1.0</data>
      <data key="d5">API Key is one of the authentication methods specified in the Auth Mode</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="API KEY" target="ECHO HANDLER">
      <data key="d4">1.0</data>
      <data key="d5">The Echo Handler can be accessed using an API Key for authorization in AWS Amplify</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="API KEY" target="PUBLIC DATA ACCESS">
      <data key="d4">6.0</data>
      <data key="d5">Public data access is implemented using an API key to grant access to the API</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="API KEY" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can utilize API Keys for authentication in its applications</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="SERVER-ONLY" target="LIB/DATA.JS">
      <data key="d4">8.0</data>
      <data key="d5">lib/data.js is a module that must be marked as server-only to prevent its use in Client Components.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="ACME-CAROUSEL" target="GALLERY">
      <data key="d4">7.0</data>
      <data key="d5">Gallery uses the Carousel component from the acme-carousel package to display pictures.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="THEME CONTEXT" target="THEME PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">Theme Provider creates the Theme Context, allowing components to access the current theme value.</data>
      <data key="d6">3fb45c793f55da9bb4eda5392e25aafe</data>
    </edge>
    <edge source="THEME PROVIDER" target="AMPLIFY UI">
      <data key="d4">96.0</data>
      <data key="d5">Theme Provider is a component within Amplify UI that manages theme customization
The ThemeProvider is a component provided by Amplify UI for managing themes and color modes in React applications.
The ThemeProvider is a component of the Amplify UI library that allows for theming applications
The ThemeProvider is a part of Amplify UI that allows for theming and customization
Amplify UI utilizes ThemeProvider to manage and apply themes across its components
The ThemeProvider allows customization of the Amplify UI components' appearance
ThemeProvider is a component that is part of the Amplify UI library for theming
ThemeProvider is a component that provides theming capabilities within Amplify UI
ThemeProvider is a component in Amplify UI that enables the application of themes to child components
Theme Provider is a component that enhances the styling capabilities of Amplify UI components
Theme Provider is part of the Amplify UI library that provides theming for components
Theme Provider is a component in Amplify UI that manages theming
The Theme Provider is a part of Amplify UI that manages the directionality of text and layout
ThemeProvider is used within Amplify UI to apply consistent theming across components
The ThemeProvider is a component within Amplify UI that allows for theme customization
The ThemeProvider component in Amplify UI allows for customization of the application's theme</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c,06fd00c0023b38a04bba794fae7ed356,1a2c25b18b52cc9adff7a263b890a3b5,40ccefaf714c8eadcebd508c051c9190,52fc958abba47a16871f909ed3cc2d5a,6264f18714899ee18445e9c4535f5ff2,717f3b1fb6a6ce86c291aca158771f33,7eb4739e8bed8bf13646d7e252c1ae14,818fcb4044a83bd6eead8a24e57319ad,85d9171dd6e70ffdb5803e227ecacbc4,a5e50f469dd57f00c706f3dcd5894c37,ac0c424efc84163fec05823d42352599,b8276fb595f7138780baf2d76c97bb37,b9eb6db49e67c5d8dd0f95139d465c50,d26ffe8f4908cd05e7882cd4223c3490,f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="THEME PROVIDER" target="DEFAULT DARK MODE">
      <data key="d4">7.0</data>
      <data key="d5">Default Dark Mode is a feature that can be applied using the ThemeProvider in Amplify UI.</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33</data>
    </edge>
    <edge source="THEME PROVIDER" target="SYSTEM DARK MODE">
      <data key="d4">7.0</data>
      <data key="d5">System Dark Mode is a feature that can be set using the ThemeProvider to respect the user's OS preferences.</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33</data>
    </edge>
    <edge source="THEME PROVIDER" target="CUSTOM DARK MODE">
      <data key="d4">7.0</data>
      <data key="d5">Custom Dark Mode settings can be implemented through the ThemeProvider to allow for personalized dark mode experiences.</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33</data>
    </edge>
    <edge source="THEME PROVIDER" target="COLOR MODE">
      <data key="d4">1.0</data>
      <data key="d5">Color Mode is a prop that can be passed to the ThemeProvider to determine the current theme of the application.</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33</data>
    </edge>
    <edge source="THEME PROVIDER" target="CUSTOM THEME">
      <data key="d4">8.0</data>
      <data key="d5">The custom theme can be applied using the ThemeProvider component in Amplify UI
Custom Theme is defined and applied through the Theme Provider to style components</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a,b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="THEME PROVIDER" target="HEADING">
      <data key="d4">6.0</data>
      <data key="d5">The Heading component can be styled according to the theme set in the ThemeProvider</data>
      <data key="d6">b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="THEME PROVIDER" target="TEXT">
      <data key="d4">1.0</data>
      <data key="d5">The Text component can be styled using the theme values provided by the ThemeProvider</data>
      <data key="d6">b8276fb595f7138780baf2d76c97bb37</data>
    </edge>
    <edge source="THEME PROVIDER" target="AWS AMPLIFY">
      <data key="d4">22.0</data>
      <data key="d5">The Theme Provider is a component that is part of the AWS Amplify UI for customizing themes
Theme Provider is used within AWS Amplify applications to manage and apply consistent styling across components
The ThemeProvider component is part of the AWS Amplify UI library, allowing for theme customization
ThemeProvider is a component in AWS Amplify that allows for theming of UI components.</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478,a3d37007c833039158d1e1720cb62466,d700fb2336ddc0a563736b65003c9d4f,d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="THEME PROVIDER" target="THEMING">
      <data key="d4">8.0</data>
      <data key="d5">Theming is implemented through the Theme Provider, which applies custom styles to components</data>
      <data key="d6">d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="THEME PROVIDER" target="MYTHEME">
      <data key="d4">8.0</data>
      <data key="d5">MyTheme is passed to the ThemeProvider to customize the appearance of Amplify UI components</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="THEME PROVIDER" target="ACCOUNT SETTINGS">
      <data key="d4">7.0</data>
      <data key="d5">Theme Provider can be used to customize the appearance of the Account Settings component</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="THEME PROVIDER" target="PAGINATION">
      <data key="d4">1.0</data>
      <data key="d5">The Theme Provider component is used to apply a custom theme to the Pagination component</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="THEME PROVIDER" target="RADIOGROUPFIELD">
      <data key="d4">7.0</data>
      <data key="d5">Theme Provider wraps the RadioGroupField to provide consistent theming and styling</data>
      <data key="d6">6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="THEME PROVIDER" target="PHONE NUMBER FIELD">
      <data key="d4">8.0</data>
      <data key="d5">The Theme Provider is used to apply a theme to the Phone Number Field component.</data>
      <data key="d6">3c1da97b232e76bcfabe7b7c980f2a33</data>
    </edge>
    <edge source="THEME PROVIDER" target="PASSWORD FIELD">
      <data key="d4">16.0</data>
      <data key="d5">The Password Field is styled and rendered within the context provided by the Theme Provider, ensuring consistent design.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="THEME PROVIDER" target="MENU">
      <data key="d4">6.0</data>
      <data key="d5">ThemeProvider applies a theme to the Menu component, customizing its appearance</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="THEME PROVIDER" target="THEME">
      <data key="d4">9.0</data>
      <data key="d5">Theme Provider uses Theme to apply consistent styling across components</data>
      <data key="d6">6264f18714899ee18445e9c4535f5ff2</data>
    </edge>
    <edge source="THEME PROVIDER" target="RIGHT TO LEFT">
      <data key="d4">6.0</data>
      <data key="d5">The Theme Provider in Amplify UI allows developers to set the direction of text to Right to Left for appropriate language support</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="THEME PROVIDER" target="LEFT TO RIGHT">
      <data key="d4">1.0</data>
      <data key="d5">The Theme Provider in Amplify UI allows developers to set the direction of text to Left to Right for appropriate language support</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="GALLERY" target="PHOTO">
      <data key="d4">9.0</data>
      <data key="d5">A gallery contains multiple photos for users to view and interact with</data>
      <data key="d6">1e914b4d28a0e4ccc7e1e87c2504a6f5</data>
    </edge>
    <edge source="CLIENTCOMPONENT" target="SERVERCOMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">ClientComponent and ServerComponent are used together in Next.js to separate client-side and server-side rendering</data>
      <data key="d6">2e44942744c40cf6e169212e822438d5</data>
    </edge>
    <edge source="TABLE" target="DYNAMODB">
      <data key="d4">7.0</data>
      <data key="d5">The Todo Table is a specific table within DynamoDB that stores data relevant to the application.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="TABLE" target="AMPLIFY UI">
      <data key="d4">9.0</data>
      <data key="d5">Table is a component provided by the Amplify UI library for React
Table is another component provided by Amplify UI for React for displaying structured data</data>
      <data key="d6">52fc958abba47a16871f909ed3cc2d5a,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </edge>
    <edge source="TABLE" target="AMPLIFY UI FOR REACT">
      <data key="d4">8.0</data>
      <data key="d5">The Table component is part of the Amplify UI for React library, which provides various UI components for React applications.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="CITRUS">
      <data key="d4">7.0</data>
      <data key="d5">Citrus fruits are displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="STONE FRUIT">
      <data key="d4">7.0</data>
      <data key="d5">Stone fruits are displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="BERRY">
      <data key="d4">1.0</data>
      <data key="d5">Berries are displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="ORANGE">
      <data key="d4">7.0</data>
      <data key="d5">Orange is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="NECTARINE">
      <data key="d4">7.0</data>
      <data key="d5">Nectarine is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="RASPBERRY">
      <data key="d4">7.0</data>
      <data key="d5">Raspberry is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="GRAPEFRUIT">
      <data key="d4">7.0</data>
      <data key="d5">Grapefruit is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="APRICOT">
      <data key="d4">7.0</data>
      <data key="d5">Apricot is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="BLUEBERRY">
      <data key="d4">7.0</data>
      <data key="d5">Blueberry is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="LIME">
      <data key="d4">7.0</data>
      <data key="d5">Lime is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="PEACH">
      <data key="d4">7.0</data>
      <data key="d5">Peach is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="STRAWBERRY">
      <data key="d4">1.0</data>
      <data key="d5">Strawberry is displayed in the Table component as part of the tabular data.</data>
      <data key="d6">dce893dfb435d8bb64c3de3aa22630a5</data>
    </edge>
    <edge source="TABLE" target="TABLEHEAD">
      <data key="d4">8.0</data>
      <data key="d5">The TableHead is a component that is part of the Table structure, defining the header for the table</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLE" target="TABLEROW">
      <data key="d4">8.0</data>
      <data key="d5">TableRow is a component that is part of the Table structure, representing a row of data</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLE" target="TABLEBODY">
      <data key="d4">17.0</data>
      <data key="d5">TableBody is a component that is part of the Table structure, containing the data rows
TableBody is a part of the Table component that holds the rows of data</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </edge>
    <edge source="TABLE" target="HIGHLIGHTONHOVER">
      <data key="d4">7.0</data>
      <data key="d5">HighlightOnHover is a property that can be applied to the Table component to enhance user experience</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLE" target="THEME">
      <data key="d4">6.0</data>
      <data key="d5">The Theme can be applied to the Table component to customize its appearance</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLE" target="SPANEXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">SpanExample illustrates how to use the Table component to create complex layouts with spanning cells</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLE" target="GLOBAL STYLING TABLE">
      <data key="d4">7.0</data>
      <data key="d5">The Global Styling Table is a specific implementation of a table that utilizes the general table structure for displaying data</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="TABLE BODY">
      <data key="d4">8.0</data>
      <data key="d5">The Table Body is a component that contains the main data rows of the Table</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="TABLE TITLE">
      <data key="d4">6.0</data>
      <data key="d5">The Table Title provides a heading for the Table, giving context to the data</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="TABLE SUMMARY">
      <data key="d4">5.0</data>
      <data key="d5">The Table Summary offers additional information about the Table's content, enhancing understanding</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="TABLE HEAD">
      <data key="d4">8.0</data>
      <data key="d5">Table Head is a part of the Table structure, defining the titles for each column</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="TABLE FOOT">
      <data key="d4">8.0</data>
      <data key="d5">Table Foot is a part of the Table structure, often used for summary information</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE" target="CAPTION">
      <data key="d4">1.0</data>
      <data key="d5">Caption provides a title or description for the Table, enhancing its context</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="SEARCHPARAMS" target="TABLE COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Table component uses search parameters to determine how to sort and display data</data>
      <data key="d6">2c3e23b7d2b5c3c6c258760c75956b4c</data>
    </edge>
    <edge source="STATUS" target="ORDERSTATUSCHANGE">
      <data key="d4">1.0</data>
      <data key="d5">OrderStatusChange references the OrderStatus enum to define the new status of the order</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="SIGNUP" target="CREATEUSER">
      <data key="d4">8.0</data>
      <data key="d5">The Signup event triggers the CreateUser action to register a new user</data>
      <data key="d6">7510b258e7a4194c8664e8c8ba088ecc</data>
    </edge>
    <edge source="SIGNUP" target="LAMBDA TRIGGERS">
      <data key="d4">6.0</data>
      <data key="d5">SignUp can invoke Lambda Triggers to perform actions like sending verification codes</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="SIGNUP" target="SIGNUP VERIFICATION METHOD">
      <data key="d4">1.0</data>
      <data key="d5">The SignUp process often requires a verification method to confirm the user's identity</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="EMAIL" target="USER POOL">
      <data key="d4">7.0</data>
      <data key="d5">User Pool uses email as a method for user login and verification</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="EMAIL" target="AMAZON SIMPLE EMAIL SERVICE">
      <data key="d4">5.0</data>
      <data key="d5">Email functionality in applications can be enhanced by using Amazon SES for sending emails</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="EMAIL" target="SIGNINWITHREDIRECT">
      <data key="d4">1.0</data>
      <data key="d5">SignInWithRedirect can utilize email as a method for user authentication</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="EMAIL" target="CONFIRMSIGNUP API">
      <data key="d4">8.0</data>
      <data key="d5">The email is used in the confirmSignUp API to send a one-time password for user verification</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="EMAIL" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">Email is the default sign-in method configured in AWS Amplify</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="EMAIL" target="AMPLIFY ADMIN">
      <data key="d4">6.0</data>
      <data key="d5">An email address is associated with the Amplify Admin user for account management</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="EMAIL" target="SIGN UP">
      <data key="d4">9.0</data>
      <data key="d5">Email is a required field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="EMAIL" target="SIGN IN">
      <data key="d4">1.0</data>
      <data key="d5">Email is a required field in the Sign In process for user authentication.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="EMAIL" target="TEXTFIELD">
      <data key="d4">6.0</data>
      <data key="d5">Email is a field type that is implemented using the TextField component</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="EMAIL" target="INPUT COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">The Email label is associated with the Input component for collecting user input in forms.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="MESSAGE" target="EMAILER">
      <data key="d4">1.0</data>
      <data key="d5">The Emailer processes the Message data structure to send emails</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="MESSAGE" target="TOPIC">
      <data key="d4">1.0</data>
      <data key="d5">Messages are sent to specific topics in the PubSub service</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="MESSAGE" target="GEOFENCEID">
      <data key="d4">4.0</data>
      <data key="d5">The error message provides details related to the geofenceId when an error occurs</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="MESSAGE" target="PUBSUB">
      <data key="d4">8.0</data>
      <data key="d5">PubSub events are triggered by the publishing of messages, allowing real-time communication</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="MESSAGE" target="CLIENTSCHEMA">
      <data key="d4">6.0</data>
      <data key="d5">ClientSchema defines the structure of the Message type used in the PubSub system</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="MESSAGE" target="CHANNEL">
      <data key="d4">1.0</data>
      <data key="d5">Channel manages the names of channels through which messages are published and received in the PubSub system</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="MESSAGE" target="PUBLISH">
      <data key="d4">8.0</data>
      <data key="d5">Publish event sends a message that is represented by the Message type</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="MESSAGE" target="RECEIVE">
      <data key="d4">8.0</data>
      <data key="d5">Receive event listens for messages that are published to a channel</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="MESSAGE" target="CUSTOM TYPE">
      <data key="d4">1.0</data>
      <data key="d5">Custom Type can define the structure of a message in Amplify</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="MESSAGE" target="ORDERSTATUSCHANGE">
      <data key="d4">8.0</data>
      <data key="d5">OrderStatusChange includes a message that describes the status change</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="MESSAGE" target="CHAT">
      <data key="d4">8.0</data>
      <data key="d5">Message is a data model that belongs to a Chat, representing individual messages in a conversation</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="MESSAGE" target="AMPLIFY COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components include message styles for user notifications</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="MESSAGE" target="SUCCESS">
      <data key="d4">7.0</data>
      <data key="d5">Messages can indicate success when operations are completed successfully, showing a direct relationship between the two</data>
      <data key="d6">35f3b0ff8ac0afd0bab73f2b8a1595ce</data>
    </edge>
    <edge source="MESSAGE" target="WARNING">
      <data key="d4">7.0</data>
      <data key="d5">Messages can indicate warnings when there are potential issues, showing a direct relationship between the two</data>
      <data key="d6">35f3b0ff8ac0afd0bab73f2b8a1595ce</data>
    </edge>
    <edge source="MESSAGE" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">The Message component is part of the AWS Amplify UI library, which provides various components for application development.</data>
      <data key="d6">a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="MESSAGE" target="AMPLIFY UI">
      <data key="d4">8.0</data>
      <data key="d5">The Message component is included in Amplify UI for providing user feedback</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="ARTIST" target="PLAYLISTS">
      <data key="d4">7.0</data>
      <data key="d5">The playlists are associated with the artist and are fetched based on the artist's username</data>
      <data key="d6">03e3453a6652ab6e0dd2abb24a0199b1</data>
    </edge>
    <edge source="USERNAME" target="AUTHENTICATOR">
      <data key="d4">7.0</data>
      <data key="d5">The Username field is a part of the Authenticator component for user identification</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a</data>
    </edge>
    <edge source="USERNAME" target="TEXTFIELD">
      <data key="d4">1.0</data>
      <data key="d5">Username is a field type that is implemented using the TextField component</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="USERNAME" target="INPUT COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Username label is associated with the Input component for collecting user input in forms.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="ITEM" target="PUT REQUEST">
      <data key="d4">8.0</data>
      <data key="d5">An item can be created or updated using a PUT request in the context of a REST API</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="ITEM" target="DELETE REQUEST">
      <data key="d4">8.0</data>
      <data key="d5">An item can be deleted using a DELETE request in the context of a REST API</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="PRELOAD" target="GET ITEM">
      <data key="d4">8.0</data>
      <data key="d5">Get Item is called within the Preload function to fetch item data</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="USER DATA" target="QUERY DATA FROM DB">
      <data key="d4">1.0</data>
      <data key="d5">User Data retrieves information by calling Query Data From DB</data>
      <data key="d6">52f67911efe49d48e703ba654f23728e</data>
    </edge>
    <edge source="WEBHOOK" target="AMAZON CODECATALYST">
      <data key="d4">5.0</data>
      <data key="d5">Webhooks can be used in Amazon CodeCatalyst to trigger builds and deployments without committing code to the repository.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39</data>
    </edge>
    <edge source="WEBHOOK" target="CURL">
      <data key="d4">10.0</data>
      <data key="d5">cURL commands are often used to trigger webhooks, allowing for automated actions in response to events.
Curl commands are often used to trigger webhooks for automated processes in CI/CD pipelines</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="WEBHOOK" target="AWS AMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">Webhooks are used in AWS Amplify to trigger builds and deployments based on events</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="WEBHOOK" target="AMPLIFY CONSOLE">
      <data key="d4">8.0</data>
      <data key="d5">Webhooks are created in the Amplify Console to trigger builds for applications when changes are made.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="WEBHOOK" target="CURL COMMAND">
      <data key="d4">1.0</data>
      <data key="d5">The curl command is used to trigger the webhook for initiating a build in the Amplify Console.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="MODAL CLOSING" target="ROUTER.BACK">
      <data key="d4">5.0</data>
      <data key="d5">Using router.back() can result in closing the modal if the user navigates away from the current page</data>
      <data key="d6">a50f51132c97b3887f2b21ed846fa020</data>
    </edge>
    <edge source="ROUTE SEGMENT" target="NESTED FOLDERS">
      <data key="d4">7.0</data>
      <data key="d5">Nested folders create multiple route segments, allowing for a more organized and hierarchical routing structure in Next.js.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="FILE COLOCATION" target="PROJECT ORGANIZATION">
      <data key="d4">7.0</data>
      <data key="d5">Project organization features in Next.js facilitate file colocation, helping developers manage their project structure effectively.</data>
      <data key="d6">3615d6509a88bbb31eac0bc56f78c2f6</data>
    </edge>
    <edge source="FOLDER" target="STORAGE">
      <data key="d4">5.0</data>
      <data key="d5">Folders are a virtual concept in the Storage service used to organize files</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="CLIENT ROUTER FILTER" target="EXPERIMENTAL.CLIENTROUTERFILTERALLOWEDRATE">
      <data key="d4">5.0</data>
      <data key="d5">This configuration option affects the behavior of the client router filter, impacting how transitions are detected</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="CLIENT ROUTER FILTER" target="EXPERIMENTAL.CLIENTROUTERFILTER">
      <data key="d4">1.0</data>
      <data key="d5">Enabling or disabling this feature directly influences the functionality of the client router filter in Next.js</data>
      <data key="d6">1b3c3a93e182b501d03ffb0b41273e30</data>
    </edge>
    <edge source="ROUTE SEGMENTS" target="COMPONENT TREE">
      <data key="d4">5.0</data>
      <data key="d5">Route segments are visualized in a component tree structure, showing the hierarchy of components</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="ROUTE SEGMENTS" target="FILE SYSTEM">
      <data key="d4">7.0</data>
      <data key="d5">The file system defines the structure of route segments in Next.js applications</data>
      <data key="d6">0ccacdcadf2d9be6252ed6ee84696d1b</data>
    </edge>
    <edge source="MIGRATION GUIDE" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">The Migration Guide provides essential information for developers upgrading to the latest version of AWS Amplify, detailing necessary changes and updates.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="AMPLIFY" target="AWS">
      <data key="d4">193.0</data>
      <data key="d5">Amplify is a service provided by AWS, leveraging AWS infrastructure for application deployment and management
Amplify operates on AWS infrastructure, utilizing AWS services for application hosting and deployment.
AWS Amplify is a service provided by AWS to help developers build applications using AWS resources.
AWS Amplify is a service provided by AWS to help developers build applications using AWS services.
Amplify is a development platform that operates on AWS infrastructure to provide cloud services for application development
Amplify is a development platform that utilizes AWS services to build applications
Amplify is a service that operates on top of AWS, utilizing its cloud infrastructure for application development
AWS provides the cloud infrastructure that supports Amplify's services
Amplify is a service provided by AWS that integrates with various AWS services including geofencing capabilities.
AWS Amplify is a service provided by AWS to help developers build applications
Amplify is built on top of AWS services, providing a framework for building applications in the cloud
Amplify is a service that operates on AWS infrastructure, utilizing its cloud capabilities for application development.
Amplify is a service provided by AWS that helps developers build applications using AWS resources
Amplify is a service provided by AWS that helps developers build applications using AWS resources
Amplify is a service provided by AWS for building and connecting applications
Amplify is a service provided by AWS for application development
AWS Amplify is a set of tools and services provided by AWS to help developers build applications on its cloud platform
AWS Amplify is a platform that integrates various AWS services, including Amazon Rekognition and S3, for application development
AWS Amplify is built on top of AWS services, providing a framework for developing applications in the AWS ecosystem.
Amplify is a development platform that utilizes AWS services to provide backend functionalities for applications
AWS provides the Amplify platform for building applications in the cloudAmplify is a service offered by AWS for application development
Amplify is a platform that operates on AWS, utilizing its cloud services for application deployment and management.
Amplify utilizes AWS services for backend functionalities and cloud deployment.
Amplify is a development platform that operates on AWS infrastructure to provide cloud services for applications
Amplify is built on top of AWS services, utilizing its cloud infrastructure for application development
Amplify is a service provided by AWS to facilitate application development
Amplify is a service provided by AWS to facilitate the development of applications</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,1950a5e06a03170ed4dc66a00668ea47,1a7480fec8557ce9c8b1f2d342f6ec9b,21fafbece16fa47f1f530df2b5f0817b,22362693d17a745c23fe5e9a2beecbd9,25014b83cc85c29d210c21fb3ab4b816,2599c1b415576410d2f9b23f4299c4cb,3a87ecd12d97d86a3bbb406e93d2c8d2,3cdd6c81baa65bbde6eabfc399eb25b6,459eadcad7d141c2129458137d7d41d9,4fde2e7cc7218ba6b93e1b100e10fd38,65ef73f546115ac23146d87cce61b9c8,69b8cbe6ad275c39fc40832d62145181,7f29cbfbdd4aea2867cf6f65ba567185,8e6f8a08e3cdc9d85f1015001bcf93dc,9bfb7d7a715bed7eec92b32f7a175bf5,ace34d6baa071fb6d6db3dcaaf3da1dc,b0e5a5345f8f86afeb8b60d97f953436,b394b4eeaf1a9df4b16937daeed33e3a,bcb8bed3236fce81cd5b966a435370ba,c3958c03e7b6908e78ca65d6563b3555,c58075426e62c1f9da00343d6b1599a7,cb9405c9d1ffc30f045effa85b1e9e09,db7dfb25749de8f86ac15552fec549ec,e1b74f93a071f3a34a553359c4fa7b1b,e9de6f22467dd06036280d1c89b6d407,ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON CODECATALYST">
      <data key="d4">14.0</data>
      <data key="d5">Amazon CodeCatalyst can be used to create deployment pipelines for applications built with Amplify
Amplify and Amazon CodeCatalyst are both services provided by AWS that facilitate application development and deployment.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="IAM POLICY">
      <data key="d4">8.0</data>
      <data key="d5">IAM Policies are used to manage permissions for roles created by Amplify</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="CROSS-ACCOUNT DEPLOYMENTS">
      <data key="d4">6.0</data>
      <data key="d5">Cross-account deployments can be facilitated using Amplify for multi-region application deployment</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY GEN 2">
      <data key="d4">30.0</data>
      <data key="d5">Amplify Gen 2 is an upgraded version of the Amplify service, offering new features and improvements
Amplify Gen 2 is an iteration of the Amplify platform that enhances its capabilities for developers
Amplify Gen 2 is an upgraded version of the Amplify platform, enhancing its features and capabilities
Amplify Gen 2 is a part of the Amplify framework that enhances user authentication and management</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2,cb9405c9d1ffc30f045effa85b1e9e09,e1b74f93a071f3a34a553359c4fa7b1b,e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AMPLIFY" target="IAM PERMISSIONS BOUNDARY">
      <data key="d4">8.0</data>
      <data key="d5">IAM Permissions Boundary is a critical aspect of managing permissions for roles created by Amplify</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="BRANCH DEPLOYMENTS">
      <data key="d4">7.0</data>
      <data key="d5">Branch deployments are a specific feature of Amplify that allows for the deployment of backend resources</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="CLOUD SANDBOX DEPLOYMENTS">
      <data key="d4">6.0</data>
      <data key="d5">Cloud sandbox deployments are a method used within Amplify to manage resource deployment</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="ENVIRONMENT VARIABLE">
      <data key="d4">1.0</data>
      <data key="d5">Environment variables are used in Amplify to configure application settings, such as telemetry options</data>
      <data key="d6">3a87ecd12d97d86a3bbb406e93d2c8d2</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY CONSOLE">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify Console is a part of the Amplify platform that provides hosting and deployment services for applications.
The Amplify Console is the interface through which users manage and deploy applications built with Amplify.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON COGNITO">
      <data key="d4">26.0</data>
      <data key="d5">Amazon Cognito is integrated with AWS Amplify to provide user authentication and management capabilities for applications built using Amplify
Amplify provides a framework for developers to easily set up and manage Amazon Cognito for authentication.
Amplify integrates Amazon Cognito for user authentication and management in applications</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab,5b9454881a44ee34d198e3403f5388af,8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="AWS APPSYNC">
      <data key="d4">17.0</data>
      <data key="d5">AWS AppSync can be used with AWS Amplify to provide a serverless backend for applications, enabling real-time data synchronization
AWS AppSync is integrated with Amplify to provide real-time data capabilities
Amplify uses AWS AppSync to manage real-time data through GraphQL APIs</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e,280c36ab0ae3dc66fffd099a273b96ab,8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="AWS PINPOINT">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Pinpoint can be utilized within AWS Amplify to engage users through various communication channels</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="AMPLIFY" target="AWS CLOUD DEVELOPMENT KIT">
      <data key="d4">14.0</data>
      <data key="d5">The AWS Cloud Development Kit can be used alongside AWS Amplify to define and provision cloud infrastructure for applications
The AWS Cloud Development Kit can be used in conjunction with AWS Amplify to define and provision backend resources.</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab,c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AMPLIFY" target="NODE MODULES">
      <data key="d4">7.0</data>
      <data key="d5">Node Modules contain the libraries and packages required for AWS Amplify applications to function</data>
      <data key="d6">280c36ab0ae3dc66fffd099a273b96ab</data>
    </edge>
    <edge source="AMPLIFY" target="LOGINWITHAMAZON_CLIENT_ID">
      <data key="d4">1.0</data>
      <data key="d5">The Login with Amazon Client ID is used within AWS Amplify for authentication purposes.</data>
      <data key="d6">e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="AMPLIFY" target="GRAPHQL">
      <data key="d4">14.0</data>
      <data key="d5">AWS Amplify supports GraphQL as a query language for APIs, allowing developers to interact with their data.
Amplify supports GraphQL as a way to interact with backend data through APIs</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b,e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="AMPLIFY" target="CODEGEN">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify provides code generation capabilities to help developers create client-side code for their applications.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="AMPLIFY" target="STAGING">
      <data key="d4">4.0</data>
      <data key="d5">The staging branch is often used in AWS Amplify for testing changes before they are deployed to production.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="AMPLIFY" target="BACKEND">
      <data key="d4">13.0</data>
      <data key="d5">AWS Amplify provides tools and services to manage the backend of applications, including hosting and data storage.
AWS Amplify defines the backend resources for applications, including authentication and data storage</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b,ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="AMPLIFY" target="SANDBOX ENVIRONMENT">
      <data key="d4">7.0</data>
      <data key="d5">The sandbox environment is a feature of Amplify that allows developers to create isolated spaces for development and testing</data>
      <data key="d6">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="AMPLIFY" target="CLIENT CONFIG">
      <data key="d4">1.0</data>
      <data key="d5">Client config is generated by Amplify to facilitate interaction with AWS resources</data>
      <data key="d6">e1b74f93a071f3a34a553359c4fa7b1b</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON Q DEVELOPER">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Q Developer assists in defining schemas for applications built using Amplify, integrating with its services.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="TROUBLESHOOT &quot;CANNOT FIND MODULE $AMPLIFY/ENV/&lt;FUNCTION-NAME&gt;&quot;">
      <data key="d4">9.0</data>
      <data key="d5">The troubleshooting event is specifically related to issues encountered while deploying applications using Amplify.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="TROUBLESHOOT CONFIGURATION ERRORS">
      <data key="d4">1.0</data>
      <data key="d5">This troubleshooting event addresses configuration errors that occur when using Amplify in a project.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="VUE.JS">
      <data key="d4">8.0</data>
      <data key="d5">Vue.js can be integrated with Amplify to create dynamic web applications that leverage AWS backend services.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="ANGULAR">
      <data key="d4">8.0</data>
      <data key="d5">Angular can be used with Amplify to build robust single-page applications that connect to AWS services.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="NUXT">
      <data key="d4">1.0</data>
      <data key="d5">Nuxt can be utilized alongside Amplify to create server-rendered applications that utilize AWS resources.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMPLIFY" target="CDK">
      <data key="d4">6.0</data>
      <data key="d5">Amplify can be used in conjunction with CDK to manage cloud resources for applications</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="AMPLIFY" target="AWS CDK">
      <data key="d4">12.0</data>
      <data key="d5">AWS CDK can be used to define and provision resources for Amplify applications
AWS CDK can be used to define and provision AWS Amplify resources</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f,459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="AMPLIFY" target="IN-APP MESSAGING">
      <data key="d4">1.0</data>
      <data key="d5">In-App Messaging is a feature provided by Amplify to facilitate communication within applications</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="AMPLIFY" target="API GATEWAY">
      <data key="d4">7.0</data>
      <data key="d5">Amplify can be configured to use existing Amazon API Gateway resources for backend services</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="AMPLIFY" target="PINPOINT">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Pinpoint can be integrated with AWS Amplify to enhance user engagement through in-app messaging capabilities</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="AMPLIFY" target="IN-APP MESSAGING UI">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can be used in conjunction with In-App Messaging UI to enhance user engagement in applications built with React</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="AMPLIFY" target="MAPLIBRE">
      <data key="d4">13.0</data>
      <data key="d5">Amplify integrates with MapLibre to provide geolocation and mapping capabilities in web applications
Amplify can be used with MapLibre to create interactive maps that include geofencing controls.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b,25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="AMPLIFY" target="KINESIS FIREHOSE">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify can be configured to send analytics data to Kinesis Firehose</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="AMPLIFY" target="TODO">
      <data key="d4">8.0</data>
      <data key="d5">Amplify provides the framework and tools to create and manage Todo data models in applications</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AMPLIFY" target="USER POOL">
      <data key="d4">8.0</data>
      <data key="d5">Amplify integrates User Pool for user authentication in applications</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AMPLIFY" target="RESOURCE">
      <data key="d4">1.0</data>
      <data key="d5">Amplify defines backend resources for data and authentication management</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AMPLIFY" target="CLOUD SANDBOX">
      <data key="d4">8.0</data>
      <data key="d5">Cloud Sandbox is the deployment environment for changes made in the Amplify platform</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AMPLIFY" target="CONFIGUREAMPLIFY">
      <data key="d4">6.0</data>
      <data key="d5">ConfigureAmplify is an event that initializes the Amplify framework, making it ready for use in applications</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="AMPLIFY" target="RUNWITHAMPLIFYSERVERCONTEXT">
      <data key="d4">7.0</data>
      <data key="d5">runWithAmplifyServerContext is a function provided by Amplify to execute server-side operations</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="AMPLIFY" target="AUTHGETCURRENTUSERSERVER">
      <data key="d4">7.0</data>
      <data key="d5">AuthGetCurrentUserServer is a function that interacts with Amplify to fetch the current user's authentication status</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="AMPLIFY" target="CLOUDFRONT">
      <data key="d4">6.0</data>
      <data key="d5">Amplify uses CloudFront to deliver web content quickly and efficiently to users.</data>
      <data key="d6">81518acc3db43af0161d599284ff910e</data>
    </edge>
    <edge source="AMPLIFY" target="GET CURRENT USER">
      <data key="d4">9.0</data>
      <data key="d5">GetCurrentUser is an API call made through Amplify to retrieve user data</data>
      <data key="d6">ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </edge>
    <edge source="AMPLIFY" target="GET URL">
      <data key="d4">1.0</data>
      <data key="d5">GetUrl is an API call made through Amplify to retrieve a URL for a specific resource</data>
      <data key="d6">ace34d6baa071fb6d6db3dcaaf3da1dc</data>
    </edge>
    <edge source="AMPLIFY" target="AWS LAMBDA">
      <data key="d4">21.0</data>
      <data key="d5">AWS Lambda is used within AWS Amplify to run backend functions in response to events.
AWS Amplify provides a framework for building serverless applications using AWS Lambda
Amplify uses AWS Lambda functions to enable features like querying data from databases</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812,60aaa13e30275fbe0d56cac47de824c2,9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="AMPLIFY" target="SANDWICH">
      <data key="d4">5.0</data>
      <data key="d5">The event of running the ampx sandbox is a feature provided by Amplify to enhance the development experience.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AUTH TRIGGERS">
      <data key="d4">1.0</data>
      <data key="d5">Auth triggers are specific functionalities within Amplify that handle various authentication events.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AUTH-PRE-SIGN-UP">
      <data key="d4">8.0</data>
      <data key="d5">The auth-pre-sign-up event is a feature of Amplify that allows developers to customize the sign-up process.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AUTH-POST-CONFIRMATION">
      <data key="d4">8.0</data>
      <data key="d5">The auth-post-confirmation event is part of Amplify's authentication workflow, enabling actions after user confirmation.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AUTH-PRE-AUTHENTICATION">
      <data key="d4">8.0</data>
      <data key="d5">The auth-pre-authentication event is integrated into Amplify's authentication process, allowing for pre-authentication logic.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AUTH-POST-AUTHENTICATION">
      <data key="d4">8.0</data>
      <data key="d5">The auth-post-authentication event is a feature of Amplify that allows for actions to be taken after a user logs in.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY_OUTPUTS.JSON">
      <data key="d4">1.0</data>
      <data key="d5">The amplify_outputs.json file is generated by Amplify to store important output data from the deployment process.</data>
      <data key="d6">69b8cbe6ad275c39fc40832d62145181</data>
    </edge>
    <edge source="AMPLIFY" target="AWS AMPLIFY">
      <data key="d4">9.0</data>
      <data key="d5">Amplify is the overarching platform that encompasses various services including function scheduling</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AMPLIFY" target="NUXT.JS">
      <data key="d4">14.0</data>
      <data key="d5">Nuxt.js applications can connect to Amplify services for backend functionalities
Nuxt.js can integrate with Amplify to provide server-side rendering and API capabilities for applications</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9,4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY" target="IDENTITY POOL ID">
      <data key="d4">7.0</data>
      <data key="d5">Identity Pool ID is used in Amplify for user authentication and access management</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="AMPLIFY" target="AUTHENTICATOR">
      <data key="d4">8.0</data>
      <data key="d5">The Authenticator is a component provided by Amplify for managing user authentication</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY" target="USE NUXT APP">
      <data key="d4">7.0</data>
      <data key="d5">The useNuxtApp() composable is used to access Amplify services within a Nuxt.js application</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY" target="SERVER CONTEXT">
      <data key="d4">1.0</data>
      <data key="d5">Server context is used in Amplify to ensure that API calls are made in an isolated environment, enhancing security and performance</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY" target="APPSYNC">
      <data key="d4">8.0</data>
      <data key="d5">Amplify uses AppSync to manage GraphQL APIs for its applications
Amplify integrates with AWS AppSync to provide a GraphQL interface for data operations</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e,ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="AMPLIFY" target="DYNAMODB">
      <data key="d4">7.0</data>
      <data key="d5">Amplify integrates with DynamoDB to store and manage data for applications</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e</data>
    </edge>
    <edge source="AMPLIFY" target="MYSQL">
      <data key="d4">7.0</data>
      <data key="d5">Amplify integrates with MySQL databases to provide backend services for applications</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="AMPLIFY" target="POSTGRESQL">
      <data key="d4">7.0</data>
      <data key="d5">Amplify integrates with PostgreSQL databases to provide backend services for applications</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="AMPLIFY" target="LAMBDA">
      <data key="d4">6.0</data>
      <data key="d5">Amplify's MySQL and PostgreSQL features build on top of AWS Lambda for serverless database connections</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY SANDBOX">
      <data key="d4">6.0</data>
      <data key="d5">The Amplify sandbox is a feature of Amplify that allows developers to test their configurations and data resources</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="AMPLIFY" target="SQL LAMBDA">
      <data key="d4">7.0</data>
      <data key="d5">SQL Lambda is created and managed by Amplify to handle database queries</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </edge>
    <edge source="AMPLIFY" target="VPC">
      <data key="d4">1.0</data>
      <data key="d5">Amplify can deploy SQL Lambda functions in a VPC if the database is in a VPC</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </edge>
    <edge source="AMPLIFY" target="HTTP DATASOURCE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify uses HTTP Data Sources to connect to external REST APIs for data operations</data>
      <data key="d6">ef896aab67cf49595a11632404eaa374</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON REKOGNITION">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify allows developers to integrate Amazon Rekognition into their applications for image and video analysis</data>
      <data key="d6">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </edge>
    <edge source="AMPLIFY" target="QUICKSTART GUIDE">
      <data key="d4">1.0</data>
      <data key="d5">The Quickstart guide provides instructions for setting up projects using AWS Amplify</data>
      <data key="d6">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON BEDROCK">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify integrates with Amazon Bedrock to provide generative AI capabilities within applications</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="AMPLIFY" target="GENERATE HAIKU FUNCTION">
      <data key="d4">6.0</data>
      <data key="d5">Amplify is used to define and deploy the Generate Haiku Function as part of the backend</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="AMPLIFY" target="EVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify integrates with EventBridge to handle event-driven architecture for applications</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="AMPLIFY" target="DATA STACK">
      <data key="d4">5.0</data>
      <data key="d5">Data Stack is part of the Amplify framework, which manages backend resources for applications.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="AMPLIFY" target="TO-DO APPLICATION">
      <data key="d4">9.0</data>
      <data key="d5">The To-do application is a sample project that showcases the features of AWS Amplify in building fullstack applications.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="AMPLIFY" target="BOOTSTRAPPING">
      <data key="d4">9.0</data>
      <data key="d5">Bootstrapping is a necessary step to prepare an AWS account for use with AWS Amplify, enabling the deployment of resources.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="AMPLIFY" target="DEPLOYMENT BRANCH">
      <data key="d4">7.0</data>
      <data key="d5">The deployment branch is where the application code is stored and managed for deployment through AWS Amplify.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="AMPLIFY" target="AMAZON DYNAMODB">
      <data key="d4">8.0</data>
      <data key="d5">Amplify utilizes Amazon DynamoDB for data storage in applications</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="UI COMPONENT LIBRARY">
      <data key="d4">8.0</data>
      <data key="d5">Amplify includes a UI component library to facilitate the rapid development of user interfaces</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="SCHEMA">
      <data key="d4">8.0</data>
      <data key="d5">Amplify uses schemas to define data models, enhancing type safety and validation</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="CHAT APP">
      <data key="d4">1.0</data>
      <data key="d5">The chat app is an example of an application that can be built using Amplify's features</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY GEN 2 CONSOLE">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify Gen 2 console is a management interface specifically designed for managing Amplify applications</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="LOCATION SERVICES">
      <data key="d4">6.0</data>
      <data key="d5">Location Services can be integrated into Amplify applications to provide mapping functionalities</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="CUSTOM DOMAINS">
      <data key="d4">7.0</data>
      <data key="d5">Custom domains are a feature in Amplify that allows for personalized web addresses for applications</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="CRUD OPERATIONS">
      <data key="d4">8.0</data>
      <data key="d5">CRUD operations are supported by Amplify for managing data models in applications</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="SEED DATA GENERATION">
      <data key="d4">7.0</data>
      <data key="d5">Seed data generation is a feature in Amplify that helps populate databases with initial data</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="FILE UPLOAD CAPABILITIES">
      <data key="d4">7.0</data>
      <data key="d5">File upload capabilities enhance the functionality of Amplify applications by allowing users to upload files</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="DEPLOYED RESOURCES">
      <data key="d4">8.0</data>
      <data key="d5">Deployed resources are components that have been launched as part of an Amplify application</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="TYPED CLIENT INSTANCE">
      <data key="d4">8.0</data>
      <data key="d5">A typed client instance is generated by Amplify to facilitate type-safe interactions with data</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="CHAT">
      <data key="d4">1.0</data>
      <data key="d5">Chat is an example of a data model that can be managed using Amplify's data management features</data>
      <data key="d6">8e6f8a08e3cdc9d85f1015001bcf93dc</data>
    </edge>
    <edge source="AMPLIFY" target="STYLED COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI components can be styled using Styled Components, which allows for custom styling directly tied to components.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="AMPLIFY" target="JSS">
      <data key="d4">7.0</data>
      <data key="d5">Amplify works well with JSS for styling components, allowing for dynamic and customizable styles in applications.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="AMPLIFY" target="APHRODITE">
      <data key="d4">6.0</data>
      <data key="d5">Amplify can integrate with Aphrodite for styling, providing flexibility in how components are styled.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY UI">
      <data key="d4">18.0</data>
      <data key="d5">Amplify UI is a part of the Amplify platform, providing specific tools and components for building user interfaces in React applications.
Amplify UI is a part of the Amplify ecosystem, providing UI components for applications built with Amplify.
Amplify UI is a part of the Amplify framework designed for building user interfaces</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf,5aa64e0729b8afd73930cdaf5ff7a8aa,b394b4eeaf1a9df4b16937daeed33e3a</data>
    </edge>
    <edge source="AMPLIFY" target="CSS IN JS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify supports the CSS in JS approach, allowing developers to style components dynamically within their JavaScript code.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY THEMING">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Theming is a feature of Amplify that allows for comprehensive customization of UI components' styles and appearance.</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa</data>
    </edge>
    <edge source="AMPLIFY" target="COLOR PALETTES">
      <data key="d4">1.0</data>
      <data key="d5">Amplify provides color palettes as part of its design tools for developers and designers</data>
      <data key="d6">b5ba1f149a354e2b301e24778d64cbde</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY">
      <data key="d4">5.0</data>
      <data key="d5">The various components and styles listed are all part of Amplify's offerings for user interface development.
The various button components and styles mentioned are all part of Amplify's offerings
The various components mentioned are all part of Amplify's offerings, indicating a strong internal relationship within the organization
Amplify is the organization responsible for the components and styles mentioned in the text
Amplify is the organization referenced in the text, indicating its role in providing design components</data>
      <data key="d6">35177d476072a1d9811b194441dac3c6,35f3b0ff8ac0afd0bab73f2b8a1595ce,919c09d2956ed4ab195e7a6898f39063,a78e240c86d21333ffb6ad06277ccf23,d13b4bcceae6608dbf68ce9ca22d0c45</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY COMPONENTS">
      <data key="d4">3.0</data>
      <data key="d5">Amplify offers a range of components that are used in application development
Amplify's components are part of its offerings for application development
Amplify components are part of the offerings provided by Amplify for application development</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f,6534102a2bcab0d166b971b8fc0e8eb1,6f3ebecb177d34e1aee592a1e38dc5e5</data>
    </edge>
    <edge source="AMPLIFY" target="STORAGE MANAGER">
      <data key="d4">8.0</data>
      <data key="d5">The Storage Manager is a part of the Amplify framework, providing file management capabilities</data>
      <data key="d6">6534102a2bcab0d166b971b8fc0e8eb1</data>
    </edge>
    <edge source="AMPLIFY" target="FILE LIST">
      <data key="d4">8.0</data>
      <data key="d5">The File List component is utilized within the Amplify framework to display files</data>
      <data key="d6">6534102a2bcab0d166b971b8fc0e8eb1</data>
    </edge>
    <edge source="AMPLIFY" target="LOCATIONSEARCH">
      <data key="d4">7.0</data>
      <data key="d5">LocationSearch is a component provided by Amplify for searching locations based on proximity.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="AMPLIFY" target="FACE LIVENESS DETECTOR">
      <data key="d4">1.0</data>
      <data key="d5">Face Liveness Detector is a component powered by Amplify's services, specifically for user verification.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="AMPLIFY" target="FACELIVENESSDETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">FaceLivenessDetector uses Amplify for user authentication and management in applications</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="AMPLIFY" target="AMPLIFY GEN 1">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Gen 1 is an earlier version of the Amplify framework used for application development</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="AWS" target="IAM ROLE">
      <data key="d4">16.0</data>
      <data key="d5">IAM roles are used within AWS to manage permissions and access for various services and users.
IAM roles are used within AWS to manage permissions for accessing resources</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39,5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AWS" target="CROSS-ACCOUNT DEPLOYMENT">
      <data key="d4">1.0</data>
      <data key="d5">Cross-account deployment is a feature of AWS that allows resources to be deployed across different AWS accounts for better resource management.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39</data>
    </edge>
    <edge source="AWS" target="CLOUDFORMATION">
      <data key="d4">17.0</data>
      <data key="d5">AWS CloudFormation is a service offered by AWS to manage resources in the cloud.
AWS CloudFormation is a service provided by AWS that allows users to manage and provision AWS resources</data>
      <data key="d6">e1b74f93a071f3a34a553359c4fa7b1b,e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="AWS" target="CDK">
      <data key="d4">8.0</data>
      <data key="d5">AWS CDK is a framework provided by AWS to define cloud infrastructure using code, which is part of AWS's cloud offerings.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="AWS" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify is a development platform built on top of AWS services</data>
      <data key="d6">fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="AWS" target="API GATEWAY">
      <data key="d4">9.0</data>
      <data key="d5">API Gateway is a service provided by AWS for creating and managing APIs.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="AWS" target="GEOFENCE">
      <data key="d4">8.0</data>
      <data key="d5">AWS provides the infrastructure and services necessary to create and manage geofences through its Amazon Location Service.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </edge>
    <edge source="AWS" target="COGNITO">
      <data key="d4">1.0</data>
      <data key="d5">Cognito is a service offered by AWS that manages user authentication for applications using AWS services.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </edge>
    <edge source="AWS" target="GEOFENCE COLLECTION">
      <data key="d4">8.0</data>
      <data key="d5">AWS provides the infrastructure to create and manage geofence collections, which are essential for geofencing applications.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </edge>
    <edge source="AWS" target="GEOSPATIAL API">
      <data key="d4">7.0</data>
      <data key="d5">The Geospatial API is a service provided by AWS that allows developers to manage geofences and geospatial data effectively.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </edge>
    <edge source="AWS" target="AMAZON LOCATION SERVICE">
      <data key="d4">9.0</data>
      <data key="d5">Amazon Location Service is a product offered by AWS, providing location-based services</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="AWS" target="AMPLIFY FUNCTIONS">
      <data key="d4">8.0</data>
      <data key="d5">AWS provides the infrastructure and services that Amplify Functions utilize for serverless computing</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="AWS" target="AMPLIFY STORAGE">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Storage utilizes AWS services, particularly S3, for file storage and management</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AWS" target="S3 BUCKET">
      <data key="d4">9.0</data>
      <data key="d5">S3 buckets are a core component of AWS for storing data</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AWS" target="AMAZON S3">
      <data key="d4">9.0</data>
      <data key="d5">Amazon S3 is a service provided by AWS for object storage</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AWS" target="AMPLIFY CONSOLE">
      <data key="d4">1.0</data>
      <data key="d5">AWS provides the infrastructure and services that power the Amplify Console for application development.</data>
      <data key="d6">e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="AWS" target="VPC">
      <data key="d4">6.0</data>
      <data key="d5">A VPC is a service provided by AWS that allows users to create isolated networks within the AWS cloud</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="AWS" target="AMAZON REKOGNITION">
      <data key="d4">9.0</data>
      <data key="d5">Amazon Rekognition is a service provided by AWS, leveraging its cloud infrastructure for machine learning capabilities</data>
      <data key="d6">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </edge>
    <edge source="AWS" target="REACT APP">
      <data key="d4">7.0</data>
      <data key="d5">The React app is built to utilize AWS services, including Amazon Rekognition and S3 for text recognition and storage</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="AWS" target="AMPLIFY DATA">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Data is a service provided by AWS for managing APIs and databases</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AWS" target="IAM IDENTITY CENTER">
      <data key="d4">8.0</data>
      <data key="d5">AWS uses IAM Identity Center to manage user access and permissions</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="AWS CLI">
      <data key="d4">8.0</data>
      <data key="d5">AWS CLI is a tool provided by AWS to manage its services from the command line</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="CLOUDSHELL">
      <data key="d4">8.0</data>
      <data key="d5">CloudShell is a service provided by AWS to manage resources through a command-line interface</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="AWS ORGANIZATIONS">
      <data key="d4">8.0</data>
      <data key="d5">AWS Organizations is a service provided by AWS to manage multiple accounts</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="AWS CONSOLE">
      <data key="d4">8.0</data>
      <data key="d5">The AWS Console is the primary interface for users to interact with AWS services</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="AWS REGION">
      <data key="d4">1.0</data>
      <data key="d5">AWS Regions are geographical locations where AWS services are hosted</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="AWS" target="AMPLIFY UI">
      <data key="d4">15.0</data>
      <data key="d5">Amplify UI is a part of the AWS ecosystem, providing UI components for applications hosted on AWS
Amplify UI is a library developed for use with AWS services, enhancing the user experience for applications hosted on AWS.
Amplify UI is built on top of AWS services, particularly for user authentication</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a,b8276fb595f7138780baf2d76c97bb37,f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AWS" target="CLOUDFRONT">
      <data key="d4">1.0</data>
      <data key="d5">CloudFront is a service provided by AWS that enhances the delivery of content hosted on AWS infrastructure</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="AWS" target="IDENTITY ID">
      <data key="d4">7.0</data>
      <data key="d5">Identity ID is used within AWS services to uniquely identify users and manage their access to resources</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="AWS" target="AMPLIFY UI GEO">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI Geo is powered by AWS services, including Geo APIs and Amazon Location Service</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="AWS" target="AMPLIFY UI REACT">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI React is a package that integrates with AWS services for building user interfaces in web applications.</data>
      <data key="d6">f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="AMAZON CODECATALYST" target="YAML">
      <data key="d4">1.0</data>
      <data key="d5">YAML files are used in Amazon CodeCatalyst to define workflows and configurations for application deployment.</data>
      <data key="d6">0cc40988714324257eaa1d03994f3e39</data>
    </edge>
    <edge source="AMAZON CODECATALYST" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can be integrated with Amazon CodeCatalyst to automate CI/CD processes for applications</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="IAM POLICY" target="AWS AMPLIFY">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify requires an IAM policy to manage permissions for using its services</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d</data>
    </edge>
    <edge source="IAM POLICY" target="COGNITO IDENTITY POOL">
      <data key="d4">7.0</data>
      <data key="d5">IAM Policy is configured to set permissions for the Cognito Identity Pool to use Predictions features</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="IAM POLICY" target="PINPOINT">
      <data key="d4">5.0</data>
      <data key="d5">IAM policies are used to manage permissions for interacting with Amazon Pinpoint services</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="IAM POLICY" target="AMAZON LOCATION SERVICE">
      <data key="d4">1.0</data>
      <data key="d5">IAM Policies are used to control access to the resources provided by Amazon Location Service</data>
      <data key="d6">bf926fe785180e6ba0afb391db266523</data>
    </edge>
    <edge source="IAM POLICY" target="GEO STACK">
      <data key="d4">1.0</data>
      <data key="d5">IAM Policy is applied to the geo stack to manage permissions for geolocation resources</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="IAM POLICY" target="AMAZON PINPOINT">
      <data key="d4">1.0</data>
      <data key="d5">Amazon Pinpoint requires an IAM policy to manage permissions for user engagement actions</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a</data>
    </edge>
    <edge source="IAM POLICY" target="AWS IDENTITY AND ACCESS MANAGEMENT">
      <data key="d4">7.0</data>
      <data key="d5">IAM policies are used to define permissions for actions on AWS resources, including those needed for Amazon Personalize</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="IAM POLICY" target="AMAZON TRANSLATE">
      <data key="d4">7.0</data>
      <data key="d5">IAM Policy is required to grant permissions for accessing the Amazon Translate service</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="IAM POLICY" target="AMAZON REKOGNITION">
      <data key="d4">8.0</data>
      <data key="d5">IAM policies are used to manage permissions for accessing the Amazon Rekognition service</data>
      <data key="d6">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </edge>
    <edge source="CROSS-ACCOUNT DEPLOYMENTS" target="AWS AMPLIFY">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify supports cross-account deployments to facilitate application deployment across different AWS accounts</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="AMAZON PINPOINT">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 client libraries can utilize Amazon Pinpoint for analytics and user engagement</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="AMAZON COGNITO">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Gen 2 client libraries can integrate with Amazon Cognito for user authentication and management</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="AWS SYSTEMS MANAGER PARAMETER STORE">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Gen 2 utilizes AWS Systems Manager Parameter Store to manage secrets and environment variables</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="AWS AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Gen 2 is an updated version of AWS Amplify that offers new features for backend development
Amplify Gen 2 is an updated version of AWS Amplify with enhanced features</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842,fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="AWS CLOUD DEVELOPMENT KIT">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Gen 2 builds on top of the AWS Cloud Development Kit to provide a code-first approach for cloud infrastructure management</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="VISUAL STUDIO CODE">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Gen 2 provides strict typing and IntelliSense in Visual Studio Code for TypeScript development</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="GEN 1">
      <data key="d4">1.0</data>
      <data key="d5">Gen 1 is the predecessor to Amplify Gen 2, which introduced significant improvements in the developer experience</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="DATASTORE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 supports DataStore for managing data in applications without needing to manage the underlying infrastructure</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 offers solutions for storing and retrieving data through the Storage category</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="FUNCTIONS">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Gen 2 enables developers to run backend code in response to events through the Functions category</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="AMPLIFY GEN 2" target="CLOUD FORMATION">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Gen 2 is built on top of AWS CloudFormation, allowing for standardized resource management</data>
      <data key="d6">6741df7802dff57e070b002915d9590a</data>
    </edge>
    <edge source="YAML" target="AMPLIFY APP">
      <data key="d4">1.0</data>
      <data key="d5">YAML files are used to define the build settings for the Amplify app</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="CURL" target="AMPLIFY APP">
      <data key="d4">5.0</data>
      <data key="d5">CURL is used in scripts to trigger builds or deployments for the Amplify app</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="CURL" target="API GATEWAY">
      <data key="d4">13.0</data>
      <data key="d5">Curl can be used to test the functionality of APIs created with API Gateway
Curl can be used to test APIs created with API Gateway by sending HTTP requests.</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="IAM ROLE" target="OPENSEARCH">
      <data key="d4">25.0</data>
      <data key="d5">IAM Role is required for OpenSearch to manage permissions for accessing other AWS services like S3 and DynamoDB.
The IAM role allows OpenSearch to perform actions on its domain and manage data
The IAM Role provides the necessary permissions for OpenSearch to access DynamoDB and S3</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2,ad25e8455b3a65969a17cb69a66a58ac,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="IAM ROLE" target="DYNAMODB">
      <data key="d4">13.0</data>
      <data key="d5">IAM Role provides the necessary permissions for DynamoDB to interact with OpenSearch and S3.
The IAM role grants permissions to access DynamoDB for data operations</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="IAM ROLE" target="S3 BUCKET">
      <data key="d4">6.0</data>
      <data key="d5">IAM Role allows S3 Bucket to be accessed securely by OpenSearch for data ingestion.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="IAM ROLE" target="ROLE">
      <data key="d4">6.0</data>
      <data key="d5">IAM Role is a specific type of Role that grants permissions for AWS services to interact with each other.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="IAM ROLE" target="OPENSEARCH INGESTION SERVICE">
      <data key="d4">8.0</data>
      <data key="d5">The IAM role allows the OpenSearch Ingestion Service to assume permissions necessary for data ingestion</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="IAM ROLE" target="S3">
      <data key="d4">7.0</data>
      <data key="d5">The IAM role provides permissions for the S3 service to allow data storage and retrieval</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="IAM ROLE" target="OPENSEARCH PIPELINE">
      <data key="d4">1.0</data>
      <data key="d5">The IAM Role provides necessary permissions for the OpenSearch Pipeline to access resources and perform actions</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="IAM ROLE" target="COGNITO">
      <data key="d4">7.0</data>
      <data key="d5">Cognito can use IAM roles to manage permissions for authenticated and unauthenticated users</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="AWS AMPLIFY">
      <data key="d4">63.0</data>
      <data key="d5">AWS Amplify is managed and deployed through the Amplify Console, which provides a user interface for application management
The Amplify console is used to manage AWS Amplify applications, including enabling fullstack previews
AWS Amplify is managed and configured through the Amplify console, which provides a user interface for application management
AWS Amplify provides the Amplify console for managing application deployments and settings
AWS Amplify provides a console for managing applications and their backend resources
AWS Amplify integrates with the Amplify Console to provide a seamless deployment and hosting experience for applications.
AWS Amplify provides a console for managing applications, including user management and deployment
AWS Amplify uses the Amplify Console for deploying and hosting applications</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52,148529b8881659161220567b7aef9513,23f821c071cb4c4cf183f5aac596db35,361aaf651685ae2e9407ab27dc8138b3,7040175c91fe86a908046a9b485b0410,a054cee32c59ce9d304bb1f8716fbb7c,b3ba0d2a5daf3ce8f284099dd931ef14,dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="MULTI-REPO-EXAMPLE">
      <data key="d4">9.0</data>
      <data key="d5">The Amplify Console is used to manage and deploy the multi-repo-example application.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="BUILD-SPEC">
      <data key="d4">9.0</data>
      <data key="d5">The build-spec file is utilized by the Amplify Console to manage the build process for applications.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="ADMIN DASHBOARD">
      <data key="d4">7.0</data>
      <data key="d5">Admin Dashboard is managed and deployed through the Amplify Console</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="MARKETING SITE">
      <data key="d4">7.0</data>
      <data key="d5">Marketing Site is managed and deployed through the Amplify Console</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="AWS CLOUD DEVELOPMENT KIT">
      <data key="d4">7.0</data>
      <data key="d5">The AWS Cloud Development Kit is used in conjunction with the Amplify Console to define and provision cloud infrastructure for applications.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="STORAGE">
      <data key="d4">6.0</data>
      <data key="d5">The Amplify Console allows users to manage file storage resources within their applications</data>
      <data key="d6">23f821c071cb4c4cf183f5aac596db35</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="DATA MANAGER">
      <data key="d4">10.0</data>
      <data key="d5">The Data Manager is a feature of the Amplify Console that facilitates data management for applications.
The Data Manager is accessed through the Amplify Console to manage the application's backend data effectively.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec,e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="USER MANAGEMENT">
      <data key="d4">7.0</data>
      <data key="d5">User management is a feature available in the Amplify Console for managing application users</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="AMPLIFY CONSOLE" target="CLOUD SANDBOX">
      <data key="d4">1.0</data>
      <data key="d5">The cloud sandbox is used in conjunction with the Amplify Console for isolated testing</data>
      <data key="d6">7040175c91fe86a908046a9b485b0410</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY OUTPUTS">
      <data key="d4">10.0</data>
      <data key="d5">AWS Amplify generates the amplify_outputs.json file to configure client libraries for backend interaction
AWS Amplify generates outputs that include configurations for various resources used in applications.
Amplify Outputs are generated by AWS Amplify to configure various services, including maps
Amplify Outputs is generated by AWS Amplify to provide necessary configuration for the application</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7,c6c993134aa9ac5f833c8bf4d26c0dbd,cf54383d0ee2ab32d2ea7410ca6c6418,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM PIPELINES">
      <data key="d4">14.0</data>
      <data key="d5">Custom pipelines are a feature of AWS Amplify that allows for tailored CI/CD workflows
AWS Amplify allows the creation of custom pipelines for tailored CI/CD processes</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY APP">
      <data key="d4">9.0</data>
      <data key="d5">An Amplify app is created and managed within the AWS Amplify platform</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY_APP_ID">
      <data key="d4">1.0</data>
      <data key="d5">Amplify App ID is used within AWS Amplify to identify specific applications during deployment</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS CLOUDFORMATION">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify utilizes AWS CloudFormation to manage the infrastructure for applications</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FULLSTACK PREVIEWS">
      <data key="d4">15.0</data>
      <data key="d5">AWS Amplify provides the functionality to enable fullstack previews for testing features in isolation
AWS Amplify provides fullstack previews for testing applications in ephemeral environments</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BACKEND-APP">
      <data key="d4">8.0</data>
      <data key="d5">The backend-app is deployed using AWS Amplify, which manages the backend services.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SANDBOX">
      <data key="d4">7.0</data>
      <data key="d5">The sandbox is a feature of AWS Amplify that allows developers to test their applications locally</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DEV BRANCH">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify supports the use of a dev branch for deploying and testing applications</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY CI/CD PIPELINE">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify utilizes the CI/CD pipeline to automate the deployment of applications</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BRANCH AUTO-DETECTION">
      <data key="d4">7.0</data>
      <data key="d5">Branch auto-detection is a feature provided by AWS Amplify to streamline the deployment process</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BRANCH AUTO-DISCONNECTION">
      <data key="d4">1.0</data>
      <data key="d5">Branch auto-disconnection is a feature in AWS Amplify that helps manage branch connections automatically</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY CI/CD">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provides CI/CD capabilities to automate the deployment of applications</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY HOSTING">
      <data key="d4">17.0</data>
      <data key="d5">AWS Amplify Hosting is a service offered by AWS Amplify for hosting web applications
Amplify Hosting is a service offered by AWS Amplify for deploying and managing web applications</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80,e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS SYSTEMS MANAGER">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify integrates with AWS Systems Manager for managing secrets</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PARAMETER STORE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify uses AWS Parameter Store for secure storage of secrets</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FOO">
      <data key="d4">5.0</data>
      <data key="d5">Foo is used as a secret name in examples for AWS Amplify</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BAR">
      <data key="d4">1.0</data>
      <data key="d5">Bar is used as a secret name in examples for AWS Amplify</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SECRET MANAGEMENT">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify includes features for managing secrets securely within applications</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SANDBOX ENVIRONMENTS">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify enables the creation of sandbox environments for development and testing</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CLIENT CODEGEN">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify automates client code generation to simplify interactions with backend services</data>
      <data key="d6">e63f52e89ed09d5d6307bfccfa46aec9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CLOUD SANDBOX">
      <data key="d4">13.0</data>
      <data key="d5">Cloud sandbox environments can be utilized within AWS Amplify for development and testing purposes.
AWS Amplify provides a cloud sandbox environment for developers to build and test applications
The cloud sandbox is used in conjunction with AWS Amplify to test and deploy applications
AWS Amplify allows developers to test applications in a cloud sandbox environment</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403,d5671c2494c6418a266da35fff705101,f0df8a5e739e43b9c43840817e1bd7d1,fc0b23383bad27c21e52b0c819eb7874</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FIGMA">
      <data key="d4">14.0</data>
      <data key="d5">AWS Amplify UI Builder integrates with Figma to allow designers to generate React code from Figma designs.
AWS Amplify allows developers to generate React components from Figma designs, facilitating UI development.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="VUE">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports the development of applications using Vue, providing tools for building and deploying Vue applications.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ANGULAR">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports the development of applications using Angular, providing tools for building and deploying Angular applications.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GATSBY">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports the development of applications using Gatsby, providing tools for building and deploying Gatsby applications.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161</data>
    </edge>
    <edge source="AWS AMPLIFY" target="NUXT.JS">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify supports the development of applications using Nuxt.js, providing tools for building and deploying Nuxt.js applications.
Nuxt.js can also be integrated with AWS Amplify to create server-side rendered applications with backend connectivity.</data>
      <data key="d6">1e3e9559f0cf793e96c48297529ec161,e8bb64825eb8da944e09e46a90be853c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AGENT CONTACT FORM">
      <data key="d4">8.0</data>
      <data key="d5">Agent Contact Form is a component that utilizes AWS Amplify for form validation and submission</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PRODUCT FORM">
      <data key="d4">1.0</data>
      <data key="d5">Product Form is a component that uses AWS Amplify for managing product data and validation</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FORM BUILDER">
      <data key="d4">6.0</data>
      <data key="d5">Form Builder is a feature of AWS Amplify that helps in creating forms for applications</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="AWS AMPLIFY" target="STORAGE MANAGER">
      <data key="d4">64.0</data>
      <data key="d5">The Storage Manager is a component of AWS Amplify that facilitates file uploads and storage management
The Storage Manager is a component of AWS Amplify that facilitates file uploads
The Storage Manager is a component of AWS Amplify that facilitates file uploads and storage management
The Storage Manager is a component of AWS Amplify that facilitates file uploads and management in the cloud
The Storage Manager is a component of AWS Amplify that facilitates file uploads and storage management
The Storage Manager is a component of AWS Amplify that facilitates file uploads to Amazon S3.
The Storage Manager is a component that is part of the AWS Amplify framework for building applications
Storage Manager is a component that is part of the AWS Amplify framework, enabling file uploads to S3</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa,32ab448d1972668cba4e2c467ff116a8,3d5a944087b6833d97ac18648a394224,515a9fba2517051a51ebb09f8a2c2b06,5c7c1b8a3cde0fc5a186b912ceba73bb,63bae3a149e50b7452962f7bdd8724ea,d700fb2336ddc0a563736b65003c9d4f,ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TODO CREATE FORM">
      <data key="d4">7.0</data>
      <data key="d5">The Todo Create Form is a part of the AWS Amplify framework, allowing users to create todo items</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TODOCREATEFORM">
      <data key="d4">16.0</data>
      <data key="d5">TodoCreateForm is a component that is part of the AWS Amplify UI library, which facilitates form creation and management.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON Q DEVELOPER">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify integrates with Amazon Q Developer to enhance the development experience with AI-powered assistance.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="VISUAL STUDIO CODE">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can be used within Visual Studio Code to streamline the development process.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="JETBRAINS">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can be integrated with JetBrains IDEs for enhanced development capabilities.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="S3 BUCKET">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify provides components that simplify interactions with Amazon S3 for file storage and management.
AWS Amplify allows users to provision and manage S3 buckets for data storage</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="UI COMPONENTS">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify offers a UI Library that includes connected components for building user interfaces.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTHENTICATOR">
      <data key="d4">60.0</data>
      <data key="d5">The Authenticator is a component provided by AWS Amplify to manage user authentication flows.
The Authenticator component is part of AWS Amplify, facilitating user authentication
The Authenticator is a component of AWS Amplify that provides user authentication services.
The Authenticator is a component of AWS Amplify, which provides authentication capabilities
The Authenticator is a component provided by AWS Amplify for user authentication in applications built with AWS services.
The Authenticator is a key component of AWS Amplify, facilitating user authentication within applications built using AWS services.
The Authenticator is a part of AWS Amplify that provides authentication services</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80,24ec8a10e8f41cfaeb32d036093e3bdf,322dba5659c945a3d1a5389a738aee99,4d25b33f699aef8a075e8858bf0ad630,94a4bc63d08f1f8dd8fa4630608aee68,9d1ecd9e6b4e4bc832178b9ae1a06e8d,c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ACCOUNT SETTINGS">
      <data key="d4">8.0</data>
      <data key="d5">Account Settings components are part of AWS Amplify's offerings for user management.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FORM GENERATION">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify automates the process of form generation based on data models, enhancing developer productivity.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DATA MODEL">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify uses data models to generate forms and manage application data effectively.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REACT FORM">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify provides tools to create and manage React forms for user input in applications.</data>
      <data key="d6">c6c993134aa9ac5f833c8bf4d26c0dbd</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS CDK">
      <data key="d4">12.0</data>
      <data key="d5">AWS Amplify uses AWS CDK to allow developers to add custom resources to their applications
AWS Amplify allows developers to extend functionalities using the AWS CDK for custom cloud resources.</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM RESOURCES">
      <data key="d4">8.0</data>
      <data key="d5">Custom resources are a feature of AWS Amplify that enables the integration of additional AWS services</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM SECURITY RULES">
      <data key="d4">6.0</data>
      <data key="d5">Custom security rules can be implemented within AWS Amplify to enhance application security</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REDIS CACHE">
      <data key="d4">5.0</data>
      <data key="d5">Redis cache can be integrated into AWS Amplify applications to improve data retrieval speeds</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS FARGATE">
      <data key="d4">6.0</data>
      <data key="d5">AWS Fargate can be used in conjunction with AWS Amplify to run containerized applications without server management</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON SQS">
      <data key="d4">5.0</data>
      <data key="d5">Amazon SQS can be utilized within AWS Amplify applications for message queuing and processing</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON SNS">
      <data key="d4">1.0</data>
      <data key="d5">Amazon SNS can be integrated into AWS Amplify applications for notification and messaging services</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM NOTIFICATIONS">
      <data key="d4">7.0</data>
      <data key="d5">Custom Notifications is a resource that operates within the AWS Amplify platform to manage application notifications</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CLOUD DEVELOPMENT KIT (CDK)">
      <data key="d4">7.0</data>
      <data key="d5">AWS CDK can be used to define and manage AWS Amplify resources programmatically</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PUBSUB">
      <data key="d4">24.0</data>
      <data key="d5">AWS Amplify provides the PubSub category for real-time messaging capabilities in applications
AWS Amplify includes the PubSub service for real-time messaging capabilities in applications
AWS Amplify provides PubSub functionality to enable real-time communication in applications</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6,89e3b86d249ae10742dcef7c4e2d582d,d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CLOUD FORMATION">
      <data key="d4">1.0</data>
      <data key="d5">AWS CloudFormation can be used to set up and manage AWS Amplify resources</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DYNAMODB">
      <data key="d4">53.0</data>
      <data key="d5">AWS Amplify can utilize DynamoDB for backend data storage in applications
AWS Amplify can utilize DynamoDB as a backend database for applications built on its platform.
AWS Amplify integrates with DynamoDB to provide backend data storage solutions for applications.
AWS Amplify can connect to external Amazon DynamoDB data sources, allowing developers to integrate NoSQL capabilities into their applications.
AWS Amplify uses DynamoDB as a backend service for data storage and management
AWS Amplify uses DynamoDB as a backend service for data storage and retrieval in applications
AWS Amplify uses Amazon DynamoDB as a backend database for storing application data</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe,856c945b28eacce9c83378e56652fee3,a3d633e1c801de300a4724738b7290c3,b3ba0d2a5daf3ce8f284099dd931ef14,d8db439b4e3e9430a8842e7c634c7e85,e8bb64825eb8da944e09e46a90be853c,fc6e2a28447409d2b0f12296647c9470</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS CONSOLE">
      <data key="d4">5.0</data>
      <data key="d5">The AWS Console allows users to manage AWS Amplify services and configurations</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CLOUD SERVICES">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify is a cloud service that provides tools and services for building applications</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON LEX">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports Amazon Lex as the default chatbot service for creating conversational bots</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="INTERACTIONS">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify Interactions enables the integration of AI-powered chatbots into applications
Interactions is a feature of AWS Amplify that allows for chatbot integration</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWSIOTPROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can utilize AWSIoTProvider to enable real-time communication in applications</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PREDICTIONS">
      <data key="d4">32.0</data>
      <data key="d5">Predictions is a feature provided by AWS Amplify for implementing AI/ML functionalities
Predictions is a feature of AWS Amplify that provides machine learning capabilities
Predictions is a feature provided by AWS Amplify to enhance application capabilities with AI/ML
Predictions is a feature provided by AWS Amplify that enhances applications with AI and ML capabilities</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,70363c8433b020965dc7ec11c063e460,aed1999377a9138038f56696b28a18c4,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="IAM ROLES">
      <data key="d4">15.0</data>
      <data key="d5">IAM roles are necessary for configuring permissions when using AWS Amplify services
AWS Amplify requires IAM roles to manage permissions for accessing AWS resources</data>
      <data key="d6">aed1999377a9138038f56696b28a18c4,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY CONFIGURATION">
      <data key="d4">2.0</data>
      <data key="d5">Amplify configuration is essential for initializing AWS Amplify in an application
The Amplify Configuration file is essential for setting up AWS Amplify services in the application</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY LIBRARY">
      <data key="d4">33.0</data>
      <data key="d5">The Amplify library is a core component of AWS Amplify that facilitates the integration of AWS services
The Amplify library is a core component of AWS Amplify, enabling developers to interact with AWS services
The Amplify Library is part of the AWS Amplify ecosystem, providing tools for developers to build applications
AWS Amplify provides the Amplify Library to facilitate the connection of application code to backend services</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2,8c8075430684b38bdd1c6ce9fc9f7205,aed1999377a9138038f56696b28a18c4,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="STACK">
      <data key="d4">1.0</data>
      <data key="d5">Stack is used in conjunction with AWS Amplify to manage resources and services</data>
      <data key="d6">aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REST API">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify provides tools to create and manage REST APIs for applications
AWS Amplify provides tools to create and manage REST APIs for application data</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2,3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="AWS AMPLIFY" target="API GATEWAY">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify can be used to set up and manage REST APIs through Amazon API Gateway
AWS Amplify integrates with Amazon API Gateway to manage and secure APIs</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0,f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="COGNITO">
      <data key="d4">82.0</data>
      <data key="d5">AWS Amplify uses Amazon Cognito for user authentication and management in applications
AWS Amplify integrates with Amazon Cognito to provide authentication and user management features for applications
AWS Amplify integrates with Amazon Cognito for user authentication and management
Cognito is a service integrated within AWS Amplify for managing user authentication
AWS Amplify uses Amazon Cognito for user authentication and management in applications
AWS Amplify uses Amazon Cognito for user authentication and management
AWS Amplify integrates with Cognito to provide authentication services for applications built on its platform
Cognito is a part of AWS Amplify that manages user authentication and access control
AWS Amplify integrates with Cognito to provide authentication services for applications built on its platform.
AWS Amplify automates communication with AWS resources, including Cognito for user authentication
AWS Amplify uses Cognito for user authentication and management in applications.</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c,2e537c711e153c043f8d08b926e4ba86,328c2850836c2ef976fb8009ef3c5dd9,3874fd589ed63023667cf58323875d95,4ccaaec02cfc4169e423aaf4ce28263f,758d7b22f173e12c1857a365834df542,995b90fa5ccd54a921a730cc91487965,f5bfba3eb957f9e621d0b55561a5f466,f98c0fd002ba589c06bf3b605fe3f189,fa4079c109c67561ad52ce2f338d0fa0,fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="OUTPUTS">
      <data key="d4">7.0</data>
      <data key="d5">Outputs are generated by AWS Amplify to configure other services
AWS Amplify uses outputs to manage and configure backend resources effectively</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a,f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LAMBDA INTEGRATION">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can utilize Lambda Integration to connect serverless functions to APIs</data>
      <data key="d6">f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON PINPOINT">
      <data key="d4">51.0</data>
      <data key="d5">AWS Amplify integrates with Amazon Pinpoint to enable in-app messaging campaigns for applications
AWS Amplify can utilize Amazon Pinpoint for user engagement through targeted messaging
AWS Amplify integrates with Amazon Pinpoint to provide in-app messaging capabilities for applications
AWS Amplify can utilize Amazon Pinpoint for analytics and user engagement features
AWS Amplify uses Amazon Pinpoint to send user engagement messages and track user interactions
AWS Amplify can record events and metrics that are sent to Amazon Pinpoint for user engagement tracking
AWS Amplify integrates with Amazon Pinpoint to provide analytics and user engagement capabilities.</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442,53995557ff9014f83cedfd38268f5f7a,58b4ec0bb9e980cc17fe0b3178671c95,5c179d6063f8fca2e1ae95779d7f3ffc,62ae6b676bb61efbc2ce17791b2ac999,6d2eda5548d1401141ba1fcc7bcbbdba,d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON LOCATION SERVICE">
      <data key="d4">31.0</data>
      <data key="d5">AWS Amplify provides integration capabilities for using the Amazon Location Service SDK in applications
AWS Amplify integrates with Amazon Location Service to provide geolocation features in applications
AWS Amplify utilizes Amazon Location Service for location-based features in applications
AWS Amplify integrates with Amazon Location Service to provide geolocation capabilities in applications</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a,bf926fe785180e6ba0afb391db266523,cf54383d0ee2ab32d2ea7410ca6c6418,df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PINPOINT">
      <data key="d4">6.0</data>
      <data key="d5">Pinpoint can be integrated with AWS Amplify to manage in-app messaging campaigns</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY GEO">
      <data key="d4">22.0</data>
      <data key="d5">AWS Amplify includes Amplify Geo as a feature to provide location services in applications
AWS Amplify includes Amplify Geo as a service for geolocation capabilities in applications
Amplify Geo is a feature of AWS Amplify that enhances the platform's mapping capabilities</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b,cf54383d0ee2ab32d2ea7410ca6c6418,de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON COGNITO">
      <data key="d4">105.0</data>
      <data key="d5">Amazon Cognito is used in conjunction with AWS Amplify to manage user authentication and authorization in applications
AWS Amplify uses Amazon Cognito for user authentication and management in applications.
AWS Amplify integrates with Amazon Cognito to provide authentication and user management features for applications
AWS Amplify integrates with Amazon Cognito for user authentication and management
AWS Amplify integrates with Amazon Cognito to provide authentication and user management features for applications
AWS Amplify uses Amazon Cognito for user authentication and management in applications
AWS Amplify utilizes Amazon Cognito for user authentication and management within applications
AWS Amplify uses Amazon Cognito for managing user authentication and authorization
AWS Amplify provides tools and libraries to interact with Amazon Cognito for user authentication and management
AWS Amplify uses Amazon Cognito for user authentication and identity management
AWS Amplify utilizes Amazon Cognito for user authentication and management
AWS Amplify integrates with Amazon Cognito to provide authentication capabilities for applications
AWS Amplify integrates with Amazon Cognito for user authentication and management in applications.</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778,1ef9b6a9263edfd718636bcbc29f4a72,5b2747800197a072e6dc22c54876eb35,5c179d6063f8fca2e1ae95779d7f3ffc,710de2c1f4693d893bae10139553994d,7925e036e2025ccae5e0f72fe8f556ac,856c945b28eacce9c83378e56652fee3,9d1ecd9e6b4e4bc832178b9ae1a06e8d,bc4893f2f489d14f0975fa64ffca1df8,d55e7e869df5fbcfa36109914fcb2499,dcf0763f48070d41b43f528c6ac2928a,de818dec85e98671fc18154ccd8eaf7d,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="COGNITO USER POOL">
      <data key="d4">10.0</data>
      <data key="d5">AWS Amplify uses Cognito User Pools for managing user authentication and access control
AWS Amplify integrates with Cognito User Pool to provide authentication services</data>
      <data key="d6">bf926fe785180e6ba0afb391db266523,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MAPLIBRE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify integrates with MapLibre to provide mapping capabilities in web applications</data>
      <data key="d6">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MAP API">
      <data key="d4">5.0</data>
      <data key="d5">The Map API is part of the AWS Amplify framework, allowing developers to manage maps</data>
      <data key="d6">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON GO">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can be used to develop applications that integrate with Amazon Go services</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON 4-STAR">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can be utilized to create applications that enhance the shopping experience at Amazon 4-Star</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GEOSERVICE">
      <data key="d4">1.0</data>
      <data key="d5">GeoService is a feature of AWS Amplify that allows for location-based searches and services</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GEOSEARCH">
      <data key="d4">7.0</data>
      <data key="d5">GeoSearch is a functionality provided by AWS Amplify to enable location-based searches in applications</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SEARCH INDEX">
      <data key="d4">8.0</data>
      <data key="d5">The search index is a component of AWS Amplify's geo category, allowing for efficient place searches</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON LOCATION SERVICES">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify utilizes Amazon Location Services to provide geolocation capabilities in applications</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="AWS AMPLIFY" target="HERE TECHNOLOGIES">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can integrate with HERE Technologies for geolocation services</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ESRI">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can integrate with Esri for mapping and spatial analysis</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LOCATION SERVICE">
      <data key="d4">8.0</data>
      <data key="d5">Location Service is a feature provided by AWS Amplify for geolocation capabilities</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="AWS AMPLIFY" target="KINESIS">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify integrates with Amazon Kinesis to provide real-time data streaming capabilities for applications</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CONFIGUREAUTOTRACK">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify provides the ConfigureAutoTrack function to manage user interaction tracking</data>
      <data key="d6">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DISABLE">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify allows users to disable analytics tracking through the Disable function</data>
      <data key="d6">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ENABLE">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify allows users to enable analytics tracking through the Enable function</data>
      <data key="d6">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY ANALYTICS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Analytics is a component of AWS Amplify that helps in tracking user engagement</data>
      <data key="d6">d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY AUTH">
      <data key="d4">33.0</data>
      <data key="d5">Amplify Auth is a part of the AWS Amplify ecosystem, providing authentication services
Amplify Auth is a component of AWS Amplify that provides authentication services for applications built on the platform
Amplify Auth is a service offered by AWS Amplify for managing user authentication
AWS Amplify includes Amplify Auth as a feature for managing authentication in applications</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2,758d7b22f173e12c1857a365834df542,9bcc9002428492e349dade67bf61476e,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY STORAGE API">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify Storage API is a part of the AWS Amplify framework, enabling storage functionalities within applications built using Amplify.</data>
      <data key="d6">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON KINESIS">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can utilize Amazon Kinesis for real-time data processing and analytics.</data>
      <data key="d6">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LAMBDA">
      <data key="d4">29.0</data>
      <data key="d5">AWS Amplify integrates with AWS Lambda to enable serverless functions that respond to events in applications
AWS Amplify allows the use of AWS Lambda functions to extend application functionality
AWS Amplify can utilize AWS Lambda functions for custom data access and processing
AWS Amplify can utilize AWS Lambda for serverless computing and custom use cases</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c,1bafd8792486c2e570d8aa0cb40189b9,856c945b28eacce9c83378e56652fee3,d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ON UPLOAD TRIGGER">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify defines the onUpload trigger to handle file uploads in the application</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DYNAMO DB">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can utilize DynamoDB as a backend database for storing application data</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY DATA">
      <data key="d4">42.0</data>
      <data key="d5">AWS Amplify provides tools for managing data through Amplify Data
AWS Amplify integrates with Amplify Data to provide a structured way to manage application data
AWS Amplify provides the framework and tools necessary to utilize Amplify Data for application development
Amplify Data is a component of AWS Amplify that facilitates data management and operations
Amplify Data is a component of AWS Amplify that provides data management capabilities for applications
Amplify Data is a component of AWS Amplify that focuses on data management and real-time capabilities</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c,23f821c071cb4c4cf183f5aac596db35,61cf173fbdd2221f3bcf1bc2a4df1840,a525cbfc03ba1b986f30ce2280067dda,d7f9d6d81c47c8666bdbe05c89629447,f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS SDK">
      <data key="d4">1.0</data>
      <data key="d5">The AWS SDK is used within AWS Amplify to interact with AWS services</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON EVENTBRIDGE">
      <data key="d4">21.0</data>
      <data key="d5">AWS Amplify uses Amazon EventBridge to power its function scheduling capabilities
AWS Amplify can integrate with Amazon EventBridge to handle events in applications
AWS Amplify can utilize Amazon EventBridge to manage events and trigger workflows in applications.</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98,41deb762c8966a1fa15f960e2fa31753,df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="WEEKLY DIGEST">
      <data key="d4">7.0</data>
      <data key="d5">The weekly digest function is defined and managed within the AWS Amplify platform</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GENERATE REPORT">
      <data key="d4">7.0</data>
      <data key="d5">The generate report function is defined and managed within the AWS Amplify platform</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DRINK SOME WATER">
      <data key="d4">7.0</data>
      <data key="d5">The drink some water function is defined and managed within the AWS Amplify platform</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REMIND ME">
      <data key="d4">1.0</data>
      <data key="d5">The remind me function is defined and managed within the AWS Amplify platform</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FUNCTIONS">
      <data key="d4">16.0</data>
      <data key="d5">Functions are a key feature of AWS Amplify that allows for serverless computing
AWS Amplify enables the creation and management of serverless functions using AWS Lambda</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72,41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTH-POST-AUTHENTICATION">
      <data key="d4">1.0</data>
      <data key="d5">Auth-post-authentication is a function that is part of the AWS Amplify framework</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY JOBS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Jobs is a feature of AWS Amplify that allows for the scheduling of functions and tasks</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SAY-HELLO">
      <data key="d4">7.0</data>
      <data key="d5">The 'say-hello' function is part of the AWS Amplify framework, which allows for the creation and management of serverless functions.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS LAMBDA">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify utilizes AWS Lambda to run backend functions in a serverless environment
AWS Amplify uses AWS Lambda functions to perform tasks and customize workflows</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72,23f821c071cb4c4cf183f5aac596db35</data>
    </edge>
    <edge source="AWS AMPLIFY" target="STORAGE">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify provides tools for managing file storage as part of its backend services
AWS Amplify includes Storage for managing file uploads and retrievals in applications</data>
      <data key="d6">23f821c071cb4c4cf183f5aac596db35,502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON S3">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify provides tools to interact with Amazon S3 for storage solutions in applications
AWS Amplify allows developers to set up and connect to Amazon S3 for storage solutions</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2,1ef9b6a9263edfd718636bcbc29f4a72</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SINGAPORE">
      <data key="d4">5.0</data>
      <data key="d5">AWS Amplify services can be utilized in Singapore, as it is a global platform provided by Amazon Web Services.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TRANSFER ACCELERATION">
      <data key="d4">1.0</data>
      <data key="d5">Transfer Acceleration can be enabled in AWS Amplify to improve file transfer speeds.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="AWS AMPLIFY" target="S3">
      <data key="d4">16.0</data>
      <data key="d5">AWS Amplify utilizes Amazon S3 for file storage and management in applications
AWS Amplify can connect to Amazon S3 for storage solutions in applications.</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea,e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TANSTACK">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify provides the backend services that work in conjunction with TanStack's libraries for data management in applications.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CDK">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify can utilize the AWS CDK to define and provision cloud resources programmatically.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CHRIS">
      <data key="d4">7.0</data>
      <data key="d5">Chris is involved in the development or documentation of AWS Amplify, contributing to its features and functionalities.</data>
      <data key="d6">fc6e2a28447409d2b0f12296647c9470</data>
    </edge>
    <edge source="AWS AMPLIFY" target="APPSYNC">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify uses AWS AppSync to manage GraphQL APIs for applications, enabling real-time data access.</data>
      <data key="d6">fc6e2a28447409d2b0f12296647c9470</data>
    </edge>
    <edge source="AWS AMPLIFY" target="NEXJS">
      <data key="d4">8.0</data>
      <data key="d5">Next.js can be used in conjunction with AWS Amplify to build and connect backend services for web applications.</data>
      <data key="d6">e8bb64825eb8da944e09e46a90be853c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SRC/APP.TSX">
      <data key="d4">8.0</data>
      <data key="d5">src/App.tsx contains code examples that utilize AWS Amplify's services for managing data and storage</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SCHEMA">
      <data key="d4">2.0</data>
      <data key="d5">AWS Amplify uses Schema to define the structure and organization of data within its platform
AWS Amplify utilizes schemas to define data models and their relationships within the application</data>
      <data key="d6">0540b18a392d2ccc8d9b4915eed9acfe,ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON TRANSLATE">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify integrates with Amazon Translate to provide translation capabilities in applications</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON WEB SERVICES">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify is a development platform that utilizes various services provided by Amazon Web Services</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TRANSLATE.JS">
      <data key="d4">8.0</data>
      <data key="d5">Translate.js is used within AWS Amplify to define custom resolvers for the translation process</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MAIN.TSX">
      <data key="d4">1.0</data>
      <data key="d5">Main.tsx is where the AWS Amplify configuration is set up to enable the application to use AWS services</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON POLLY">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify can be used to integrate Amazon Polly into applications, allowing developers to leverage its text-to-speech capabilities.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AWS AMPLIFY" target="QUICKSTART GUIDE">
      <data key="d4">1.0</data>
      <data key="d5">The Quickstart guide provides instructions for setting up and using AWS Amplify for application development.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="OPENSEARCH DOMAIN">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify is used to define backend resources, including the OpenSearch Domain for data ingestion</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LAMBDA FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can utilize AWS Lambda functions to implement custom authorization rules for data access</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TODO">
      <data key="d4">9.0</data>
      <data key="d5">The Todo model is part of the AWS Amplify framework, which provides tools for building applications
AWS Amplify provides the backend services to manage Todo items in applications
Todo events are part of the AWS Amplify framework, allowing real-time task management</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840,8c8075430684b38bdd1c6ce9fc9f7205,d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="AWS AMPLIFY" target="OPENID CONNECT">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can be configured to use OpenID Connect as an authorization provider for user authentication</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USER GROUP">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify allows for user group-based data access, restricting access to specific user groups</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTHORIZATION TOKEN">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify requires an authorization token for client authentication</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GRAPHQL">
      <data key="d4">24.0</data>
      <data key="d5">AWS Amplify supports GraphQL for data queries and mutations
AWS Amplify supports GraphQL for managing data interactions in applications.
AWS Amplify supports GraphQL for building APIs that allow clients to interact with data</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72,374f53811273c5cffe3558d227a0e4ec,d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="API ID">
      <data key="d4">6.0</data>
      <data key="d5">API ID is used within AWS Amplify to identify and manage APIs</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ACCOUNT ID">
      <data key="d4">5.0</data>
      <data key="d5">Account ID is associated with AWS Amplify for resource management and billing</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REQUEST ID">
      <data key="d4">1.0</data>
      <data key="d5">Request ID is used in AWS Amplify to track specific API requests</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTHORIZATION RULE">
      <data key="d4">15.0</data>
      <data key="d5">AWS Amplify allows the configuration of authorization rules to manage access to data based on user roles and groups
AWS Amplify allows developers to set authorization rules to control access to APIs</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3,d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="OIDC AUTHORIZATION MODE">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports OIDC authorization mode for integrating OpenID Connect as an authentication provider</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SALARY">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify allows for the creation and management of salary records in applications</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USERPOOL">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify utilizes User Pools for managing user authentication and authorization in applications</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="IDENTITYPOOL">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify uses Identity Pools to provide temporary AWS credentials for users to access AWS services</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CRUD OPERATIONS">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify allows developers to perform CRUD operations on data models</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="AWS AMPLIFY" target="HUB">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify uses Hub for local eventing to manage subscription events and connection states</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMAZON">
      <data key="d4">1.0</data>
      <data key="d5">Amazon is the parent organization that provides the AWS Amplify platform for developers</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTHORIZATION MODE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify supports various authorization modes for securing APIs</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FETCHAUTHSSESSION">
      <data key="d4">8.0</data>
      <data key="d5">FetchAuthSession is a method provided by AWS Amplify to retrieve user credentials</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TOKEN PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">The Token Provider is configured in AWS Amplify to manage custom authentication tokens</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ROUTE53">
      <data key="d4">5.0</data>
      <data key="d5">Route 53 can be used in conjunction with AWS Amplify for DNS management of applications</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTH RESOURCES">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provisions and manages auth resources for user authentication in applications</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DEVELOPER">
      <data key="d4">8.0</data>
      <data key="d5">Developers utilize AWS Amplify to build and deploy applications with integrated backend services</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TRIGGERS">
      <data key="d4">14.0</data>
      <data key="d5">AWS Amplify allows developers to define triggers to customize the authentication lifecycle, enhancing the user experience
Triggers are a feature of AWS Amplify that allows customization of the authentication lifecycle</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a,f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="AWS AMPLIFY" target="EMAIL CUSTOMIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Email customization is a feature of AWS Amplify that allows developers to modify email templates</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ADMINS">
      <data key="d4">7.0</data>
      <data key="d5">The ADMINS group is a part of AWS Amplify that has elevated permissions for managing user actions</data>
      <data key="d6">bc4893f2f489d14f0975fa64ffca1df8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTH EVENTS">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify emits auth events during the authentication process, allowing applications to respond to user actions</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY LIBRARIES">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Libraries are part of the AWS Amplify ecosystem, providing functionalities for user management</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY HUB">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Hub is a component of AWS Amplify that facilitates event listening and handling</data>
      <data key="d6">4ccaaec02cfc4169e423aaf4ce28263f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="JON DOE">
      <data key="d4">7.0</data>
      <data key="d5">Jon Doe is a user interacting with the AWS Amplify platform for attribute verification and updates.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CONFIRM ATTRIBUTE">
      <data key="d4">6.0</data>
      <data key="d5">The confirm attribute event is part of the AWS Amplify user attribute management process.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DELETE USER ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">The delete user attributes event is a feature provided by AWS Amplify for managing user data.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN OUT">
      <data key="d4">7.0</data>
      <data key="d5">The sign out event is a feature provided by AWS Amplify for user session management</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN IN">
      <data key="d4">7.0</data>
      <data key="d5">The sign in event is a feature provided by AWS Amplify for user authentication</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN IN API">
      <data key="d4">7.0</data>
      <data key="d5">The sign in API is a feature provided by AWS Amplify for user authentication</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN_IN">
      <data key="d4">9.0</data>
      <data key="d5">SIGN_IN is a feature provided by AWS Amplify to authenticate users</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN_UP">
      <data key="d4">1.0</data>
      <data key="d5">SIGN_UP is a feature provided by AWS Amplify to register new users</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN_IN WITH REDIRECT">
      <data key="d4">8.0</data>
      <data key="d5">SIGN_IN WITH REDIRECT is a feature of AWS Amplify that facilitates user authentication through external providers</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTO SIGN-IN">
      <data key="d4">8.0</data>
      <data key="d5">AUTO SIGN-IN is a feature of AWS Amplify that allows for seamless user sign-in based on prior confirmations</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN-UP">
      <data key="d4">7.0</data>
      <data key="d5">The sign-up process is a feature provided by AWS Amplify for user account creation</data>
      <data key="d6">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN-IN">
      <data key="d4">7.0</data>
      <data key="d5">The sign-in process is a feature provided by AWS Amplify for existing users to access their accounts</data>
      <data key="d6">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BROWSER LOCAL STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify uses browser local storage as a default mechanism for persisting user tokens.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="COOKIE STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can utilize cookie storage for persisting user tokens, providing an alternative to local storage.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SESSION STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify can use session storage to manage user tokens for the duration of a browser session.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM STORAGE">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify allows developers to implement custom storage solutions for managing user tokens.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TOKEN MANAGEMENT">
      <data key="d4">8.0</data>
      <data key="d5">Token management is a key feature provided by AWS Amplify for handling user authentication tokens.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TOKEN REVOCATION">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provides automatic token revocation features to enhance security for user sessions.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="KEYVALUESTORAGEINTERFACE">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify utilizes the KeyValueStorageInterface to allow developers to create custom storage solutions for tokens.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTHENTICATOR COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">The Authenticator component is a feature of AWS Amplify that facilitates user authentication</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="AWS AMPLIFY" target="OIDC">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify supports OIDC for authentication, allowing integration with various identity providers</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SAML">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify supports SAML for authentication, enabling users to sign in using SAML-based identity providers</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MULTI-FACTOR AUTHENTICATION">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify supports multi-factor authentication as a security feature for user sign-in flows</data>
      <data key="d6">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GUEST ACCESS">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify enables guest access by default, allowing users to interact with the application without signing in</data>
      <data key="d6">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTH SESSION">
      <data key="d4">7.0</data>
      <data key="d5">The auth session is a key feature of AWS Amplify that manages user authentication and access control</data>
      <data key="d6">eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CONFIRMSIGNUP API">
      <data key="d4">8.0</data>
      <data key="d5">The confirmSignUp API is a feature provided by AWS Amplify for user account verification</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CONFIRMSIGNIN API">
      <data key="d4">8.0</data>
      <data key="d5">The confirmSignIn API is a feature provided by AWS Amplify for user sign-in verification</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="UPDATE_MFA_PREFERENCE API">
      <data key="d4">8.0</data>
      <data key="d5">The updateMFAPreference API is a feature provided by AWS Amplify for managing multi-factor authentication preferences</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TOTP">
      <data key="d4">8.0</data>
      <data key="d5">TOTP is a method supported by AWS Amplify for multi-factor authentication
AWS Amplify supports TOTP setup as part of its authentication features</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1,d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MFA">
      <data key="d4">1.0</data>
      <data key="d5">MFA is a security feature implemented in AWS Amplify for enhanced user account protection</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PHONE">
      <data key="d4">7.0</data>
      <data key="d5">Phone is a configurable sign-in method within AWS Amplify</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USERNAMES">
      <data key="d4">6.0</data>
      <data key="d5">Usernames are used for display purposes in AWS Amplify authentication</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CUSTOM ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">Custom attributes can be configured in AWS Amplify for user sign-up</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SIGN-IN API">
      <data key="d4">7.0</data>
      <data key="d5">The sign-in API is a feature provided by AWS Amplify for user authentication</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PRE SIGN-UP TRIGGER">
      <data key="d4">6.0</data>
      <data key="d5">Pre sign-up trigger is a feature in AWS Amplify that validates user attributes before sign-up</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USER ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">User attributes are managed within AWS Amplify for user authentication and profile management</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY CLIENT LIBRARIES">
      <data key="d4">1.0</data>
      <data key="d5">Amplify client libraries are part of AWS Amplify, providing flexibility to connect applications to AWS resources</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CRUD">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provides built-in support for CRUD operations to manage application data</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72</data>
    </edge>
    <edge source="AWS AMPLIFY" target="VISUAL CONFIGURATION">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides a visual configuration interface for managing backend resources</data>
      <data key="d6">1ef9b6a9263edfd718636bcbc29f4a72</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY CLIENT LIBRARY">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify Client Library is part of the AWS Amplify ecosystem, enabling easier interaction with AWS services</data>
      <data key="d6">fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LOCATIONMAPSTACK">
      <data key="d4">7.0</data>
      <data key="d5">LocationMapStack is a resource that is part of the AWS Amplify platform, enabling location functionalities in applications.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CRUD FORMS">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides auto-generated CRUD forms for managing data in applications.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BACKEND">
      <data key="d4">7.0</data>
      <data key="d5">AWS Amplify provides a backend service that supports the development of applications.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PER-DEVELOPER CLOUD SANDBOXES">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify offers per-developer cloud sandboxes to facilitate faster development iterations.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FULLSTACK APPLICATIONS">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify is designed to help developers build and deploy fullstack applications seamlessly.</data>
      <data key="d6">e3c6466a080dbad6e05f99bda0212547</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY UI">
      <data key="d4">93.0</data>
      <data key="d5">Amplify UI is a part of the AWS Amplify ecosystem, providing UI components for application development
Amplify UI is part of the AWS Amplify ecosystem, providing UI components for building applications
Amplify UI is a component library that is part of the AWS Amplify ecosystem, providing UI components for applications
Amplify UI is a part of the AWS Amplify ecosystem, providing UI components for application development
AWS Amplify provides the Amplify UI components for user management and authentication
Amplify UI is a library developed as part of AWS Amplify to facilitate UI development
Amplify UI is a part of the AWS Amplify ecosystem, providing UI components for React applications
Amplify UI is a part of the AWS Amplify platform, providing UI components for React applications
Amplify UI is a component library that is part of the AWS Amplify framework, designed for building user interfaces
Amplify UI is built on top of AWS Amplify, leveraging its services for UI development
Amplify UI is a collection of components that works seamlessly with AWS Amplify to build applications quickly
Amplify UI components are part of the AWS Amplify ecosystem, providing developers with customizable UI elements</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80,32ab448d1972668cba4e2c467ff116a8,4c20122de1ca69ecf45662867d268049,515a9fba2517051a51ebb09f8a2c2b06,56553341236a20419cc336c60c2bed04,6634963e5bc3eae8755d15393e4c9b71,818fcb4044a83bd6eead8a24e57319ad,877a7ccbdb63a00477117db13eba1534,9939e974ca8f24b6b7f34bbf89addb7e,a5e50f469dd57f00c706f3dcd5894c37,b4caad819b3245d1c7c01c198437baa1,d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY IN-APP MESSAGING API">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify In-App Messaging API is a feature provided by AWS Amplify for enhancing user engagement</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="AWS AMPLIFY" target="STORAGE IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">Storage Image is a component that is part of the AWS Amplify framework, allowing image display from S3 storage</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MAPVIEW">
      <data key="d4">6.0</data>
      <data key="d5">AWS Amplify is configured to support the MapView component, enabling its functionalities</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FACELIVENESSDETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">FaceLivenessDetector is a component that is part of the AWS Amplify framework, which provides tools for building applications</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FACE LIVENESS DETECTOR">
      <data key="d4">24.0</data>
      <data key="d5">Face Liveness Detector is a component that is part of the AWS Amplify framework, used for facial recognition and verification
AWS Amplify provides the infrastructure and tools to implement the Face Liveness Detector in applications
The Face Liveness Detector is a component that is part of the AWS Amplify framework, providing functionality for user authentication</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf,c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CHANGE PASSWORD">
      <data key="d4">8.0</data>
      <data key="d5">Change Password component is part of the AWS Amplify UI for React, enabling users to change their passwords</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="VISUALLYHIDDEN">
      <data key="d4">7.0</data>
      <data key="d5">VisuallyHidden is a component provided by AWS Amplify to enhance accessibility in applications.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="AWS AMPLIFY" target="RATING">
      <data key="d4">7.0</data>
      <data key="d5">Rating is a component provided by AWS Amplify for displaying ratings in applications.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS EXPORTS">
      <data key="d4">8.0</data>
      <data key="d5">AWS exports is a configuration file used to set up AWS Amplify in a project.</data>
      <data key="d6">4d25b33f699aef8a075e8858bf0ad630</data>
    </edge>
    <edge source="AWS AMPLIFY" target="RATING COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Rating component is a part of the AWS Amplify UI library, which provides various components for application development.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BADGE">
      <data key="d4">7.0</data>
      <data key="d5">Badge is a component provided by AWS Amplify for UI development</data>
      <data key="d6">70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PAGINATION">
      <data key="d4">9.0</data>
      <data key="d5">Pagination is a component provided by AWS Amplify for managing data navigation
AWS Amplify provides the Pagination component as part of its UI toolkit for developers</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13,70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USETHEME">
      <data key="d4">6.0</data>
      <data key="d5">useTheme is a hook that is part of the AWS Amplify UI library</data>
      <data key="d6">70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USEPAGINATION">
      <data key="d4">6.0</data>
      <data key="d5">usePagination is a hook that is part of the AWS Amplify UI library</data>
      <data key="d6">70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FLEX">
      <data key="d4">58.0</data>
      <data key="d5">AWS Amplify provides the Flex component for developers to create responsive layouts in their applications
Flex is a layout component that is part of the AWS Amplify UI library
Flex is a layout component provided by AWS Amplify for arranging child components
Flex is a layout component that is part of the AWS Amplify UI framework
Flex is a component provided by AWS Amplify for creating responsive layouts
The Flex component is included in the AWS Amplify UI library, facilitating responsive layouts
Flex is a layout component provided by AWS Amplify to help organize UI elements in a responsive manner.
AWS Amplify UI React utilizes Flex for responsive layout in its components
Flex is a layout component provided by AWS Amplify for arranging UI elements.
Flex is a layout component provided by AWS Amplify for creating responsive designs</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589,582ef60010150eb5b063d4e027797a77,868b364b65a596f02a214b12ca0cbb6a,8b2761fb86513e3cf4d313a43b80f9fc,8d0e14288c93ab458cda0d9179f522a7,98fcf483b563a8d8b54ee85b2f6fa533,a3d37007c833039158d1e1720cb62466,d862c0095587db23ca9388fe047e5de4,d9a272b23f1d5cf3e9a9c6a2c79923b8,e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TOGGLEBUTTON">
      <data key="d4">8.0</data>
      <data key="d5">The ToggleButton is a component provided by AWS Amplify for building user interfaces</data>
      <data key="d6">8d0e14288c93ab458cda0d9179f522a7</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TEXTAREAFIELD">
      <data key="d4">7.0</data>
      <data key="d5">TextAreaField is a component provided by AWS Amplify for building forms</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TEXTAREA FIELD">
      <data key="d4">8.0</data>
      <data key="d5">TextAreaField is a component provided by AWS Amplify for user input in applications</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TEXTFIELD">
      <data key="d4">17.0</data>
      <data key="d5">TextField is another component provided by AWS Amplify for user input in applications
TextField is a component provided by AWS Amplify for user input in forms
TextField is a component provided by AWS Amplify for user interface development</data>
      <data key="d6">12c9fa6332d9cd62a8cbe8be18fd540e,7a771747e08d74ceb8c258bc5a658d6d,98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SWITCHFIELD">
      <data key="d4">16.0</data>
      <data key="d5">SwitchField is a component provided by AWS Amplify for user interface development
SwitchField is a component provided by AWS Amplify for creating toggle switches in applications</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1,12c9fa6332d9cd62a8cbe8be18fd540e</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TEXT">
      <data key="d4">9.0</data>
      <data key="d5">Text is a component provided by AWS Amplify for user interface development
Text is a component that is part of the AWS Amplify UI React library, used for rendering styled text.</data>
      <data key="d6">12c9fa6332d9cd62a8cbe8be18fd540e,a405b9f832ed918dd2c0ed33bb2b5808</data>
    </edge>
    <edge source="AWS AMPLIFY" target="USE THEME">
      <data key="d4">14.0</data>
      <data key="d5">useTheme is a hook provided by AWS Amplify for accessing theme tokens
Use Theme is a hook that is part of the AWS Amplify UI React library, allowing access to theme tokens.</data>
      <data key="d6">12c9fa6332d9cd62a8cbe8be18fd540e,a405b9f832ed918dd2c0ed33bb2b5808</data>
    </edge>
    <edge source="AWS AMPLIFY" target="STEPPERFIELD">
      <data key="d4">8.0</data>
      <data key="d5">StepperField is a component that is part of the AWS Amplify UI library</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SELECTFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SelectField is part of the AWS Amplify UI React library</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SLIDERFIELD">
      <data key="d4">16.0</data>
      <data key="d5">SliderField is a component provided by AWS Amplify for building user interfaces in applications
SliderField is a component provided by AWS Amplify for user input in applications</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3,93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="AWS AMPLIFY" target="SEARCHFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SearchField is a component that is part of the AWS Amplify framework, which provides tools for building applications</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="AWS AMPLIFY" target="THEME">
      <data key="d4">19.0</data>
      <data key="d5">The theme customization feature in AWS Amplify allows developers to define the appearance of components
The Theme component allows customization of AWS Amplify UI components, including Fieldset and TextField
The theme customization in AWS Amplify allows developers to define the appearance of buttons and other components.
Theme customization is a feature provided by AWS Amplify to enhance the appearance of UI components</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7,8b2761fb86513e3cf4d313a43b80f9fc,b48f64ddd27370c0d0a93447e796c6b3,e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="RADIOGROUPFIELD">
      <data key="d4">8.0</data>
      <data key="d5">RadioGroupField is a component provided by AWS Amplify for user interaction</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PHONENUMBERFIELD">
      <data key="d4">8.0</data>
      <data key="d5">The PhoneNumberField is a component provided by AWS Amplify</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PHONE NUMBER FIELD">
      <data key="d4">53.0</data>
      <data key="d5">The Phone Number Field is a component provided by AWS Amplify for building forms in applications.
The Phone Number Field is a component provided by AWS Amplify for developers
The Phone Number Field is a component provided by AWS Amplify for user interface development
The Phone Number Field is a component provided by AWS Amplify for user interface development
The Phone Number Field is a part of the AWS Amplify UI library, which provides components for building applications
The Phone Number Field is a component provided by AWS Amplify for building applications
The Phone Number Field is a component within the AWS Amplify framework, which provides UI elements for applications.
The Phone Number Field is a component that is part of the AWS Amplify UI React library, which provides various UI components for developers.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6,3c1da97b232e76bcfabe7b7c980f2a33,52087f54ba341fa48453f206aca85fa0,582ef60010150eb5b063d4e027797a77,a405b9f832ed918dd2c0ed33bb2b5808,b13ba75bb69bab84cc548bc3c7fdf65d,d449796d977ece5e8fa1202c70599e55,e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="PASSWORD FIELD">
      <data key="d4">15.0</data>
      <data key="d5">The PasswordField is a component provided by AWS Amplify, showcasing its functionality within the platform
The Password Field is a component within the AWS Amplify UI library, which provides various UI elements for application development.</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf,5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="AWS AMPLIFY" target="FIELDSET">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides the Fieldset component as part of its UI library for React applications</data>
      <data key="d6">72f7bd8a9eb9039eabf2d7d1ff4c9601</data>
    </edge>
    <edge source="AWS AMPLIFY" target="DROPZONE">
      <data key="d4">15.0</data>
      <data key="d5">The DropZone component is part of the AWS Amplify UI library, which provides various components for building applications
DropZone is a component provided by AWS Amplify for file uploads</data>
      <data key="d6">7668a790c01b22add1e76afc928004db,d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="INPUT">
      <data key="d4">7.0</data>
      <data key="d5">The Input component is also part of the AWS Amplify UI library, designed for user data entry</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="LABEL">
      <data key="d4">7.0</data>
      <data key="d5">The Label component is part of the AWS Amplify UI library, used to enhance form accessibility</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="AWS AMPLIFY" target="CHECKBOXFIELD">
      <data key="d4">8.0</data>
      <data key="d5">CheckboxField is a component provided by AWS Amplify for user interaction in forms</data>
      <data key="d6">a407fa7a377db0b8cb08ded22609f5e2</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AUTOCOMPLETE">
      <data key="d4">16.0</data>
      <data key="d5">Autocomplete is a component provided by AWS Amplify that enhances user experience in search fields
Autocomplete is a component provided by AWS Amplify for building user interfaces
AWS Amplify provides the Autocomplete feature as part of its development platform for applications</data>
      <data key="d6">a407fa7a377db0b8cb08ded22609f5e2,d9a272b23f1d5cf3e9a9c6a2c79923b8,dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AWS AMPLIFY" target="TABS">
      <data key="d4">7.0</data>
      <data key="d5">Tabs is a component provided by AWS Amplify for building user interfaces in web applications.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="AWS AMPLIFY" target="BREADCRUMBS">
      <data key="d4">8.0</data>
      <data key="d5">Breadcrumbs is a component provided by AWS Amplify for building user-friendly navigation</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ICON PROVIDER">
      <data key="d4">13.0</data>
      <data key="d5">IconsProvider is part of AWS Amplify, enabling the customization of icons in UI components.
AWS Amplify can utilize an Icon Provider to enhance the visual elements of applications built on its platform</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7,a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MESSAGE THEME EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">MessageThemeExample demonstrates the use of the Message component within the AWS Amplify framework.</data>
      <data key="d6">a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MESSAGE STYLE PROPS">
      <data key="d4">6.0</data>
      <data key="d5">MessageStyleProps shows how to apply styles to the Message component in AWS Amplify.</data>
      <data key="d6">a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="MESSAGE AS ALERT">
      <data key="d4">1.0</data>
      <data key="d5">MessageAsAlert demonstrates how to implement alert functionality using the Message component in AWS Amplify.</data>
      <data key="d6">a3d37007c833039158d1e1720cb62466</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ALERT">
      <data key="d4">9.0</data>
      <data key="d5">Alert is a component provided by AWS Amplify to display messages to users
AWS Amplify provides the Alert component as part of its UI library for developers to use in applications</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e,e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ACCESSIBILITY">
      <data key="d4">1.0</data>
      <data key="d5">Accessibility features are integrated into AWS Amplify components to ensure usability for all users</data>
      <data key="d6">e28baad4e7d7ca8e43254a705cbf687f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="REACT ICONS">
      <data key="d4">14.0</data>
      <data key="d5">AWS Amplify can be used in conjunction with React Icons to enhance the user interface of applications built on the platform
AWS Amplify can utilize React Icons to enhance its user interface with icons</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7,6edc6c7e13a23d971e48b75724b50d5f</data>
    </edge>
    <edge source="AWS AMPLIFY" target="POLYFILL">
      <data key="d4">1.0</data>
      <data key="d5">Polyfills are often required when using AWS Amplify in environments that do not support certain JavaScript features natively.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="AWS AMPLIFY" target="@AWS-SDK/CLIENT-STS">
      <data key="d4">6.0</data>
      <data key="d5">@aws-sdk/client-sts can be used in conjunction with AWS Amplify to manage security tokens for AWS services.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="AWS AMPLIFY" target="@AWS-SDK/UTIL-USER-AGENT-NODE">
      <data key="d4">1.0</data>
      <data key="d5">@aws-sdk/util-user-agent-node helps in generating user agent strings for AWS SDK clients, which can be useful in AWS Amplify applications.</data>
      <data key="d6">f0a75595032bbb539a5844dc72a00955</data>
    </edge>
    <edge source="AWS AMPLIFY" target="ACCORDION">
      <data key="d4">1.0</data>
      <data key="d5">The Accordion is a component of AWS Amplify UI v6, which enhances the user interface for applications built on AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AWS AMPLIFY" target="UI REACT">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify provides the UI React library as part of its development platform for building applications</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AWS AMPLIFY UI REACT">
      <data key="d4">8.0</data>
      <data key="d5">AWS Amplify UI React is a library that is part of the AWS Amplify ecosystem, providing UI components for applications built with AWS Amplify.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="AWS AMPLIFY" target="INTERNATIONALIZATION (I18N)">
      <data key="d4">1.0</data>
      <data key="d5">AWS Amplify provides tools and components that facilitate the internationalization of applications</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="AWS AMPLIFY" target="AMPLIFY STUDIO">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Studio is a feature of AWS Amplify that allows for visual development of applications</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </edge>
    <edge source="AWS AMPLIFY" target="GRAPHQL API">
      <data key="d4">9.0</data>
      <data key="d5">AWS Amplify provides a GraphQL API service to facilitate backend data management for applications</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AMPLIFY BACKEND">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Data is a part of the Amplify Backend service that helps in managing data-related functionalities</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY DATA" target="SCHEMA">
      <data key="d4">16.0</data>
      <data key="d5">Amplify Data uses schemas to define data models and their relationships within applications
Amplify Data utilizes schemas to define the structure of data models in applications built with AWS Amplify.
Schema defines the structure of data models used in Amplify Data, guiding how data is fetched and manipulated
Amplify Data uses schemas to define data models and operations for the backend</data>
      <data key="d6">23f821c071cb4c4cf183f5aac596db35,856c945b28eacce9c83378e56652fee3,e8bb64825eb8da944e09e46a90be853c,f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AMPLIFY DATA" target="GRAPHQL">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Data utilizes GraphQL to manage and fetch data in applications built with AWS Amplify</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AMAZON DYNAMODB">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Data can connect to Amazon DynamoDB as a data source for applications</data>
      <data key="d6">f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="AMPLIFY DATA" target="MUTATION">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Data enables developers to perform mutations to modify data in connected data sources</data>
      <data key="d6">f307707abfeb56b5061ee3f77f2b7cb5</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AMPLIFY LIBRARY">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Data is accessed through the Amplify Library, allowing developers to perform data operations</data>
      <data key="d6">f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AUTHORIZATION MODE">
      <data key="d4">1.0</data>
      <data key="d5">Authorization Mode is a critical aspect of how Amplify Data secures API requests</data>
      <data key="d6">f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AMPLIFY DATA" target="TODO">
      <data key="d4">8.0</data>
      <data key="d5">The Todo model is a part of Amplify Data, allowing users to manage tasks within the application</data>
      <data key="d6">f0df8a5e739e43b9c43840817e1bd7d1</data>
    </edge>
    <edge source="AMPLIFY DATA" target="REAL-TIME API">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Data enables the creation of real-time APIs for applications</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="AMPLIFY DATA" target="CLOUD SANDBOX">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Data can be tested and deployed in a cloud sandbox environment</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AMPLIFY DATA RESOURCE">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Data Resource defines the structure and behavior of the data managed by Amplify Data</data>
      <data key="d6">856c945b28eacce9c83378e56652fee3</data>
    </edge>
    <edge source="AMPLIFY DATA" target="HUB MODULE">
      <data key="d4">8.0</data>
      <data key="d5">The Hub Module is part of Amplify Data, allowing for event subscriptions and actions</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="CREDENTIALS PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">The custom credentials provider is used within Amplify Data to manage authentication and access to AWS resources</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="APPLICATION DATA">
      <data key="d4">8.0</data>
      <data key="d5">Application data is managed through Amplify Data APIs, allowing for CRUD operations</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="AUTHORIZATION RULES">
      <data key="d4">7.0</data>
      <data key="d5">Authorization rules can be customized in Amplify Data to secure access to application resources</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="DYNAMODB">
      <data key="d4">8.0</data>
      <data key="d5">DynamoDB can be used as a data source for Amplify Data, enabling efficient data management</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="MYSQL">
      <data key="d4">8.0</data>
      <data key="d5">MySQL can be integrated with Amplify Data to manage relational data for applications</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY DATA" target="POSTGRESQL">
      <data key="d4">1.0</data>
      <data key="d5">PostgreSQL can be connected to Amplify Data for managing relational data in applications</data>
      <data key="d6">ffcb01253860f700475794fd46c77ad9</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AMPLIFY BACKEND">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Auth is a component of the Amplify Backend service that handles user authentication</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AMAZON LOCATION SERVICE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Auth is used to authenticate users before they can access the Amazon Location Service</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="FETCHAUTHSESSION">
      <data key="d4">1.0</data>
      <data key="d5">fetchAuthSession is an API provided by Amplify Auth to manage user sessions</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AMAZON COGNITO">
      <data key="d4">25.0</data>
      <data key="d5">Amplify Auth uses Amazon Cognito for managing user authentication and authorization
Amplify Auth interacts with Amazon Cognito to provide user authentication services
Amplify Auth is powered by Amazon Cognito, which provides the underlying user management and authentication services</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3,a45591637d0b47a7bce4ac92c8eb5ea6,d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AUTH RESOURCE">
      <data key="d4">1.0</data>
      <data key="d5">The auth resource defines the settings and triggers for the Amplify Auth feature</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AWS LAMBDA">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Auth utilizes AWS Lambda functions to handle authentication challenges and responses.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="AMPLIFY STORAGE">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Storage requires Amplify Auth to be configured for secure access to S3 buckets</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="JSON WEB TOKENS">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Auth uses JSON Web Tokens for authentication and authorization processes</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="ID TOKEN">
      <data key="d4">5.0</data>
      <data key="d5">ID tokens are used within the frontend application of Amplify Auth</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="USER ATTRIBUTES">
      <data key="d4">7.0</data>
      <data key="d5">User attributes are a key component of Amplify Auth, allowing customization of user profiles</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="USER GROUPS">
      <data key="d4">7.0</data>
      <data key="d5">User groups are managed within Amplify Auth to facilitate user permissions and access control</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="MULTI-FACTOR AUTHENTICATION">
      <data key="d4">8.0</data>
      <data key="d5">Multi-factor authentication is a feature provided by Amplify Auth to enhance security</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="EXTERNAL IDENTITY PROVIDERS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Auth supports external identity providers for user authentication, allowing users to sign in using their existing accounts</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="GUEST ACCESS">
      <data key="d4">6.0</data>
      <data key="d5">Guest access is a feature of Amplify Auth that allows users to interact with the application without signing in</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY AUTH" target="TOKENS AND CREDENTIALS">
      <data key="d4">1.0</data>
      <data key="d5">Tokens and credentials are integral to the authentication process managed by Amplify Auth</data>
      <data key="d6">a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="AMPLIFY OUTPUTS" target="AMPLIFY BACKEND">
      <data key="d4">5.0</data>
      <data key="d5">Amplify outputs are generated by the Amplify Backend service to provide necessary configuration for client libraries</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY OUTPUTS" target="S3 BUCKET">
      <data key="d4">1.0</data>
      <data key="d5">The S3 Bucket can be referenced in the amplify_outputs.json file for storing application data</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY OUTPUTS" target="AMPLIFY APP">
      <data key="d4">7.0</data>
      <data key="d5">The build process of an Amplify app generates amplify outputs that are used for deployment</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="AMPLIFY OUTPUTS" target="FRONTEND APP">
      <data key="d4">8.0</data>
      <data key="d5">The frontend app uses the amplify_outputs.json file to configure its connection to the backend services.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="AMPLIFY OUTPUTS" target="AMPLIFY NEXT.JS ADAPTER">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Outputs are used by the Amplify Next.js adapter to configure backend services in a Next.js application</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="AMPLIFY BACKEND" target="AMPLIFY CLI">
      <data key="d4">7.0</data>
      <data key="d5">The Amplify CLI is used to configure and manage the backend resources defined in AWS Amplify</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY GRAPHQL API" target="CDK CONSTRUCTS">
      <data key="d4">6.0</data>
      <data key="d5">CDK Constructs can be used to create and manage the Amplify GraphQL API within AWS CDK applications</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY GRAPHQL API" target="AMPLIFY DATA MODELING">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Data Modeling is essential for defining the data structure that the Amplify GraphQL API will use</data>
      <data key="d6">c3ca697b7fd6e7ae7f2e3ee5cf837fd7</data>
    </edge>
    <edge source="AMPLIFY GRAPHQL API" target="DYNAMODB">
      <data key="d4">7.0</data>
      <data key="d5">The Amplify GraphQL API can interact with DynamoDB to store and retrieve data for applications.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="S3 BUCKET" target="AMPLIFY LIBRARIES">
      <data key="d4">1.0</data>
      <data key="d5">S3 buckets can be utilized in conjunction with Amplify Libraries for dynamic image indexing and storage</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="S3 BUCKET" target="AMAZON DATA FIREHOSE">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Data Firehose can send data to an S3 bucket for storage and further analysis</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="S3 BUCKET" target="FIREHOSE ROLE">
      <data key="d4">8.0</data>
      <data key="d5">The Firehose Role is granted read/write permissions to the S3 bucket for data delivery</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="S3 BUCKET" target="IDENTIFY TEXT">
      <data key="d4">8.0</data>
      <data key="d5">The Identify Text function uploads images to the S3 bucket for processing by the Rekognition Service</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="S3 BUCKET" target="FILE UPLOAD">
      <data key="d4">8.0</data>
      <data key="d5">The file upload process involves transferring files to the S3 bucket for storage and further processing</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="S3 BUCKET" target="POLLY CLIENT">
      <data key="d4">7.0</data>
      <data key="d5">The Polly Client can store synthesized speech as MP3 files in an S3 bucket, facilitating data storage and retrieval.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="S3 BUCKET" target="OPENSEARCH">
      <data key="d4">7.0</data>
      <data key="d5">OpenSearch can utilize data stored in S3 Buckets for indexing and searching purposes.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="S3 BUCKET" target="OPENSEARCH INTEGRATION PIPELINE">
      <data key="d4">1.0</data>
      <data key="d5">The OpenSearch Integration Pipeline can retrieve data from S3 Buckets for processing and indexing.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="S3 BUCKET" target="STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">Storage utilizes S3 Buckets to store raw events for the OpenSearch pipeline.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="S3 BUCKET" target="DYNAMODB">
      <data key="d4">5.0</data>
      <data key="d5">The S3 Bucket is used to export data from DynamoDB for backup or analysis purposes.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="AWS REGION">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Pinpoint operates within specific AWS Regions to send notifications</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="NOTIFICATIONS">
      <data key="d4">8.0</data>
      <data key="d5">Notifications are managed and sent through Amazon Pinpoint, which provides targeted messaging services</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="CAMPAIGN">
      <data key="d4">7.0</data>
      <data key="d5">Campaigns are created and managed through Amazon Pinpoint to engage users</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="AMPLIFY ANALYTICS">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Analytics uses Amazon Pinpoint to collect and analyze user data</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="AMAZON COGNITO">
      <data key="d4">6.0</data>
      <data key="d5">Amazon Cognito can utilize Amazon Pinpoint for sending SMS messages for user authentication</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON PINPOINT" target="SMS">
      <data key="d4">1.0</data>
      <data key="d5">SMS services can be managed and sent through Amazon Pinpoint for user notifications</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON COGNITO" target="USER POOL">
      <data key="d4">32.0</data>
      <data key="d5">Amazon Cognito uses User Pools to manage user authentication and directory services
User Pools are a feature of Amazon Cognito that manage user authentication and directory services
User pools are a feature of Amazon Cognito that manage user sign-up and sign-in
User pools are a feature of Amazon Cognito that manage user identities</data>
      <data key="d6">0e727375fce4c7491422878d0979b901,3bedaf75477c620e5f8469d8d96cfae3,5b2747800197a072e6dc22c54876eb35,7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON COGNITO" target="IDENTITY POOL">
      <data key="d4">16.0</data>
      <data key="d5">Amazon Cognito uses Identity Pools to provide temporary AWS credentials to users
Identity Pools provide temporary AWS credentials for users authenticated through Amazon Cognito</data>
      <data key="d6">0e727375fce4c7491422878d0979b901,5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AMAZON COGNITO" target="PASSWORD POLICY">
      <data key="d4">15.0</data>
      <data key="d5">Amazon Cognito enforces a Password Policy to ensure secure user authentication
Amazon Cognito allows customization of password policies to enhance security for user accounts</data>
      <data key="d6">0e727375fce4c7491422878d0979b901,7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON COGNITO" target="OAUTH">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito supports OAuth for user authentication and authorization</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMAZON COGNITO" target="IDENTITY PROVIDERS">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito allows integration with various Identity Providers for user sign-in</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMAZON COGNITO" target="REDIRECT SIGN IN URI">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito uses Redirect Sign In URIs to manage user navigation after authentication</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMAZON COGNITO" target="REDIRECT SIGN OUT URI">
      <data key="d4">1.0</data>
      <data key="d5">Amazon Cognito uses Redirect Sign Out URIs to manage user navigation after logout</data>
      <data key="d6">0e727375fce4c7491422878d0979b901</data>
    </edge>
    <edge source="AMAZON COGNITO" target="PUBSUB">
      <data key="d4">6.0</data>
      <data key="d5">Amazon Cognito is used to manage user identities and permissions for accessing PubSub services</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AMAZON COGNITO" target="AUTHENTICATED ROLE">
      <data key="d4">7.0</data>
      <data key="d5">The authenticated role is a feature of Amazon Cognito that provides access control for signed-in users</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="UNAUTHENTICATED ROLE">
      <data key="d4">7.0</data>
      <data key="d5">The unauthenticated role is a feature of Amazon Cognito that provides access control for users who are not signed in</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="CUSTOM MESSAGE">
      <data key="d4">9.0</data>
      <data key="d5">The custom message trigger in Amazon Cognito is used to send verification messages to users</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="AMAZON COGNITO" target="LAMBDA TRIGGERS">
      <data key="d4">7.0</data>
      <data key="d5">Lambda Triggers are used within Amazon Cognito to execute custom code during user authentication flows</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AMAZON COGNITO" target="AMAZON SIMPLE EMAIL SERVICE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Cognito can be configured to send emails using Amazon SES for user verification and notifications</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON COGNITO" target="EMAIL SENDING ACCOUNT">
      <data key="d4">1.0</data>
      <data key="d5">Amazon Cognito uses a specified email sending account to send verification and notification emails</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="AMAZON COGNITO" target="USER_PASSWORD_AUTH">
      <data key="d4">7.0</data>
      <data key="d5">USER_PASSWORD_AUTH is a specific authentication flow supported by Amazon Cognito for user migration</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="CUSTOM_WITH_SRP">
      <data key="d4">7.0</data>
      <data key="d5">CUSTOM_WITH_SRP is an authentication flow that can be implemented using Amazon Cognito</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="CUSTOM_WITHOUT_SRP">
      <data key="d4">7.0</data>
      <data key="d5">CUSTOM_WITHOUT_SRP is an authentication flow that can be implemented using Amazon Cognito</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="LAMBDA FUNCTION">
      <data key="d4">1.0</data>
      <data key="d5">LAMBDA FUNCTION is utilized in Amazon Cognito for handling user authentication and migration triggers</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="AMAZON COGNITO" target="FACEBOOK">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito integrates with Facebook to provide authentication services through Facebook Login.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="AMAZON COGNITO" target="LOGIN WITH AMAZON">
      <data key="d4">16.0</data>
      <data key="d5">Amazon Cognito supports Login with Amazon as a method for external authentication.Amazon Cognito integrates with Login with Amazon to allow users to authenticate using their Amazon account.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="AMAZON COGNITO" target="SIGN IN WITH APPLE">
      <data key="d4">9.0</data>
      <data key="d5">Amazon Cognito integrates with Sign in with Apple to allow users to authenticate using their Apple ID.Amazon Cognito supports Sign in with Apple as a method for external authentication.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="AMAZON COGNITO" target="EXTERNAL IDENTITY PROVIDERS">
      <data key="d4">1.0</data>
      <data key="d5">External identity providers are used by Amazon Cognito to facilitate user authentication.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="AMAZON COGNITO" target="FACEBOOK LOGIN">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito supports Facebook Login as a method for external authentication.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="AMAZON COGNITO" target="GOOGLE SIGN-IN">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Cognito supports Google Sign-In as a method for external authentication.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="USER POOL" target="CLOUD FORMATION">
      <data key="d4">1.0</data>
      <data key="d5">User Pools are defined and managed through AWS CloudFormation templates in the context of AWS resources.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="USER POOL" target="APIGATEWAY">
      <data key="d4">6.0</data>
      <data key="d5">User Pools can be used as an authorizer for API Gateway</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="USER POOL" target="TODO">
      <data key="d4">12.0</data>
      <data key="d5">Todo instances can be created and managed by users authenticated through the User Pool
Todos can be created and managed by users authenticated through a user pool</data>
      <data key="d6">8c8075430684b38bdd1c6ce9fc9f7205,e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="USER POOL" target="COGNITO">
      <data key="d4">26.0</data>
      <data key="d5">The user pool is a core component of AWS Cognito that manages user authentication and authorization
Amazon Cognito uses user pools to manage user sign-up and sign-in
Cognito user pools are used for managing user authentication in applications built with AWS Amplify</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86,328c2850836c2ef976fb8009ef3c5dd9,8c8075430684b38bdd1c6ce9fc9f7205</data>
    </edge>
    <edge source="USER POOL" target="ACCESS TOKEN">
      <data key="d4">6.0</data>
      <data key="d5">Access tokens are issued to users authenticated through a user pool</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="USER POOL" target="ID TOKEN">
      <data key="d4">6.0</data>
      <data key="d5">ID tokens are generated for users in a user pool and contain user identity information</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="IDENTITY POOL" target="COGNITO">
      <data key="d4">16.0</data>
      <data key="d5">Amazon Cognito provides identity pools to grant users access to AWS services
Cognito identity pools provide AWS credentials to users authenticated through Cognito user pools</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86,8c8075430684b38bdd1c6ce9fc9f7205</data>
    </edge>
    <edge source="AWS REGION" target="AMAZON LOCATION SERVICE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Location Service operates within specific AWS Regions to provide location services</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AWS REGION" target="BUCKET NAME">
      <data key="d4">1.0</data>
      <data key="d5">Bucket Name is associated with a specific AWS Region for data storage</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AWS REGION" target="STORAGE">
      <data key="d4">7.0</data>
      <data key="d5">Storage services like Amazon S3 operate within specific AWS Regions for data management</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AWS REGION" target="AWS CLOUD DEVELOPMENT KIT">
      <data key="d4">1.0</data>
      <data key="d5">The AWS Cloud Development Kit requires the specification of an AWS Region for resource deployment.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AWS REGION" target="PINPOINT">
      <data key="d4">1.0</data>
      <data key="d5">Amazon Pinpoint services are deployed in various AWS Regions to provide low-latency access to users</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOFENCE COLLECTIONS">
      <data key="d4">8.0</data>
      <data key="d5">Geofence Collections are a feature of Amazon Location Service used for geofencing applications</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="SEARCH INDICES">
      <data key="d4">1.0</data>
      <data key="d5">Search Indices are part of the Amazon Location Service, enabling location-based searches</data>
      <data key="d6">c5584ae5a7b745fdc8fdf8e55b1277a0</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="AWS SDK">
      <data key="d4">8.0</data>
      <data key="d5">The AWS SDK provides the necessary tools to interact with the Amazon Location Service APIs</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="AMPLIFY GEO">
      <data key="d4">24.0</data>
      <data key="d5">Amplify Geo utilizes Amazon Location Service for its location-based functionalities, showing a direct dependency
Amplify Geo utilizes Amazon Location Service to provide mapping and location search functionalities in applications
Amplify Geo uses Amazon Location Service to provide location-based features</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8,53995557ff9014f83cedfd38268f5f7a,a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="MAPLIBRE">
      <data key="d4">19.0</data>
      <data key="d5">MapLibre's geocoder component can be used with Amazon Location Service to enhance location functionalities in applications
MapLibre can be used in conjunction with Amazon Location Service to enhance mapping functionalities
MapLibre can be integrated with Amazon Location Service to create interactive maps</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855,cf54383d0ee2ab32d2ea7410ca6c6418,de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOCODER COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">The geocoder component can leverage Amazon Location Service for enhanced geocoding functionalities</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="ARN">
      <data key="d4">6.0</data>
      <data key="d5">ARNs are used to specify resources in Amazon Location Service policies and API calls</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOSPATIAL ACTIONS">
      <data key="d4">1.0</data>
      <data key="d5">Geospatial actions are operations that can be performed using Amazon Location Service</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOCOLLECTION">
      <data key="d4">9.0</data>
      <data key="d5">Geofence Collections are a feature provided by Amazon Location Service to manage geofences</data>
      <data key="d6">bf926fe785180e6ba0afb391db266523</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOFENCE COLLECTION">
      <data key="d4">9.0</data>
      <data key="d5">Geofence Collections are managed through the Amazon Location Service, which provides the infrastructure for geofencing</data>
      <data key="d6">bf926fe785180e6ba0afb391db266523</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="MAPLIBRE-GL-JS-AMPLIFY">
      <data key="d4">9.0</data>
      <data key="d5">maplibre-gl-js-amplify facilitates the integration of Amazon Location Service with MapLibre GL</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="AMAZON LOCATION SERVICE" target="GEOSERVICE">
      <data key="d4">7.0</data>
      <data key="d5">Geoservice functionalities are often provided by Amazon Location Service, enhancing mapping capabilities</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="STORAGE" target="REMOVE API">
      <data key="d4">8.0</data>
      <data key="d5">The Remove API is a feature of the Storage service that allows for the deletion of files</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="LIST API">
      <data key="d4">8.0</data>
      <data key="d5">The List API is a feature of the Storage service that allows for listing files without downloading</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="ALBUM">
      <data key="d4">1.0</data>
      <data key="d5">The album is a part of the Storage service structure where files are organized</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="IDENTITY ID">
      <data key="d4">7.0</data>
      <data key="d5">The identity ID is used within the Storage service to manage file access permissions</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="PHOTOS">
      <data key="d4">6.0</data>
      <data key="d5">Photos is a directory within the Storage service where image files are stored</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="FILESYSTEM">
      <data key="d4">1.0</data>
      <data key="d5">The filesystem structure is used to represent the organization of files and folders in the Storage service</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="STORAGE" target="SONG">
      <data key="d4">1.0</data>
      <data key="d5">Songs can be associated with files stored in the Storage resource of AWS Amplify</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="STORAGE" target="AMPLIFY DATA CLIENT">
      <data key="d4">7.0</data>
      <data key="d5">The Amplify Data client interacts with the Storage resource to manage file associations with records</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="STORAGE" target="PHOTO ALBUM">
      <data key="d4">8.0</data>
      <data key="d5">The Photo Album utilizes Storage to manage and retrieve associated image files</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="STORAGE" target="RESOURCE">
      <data key="d4">5.0</data>
      <data key="d5">Storage resources are defined within the Resource to manage data access and permissions</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="AWS APPSYNC" target="DYNAMODB">
      <data key="d4">8.0</data>
      <data key="d5">AWS AppSync integrates with DynamoDB to provide a serverless backend for applications</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="AWS APPSYNC" target="MYSQL">
      <data key="d4">5.0</data>
      <data key="d5">AWS AppSync can connect to MySQL databases for data management</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="AWS APPSYNC" target="POSTGRESQL">
      <data key="d4">1.0</data>
      <data key="d5">AWS AppSync can connect to PostgreSQL databases for data management</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="AWS APPSYNC" target="AMAZON EVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon EventBridge can route events to AWS AppSync as a target for event-driven applications</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="AMAZON S3">
      <data key="d4">8.0</data>
      <data key="d5">The AWS Cloud Development Kit allows developers to create and manage Amazon S3 buckets as part of their cloud infrastructure.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="AWS CDK">
      <data key="d4">10.0</data>
      <data key="d5">AWS CDK is the full name of the AWS Cloud Development Kit, which is a framework for building cloud applications.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="AWS CLOUDSHELL">
      <data key="d4">6.0</data>
      <data key="d5">AWS CloudShell can be used to manually update the CDKToolkit stack.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="CDKTOOLKIT">
      <data key="d4">8.0</data>
      <data key="d5">CDKToolkit is a stack that is created and managed by the AWS Cloud Development Kit.</data>
      <data key="d6">119c44bcb05c001f48d12d86b105f1bf</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="AMAZON DATA FIREHOSE">
      <data key="d4">1.0</data>
      <data key="d5">The AWS CDK can be used to create and manage resources for Amazon Data Firehose</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="AWS CLOUD DEVELOPMENT KIT" target="AMPLIFY FUNCTIONS">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Functions can be configured and managed using the AWS Cloud Development Kit (CDK)</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="AMAZON S3" target="BUCKETSTACK">
      <data key="d4">8.0</data>
      <data key="d5">BucketStack is responsible for managing the lifecycle of an Amazon S3 bucket created through the AWS CDK.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AMAZON S3" target="PREDICTIONS">
      <data key="d4">1.0</data>
      <data key="d5">Predictions can utilize Amazon S3 for storing and retrieving data used in machine learning tasks</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="AMAZON S3" target="AMAZON S3 CONSOLE">
      <data key="d4">1.0</data>
      <data key="d5">The Amazon S3 console is used to manage Amazon S3 resources</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="AMAZON S3" target="CORS POLICY">
      <data key="d4">1.0</data>
      <data key="d5">CORS Policy is configured for Amazon S3 buckets to manage cross-origin requests</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="AMAZON S3" target="USERFILES BUCKET">
      <data key="d4">8.0</data>
      <data key="d5">The userfiles bucket is a specific implementation of Amazon S3 for storing project-related user files</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="AMAZON S3" target="COPY API">
      <data key="d4">8.0</data>
      <data key="d5">The copy API is a feature of Amazon S3 that allows users to copy files within the storage service</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="AMAZON S3" target="REMOVE API">
      <data key="d4">1.0</data>
      <data key="d5">The remove API is a feature of Amazon S3 that allows users to delete files from the storage service</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="AMAZON S3" target="STORAGE MANAGER">
      <data key="d4">17.0</data>
      <data key="d5">The Storage Manager uploads files to Amazon S3 for storage and retrieval.
Storage Manager uploads files to Amazon S3 for storage</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06,5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="AMAZON S3" target="TRANSFER ACCELERATION">
      <data key="d4">8.0</data>
      <data key="d5">Transfer acceleration is a feature of Amazon S3 that enhances upload speeds for files.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="AMAZON S3" target="STORAGE IMAGE">
      <data key="d4">8.0</data>
      <data key="d5">Storage Image retrieves images from Amazon S3 for display</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="N/A" target="CLI COMMANDS">
      <data key="d4">1.0</data>
      <data key="d5">CLI commands are used to execute various operations, including deploying resources and managing AWS services.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="NPX AMPX SANDBOX" target="AWS CDK">
      <data key="d4">7.0</data>
      <data key="d5">The npx ampx sandbox command is used to develop and test applications built with the AWS CDK in a personal cloud environment.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="NPX AMPX SANDBOX" target="NPX AMPX SANDBOX DELETE">
      <data key="d4">5.0</data>
      <data key="d5">The npx ampx sandbox delete command is related to the npx ampx sandbox command as it is used to remove the sandbox created by it.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="NPX AMPX SANDBOX" target="NPX AMPX SANDBOX SECRET">
      <data key="d4">6.0</data>
      <data key="d5">The npx ampx sandbox secret command is used in conjunction with npx ampx sandbox to manage secrets in the sandbox environment.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AWS CLI" target="AWS PROFILE">
      <data key="d4">1.0</data>
      <data key="d5">AWS CLI can be configured to use different AWS Profiles to manage access to AWS services.</data>
      <data key="d6">c53f4501f1dba5ecec6c90cfcc2152c2</data>
    </edge>
    <edge source="AWS CDK" target="CLOUDFORMATION">
      <data key="d4">9.0</data>
      <data key="d5">AWS CDK generates CloudFormation templates to deploy resources defined in the CDK</data>
      <data key="d6">6f6e767a35b75e1c7658fbbddd94a842</data>
    </edge>
    <edge source="AWS CDK" target="KINESIS FIREHOSE">
      <data key="d4">7.0</data>
      <data key="d5">AWS CDK is used to create and manage Kinesis Firehose resources in the cloud</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="AWS CDK" target="IAM">
      <data key="d4">6.0</data>
      <data key="d5">AWS CDK utilizes IAM for managing permissions and roles for AWS resources</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="AWS CDK" target="AMPLIFY ANALYTICS">
      <data key="d4">6.0</data>
      <data key="d5">AWS CDK is used to create analytics resources powered by Amplify Analytics</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="AWS CDK" target="STACK">
      <data key="d4">17.0</data>
      <data key="d5">AWS CDK is used to define and manage stacks of AWS resources, including the Todo table and OpenSearch domain.
The Stack is a fundamental unit of deployment in AWS CDK, which includes the OpenSearch Domain and other resources</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2,57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="AWS CDK" target="OPENSEARCH DOMAIN">
      <data key="d4">7.0</data>
      <data key="d5">AWS CDK is used to define and provision the OpenSearch Domain as part of the infrastructure</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2</data>
    </edge>
    <edge source="AWS_PROFILE" target="MY-OTHER-PROFILE">
      <data key="d4">5.0</data>
      <data key="d5">The MY-OTHER-PROFILE is an alternative AWS profile that can be specified using the AWS_PROFILE environment variable.</data>
      <data key="d6">e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="SECRET" target="SANDBOX">
      <data key="d4">7.0</data>
      <data key="d5">Secrets are created and managed within the AWS Amplify sandbox environment for secure access to sensitive information.</data>
      <data key="d6">e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="SECRET" target="SQL_CONNECTION_STRING">
      <data key="d4">9.0</data>
      <data key="d5">The SQL connection string is stored as a secret to protect sensitive database credentials</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="SANDBOX" target="AMPLIFY_APP_ID">
      <data key="d4">1.0</data>
      <data key="d5">The Amplify App ID is used to identify and manage resources within the AWS Amplify sandbox environment.</data>
      <data key="d6">e9de6f22467dd06036280d1c89b6d407</data>
    </edge>
    <edge source="CDK" target="CODEGEN">
      <data key="d4">6.0</data>
      <data key="d5">AWS CDK can be used to generate code for cloud infrastructure, facilitating the deployment of applications.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="CDK" target="STACK">
      <data key="d4">7.0</data>
      <data key="d5">CDK is used to define and manage stacks of AWS resources</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="CDK" target="GEN 2">
      <data key="d4">8.0</data>
      <data key="d5">CDK is a framework that enhances the capabilities of Gen 2, allowing for more advanced configurations</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="GRAPHQL" target="MODELGEN">
      <data key="d4">1.0</data>
      <data key="d5">Model generation can be used in conjunction with GraphQL to create data models for applications.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="GRAPHQL" target="USER PROFILE">
      <data key="d4">6.0</data>
      <data key="d5">User Profile data is managed and accessed through GraphQL queries</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="GRAPHQL" target="TODO">
      <data key="d4">7.0</data>
      <data key="d5">GraphQL is used to define the structure and operations for managing Todo items in applications</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="STAGING" target="BRANCH">
      <data key="d4">1.0</data>
      <data key="d5">The staging branch is a specific type of branch used in version control systems for testing before merging into the main branch.</data>
      <data key="d6">21fafbece16fa47f1f530df2b5f0817b</data>
    </edge>
    <edge source="CUSTOM PIPELINES" target="CI/CD">
      <data key="d4">7.0</data>
      <data key="d5">Custom pipelines are designed to facilitate CI/CD processes for application deployment</data>
      <data key="d6">13036fcc04ff7a3a3d82cc055061ee52</data>
    </edge>
    <edge source="AMPLIFY APP" target="AMPLIFY HOSTING">
      <data key="d4">8.0</data>
      <data key="d5">An Amplify app is hosted using Amplify Hosting services, which provide deployment and hosting capabilities</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="FULLSTACK PREVIEWS" target="PULL REQUEST">
      <data key="d4">7.0</data>
      <data key="d5">Fullstack previews are triggered by creating a pull request in the version control system</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="DEV BRANCH" target="MAIN BRANCH">
      <data key="d4">6.0</data>
      <data key="d5">The dev branch is where features are developed before being merged into the main branch</data>
      <data key="d6">361aaf651685ae2e9407ab27dc8138b3</data>
    </edge>
    <edge source="DEV BRANCH" target="BUILD SETTINGS">
      <data key="d4">1.0</data>
      <data key="d5">The dev branch's build settings can be configured to share resources across branches</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="DEV BRANCH" target="FEATURE BRANCH">
      <data key="d4">6.0</data>
      <data key="d5">The dev branch is used to develop features in isolation, which are then merged into the main branch</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="DEV BRANCH" target="STAGING BRANCH">
      <data key="d4">6.0</data>
      <data key="d5">The dev branch is often used to prepare changes that will be tested in the staging branch before going to production</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="MAIN BRANCH" target="FEATURE BRANCH">
      <data key="d4">7.0</data>
      <data key="d5">Feature branches are merged into the main branch after development and testing</data>
      <data key="d6">148529b8881659161220567b7aef9513</data>
    </edge>
    <edge source="PULL REQUEST" target="ISSUE">
      <data key="d4">8.0</data>
      <data key="d5">A pull request should be submitted after creating an issue to provide context and details for the proposed changes</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="AMPLIFY HOSTING" target="SAY-HELLO">
      <data key="d4">6.0</data>
      <data key="d5">The 'say-hello' function can be deployed and hosted using AWS Amplify Hosting, which manages the deployment process.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="MULTI-REPO-EXAMPLE" target="BACKEND-APP">
      <data key="d4">7.0</data>
      <data key="d5">The multi-repo-example project demonstrates the use of a backend-app in a multi-repo setup with AWS Amplify.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="BACKEND-APP" target="AMPLIFY DEPENDENCIES">
      <data key="d4">7.0</data>
      <data key="d5">The backend-app requires specific Amplify dependencies to function correctly and connect to AWS services.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="BACKEND-APP" target="FRONTEND APP">
      <data key="d4">1.0</data>
      <data key="d5">The frontend app connects to the backend-app to retrieve and send data, enabling fullstack functionality.</data>
      <data key="d6">03d87ab96921db9c36cf9cc05fe0b7a7</data>
    </edge>
    <edge source="AUTHENTICATOR" target="TODO">
      <data key="d4">1.0</data>
      <data key="d5">The todo list functionality can be integrated with the Authenticator to manage user-specific tasks</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AUTHENTICATOR" target="STORAGE MANAGER">
      <data key="d4">8.0</data>
      <data key="d5">The Authenticator component is necessary for the Storage Manager to function correctly when accessing protected storage</data>
      <data key="d6">32ab448d1972668cba4e2c467ff116a8</data>
    </edge>
    <edge source="AUTHENTICATOR" target="AMPLIFY UI">
      <data key="d4">9.0</data>
      <data key="d5">The Authenticator component is part of the Amplify UI framework, providing authentication capabilities
The Authenticator component is part of Amplify UI, simplifying the authentication process for developers</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37,d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGNIN">
      <data key="d4">7.0</data>
      <data key="d5">The SignIn event is part of the authentication flow managed by the Authenticator</data>
      <data key="d6">abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="AUTHENTICATOR" target="FORGOT PASSWORD">
      <data key="d4">23.0</data>
      <data key="d5">The Forgot Password event is triggered within the Authenticator to handle password recovery
The Authenticator component provides a Forgot Password event for users who need to recover their accounts.
Forgot Password is an event managed by the Authenticator component</data>
      <data key="d6">793ee29fd3ae616dbc82df13c1d4f39b,7d1946ff469243c820fe74fd26b68cbd,abdfd668c78186087ff9da2146979893</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGN IN">
      <data key="d4">25.0</data>
      <data key="d5">The Authenticator component includes a Sign In event as part of its user authentication flow.
The Authenticator component facilitates the Sign In event for users
The Sign In event is facilitated by the Authenticator component, which manages the login process.</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a,793ee29fd3ae616dbc82df13c1d4f39b,a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGN UP">
      <data key="d4">25.0</data>
      <data key="d5">The Authenticator component includes a Sign Up event for new user registration.
The Authenticator component facilitates the Sign Up event for users
The Sign Up event is facilitated by the Authenticator component, which manages the registration process.</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a,793ee29fd3ae616dbc82df13c1d4f39b,a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="AUTHENTICATOR" target="RESET PASSWORD">
      <data key="d4">17.0</data>
      <data key="d5">The Authenticator component facilitates the Reset Password event after a user has requested a password reset.
Reset Password is an event managed by the Authenticator component
The Reset Password event is managed by the Authenticator component to allow users to recover their accounts</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a,793ee29fd3ae616dbc82df13c1d4f39b,7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="AUTHENTICATOR" target="CODE DELIVERY DETAIL">
      <data key="d4">7.0</data>
      <data key="d5">The Authenticator component provides Code Delivery Detail to inform users where their confirmation code is sent.</data>
      <data key="d6">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </edge>
    <edge source="AUTHENTICATOR" target="VALIDATION ERRORS">
      <data key="d4">7.0</data>
      <data key="d5">The Authenticator component displays validation errors to users during form submissions.</data>
      <data key="d6">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </edge>
    <edge source="AUTHENTICATOR" target="IS PENDING">
      <data key="d4">1.0</data>
      <data key="d5">The Authenticator component indicates whether an API call is pending during the authentication process.</data>
      <data key="d6">793ee29fd3ae616dbc82df13c1d4f39b</data>
    </edge>
    <edge source="AUTHENTICATOR" target="AMAZON">
      <data key="d4">5.0</data>
      <data key="d5">The Authenticator allows users to sign in using their Amazon accounts.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </edge>
    <edge source="AUTHENTICATOR" target="FACEBOOK">
      <data key="d4">5.0</data>
      <data key="d5">The Authenticator allows users to sign in using their Facebook accounts.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </edge>
    <edge source="AUTHENTICATOR" target="FORM FIELDS">
      <data key="d4">8.0</data>
      <data key="d5">The Authenticator utilizes form fields to collect user input for authentication processes.</data>
      <data key="d6">24ec8a10e8f41cfaeb32d036093e3bdf</data>
    </edge>
    <edge source="AUTHENTICATOR" target="FORMFIELDS">
      <data key="d4">14.0</data>
      <data key="d5">FormFields is a prop passed to the Authenticator component to customize the input fields for sign-up and sign-in.
FormFields is a configuration object used within the Authenticator to customize the authentication forms</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd,a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="AUTHENTICATOR" target="REGISTER">
      <data key="d4">9.0</data>
      <data key="d5">Register is an event managed by the Authenticator component
The Register event is managed by the Authenticator component to facilitate new user sign-up</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a,7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGN OUT">
      <data key="d4">9.0</data>
      <data key="d5">Sign Out is an event managed by the Authenticator component
The Authenticator component provides a Sign Out functionality for users to log out of the application.</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd,cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="AUTHENTICATOR" target="CONFIRM SIGN UP">
      <data key="d4">8.0</data>
      <data key="d5">Confirm Sign Up is an event managed by the Authenticator component</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="AUTHENTICATOR" target="CONFIRM RESET PASSWORD">
      <data key="d4">8.0</data>
      <data key="d5">Confirm Reset Password is an event managed by the Authenticator component</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SETUP TOTP">
      <data key="d4">1.0</data>
      <data key="d5">Setup TOTP is an event managed by the Authenticator component</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="AUTHENTICATOR" target="USERPOOL">
      <data key="d4">9.0</data>
      <data key="d5">The Authenticator component interacts with the UserPool to manage user accounts</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a</data>
    </edge>
    <edge source="AUTHENTICATOR" target="PASSWORD">
      <data key="d4">1.0</data>
      <data key="d5">The Password field is a part of the Authenticator component for user authentication</data>
      <data key="d6">73680e5bf87090f014e7bd9d2b8e582a</data>
    </edge>
    <edge source="AUTHENTICATOR" target="AUTHUSER">
      <data key="d4">8.0</data>
      <data key="d5">AuthUser is the user object provided after authentication through the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGNININPUT">
      <data key="d4">7.0</data>
      <data key="d5">SignInInput is used as part of the authentication process managed by the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AUTHENTICATOR" target="SIGNUPINPUT">
      <data key="d4">7.0</data>
      <data key="d5">SignUpInput is used as part of the sign-up process managed by the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AUTHENTICATOR" target="CONFIRMSIGNININPUT">
      <data key="d4">7.0</data>
      <data key="d5">ConfirmSignInInput is used to confirm a user's sign-in process managed by the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AUTHENTICATOR" target="CONFIRMSIGNUPINPUT">
      <data key="d4">7.0</data>
      <data key="d5">ConfirmSignUpInput is used to confirm a user's sign-up process managed by the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="AUTHENTICATOR" target="RESETPASSWORDINPUT">
      <data key="d4">1.0</data>
      <data key="d5">ResetPasswordInput is used to manage the password reset process within the Authenticator component in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="ADMIN DASHBOARD" target="MY-SHARED-BACKEND">
      <data key="d4">8.0</data>
      <data key="d5">Admin Dashboard connects to the shared backend to access data and functionalities</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="ADMIN DASHBOARD" target="SCHEMA TYPE DEFINITIONS">
      <data key="d4">9.0</data>
      <data key="d5">Schema Type Definitions are imported in Admin Dashboard for strong typing in API calls</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="MARKETING SITE" target="MY-SHARED-BACKEND">
      <data key="d4">8.0</data>
      <data key="d5">Marketing Site connects to the shared backend to access data and functionalities</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="MARKETING SITE" target="SCHEMA TYPE DEFINITIONS">
      <data key="d4">1.0</data>
      <data key="d5">Schema Type Definitions are imported in Marketing Site for strong typing in API calls</data>
      <data key="d6">c143d279740f3e9c59920d2a6720240e</data>
    </edge>
    <edge source="FOO" target="BAR">
      <data key="d4">3.0</data>
      <data key="d5">Foo and Bar are both used as example secret values in the Amplify documentation</data>
      <data key="d6">a054cee32c59ce9d304bb1f8716fbb7c</data>
    </edge>
    <edge source="VALIDATION RULES" target="FORM LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">Validation rules are an essential part of the form lifecycle, ensuring data integrity before submission.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="SUBMIT BUTTON" target="FORM LIFECYCLE">
      <data key="d4">9.0</data>
      <data key="d5">The submit button is a critical component of the form lifecycle, initiating the submission process.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="SUBMIT BUTTON" target="CHANGE PASSWORD COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Submit Button is part of the Change Password component, allowing users to submit their new password</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37</data>
    </edge>
    <edge source="CLEAR BUTTON" target="FORM LIFECYCLE">
      <data key="d4">6.0</data>
      <data key="d5">The clear button is part of the form lifecycle, allowing users to reset the form to its initial state.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="CANCEL BUTTON" target="FORM LIFECYCLE">
      <data key="d4">6.0</data>
      <data key="d5">The cancel button is part of the form lifecycle, enabling users to dismiss the form without saving data.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="ONCHANGE" target="FORM LIFECYCLE">
      <data key="d4">8.0</data>
      <data key="d5">The onChange event is a key part of the form lifecycle, capturing user input in real-time.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="ONCHANGE" target="TEXTFIELD">
      <data key="d4">6.0</data>
      <data key="d5">onChange is an event handler that triggers when the TextField value changes</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="ONCHANGE" target="SWITCHFIELD">
      <data key="d4">7.0</data>
      <data key="d5">onChange property allows for dynamic updates based on user interaction with the SwitchField</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="ONCHANGE" target="INPUT">
      <data key="d4">9.0</data>
      <data key="d5">The onChange event handler is specifically used with the Input component to handle changes in user input</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ONSUBMIT" target="FORM LIFECYCLE">
      <data key="d4">9.0</data>
      <data key="d5">The onSubmit event is a crucial part of the form lifecycle, handling data processing upon submission.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="ONSUCCESS" target="FORM LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">The onSuccess event is part of the form lifecycle, allowing for actions after successful data submission.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="ONVALIDATE" target="FORM LIFECYCLE">
      <data key="d4">7.0</data>
      <data key="d5">The onValidate event is part of the form lifecycle, allowing for additional validation checks on user input.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="ONCANCEL" target="FORM LIFECYCLE">
      <data key="d4">1.0</data>
      <data key="d5">The onCancel event is part of the form lifecycle, managing user actions when they choose to cancel the form.</data>
      <data key="d6">bcd2d66297bc7f44d44a249af2225403</data>
    </edge>
    <edge source="FIGMA" target="AMPLIFY STUDIO">
      <data key="d4">14.0</data>
      <data key="d5">Figma is integrated with Amplify Studio to allow design components to be imported and converted into React code
Amplify Studio integrates with Figma to allow designers to create components visually and generate code</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80,7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="VUE" target="AMPLIFY UI">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI components can be used with Vue, enabling developers to integrate them into Vue applications</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="ANGULAR" target="AMPLIFY UI">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI components are compatible with Angular, allowing developers to use them in Angular applications</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="NUXT.JS" target="PLUGINS DIRECTORY">
      <data key="d4">6.0</data>
      <data key="d5">The plugins directory is a key part of the Nuxt.js framework where developers can add custom functionality to their applications</data>
      <data key="d6">4fde2e7cc7218ba6b93e1b100e10fd38</data>
    </edge>
    <edge source="AMPLIFY UI" target="STYLE PROPS">
      <data key="d4">15.0</data>
      <data key="d5">Style Props are utilized within Amplify UI components to directly influence their styling and appearance.
Amplify UI utilizes Style Props to apply responsive styles to components
Style props are used to apply inline styles to components in Amplify UI</data>
      <data key="d6">5aa64e0729b8afd73930cdaf5ff7a8aa,b0fc4cd8b01ddce0c70025c48b34ca98,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXT">
      <data key="d4">41.0</data>
      <data key="d5">Text is a component provided by Amplify UI for displaying text in user interfaces
The Text component is a feature of Amplify UI that allows for displaying textual information
Text is a component provided by Amplify UI for displaying text content
Text is a component provided by Amplify UI for displaying text content
Text is a component provided by Amplify UI for displaying text in user interfaces
Text is a component provided by Amplify UI for displaying styled text in React applications
Text is a component provided by Amplify UI for displaying text
The Text primitive is a part of Amplify UI for displaying text in user interfaces</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d,1a2c25b18b52cc9adff7a263b890a3b5,1d9edaeddd47c47bbc0bda9363e7b2e5,3bf357b72dac2808e7ba2223ab2c4745,56553341236a20419cc336c60c2bed04,6264f18714899ee18445e9c4535f5ff2,9939e974ca8f24b6b7f34bbf89addb7e,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="SHADOW STYLES">
      <data key="d4">6.0</data>
      <data key="d5">Shadow Styles demonstrate how to use shadow properties in Amplify UI components</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="AMPLIFY UI" target="TYPOGRAPHY STYLES">
      <data key="d4">6.0</data>
      <data key="d5">Typography Styles demonstrate how to use typography properties in Amplify UI components</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS VARIABLES">
      <data key="d4">47.0</data>
      <data key="d5">CSS Variables are used in Amplify UI to customize component styles
CSS Variables are utilized within the Amplify UI framework to manage component styling
CSS variables are utilized in Amplify UI to manage component styling
CSS Variables are utilized within Amplify UI for consistent styling
CSS Variables are used in Amplify UI to allow for easy customization of component styles
CSS Variables are utilized in the Amplify UI library to manage component styling
CSS Variables are used to customize the styling of components in the Amplify UI library
CSS Variables are utilized in Amplify UI for defining reusable styling values</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c,4c20122de1ca69ecf45662867d268049,52fc958abba47a16871f909ed3cc2d5a,6f822244ad945944fb292c514cfddc13,85d9171dd6e70ffdb5803e227ecacbc4,9939e974ca8f24b6b7f34bbf89addb7e,c7af2749681510be539a408772ae1755,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="ICON PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">Icon Provider is a component within Amplify UI that customizes icons for various components</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356</data>
    </edge>
    <edge source="AMPLIFY UI" target="RATING">
      <data key="d4">14.0</data>
      <data key="d5">Rating is a component provided by Amplify UI for users to rate items
Rating is a component provided by the Amplify UI library for React</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,52fc958abba47a16871f909ed3cc2d5a</data>
    </edge>
    <edge source="AMPLIFY UI" target="SELECTFIELD">
      <data key="d4">7.0</data>
      <data key="d5">SelectField is a component provided by Amplify UI for selecting options
SelectField is a component provided by Amplify UI for user interaction</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,40ccefaf714c8eadcebd508c051c9190</data>
    </edge>
    <edge source="AMPLIFY UI" target="PASSWORDFIELD">
      <data key="d4">14.0</data>
      <data key="d5">PasswordField is a component provided by Amplify UI for secure password entry
Amplify UI provides the PasswordField component as part of its library for building user interfaces</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="AMPLIFY UI" target="SEARCHFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SearchField is a component provided by Amplify UI for searching content
SearchField is another component provided by Amplify UI for user interface development
SearchField is a component provided by Amplify UI for implementing search functionality</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356,a8cc34c06c7b64595006afc28abc0ae2,bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="AMPLIFY UI" target="STORAGE MANAGER">
      <data key="d4">6.0</data>
      <data key="d5">Storage Manager is a component provided by Amplify UI for managing file uploads</data>
      <data key="d6">06fd00c0023b38a04bba794fae7ed356</data>
    </edge>
    <edge source="AMPLIFY UI" target="COLORS">
      <data key="d4">6.0</data>
      <data key="d5">The Colors section is a part of the Amplify UI documentation that explains the color palette used</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </edge>
    <edge source="AMPLIFY UI" target="HEADING">
      <data key="d4">42.0</data>
      <data key="d5">The Heading component is a feature of Amplify UI that allows for structured text presentation
Heading is a component provided by Amplify UI for creating titles
Heading is a component provided by Amplify UI for displaying titles
The Heading component is part of the Amplify UI library, which is designed for React applications.
Amplify UI includes the Heading component as part of its library for building user interfaces
The Heading component is part of the Amplify UI library, providing semantic structure to content</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe,18256f324d7f8fc0edac5bbf717bf76d,1a2c25b18b52cc9adff7a263b890a3b5,3357299f904d0dd5b40c967c28b75149,6264f18714899ee18445e9c4535f5ff2,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="BORDER WIDTHS">
      <data key="d4">7.0</data>
      <data key="d5">BORDER WIDTHS is a feature of Amplify UI that allows developers to customize the thickness of borders in UI components</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </edge>
    <edge source="AMPLIFY UI" target="RADIIS">
      <data key="d4">7.0</data>
      <data key="d5">RADIIS is a feature of Amplify UI that allows developers to customize the border radius of UI components</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </edge>
    <edge source="AMPLIFY UI" target="BACKGROUND">
      <data key="d4">1.0</data>
      <data key="d5">BACKGROUND settings are part of Amplify UI that allow customization of the background colors of components</data>
      <data key="d6">1a2c25b18b52cc9adff7a263b890a3b5</data>
    </edge>
    <edge source="AMPLIFY UI" target="TYPOGRAPHY">
      <data key="d4">8.0</data>
      <data key="d5">Typography is a fundamental aspect of the Amplify UI design system, providing guidelines for text styling.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="FONT WEIGHTS">
      <data key="d4">9.0</data>
      <data key="d5">Font Weights are part of the typography tokens provided by Amplify UI for styling text elements.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="FONT SIZES">
      <data key="d4">9.0</data>
      <data key="d5">Font Sizes are part of the typography tokens provided by Amplify UI for styling text elements.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEAL">
      <data key="d4">7.0</data>
      <data key="d5">Teal is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="BLUE">
      <data key="d4">7.0</data>
      <data key="d5">Blue is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="PURPLE">
      <data key="d4">7.0</data>
      <data key="d5">Purple is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="PINK">
      <data key="d4">7.0</data>
      <data key="d5">Pink is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="BLACK">
      <data key="d4">7.0</data>
      <data key="d5">Black is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="WHITE">
      <data key="d4">7.0</data>
      <data key="d5">White is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="TRANSPARENT">
      <data key="d4">1.0</data>
      <data key="d5">Transparent is one of the colors defined in the Amplify UI design system for theming and styling components.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="AMPLIFY UI" target="DEFAULT THEME">
      <data key="d4">15.0</data>
      <data key="d5">The Default Theme is a key component of the Amplify UI design system, defining its visual style
The Default theme provides predefined styles for components in Amplify UI</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="BASE TOKENS">
      <data key="d4">8.0</data>
      <data key="d5">Base Tokens are part of the Amplify UI design system, providing foundational design properties</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="AMPLIFY UI" target="RESPONSIVE DESIGN">
      <data key="d4">9.0</data>
      <data key="d5">Amplify UI provides tools and components to implement responsive design in web applications
Amplify UI components are designed to be responsive, adapting to different screen sizes and devices</data>
      <data key="d6">b0fc4cd8b01ddce0c70025c48b34ca98,d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS CUSTOM PROPERTIES">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI generates CSS Custom Properties from design tokens for use in styling components</data>
      <data key="d6">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="AMPLIFY UI" target="THEME">
      <data key="d4">30.0</data>
      <data key="d5">Amplify UI allows developers to create and apply custom themes to maintain design consistency
Theme allows customization of components like Badge and Table in Amplify UI for React
The Theme defines the styling and tokens used by components in Amplify UI
Theme is a part of the Amplify UI framework that allows for the customization of component appearances
The theme in Amplify UI customizes the appearance of components, including headings.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe,3bf357b72dac2808e7ba2223ab2c4745,a016f0f03b4482ba0b2bdfb5ed16bd77,ac0c424efc84163fec05823d42352599,b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="AMPLIFY UI" target="IN-APP MESSAGING">
      <data key="d4">9.0</data>
      <data key="d5">In-App Messaging is a feature provided by Amplify UI to enhance user engagement through contextual messages</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="AMPLIFY UI" target="ACCOUNT SETTINGS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI provides the Account Settings component for managing user account settings</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37</data>
    </edge>
    <edge source="AMPLIFY UI" target="HIGHLIGHTMATCH">
      <data key="d4">8.0</data>
      <data key="d5">HighlightMatch is a component provided by the Amplify UI library for React</data>
      <data key="d6">52fc958abba47a16871f909ed3cc2d5a</data>
    </edge>
    <edge source="AMPLIFY UI" target="FLEX">
      <data key="d4">68.0</data>
      <data key="d5">Flex is a layout component provided by the Amplify UI library
Flex is a layout component provided by Amplify UI for arranging child components
Flex is a layout component that is part of the Amplify UI library
Flex is a layout component included in Amplify UI for responsive design
Flex is a component provided by the Amplify UI library to create responsive layouts.
Flex is a layout component that is part of the Amplify UI library
The Flex component is part of the Amplify UI library, used for flexible layouts
Flex is a component within the Amplify UI library that aids in layout design.
Flex is a component provided by Amplify UI for layout management</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c,0f0c3a1733d9928c7207a0931e147afe,3357299f904d0dd5b40c967c28b75149,3bf357b72dac2808e7ba2223ab2c4745,52fc958abba47a16871f909ed3cc2d5a,6264f18714899ee18445e9c4535f5ff2,85d9171dd6e70ffdb5803e227ecacbc4,c7af2749681510be539a408772ae1755,da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="AMPLIFY UI" target="BADGE">
      <data key="d4">9.0</data>
      <data key="d5">Badge is a component provided by Amplify UI for React to display statuses or messages
Badge is a component in Amplify UI that enhances user interaction by providing feedback on actions</data>
      <data key="d6">a016f0f03b4482ba0b2bdfb5ed16bd77,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="AMPLIFY UI" target="PAGINATION">
      <data key="d4">7.0</data>
      <data key="d5">Pagination is a component provided by Amplify UI for managing page navigation</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="GRID">
      <data key="d4">7.0</data>
      <data key="d5">Grid is a layout component provided by Amplify UI for organizing content
Grid is a layout component provided by Amplify UI that helps organize other components in a visually appealing manner</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50,e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="PAGINATION CLASS STYLING EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Pagination Class Styling Example is a practical application of the Amplify UI framework for implementing pagination</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="PAGINATION STYLE PROPS EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Pagination Style Props Example demonstrates the use of Amplify UI's styling capabilities for pagination</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="DEFAULT GRID EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Default Grid Example utilizes the Grid component from Amplify UI to create a structured layout</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="GRID ROW AND COLUMN SPAN EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Grid Row and Column Span Example showcases the functionality of the Grid component in Amplify UI</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="GRID RESPONSIVE EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Grid Responsive Example illustrates how to create responsive designs using the Grid component from Amplify UI</data>
      <data key="d6">e685aa3f2fe14219814513a176eea47f</data>
    </edge>
    <edge source="AMPLIFY UI" target="ACCORDION">
      <data key="d4">9.0</data>
      <data key="d5">The Accordion is a component provided by Amplify UI for organizing content
Accordion is another component provided by Amplify UI for organizing content</data>
      <data key="d6">3bf357b72dac2808e7ba2223ab2c4745,4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="AMPLIFY UI" target="TOGGLEBUTTON">
      <data key="d4">16.0</data>
      <data key="d5">ToggleButton is a component provided by Amplify UI for user interaction
ToggleButton is a component provided by Amplify UI for user interaction</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c,4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXTAREAFIELD">
      <data key="d4">1.0</data>
      <data key="d5">TextAreaField is a component provided by Amplify UI for user input</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c</data>
    </edge>
    <edge source="AMPLIFY UI" target="TOGGLEBUTTONGROUP">
      <data key="d4">7.0</data>
      <data key="d5">ToggleButtonGroup is a component that is part of the Amplify UI library for grouping ToggleButtons</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c</data>
    </edge>
    <edge source="AMPLIFY UI" target="DATA ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">Data attributes are used in Amplify UI to enhance component styling and functionality</data>
      <data key="d6">04b24fb25dbc08179dc4e49295da518c</data>
    </edge>
    <edge source="AMPLIFY UI" target="SWITCHFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SwitchField is a component provided by Amplify UI for React, which is part of the library's offerings</data>
      <data key="d6">ac0c424efc84163fec05823d42352599</data>
    </edge>
    <edge source="AMPLIFY UI" target="STEPPERFIELD">
      <data key="d4">9.0</data>
      <data key="d5">StepperField is another component provided by Amplify UI for React, showcasing the library's functionality
StepperField is a component provided by Amplify UI for user interaction</data>
      <data key="d6">40ccefaf714c8eadcebd508c051c9190,ac0c424efc84163fec05823d42352599</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS STYLING">
      <data key="d4">14.0</data>
      <data key="d5">CSS Styling is a method used within Amplify UI to customize component appearances
CSS styling is used to customize the components in Amplify UI, including the Heading component.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe,ac0c424efc84163fec05823d42352599</data>
    </edge>
    <edge source="AMPLIFY UI" target="GLOBAL STYLING">
      <data key="d4">6.0</data>
      <data key="d5">Global Styling is a feature of Amplify UI that allows for consistent styling across all components</data>
      <data key="d6">ac0c424efc84163fec05823d42352599</data>
    </edge>
    <edge source="AMPLIFY UI" target="LOCAL STYLING">
      <data key="d4">8.0</data>
      <data key="d5">Local styling is a feature of Amplify UI that allows for specific styling adjustments on individual components
Local styling allows for direct application of styles to specific components in Amplify UI</data>
      <data key="d6">ac0c424efc84163fec05823d42352599,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="ICONS PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">Icons Provider is a component that allows for the customization of icons within Amplify UI</data>
      <data key="d6">40ccefaf714c8eadcebd508c051c9190</data>
    </edge>
    <edge source="AMPLIFY UI" target="SLIDERFIELD">
      <data key="d4">8.0</data>
      <data key="d5">SliderField is a component provided by Amplify UI for user interface development</data>
      <data key="d6">a8cc34c06c7b64595006afc28abc0ae2</data>
    </edge>
    <edge source="AMPLIFY UI" target="RADIOGROUPFIELD">
      <data key="d4">9.0</data>
      <data key="d5">RadioGroupField is a component provided by Amplify UI for creating radio button selections
RadioGroupField is a component provided by Amplify UI for selecting options from radio buttons</data>
      <data key="d6">6f822244ad945944fb292c514cfddc13,bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="AMPLIFY UI" target="PHONENUMBERFIELD">
      <data key="d4">16.0</data>
      <data key="d5">PhoneNumberField is a component provided by Amplify UI for user input of phone numbers
Amplify UI includes the PhoneNumberField component for user input in forms</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149,6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="AMPLIFY UI" target="PHONE NUMBER FIELD">
      <data key="d4">8.0</data>
      <data key="d5">Phone Number Field is part of the Amplify UI library for building user interfaces</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="AMPLIFY UI" target="PASSWORD FIELD">
      <data key="d4">9.0</data>
      <data key="d5">Password Field is part of the Amplify UI library for building user interfaces
PasswordField is a component in Amplify UI for password input</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXT FIELD">
      <data key="d4">1.0</data>
      <data key="d5">Text Field is a component provided by Amplify UI for user input</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="AMPLIFY UI" target="INPUT COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Input component is a part of the Amplify UI library, which provides various UI components for React applications.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="AMPLIFY UI" target="LABEL">
      <data key="d4">16.0</data>
      <data key="d5">Label is a component provided by the Amplify UI library to enhance accessibility for form inputs.
Label primitive is included in Amplify UI for captioning interface items</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="CHECKBOXFIELD">
      <data key="d4">8.0</data>
      <data key="d5">CheckboxField is a component provided by the Amplify UI library for user interaction</data>
      <data key="d6">85d9171dd6e70ffdb5803e227ecacbc4</data>
    </edge>
    <edge source="AMPLIFY UI" target="AUTOCOMPLETE">
      <data key="d4">16.0</data>
      <data key="d5">Amplify UI provides the Autocomplete component as part of its library for building user interfaces
Autocomplete is a component in Amplify UI that enhances search functionality</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="TABS">
      <data key="d4">9.0</data>
      <data key="d5">Amplify UI provides the Tabs component as part of its library for building user interfaces
Tabs are components in Amplify UI that organize content into sections</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="MENU">
      <data key="d4">17.0</data>
      <data key="d5">Menu is a component provided by Amplify UI for navigation and action selection
The Menu component is part of Amplify UI for selecting actions</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="MESSAGE COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">The Message component is part of the Amplify UI library, designed for user feedback.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="AMPLIFY UI" target="BREADCRUMBS COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Breadcrumbs component is also part of the Amplify UI library, serving as a navigation aid.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="AMPLIFY UI" target="BREADCRUMBS">
      <data key="d4">16.0</data>
      <data key="d5">Breadcrumbs is a component within the Amplify UI library that aids in navigation.
The Breadcrumbs component is a navigation tool within Amplify UI</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="ALERT">
      <data key="d4">16.0</data>
      <data key="d5">The Alert component is part of the Amplify UI library, designed to provide notifications to users
The Alert component is part of Amplify UI, designed to display important messages</data>
      <data key="d6">c7af2749681510be539a408772ae1755,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="VIEW">
      <data key="d4">24.0</data>
      <data key="d5">The View component is a foundational part of the Amplify UI library, used to create layouts
View is a component provided by Amplify UI for building user interfaces in React
View is the foundational component of Amplify UI, rendering a &lt;div&gt; and supporting styling</data>
      <data key="d6">56553341236a20419cc336c60c2bed04,c7af2749681510be539a408772ae1755,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="SCROLLVIEW">
      <data key="d4">10.0</data>
      <data key="d5">ScrollView is a component provided by Amplify UI for creating scrollable content areas in React applications
ScrollView is a component provided by Amplify UI for creating scrollable regions in web applications.
ScrollView is a component in Amplify UI that enhances user navigation by allowing scrolling</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5,6dcdf6dcf7b1c6d0a0969f9399986850,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="DEFAULT TEXT EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Default Text Example showcases the Text component from Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXT VARIATION EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Text Variation Example demonstrates variations of the Text component provided by Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXT TRUNCATED EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Text Truncated Example shows how to use the Text component's isTruncated prop from Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="TEXT THEME EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Text Theme Example illustrates how to customize Text components in Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="GLOBAL STYLING EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Global Styling Example demonstrates how to apply global styles to the Text component in Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="LOCAL STYLING EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Local Styling Example shows how to apply local styles to the Text component in Amplify UI</data>
      <data key="d6">1d9edaeddd47c47bbc0bda9363e7b2e5</data>
    </edge>
    <edge source="AMPLIFY UI" target="DIVIDER">
      <data key="d4">16.0</data>
      <data key="d5">Amplify UI includes the Divider component as part of its library for building user interfaces
The Divider is a component within the Amplify UI library that helps organize content visually</data>
      <data key="d6">6264f18714899ee18445e9c4535f5ff2,e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="CHECKBOX FIELD">
      <data key="d4">8.0</data>
      <data key="d5">CheckboxField is a component in Amplify UI for selecting items</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="DROPZONE">
      <data key="d4">8.0</data>
      <data key="d5">The Dropzone component is part of Amplify UI for file capture</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="FIELDSET">
      <data key="d4">8.0</data>
      <data key="d5">Fieldsets are components in Amplify UI for grouping form fields</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">Input primitive is a part of Amplify UI for creating form controls</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="TARGET CLASSES">
      <data key="d4">7.0</data>
      <data key="d5">Target Classes are specific classes that can be styled in Amplify UI components</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="CLASS SELECTOR">
      <data key="d4">7.0</data>
      <data key="d5">Class selectors are used to apply styles to specific components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="DESIGN TOKEN PROPERTIES">
      <data key="d4">7.0</data>
      <data key="d5">Design Token Properties define the styling attributes for components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="DIVIDER TOKENS">
      <data key="d4">7.0</data>
      <data key="d5">Divider Tokens define the styling properties for the Divider component in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="BORDER STYLE">
      <data key="d4">7.0</data>
      <data key="d5">Border Style is a property that can be applied to components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="BORDER COLOR">
      <data key="d4">7.0</data>
      <data key="d5">Border Color defines the color of borders in Amplify UI components</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="BORDER WIDTH">
      <data key="d4">7.0</data>
      <data key="d5">Border Width specifies the thickness of borders in Amplify UI components</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="OPACITY">
      <data key="d4">7.0</data>
      <data key="d5">Opacity refers to the transparency level of components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="LABEL TOKENS">
      <data key="d4">7.0</data>
      <data key="d5">Label Tokens define the styling properties for labels in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="SMALL TOKENS">
      <data key="d4">7.0</data>
      <data key="d5">Small Tokens define smaller styling properties for components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="LARGE TOKENS">
      <data key="d4">1.0</data>
      <data key="d5">Large Tokens define larger styling properties for components in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="AMPLIFY UI" target="ASTRO">
      <data key="d4">5.0</data>
      <data key="d5">Amplify UI can be used within Astro projects to enhance the user interface of web applications.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="AMPLIFY UI" target="AMPLIFY STUDIO">
      <data key="d4">15.0</data>
      <data key="d5">Amplify Studio utilizes Amplify UI components to generate React code from Figma designs
Amplify Studio utilizes Amplify UI components to enhance the development of responsive applications</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14,b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS FLEXBOX">
      <data key="d4">7.0</data>
      <data key="d5">Amplify UI components utilize CSS Flexbox to ensure that layouts adapt to different language directions</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS GRID">
      <data key="d4">7.0</data>
      <data key="d5">Amplify UI components leverage CSS Grid for creating responsive layouts that adjust based on content and screen size</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="AMPLIFY UI" target="ACCESSIBILITY">
      <data key="d4">17.0</data>
      <data key="d5">Amplify UI components are designed to follow accessibility best practices, ensuring that applications are usable by people with disabilities
Amplify UI components are designed to be accessible by default, adhering to accessibility standards</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50,d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="FORM INPUTS">
      <data key="d4">7.0</data>
      <data key="d5">Form inputs are a crucial part of Amplify UI, ensuring that user data is collected effectively and accessibly</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="AMPLIFY UI" target="SHOPPING CART">
      <data key="d4">7.0</data>
      <data key="d5">The shopping cart component utilizes Amplify UI for its user interface elements.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf</data>
    </edge>
    <edge source="AMPLIFY UI" target="INTER FONT">
      <data key="d4">7.0</data>
      <data key="d5">Amplify UI uses the Inter font in its default theme for better UI design</data>
      <data key="d6">818fcb4044a83bd6eead8a24e57319ad</data>
    </edge>
    <edge source="AMPLIFY UI" target="CSS LAYERS">
      <data key="d4">1.0</data>
      <data key="d5">CSS Layers feature is utilized in Amplify UI to simplify style overrides</data>
      <data key="d6">818fcb4044a83bd6eead8a24e57319ad</data>
    </edge>
    <edge source="AMPLIFY UI" target="FLUTTER">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI supports Flutter, allowing developers to build applications for mobile and web using Flutter</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="SWIFT">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI can be utilized in Swift applications for iOS development</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="ANDROID">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI components can be integrated into Android applications</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="REACT NATIVE">
      <data key="d4">6.0</data>
      <data key="d5">Amplify UI supports React Native, enabling cross-platform mobile app development</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="CLOUD">
      <data key="d4">7.0</data>
      <data key="d5">Amplify UI connects to cloud services to provide backend functionality for applications</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="UI COMPONENTS">
      <data key="d4">8.0</data>
      <data key="d5">Amplify UI provides a collection of UI components that developers can use to build applications</data>
      <data key="d6">d26ffe8f4908cd05e7882cd4223c3490</data>
    </edge>
    <edge source="AMPLIFY UI" target="ACCESSIBILITY GUIDELINES">
      <data key="d4">1.0</data>
      <data key="d5">Amplify UI components are designed to follow accessibility guidelines to ensure usability for all users</data>
      <data key="d6">1e46ce5bc3a6e1fa6bece36f86a46f80</data>
    </edge>
    <edge source="STORAGE MANAGER" target="S3">
      <data key="d4">28.0</data>
      <data key="d5">Storage Manager uploads files directly to Amazon S3, allowing for systematic file storage and retrieval
The Storage Manager uses Amazon S3 for storing uploaded files securely
The Storage Manager utilizes Amazon S3 for storing uploaded files in the cloud
The Storage Manager utilizes Amazon S3 for file storage and management</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa,32ab448d1972668cba4e2c467ff116a8,3d5a944087b6833d97ac18648a394224,afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILE UPLOAD">
      <data key="d4">7.0</data>
      <data key="d5">The Storage Manager handles the file upload event when a user uploads a file</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa</data>
    </edge>
    <edge source="STORAGE MANAGER" target="AUTHORIZATION RULES">
      <data key="d4">1.0</data>
      <data key="d5">Authorization rules are applied to manage access to files in the Storage Manager</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa</data>
    </edge>
    <edge source="STORAGE MANAGER" target="IDENTITY ID">
      <data key="d4">1.0</data>
      <data key="d5">The Storage Manager requires the user's Identity ID to manage file uploads to protected S3 buckets</data>
      <data key="d6">32ab448d1972668cba4e2c467ff116a8</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILEPICKER">
      <data key="d4">8.0</data>
      <data key="d5">The FilePicker is a part of the Storage Manager that allows users to select files for upload</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILELIST">
      <data key="d4">8.0</data>
      <data key="d5">The FileList displays the files being uploaded through the Storage Manager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="PROCESSFILE">
      <data key="d4">7.0</data>
      <data key="d5">The ProcessFile event allows for modifications to files before they are uploaded through the Storage Manager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="UPLOAD">
      <data key="d4">8.0</data>
      <data key="d5">The Upload event is triggered when a file is being uploaded through the Storage Manager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="CONTAINERPROPS">
      <data key="d4">6.0</data>
      <data key="d5">ContainerProps define the properties for the Container component that wraps the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="DROPZONEPROPS">
      <data key="d4">6.0</data>
      <data key="d5">DropZoneProps define the properties for the DropZone component within the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILEPICKERPROPS">
      <data key="d4">6.0</data>
      <data key="d5">FilePickerProps define the properties for the FilePicker component within the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILELISTPROPS">
      <data key="d4">6.0</data>
      <data key="d5">FileListProps define the properties for the FileList component within the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILELISTHEADERPROPS">
      <data key="d4">6.0</data>
      <data key="d5">FileListHeaderProps define the properties for the FileListHeader component within the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILELISTFOOTERPROPS">
      <data key="d4">6.0</data>
      <data key="d5">FileListFooterProps define the properties for the FileListFooter component within the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="STORAGE_MANAGER_HANDLE">
      <data key="d4">7.0</data>
      <data key="d5">StorageManagerHandle exposes imperative methods for interacting with the StorageManager</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="AUTOUPLOAD">
      <data key="d4">7.0</data>
      <data key="d5">AutoUpload is a property of the StorageManager that controls automatic upload behavior</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="MAXFILECOUNT">
      <data key="d4">7.0</data>
      <data key="d5">MaxFileCount is a property of the StorageManager that limits the number of files that can be uploaded at once</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="MAXFILESIZE">
      <data key="d4">7.0</data>
      <data key="d5">MaxFileSize is a property of the StorageManager that sets the maximum file size for uploads</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="ACCEPTEDFILETYPES">
      <data key="d4">1.0</data>
      <data key="d5">AcceptedFileTypes is a property of the StorageManager that specifies which file types can be uploaded</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="STORAGE MANAGER" target="PROCESS FILE">
      <data key="d4">7.0</data>
      <data key="d5">The process file event is part of the functionality provided by the Storage Manager for handling file uploads.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILES">
      <data key="d4">8.0</data>
      <data key="d5">Files are managed and processed through the Storage Manager component for uploads to Amazon S3.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="STORAGE MANAGER" target="SUCCESS">
      <data key="d4">1.0</data>
      <data key="d5">A success event is triggered by the Storage Manager upon successful file uploads.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FILE PICKER">
      <data key="d4">15.0</data>
      <data key="d5">The Storage Manager utilizes the File Picker component to enable users to select files for upload.
The File Picker is a component within the Storage Manager that allows users to select files</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988,d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="STORAGE MANAGER" target="DROP ZONE">
      <data key="d4">1.0</data>
      <data key="d5">The Storage Manager features a Drop Zone where users can drag and drop files for upload.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="STORAGE MANAGER" target="FLEX">
      <data key="d4">12.0</data>
      <data key="d5">The Storage Manager employs Flex components to create a responsive layout for its child elements.
Flex is used in the Storage Manager to arrange its child components in a flexible layout</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988,d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="STORAGE MANAGER" target="TEXT">
      <data key="d4">6.0</data>
      <data key="d5">The Storage Manager utilizes Text components to provide instructions and information to users.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="STORAGE MANAGER" target="DIVIDER">
      <data key="d4">5.0</data>
      <data key="d5">The Storage Manager incorporates Dividers to separate different sections of the user interface.</data>
      <data key="d6">1ceae74b49c1b621d815e85b8ca49988</data>
    </edge>
    <edge source="STORAGE MANAGER" target="DROPZONE">
      <data key="d4">7.0</data>
      <data key="d5">The DropZone is a part of the Storage Manager where users can drop files for upload</data>
      <data key="d6">d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="S3" target="LAMBDA">
      <data key="d4">8.0</data>
      <data key="d5">AWS Lambda can be triggered by events in Amazon S3, such as file uploads</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="S3" target="GENERATE MONTHLY REPORTS">
      <data key="d4">8.0</data>
      <data key="d5">The Generate Monthly Reports function uploads generated reports to Amazon S3 for storage</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="S3" target="PUTOBJECTCOMMAND">
      <data key="d4">9.0</data>
      <data key="d5">The PutObjectCommand is specifically designed to interact with Amazon S3 for uploading objects</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="S3" target="TRANSFER ACCELERATION">
      <data key="d4">14.0</data>
      <data key="d5">Transfer Acceleration is a feature that enhances the speed of file transfers to and from Amazon S3
Transfer Acceleration is a feature that enhances the speed of uploads to Amazon S3</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa,63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="S3" target="MULTIPART UPLOAD">
      <data key="d4">1.0</data>
      <data key="d5">Multipart upload is a method used by Amazon S3 to handle large file uploads efficiently</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa</data>
    </edge>
    <edge source="S3" target="AMPLIFY STORAGE">
      <data key="d4">9.0</data>
      <data key="d5">Amplify Storage utilizes Amazon S3 for storing files uploaded by users</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="S3" target="SIGNED URL">
      <data key="d4">9.0</data>
      <data key="d5">The signed URL is used to access files stored in S3</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="S3" target="COVER ART">
      <data key="d4">1.0</data>
      <data key="d5">Cover art images are stored in S3, allowing for retrieval and management within the application</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="S3" target="DYNAMODB">
      <data key="d4">12.0</data>
      <data key="d5">DynamoDB can back up data to S3, providing a reliable storage solution for data persistence and recovery.
S3 is used as a backup storage solution for data exported from the DynamoDB Todo table.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c,df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="S3" target="TODO">
      <data key="d4">5.0</data>
      <data key="d5">The Todo event may involve data that is stored in S3 for retrieval and processing</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="S3" target="OPENSEARCH">
      <data key="d4">7.0</data>
      <data key="d5">S3 is used as a backup storage solution for data ingested into OpenSearch</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2</data>
    </edge>
    <edge source="S3" target="CLOUD STORAGE">
      <data key="d4">1.0</data>
      <data key="d5">Amazon S3 is a leading cloud storage service that provides scalable storage solutions for applications</data>
      <data key="d6">32ab448d1972668cba4e2c467ff116a8</data>
    </edge>
    <edge source="AGENT CONTACT FORM" target="VALIDATION RESPONSE">
      <data key="d4">8.0</data>
      <data key="d5">Validation Response is used in the Agent Contact Form to provide feedback on user input validation</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="PRODUCT FORM" target="VALIDATION RESPONSE">
      <data key="d4">8.0</data>
      <data key="d5">Validation Response is utilized in the Product Form to ensure data integrity during submission</data>
      <data key="d6">afa4163fc1d3fab31d1294afed0bcc86</data>
    </edge>
    <edge source="TODO CREATE FORM" target="TEXTFIELD">
      <data key="d4">8.0</data>
      <data key="d5">The TextField component is used within the Todo Create Form to allow users to enter text data for todo items</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="TODO CREATE FORM" target="FORM SUBMISSION">
      <data key="d4">7.0</data>
      <data key="d5">Form submission is an action that occurs when the Todo Create Form is completed and sent by the user</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="TODO CREATE FORM" target="INITIAL VALUES">
      <data key="d4">6.0</data>
      <data key="d5">Initial values are set in the Todo Create Form to define default states for the input fields</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="FORM SUBMISSION" target="VALIDATION TASKS">
      <data key="d4">8.0</data>
      <data key="d5">Validation tasks are executed during form submission to ensure that all user inputs meet the required criteria</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="FORM SUBMISSION" target="PHONE NUMBER FIELD">
      <data key="d4">1.0</data>
      <data key="d5">The Phone Number Field is part of a form that can be submitted to collect user input data.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="OVERRIDES PROP" target="TEXTFIELD">
      <data key="d4">1.0</data>
      <data key="d5">The overrides prop can be applied to the TextField to customize its appearance and behavior in forms</data>
      <data key="d6">3d5a944087b6833d97ac18648a394224</data>
    </edge>
    <edge source="TEXTFIELD" target="VALIDATION ERROR">
      <data key="d4">7.0</data>
      <data key="d5">TextField can display a validation error message if user input is invalid</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXTFIELD" target="CSS STYLING">
      <data key="d4">1.0</data>
      <data key="d5">TextField can be styled using CSS to enhance its appearance</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXT FIELD ACCESSIBILITY EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Text Field Accessibility Example demonstrates how to ensure accessibility in the TextField component</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXT FIELD SIZES">
      <data key="d4">1.0</data>
      <data key="d5">The Text Field Sizes explains the different size options available for the TextField component</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXTFIELD" target="FLEX">
      <data key="d4">13.0</data>
      <data key="d5">TextField is often placed within a Flex component to manage layout
TextField is used within the Flex component to create a structured layout</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d,7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="MDINFO">
      <data key="d4">5.0</data>
      <data key="d5">MdInfo can be used as an inner component within TextField to provide additional information</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="MDSEARCH">
      <data key="d4">1.0</data>
      <data key="d5">MdSearch can be used as an inner component within TextField to trigger a search action</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD ACCESSIBILITY EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Accessibility Example demonstrates the use of the TextField component</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD SIZE EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Size Example showcases how to implement different sizes of the TextField component</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD VARIATION EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Variation Example illustrates the different styles available for the TextField component</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD OUTER COMPONENTS EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Outer Components Example shows how to integrate outer components with the TextField</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD INNER COMPONENTS EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Inner Components Example demonstrates the use of inner components within the TextField</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD DESCRIPTIVE TEXT EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The TextField Descriptive Text Example provides additional context for the TextField component</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="TEXTFIELD STATES EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">The TextField States Example illustrates the various states that the TextField can have</data>
      <data key="d6">7fea5fbe98eba1d68851892af6df2407</data>
    </edge>
    <edge source="TEXTFIELD" target="PASSWORD">
      <data key="d4">6.0</data>
      <data key="d5">Password is a field type that is implemented using the TextField component</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ISDISABLED">
      <data key="d4">5.0</data>
      <data key="d5">isDisabled indicates that the TextField cannot be interacted with</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ISREADONLY">
      <data key="d4">5.0</data>
      <data key="d5">isReadOnly indicates that the TextField can be viewed but not edited</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="HASERROR">
      <data key="d4">5.0</data>
      <data key="d5">hasError indicates whether the TextField has a validation error</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ERRORMESSAGE">
      <data key="d4">5.0</data>
      <data key="d5">errorMessage provides feedback about validation errors in the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ONSELECT">
      <data key="d4">6.0</data>
      <data key="d5">onSelect is an event handler that triggers when text is selected in the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ONINPUT">
      <data key="d4">6.0</data>
      <data key="d5">onInput is an event handler that triggers when input is made in the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ONCOPY">
      <data key="d4">6.0</data>
      <data key="d5">onCopy is an event handler that triggers when text is copied from the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ONPASTE">
      <data key="d4">6.0</data>
      <data key="d5">onPaste is an event handler that triggers when text is pasted into the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="ONCUT">
      <data key="d4">1.0</data>
      <data key="d5">onCut is an event handler that triggers when text is cut from the TextField</data>
      <data key="d6">7a771747e08d74ceb8c258bc5a658d6d</data>
    </edge>
    <edge source="TEXTFIELD" target="FIELDSET">
      <data key="d4">8.0</data>
      <data key="d5">Fieldset can include TextField components for user input, organizing them within a defined area
TextField is often used within a Fieldset to group related input elements, enhancing form organization</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7,72f7bd8a9eb9039eabf2d7d1ff4c9601</data>
    </edge>
    <edge source="TEXTFIELD" target="INPUTSTYLES">
      <data key="d4">6.0</data>
      <data key="d5">TextField components utilize the inputStyles prop to allow for direct styling of input elements.</data>
      <data key="d6">cb861a02338e7cf7786d791829706a53</data>
    </edge>
    <edge source="TEXTFIELD" target="FORM INPUTS">
      <data key="d4">8.0</data>
      <data key="d5">TextField is a specific type of form input that allows users to enter text</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="TODOCREATEFORM" target="OVERRIDES">
      <data key="d4">1.0</data>
      <data key="d5">Overrides can be applied to the TodoCreateForm to customize its appearance and behavior.</data>
      <data key="d6">a05256700be9b39d3c9098982e0fa5d4</data>
    </edge>
    <edge source="SELECTFIELD" target="FRUIT">
      <data key="d4">8.0</data>
      <data key="d5">Fruit is an option available for selection in the SelectField component
Fruit is an option category available in the SelectField component</data>
      <data key="d6">40ccefaf714c8eadcebd508c051c9190,e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="SELECTFIELD" target="ANIMALS">
      <data key="d4">7.0</data>
      <data key="d5">Animals is another option category available in the SelectField component</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="SELECTFIELD" target="VARIATIONS">
      <data key="d4">1.0</data>
      <data key="d5">Variations are style options that can be applied to the SelectField component</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="SELECTFIELD" target="OPTION">
      <data key="d4">7.0</data>
      <data key="d5">Options are the selectable items presented in the SelectField for user selection</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="SELECTFIELD" target="LABEL">
      <data key="d4">8.0</data>
      <data key="d5">Label provides context for the SelectField, helping users understand what to select</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="SELECTFIELD" target="DESCRIPTIVETEXT">
      <data key="d4">6.0</data>
      <data key="d5">Descriptive text offers additional information about the SelectField when the label is visible</data>
      <data key="d6">e33823d803dfc43e2ab84d0208782223</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="COLUMN">
      <data key="d4">6.0</data>
      <data key="d5">Column is a layout direction option available in the RadioGroupField component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="ROW">
      <data key="d4">6.0</data>
      <data key="d5">Row is a layout direction option available in the RadioGroupField component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="DEFAULT">
      <data key="d4">6.0</data>
      <data key="d5">Default is a size option available in the RadioGroupField component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="SMALL">
      <data key="d4">6.0</data>
      <data key="d5">Small is a size option available in the RadioGroupField component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="LARGE">
      <data key="d4">1.0</data>
      <data key="d5">Large is a size option available in the RadioGroupField component</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="DISABLED EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Disabled Example showcases the functionality of the RadioGroupField component</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="READ ONLY EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Read Only Example demonstrates the read-only state of the RadioGroupField component</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="ERROR EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Error Example shows how to manage validation errors in the RadioGroupField component</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="ACCESSIBILITY">
      <data key="d4">1.0</data>
      <data key="d5">Accessibility principles are applied to ensure the RadioGroupField is usable by all users</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="OPTION 1">
      <data key="d4">7.0</data>
      <data key="d5">Option 1 is one of the choices available in the RadioGroupField component</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="OPTION 2">
      <data key="d4">7.0</data>
      <data key="d5">Option 2 is one of the choices available in the RadioGroupField component, but it is disabled</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="OPTION 3">
      <data key="d4">7.0</data>
      <data key="d5">Option 3 is one of the choices available in the RadioGroupField component</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="ALL">
      <data key="d4">6.0</data>
      <data key="d5">All is one of the choices in a disabled RadioGroupField</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="DISABLED">
      <data key="d4">1.0</data>
      <data key="d5">Disabled is one of the choices in a disabled RadioGroupField</data>
      <data key="d6">2fa22e032f66ea7c5422792329c30589</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="RADIO">
      <data key="d4">8.0</data>
      <data key="d5">Radio is a component that is part of the RadioGroupField, allowing users to select one option</data>
      <data key="d6">6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="RADIOGROUPFIELD" target="CUSTOM RADIO">
      <data key="d4">6.0</data>
      <data key="d5">Custom Radio is a styled version of the Radio component used within the RadioGroupField</data>
      <data key="d6">6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="AMAZON Q DEVELOPER" target="AWS TOOLKIT FOR VISUAL STUDIO">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Q Developer is available as a feature within the AWS Toolkit for Visual Studio, enhancing the development experience.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="AMAZON Q DEVELOPER" target="VISUAL STUDIO">
      <data key="d4">6.0</data>
      <data key="d5">Amazon Q Developer can be integrated into Visual Studio to enhance the development process with inline code suggestions.</data>
      <data key="d6">fc52bbb050ae304015ed1c6202d9c35b</data>
    </edge>
    <edge source="ACCOUNT SETTINGS" target="DELETE USER">
      <data key="d4">8.0</data>
      <data key="d5">The Delete User event is part of the Account Settings component, allowing users to delete their accounts</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="ACCOUNT SETTINGS" target="FACE LIVENESS DETECTOR">
      <data key="d4">6.0</data>
      <data key="d5">Face Liveness Detector can be integrated into the Account Settings for enhanced security during account management</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="ACCOUNT SETTINGS" target="CHANGE PASSWORD">
      <data key="d4">9.0</data>
      <data key="d5">The Change Password event is a feature within the Account Settings component</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37</data>
    </edge>
    <edge source="AMAZON SQS" target="AMAZON EVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon EventBridge can send events to Amazon SQS queues for message queuing</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="AMAZON SNS" target="PUBLISHER">
      <data key="d4">8.0</data>
      <data key="d5">The Publisher Lambda function publishes messages to the Amazon SNS topic for distribution</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="AMAZON SNS" target="CUSTOM NOTIFICATIONS">
      <data key="d4">7.0</data>
      <data key="d5">The Custom Notifications construct creates and manages the Amazon SNS topic for notifications</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="AMAZON SNS" target="AMAZON EVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon EventBridge can publish events to Amazon SNS topics for notifications</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="AMAZON SES" target="EMAILER">
      <data key="d4">8.0</data>
      <data key="d5">The Emailer Lambda function sends emails through Amazon SES after processing messages from the SNS topic</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="LAMBDA" target="CUSTOM NOTIFICATIONS">
      <data key="d4">7.0</data>
      <data key="d5">The Custom Notifications construct utilizes AWS Lambda functions for publishing and processing messages</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="LAMBDA" target="DYNAMODB">
      <data key="d4">9.0</data>
      <data key="d5">DynamoDB can trigger AWS Lambda functions through DynamoDB Streams when items are added, updated, or deleted</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="LAMBDA" target="POST CONFIRMATION">
      <data key="d4">9.0</data>
      <data key="d5">The post confirmation event triggers a Lambda function to execute specific actions after user confirmation</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="CUSTOM NOTIFICATIONS" target="PUBLISHER">
      <data key="d4">6.0</data>
      <data key="d5">The Publisher function is part of the Custom Notifications construct that handles message publishing</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="CUSTOM NOTIFICATIONS" target="EMAILER">
      <data key="d4">6.0</data>
      <data key="d5">The Emailer function is part of the Custom Notifications construct that handles email sending</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="PUBLISHER" target="SNS TOPIC">
      <data key="d4">8.0</data>
      <data key="d5">The Publisher Lambda function publishes messages to the SNS Topic, which is a part of the Custom Notifications construct</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="PUBLISHER" target="TOPIC ARN">
      <data key="d4">1.0</data>
      <data key="d5">The Publisher function uses the Topic ARN to identify the SNS Topic for publishing messages</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="EMAILER" target="SNS TOPIC">
      <data key="d4">8.0</data>
      <data key="d5">The Emailer Lambda function retrieves messages from the SNS Topic to process and send emails</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="EMAILER" target="SOURCE ADDRESS">
      <data key="d4">9.0</data>
      <data key="d5">The Emailer function uses the Source Address to send emails through Amazon SES</data>
      <data key="d6">898474c2db3e19ba76a4ee18b9b1f4cb</data>
    </edge>
    <edge source="DYNAMODB" target="AWS BACKUP">
      <data key="d4">8.0</data>
      <data key="d5">AWS Backup can be used to create backups for DynamoDB tables, ensuring data protection and recovery options</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="DYNAMODB" target="POINT-IN-TIME RECOVERY">
      <data key="d4">1.0</data>
      <data key="d5">Point-in-Time Recovery is a feature specifically available for DynamoDB tables to restore data</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="DYNAMODB" target="TODO TABLE">
      <data key="d4">7.0</data>
      <data key="d5">The Todo table is a resource managed within DynamoDB for storing to-do items</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="DYNAMODB" target="DYNAMODB STREAM">
      <data key="d4">1.0</data>
      <data key="d5">DynamoDB Streams captures changes to the Todo table and can trigger Lambda functions</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="DYNAMODB" target="X-RAY">
      <data key="d4">5.0</data>
      <data key="d5">DynamoDB can be monitored and analyzed using AWS X-Ray to gain insights into performance and troubleshoot issues.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="DYNAMODB" target="TIME-TO-LIVE">
      <data key="d4">7.0</data>
      <data key="d5">DynamoDB supports time-to-live (TTL) to automatically manage the lifecycle of data stored in its tables.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="DYNAMODB" target="PROVISIONED THROUGHOUT">
      <data key="d4">1.0</data>
      <data key="d5">DynamoDB allows users to configure provisioned throughput to optimize performance based on application needs.</data>
      <data key="d6">b3ba0d2a5daf3ce8f284099dd931ef14</data>
    </edge>
    <edge source="DYNAMODB" target="APPSYNC">
      <data key="d4">9.0</data>
      <data key="d5">AppSync can use DynamoDB as a data source for its GraphQL APIs
AWS AppSync can interact with DynamoDB as a data source for GraphQL queries and mutations.</data>
      <data key="d6">00766f255251029b8dd88d45d83f125e,fc6e2a28447409d2b0f12296647c9470</data>
    </edge>
    <edge source="DYNAMODB" target="BATCHGETITEM">
      <data key="d4">7.0</data>
      <data key="d5">BatchGetItem is a specific operation that allows retrieval of multiple items from DynamoDB</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="DYNAMODB" target="BATCHDELETEITEM">
      <data key="d4">7.0</data>
      <data key="d5">BatchDeleteItem is a specific operation that allows deletion of multiple items from DynamoDB</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="DYNAMODB" target="BATCHPUTITEM">
      <data key="d4">7.0</data>
      <data key="d5">BatchPutItem is a specific operation that allows insertion of multiple items into DynamoDB</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="DYNAMODB" target="TRANSACTGETITEMS">
      <data key="d4">7.0</data>
      <data key="d5">TransactGetItems is a specific operation that allows retrieval of multiple items in a single transaction from DynamoDB</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="DYNAMODB" target="TRANSACTWRITEITEMS">
      <data key="d4">7.0</data>
      <data key="d5">TransactWriteItems is a specific operation that allows writing multiple items in a single transaction to DynamoDB</data>
      <data key="d6">4189c0e92cbda0cbd95165143d5ba488</data>
    </edge>
    <edge source="DYNAMODB" target="AMPLIFY API">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify API can interact with DynamoDB to manage data for applications, allowing for CRUD operations on the database.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="DYNAMODB" target="OPENSEARCH">
      <data key="d4">44.0</data>
      <data key="d5">DynamoDB can be integrated with OpenSearch to enable advanced search capabilities on the data stored in DynamoDB.
OpenSearch can be integrated with DynamoDB to enable search capabilities on the data stored in DynamoDB.
OpenSearch is configured to ingest data from the DynamoDB Todo table for search and analytics purposes.
DynamoDB is the source of data that is ingested into OpenSearch for indexing and querying
DynamoDB is used as a source for the OpenSearch Integration Pipeline to ingest data into OpenSearch.
DynamoDB and OpenSearch are mentioned in the context of data storage and search capabilities</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2,4b1835219f538ab9f3ba5712dcb54610,57f05fa9d96242d8c2cb2869e13f9e1c,7f29cbfbdd4aea2867cf6f65ba567185,df66d576a32835aae9d3957800932b5f,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="DYNAMODB" target="DYNAMODB STREAMS">
      <data key="d4">8.0</data>
      <data key="d5">DynamoDB Streams captures changes in DynamoDB tables, allowing for real-time processing of data changes.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="DYNAMODB" target="OPENSEARCH INGESTION">
      <data key="d4">9.0</data>
      <data key="d5">OpenSearch Ingestion works with DynamoDB to facilitate the automatic ingestion of data into OpenSearch for search capabilities.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="DYNAMODB" target="OPENSEARCH INTEGRATION PIPELINE">
      <data key="d4">16.0</data>
      <data key="d5">The OpenSearch Integration Pipeline can pull data from DynamoDB for indexing in OpenSearch.
The OpenSearch Integration Pipeline processes data from DynamoDB to OpenSearch for enhanced search capabilities.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="DYNAMODB" target="TODO">
      <data key="d4">13.0</data>
      <data key="d5">The Todo event is stored and managed within the DynamoDB database
The Todo table is a resource within DynamoDB that stores task-related data.
The Todo table in DynamoDB is configured to stream data to OpenSearch</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2,57f05fa9d96242d8c2cb2869e13f9e1c,ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="DYNAMODB" target="TABLE ARN">
      <data key="d4">6.0</data>
      <data key="d5">The Table ARN is used to reference the Todo table within the DynamoDB service for permission and access management.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="DYNAMODB" target="TABLE NAME">
      <data key="d4">6.0</data>
      <data key="d5">The Table Name is a key identifier for the Todo table within the DynamoDB service, used in various configurations.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="DYNAMODB" target="REGION">
      <data key="d4">1.0</data>
      <data key="d5">The Region is where the DynamoDB service is deployed, affecting latency and compliance for the Todo table.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="DYNAMODB" target="DATA STACK">
      <data key="d4">1.0</data>
      <data key="d5">The Data Stack includes DynamoDB as a key component for data storage and management in applications.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </edge>
    <edge source="DYNAMODB" target="SCHEMA">
      <data key="d4">1.0</data>
      <data key="d5">DynamoDB uses schemas to define the structure of data stored in its tables</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="BACKUP VAULT" target="BACKUP PLAN">
      <data key="d4">8.0</data>
      <data key="d5">Backup Vault is utilized by Backup Plan to store backup data securely</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="BACKUP PLAN" target="BACKUP PLAN RULE">
      <data key="d4">1.0</data>
      <data key="d5">Backup Plan Rule is a component of Backup Plan that defines specific backup scheduling and retention policies</data>
      <data key="d6">195fa68e405624fc5cbe7eeb5767c2ef</data>
    </edge>
    <edge source="PUBSUB" target="AWS IOT">
      <data key="d4">7.0</data>
      <data key="d5">AWS IoT supports the PubSub functionality for message-oriented middleware</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="PUBSUB" target="TOPICS">
      <data key="d4">8.0</data>
      <data key="d5">Topics are integral to the PubSub system, allowing for organized message distribution</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="PUBSUB" target="MQTT">
      <data key="d4">7.0</data>
      <data key="d5">PubSub can integrate with MQTT providers to facilitate message delivery over WebSocket</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="PUBSUB" target="HUB">
      <data key="d4">6.0</data>
      <data key="d5">Hub listens for events from the PubSub service to monitor connection states and manage subscriptions</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="PUBSUB" target="CONNECTION STATE CHANGE">
      <data key="d4">1.0</data>
      <data key="d5">Connection State Change is an event triggered by changes in the connection status of the PubSub service</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="PUBSUB" target="TOPIC">
      <data key="d4">8.0</data>
      <data key="d5">PubSub allows users to publish messages to and subscribe from topics</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="AWS IOT" target="IAM POLICIES">
      <data key="d4">5.0</data>
      <data key="d5">IAM policies are required to grant permissions for AWS IoT services</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS IOT" target="TOPICS">
      <data key="d4">6.0</data>
      <data key="d5">AWS IoT uses topics to facilitate message passing in real-time applications</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="AWS IOT" target="AWS CONSOLE">
      <data key="d4">5.0</data>
      <data key="d5">The AWS Console is used to manage and configure AWS IoT services</data>
      <data key="d6">d8db439b4e3e9430a8842e7c634c7e85</data>
    </edge>
    <edge source="IAM POLICIES" target="CREDENTIALS">
      <data key="d4">8.0</data>
      <data key="d5">Credentials are governed by IAM Policies that define access permissions for AWS resources</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="CONNECTION STATE CHANGE" target="HUB">
      <data key="d4">9.0</data>
      <data key="d5">Hub listens for connection state changes to inform users about subscription health</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="TOPIC" target="SUBSCRIBE">
      <data key="d4">7.0</data>
      <data key="d5">Subscribing to a topic enables the reception of messages sent to that topic</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="TOPIC" target="UNSUBSCRIBE">
      <data key="d4">7.0</data>
      <data key="d5">Unsubscribing from a topic stops the reception of messages sent to that topic</data>
      <data key="d6">52545707508fac3ea71aa1d62f6d0cb6</data>
    </edge>
    <edge source="SUBSCRIBE" target="CHECKBOXFIELD">
      <data key="d4">6.0</data>
      <data key="d5">Subscribe is represented as a label in a CheckboxField for user interaction</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="INTERACTIONS" target="CHATBOT">
      <data key="d4">10.0</data>
      <data key="d5">Chatbots are integrated into the Interactions feature of AWS Amplify to enhance user engagement
Interactions enable the integration of chatbots into applications</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d,fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="USER INPUT" target="CHATBOT">
      <data key="d4">8.0</data>
      <data key="d5">User input is sent to the chatbot to receive responses based on the provided data</data>
      <data key="d6">89e3b86d249ae10742dcef7c4e2d582d</data>
    </edge>
    <edge source="USER INPUT" target="FORMEVENT">
      <data key="d4">8.0</data>
      <data key="d5">FormEvent captures user input data when a form is submitted</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="PREDICTIONS" target="SENTIMENT ANALYSIS">
      <data key="d4">7.0</data>
      <data key="d5">Predictions can be used to perform sentiment analysis on text data</data>
      <data key="d6">fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="PREDICTIONS" target="OBJECT DETECTION">
      <data key="d4">7.0</data>
      <data key="d5">Predictions can also be used for object detection in images</data>
      <data key="d6">fe0d633beeec623b33fe67087fc20b5c</data>
    </edge>
    <edge source="PREDICTIONS" target="IMAGEARRAYBUFFER">
      <data key="d4">7.0</data>
      <data key="d5">Predictions utilizes ImageArrayBuffer to process image data for entity detection</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="PREDICTIONS" target="PATH TO PHOTO">
      <data key="d4">6.0</data>
      <data key="d5">Predictions can use the Path to Photo as a reference for image input</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="PREDICTIONS" target="LANDMARKS">
      <data key="d4">6.0</data>
      <data key="d5">Predictions can detect landmarks in images as part of its analysis capabilities</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="PREDICTIONS" target="CELEBRITY DETECTION">
      <data key="d4">1.0</data>
      <data key="d5">Predictions includes a feature for Celebrity Detection to identify famous individuals in images</data>
      <data key="d6">70363c8433b020965dc7ec11c063e460</data>
    </edge>
    <edge source="PREDICTIONS" target="TEXT TO SPEECH">
      <data key="d4">17.0</data>
      <data key="d5">Text to speech is one of the functionalities offered by the Predictions feature
Text to Speech is a specific use case of the Predictions feature that allows applications to convert text into spoken audio</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="PREDICTIONS" target="TRANSCRIBE AUDIO TO TEXT">
      <data key="d4">17.0</data>
      <data key="d5">Transcribe audio to text is another functionality provided by the Predictions feature
Transcribe Audio to Text is another use case of the Predictions feature that enables the conversion of spoken language into written text</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="PREDICTIONS" target="TRANSLATE LANGUAGE">
      <data key="d4">10.0</data>
      <data key="d5">Translate language is also a functionality provided by the Predictions feature
Translate Language is a use case of the Predictions feature that allows for the translation of text between different languages</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429,aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="PREDICTIONS" target="AMAZON POLLY">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Polly is one of the services integrated into the Predictions feature for converting text to speech</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="PREDICTIONS" target="IDENTIFY TEXT">
      <data key="d4">8.0</data>
      <data key="d5">Identify Text is a use case of the Predictions feature that extracts text from images and documents</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="PREDICTIONS" target="IDENTIFY ENTITIES">
      <data key="d4">8.0</data>
      <data key="d5">Identify Entities is a use case of the Predictions feature that detects and classifies entities from text or images</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="PREDICTIONS" target="LABEL OBJECTS">
      <data key="d4">8.0</data>
      <data key="d5">Label Objects is a use case of the Predictions feature that identifies and categorizes objects within images</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="PREDICTIONS" target="INTERPRET SENTIMENT">
      <data key="d4">8.0</data>
      <data key="d5">Interpret Sentiment is a use case of the Predictions feature that analyzes text for emotional tone</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="IAM ROLES" target="AMAZON POLLY">
      <data key="d4">8.0</data>
      <data key="d5">IAM Roles are necessary for granting permissions to access the Amazon Polly service, ensuring secure interactions.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMPLIFY CONFIGURATION" target="AMPLIFY LIBRARY">
      <data key="d4">8.0</data>
      <data key="d5">The Amplify library requires proper configuration to function correctly within an application</data>
      <data key="d6">aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="AMPLIFY CONFIGURATION" target="OUTPUTS">
      <data key="d4">7.0</data>
      <data key="d5">Outputs are generated based on the configurations set in the Amplify library</data>
      <data key="d6">aed1999377a9138038f56696b28a18c4</data>
    </edge>
    <edge source="AMPLIFY CONFIGURATION" target="REACT APP">
      <data key="d4">7.0</data>
      <data key="d5">The Amplify Configuration is necessary for the React app to connect and utilize AWS services effectively</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="COGNITO IDENTITY POOL" target="FACELIVENESSDETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">FaceLivenessDetector uses Cognito Identity Pool for signing requests to Rekognition</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="TEXT TO SPEECH" target="AUDIO BUFFER">
      <data key="d4">7.0</data>
      <data key="d5">An audio buffer is generated as a result of the text-to-speech conversion process</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="AMPLIFY LIBRARY" target="HIGHLIGHTED CODE EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Highlighted code examples demonstrate how to use the Amplify Library for various functionalities</data>
      <data key="d6">8c8075430684b38bdd1c6ce9fc9f7205</data>
    </edge>
    <edge source="STACK" target="MYAPI">
      <data key="d4">1.0</data>
      <data key="d5">MyApi is part of the backend stack defined in the AWS CDK</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="STACK" target="OPENSEARCH DOMAIN">
      <data key="d4">7.0</data>
      <data key="d5">The OpenSearch Domain is created and managed within a specific AWS Stack</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="AMAZON POLLY" target="AMAZON WEB SERVICES">
      <data key="d4">9.0</data>
      <data key="d5">Amazon Polly is a service offered by Amazon Web Services, utilizing its cloud infrastructure to provide text-to-speech capabilities.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMAZON POLLY" target="POLLY CLIENT">
      <data key="d4">9.0</data>
      <data key="d5">The Polly Client is a part of the AWS SDK that enables developers to interact with the Amazon Polly service for text-to-speech conversion.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMAZON POLLY" target="SPEECH SYNTHESIS MARKUP LANGUAGE">
      <data key="d4">7.0</data>
      <data key="d5">Speech Synthesis Markup Language is used with Amazon Polly to customize the speech output, allowing for more control over voice characteristics.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMAZON POLLY" target="SPEECH MARKS">
      <data key="d4">8.0</data>
      <data key="d5">Speech marks are generated by Amazon Polly during the speech synthesis process, providing timing information for audio synchronization.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMAZON POLLY" target="PAY-AS-YOU-GO PRICING">
      <data key="d4">9.0</data>
      <data key="d5">Amazon Polly's pay-as-you-go pricing model allows users to manage costs effectively based on their usage of the service.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="IDENTIFY TEXT" target="REKOGNITION SERVICE">
      <data key="d4">9.0</data>
      <data key="d5">Identify Text is a function that calls the Rekognition Service to perform text detection on images</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="IDENTIFY TEXT" target="TEXT RECOGNITION">
      <data key="d4">1.0</data>
      <data key="d5">Text Recognition is achieved through the Identify Text function, which utilizes the Rekognition Service to detect text in images</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="API GATEWAY" target="AMPLIFY LIBRARIES">
      <data key="d4">6.0</data>
      <data key="d5">API Gateway can be used with Amplify Libraries to manage and secure APIs for applications</data>
      <data key="d6">016d827d48ddcc5775cc4ae54a479429</data>
    </edge>
    <edge source="API GATEWAY" target="REST API">
      <data key="d4">17.0</data>
      <data key="d5">API Gateway is used to manage and route requests to the REST API, providing a layer of abstraction and security.
API Gateway is used to create and manage REST APIs</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0,f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="API GATEWAY" target="LAMBDA FUNCTION">
      <data key="d4">9.0</data>
      <data key="d5">API Gateway can trigger Lambda functions to handle API requests</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="API GATEWAY" target="IAM">
      <data key="d4">6.0</data>
      <data key="d5">IAM is used to manage access permissions for the API Gateway</data>
      <data key="d6">f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="API GATEWAY" target="POLICY">
      <data key="d4">7.0</data>
      <data key="d5">API Gateway uses policies to manage access and permissions for API requests</data>
      <data key="d6">f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="API ENDPOINT" target="REST API">
      <data key="d4">9.0</data>
      <data key="d5">API endpoints are part of the REST API, defining specific paths for accessing resources.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="API ENDPOINT" target="ITEMS">
      <data key="d4">1.0</data>
      <data key="d5">The /items endpoint is used to interact with the items resource in the API.</data>
      <data key="d6">f0814c1eeb2105aa085a8917000972a0</data>
    </edge>
    <edge source="API ENDPOINT" target="PUT REQUEST">
      <data key="d4">9.0</data>
      <data key="d5">A PUT request is made to an API endpoint to create or update an item</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="API ENDPOINT" target="DELETE REQUEST">
      <data key="d4">1.0</data>
      <data key="d5">A DELETE request is made to an API endpoint to remove an item</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="API ENDPOINT" target="POLLY CLIENT">
      <data key="d4">9.0</data>
      <data key="d5">The API endpoint is accessed by the Polly Client to send requests to the Amazon Polly service for text-to-speech conversion.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="ITEMS" target="REST API">
      <data key="d4">9.0</data>
      <data key="d5">Items are the primary resources that are manipulated through REST API calls</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="ITEMS" target="CART">
      <data key="d4">8.0</data>
      <data key="d5">The Cart contains items, indicating a relationship where the Cart holds multiple items associated with it.</data>
      <data key="d6">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </edge>
    <edge source="REST API" target="PUT REQUEST">
      <data key="d4">9.0</data>
      <data key="d5">A PUT request is a type of operation that can be performed on a REST API to update resources</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="REST API" target="DELETE REQUEST">
      <data key="d4">1.0</data>
      <data key="d5">A DELETE request is a type of operation that can be performed on a REST API to remove resources</data>
      <data key="d6">1b140f417545903391f0e28ef4baf7c2</data>
    </edge>
    <edge source="REST API" target="DELETE CALL">
      <data key="d4">8.0</data>
      <data key="d5">The DELETE call is a specific operation performed on the REST API to remove an item</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="REST API" target="POST CALL">
      <data key="d4">8.0</data>
      <data key="d5">The POST call is a specific operation performed on the REST API to create a new item</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="REST API" target="GET CALL">
      <data key="d4">8.0</data>
      <data key="d5">The GET call is a specific operation performed on the REST API to retrieve items</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="REST API" target="API ERROR">
      <data key="d4">1.0</data>
      <data key="d5">An API Error occurs when there is a failure in the REST API call, indicating issues with the request</data>
      <data key="d6">3871391b5e9d42efc3d1226580d587a0</data>
    </edge>
    <edge source="REST API" target="LAMBDA FUNCTION">
      <data key="d4">9.0</data>
      <data key="d5">REST APIs can invoke Lambda functions to process requests</data>
      <data key="d6">459eadcad7d141c2129458137d7d41d9</data>
    </edge>
    <edge source="REST API" target="CUSTOM AUTHORIZATION TOKEN">
      <data key="d4">1.0</data>
      <data key="d5">A custom authorization token is used to authenticate requests made to a REST API</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="MYAPI" target="AWS LAMBDA">
      <data key="d4">8.0</data>
      <data key="d5">MyApi is implemented as an AWS Lambda function that handles API requests</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="AWS LAMBDA" target="APIGATEWAY">
      <data key="d4">7.0</data>
      <data key="d5">AWS Lambda functions are integrated with API Gateway to handle HTTP requests</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="AWS LAMBDA" target="AMAZON KINESIS DATA STREAMS">
      <data key="d4">8.0</data>
      <data key="d5">AWS Lambda can be triggered by Amazon Kinesis Data Streams to process streaming data in real-time</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="AWS LAMBDA" target="SAY-HELLO">
      <data key="d4">8.0</data>
      <data key="d5">The 'say-hello' function is implemented using AWS Lambda, which executes the function in response to events.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="AWS LAMBDA" target="AMAZON EVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">Amazon EventBridge can trigger AWS Lambda functions in response to events</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="APIGATEWAY" target="IAM">
      <data key="d4">7.0</data>
      <data key="d5">IAM policies are used to control access to the API Gateway</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="APIGATEWAY" target="HTTP API">
      <data key="d4">5.0</data>
      <data key="d5">HTTP API is a type of API managed by API Gateway</data>
      <data key="d6">6a2f21642257c922b2659f7bb932521a</data>
    </edge>
    <edge source="IAM" target="COGNITO">
      <data key="d4">14.0</data>
      <data key="d5">Cognito uses IAM roles to manage authenticated and unauthenticated user access
AWS IAM is used to manage permissions for users authenticated through Amazon Cognito</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86,f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="IAM" target="KINESIS">
      <data key="d4">6.0</data>
      <data key="d5">IAM policies are used to manage permissions for accessing Kinesis streams</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="IAM" target="WEEKLY DIGEST">
      <data key="d4">1.0</data>
      <data key="d5">The Weekly Digest function requires IAM roles to manage permissions for accessing AWS resources</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="IAM" target="OPENSEARCH INTEGRATION PIPELINE ROLE">
      <data key="d4">9.0</data>
      <data key="d5">IAM policies are attached to the OpenSearch Integration Pipeline Role to grant it permissions to access DynamoDB and S3 resources.The OpenSearch Integration Pipeline Role is an IAM role that is assumed by the OpenSearch service to manage permissions for accessing AWS resources.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="HANDLER" target="SAY-HELLO">
      <data key="d4">8.0</data>
      <data key="d5">The 'say-hello' function's handler is the main function that executes when the function is triggered by an event.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="LAMBDA FUNCTION" target="GENERATE HAIKU FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">The Generate Haiku Function is implemented as a Lambda Function that executes the code to generate haikus</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="LAMBDA FUNCTION" target="CUSTOM AUTHORIZATION RULE">
      <data key="d4">8.0</data>
      <data key="d5">Custom authorization rules are often implemented using AWS Lambda functions to manage access control</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="LAMBDA FUNCTION" target="AUTHORIZATION TOKEN">
      <data key="d4">6.0</data>
      <data key="d5">The authorization token is passed to the Lambda function to determine access permissions</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="COGNITO" target="PRE SIGN-UP">
      <data key="d4">7.0</data>
      <data key="d5">The pre-sign-up event is a feature of Amazon Cognito that allows for custom validation during the user sign-up process</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="COGNITO" target="PRE TOKEN GENERATION">
      <data key="d4">7.0</data>
      <data key="d5">The pre-token generation event is a feature of Amazon Cognito that allows for modifications to the ID token before it is issued</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="COGNITO" target="USER PROFILE RECORD">
      <data key="d4">6.0</data>
      <data key="d5">Creating a user profile record is an action that occurs in conjunction with user confirmation in Amazon Cognito</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="COGNITO" target="OPENID CONNECT">
      <data key="d4">8.0</data>
      <data key="d5">OpenID Connect can be used as an authentication provider for Amazon Cognito
OpenID Connect can be used as an authorization provider in conjunction with Amazon Cognito for user authentication</data>
      <data key="d6">8c8075430684b38bdd1c6ce9fc9f7205,fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="COGNITO" target="USERPOOL">
      <data key="d4">9.0</data>
      <data key="d5">Cognito manages user authentication and authorization through User Pools, which store user data and credentials</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="ADD USER TO GROUP">
      <data key="d4">7.0</data>
      <data key="d5">Cognito provides the functionality to add users to groups, which is essential for managing user permissions and roles</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="MANAGE USERS">
      <data key="d4">8.0</data>
      <data key="d5">Cognito allows administrators to manage users through various actions, ensuring effective user account management</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="MANAGE GROUP MEMBERSHIP">
      <data key="d4">7.0</data>
      <data key="d5">Cognito enables the management of group memberships, allowing for organized user roles and permissions</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="MANAGE PASSWORD RECOVERY">
      <data key="d4">8.0</data>
      <data key="d5">Cognito includes features for managing password recovery, ensuring users can regain access to their accounts</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="LIST USERS">
      <data key="d4">7.0</data>
      <data key="d5">Cognito provides the ability to list users, which is crucial for administrators to oversee user accounts</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="RESET USER PASSWORD">
      <data key="d4">1.0</data>
      <data key="d5">Cognito allows administrators to reset user passwords, which is a key aspect of user account management</data>
      <data key="d6">f98c0fd002ba589c06bf3b605fe3f189</data>
    </edge>
    <edge source="COGNITO" target="HELLO">
      <data key="d4">8.0</data>
      <data key="d5">Hello is a user managed by the Cognito service, indicating a direct relationship between the user and the authentication service.</data>
      <data key="d6">3874fd589ed63023667cf58323875d95</data>
    </edge>
    <edge source="COGNITO" target="SIGN IN FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">The signIn function utilizes Cognito for user authentication</data>
      <data key="d6">fca72cef7aaa748346e02aa5f929c2c1</data>
    </edge>
    <edge source="POLICY" target="POLICY STATEMENT">
      <data key="d4">15.0</data>
      <data key="d5">A Policy consists of multiple Policy Statements that define specific permissions
A policy consists of one or more policy statements that define permissions</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b,f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="POLICY STATEMENT" target="ARN">
      <data key="d4">7.0</data>
      <data key="d5">Policy statements often reference ARNs to specify the resources they apply to</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="POLICY STATEMENT" target="GENERATE HAIKU FUNCTION">
      <data key="d4">5.0</data>
      <data key="d5">The Policy Statement grants permissions necessary for the Generate Haiku Function to invoke the AI model</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="POLICY STATEMENT" target="LIVENESS POLICY">
      <data key="d4">6.0</data>
      <data key="d5">Liveness Policy is defined using Policy Statements that specify allowed actions</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="API REST POLICY" target="AUTHENTICATED USER IAM ROLE">
      <data key="d4">7.0</data>
      <data key="d5">The API Rest Policy is attached to the Authenticated User IAM Role to grant access to API resources</data>
      <data key="d6">f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="API REST POLICY" target="UNAUTHENTICATED USER IAM ROLE">
      <data key="d4">1.0</data>
      <data key="d5">The API Rest Policy is also attached to the Unauthenticated User IAM Role to manage access for unauthenticated users</data>
      <data key="d6">f5bfba3eb957f9e621d0b55561a5f466</data>
    </edge>
    <edge source="CAMPAIGN" target="SEGMENT">
      <data key="d4">6.0</data>
      <data key="d5">Segments are used within campaigns to target specific groups of users for messaging</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="CAMPAIGN" target="IN-APP MESSAGING">
      <data key="d4">5.0</data>
      <data key="d5">In-app messaging is a channel used in campaigns to communicate with users</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="ANALYTICS TRIGGER">
      <data key="d4">1.0</data>
      <data key="d5">Analytics triggers can initiate in-app messaging based on user actions</data>
      <data key="d6">381ec0f23fc914011f1ec53f51485442</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MESSAGE RECEIVED">
      <data key="d4">8.0</data>
      <data key="d5">The message received event is part of the in-app messaging functionality in Amplify</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MESSAGE DISPLAYED">
      <data key="d4">8.0</data>
      <data key="d5">The message displayed event is part of the in-app messaging functionality in Amplify</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MESSAGE DISMISSED">
      <data key="d4">8.0</data>
      <data key="d5">The message dismissed event is part of the in-app messaging functionality in Amplify</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MESSAGE ACTION TAKEN">
      <data key="d4">8.0</data>
      <data key="d5">The message action taken event is part of the in-app messaging functionality in Amplify</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="CONFLICT HANDLER">
      <data key="d4">1.0</data>
      <data key="d5">The conflict handler is used within the in-app messaging system to resolve message conflicts</data>
      <data key="d6">65ef73f546115ac23146d87cce61b9c8</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MYCAMPAIGN">
      <data key="d4">1.0</data>
      <data key="d5">In-App Messaging is the method used by MyCampaign to deliver messages to users</data>
      <data key="d6">62ae6b676bb61efbc2ce17791b2ac999</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="DISPATCH EVENT">
      <data key="d4">6.0</data>
      <data key="d5">Dispatch_event is a method used to trigger in-app messaging events</data>
      <data key="d6">62ae6b676bb61efbc2ce17791b2ac999</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="SYNC MESSAGES">
      <data key="d4">2.0</data>
      <data key="d5">Sync messages is a process that ensures in-app messaging content is up to date on user devices
Sync Messages is a function that is part of the In-App Messaging feature to keep messages updated</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24,62ae6b676bb61efbc2ce17791b2ac999</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="PINPOINT">
      <data key="d4">8.0</data>
      <data key="d5">In-App Messaging is a feature provided by Amazon Pinpoint for sending messages to users within applications</data>
      <data key="d6">56488edd7cf127c0da3442fbce7f97db</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="AMAZON PIN">
      <data key="d4">1.0</data>
      <data key="d5">In-App Messaging utilizes Amazon Pin for delivering messages to users</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="INAPPMESSAGEDISPLAY">
      <data key="d4">8.0</data>
      <data key="d5">In-App Messaging utilizes InAppMessageDisplay to show messages to users</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="INAPPMSGPROVIDER">
      <data key="d4">6.0</data>
      <data key="d5">InAppMessagingProvider is used to manage the context for In-App Messaging</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="MESSAGE COMPONENTS">
      <data key="d4">7.0</data>
      <data key="d5">Message Components are used to render in-app messages within the In-App Messaging framework</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="IN-APP MESSAGING" target="TEXT">
      <data key="d4">1.0</data>
      <data key="d5">In-App Messaging uses the Text component to display messages to users</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="MESSAGE RECEIVED" target="MESSAGE INTERACTION">
      <data key="d4">6.0</data>
      <data key="d5">Message interaction events include the occurrence of a message being received by the user</data>
      <data key="d6">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </edge>
    <edge source="MESSAGE DISPLAYED" target="MESSAGE INTERACTION">
      <data key="d4">6.0</data>
      <data key="d5">Message interaction events include the occurrence of a message being displayed to the user</data>
      <data key="d6">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </edge>
    <edge source="MESSAGE DISMISSED" target="MESSAGE INTERACTION">
      <data key="d4">6.0</data>
      <data key="d5">Message interaction events include the occurrence of a message being dismissed by the user</data>
      <data key="d6">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </edge>
    <edge source="MESSAGE ACTION TAKEN" target="MESSAGE INTERACTION">
      <data key="d4">1.0</data>
      <data key="d5">Message interaction events include the occurrence of a user taking action on a message</data>
      <data key="d6">58b4ec0bb9e980cc17fe0b3178671c95</data>
    </edge>
    <edge source="MYCAMPAIGN" target="MYSEGMENT">
      <data key="d4">7.0</data>
      <data key="d5">MyCampaign is designed to send messages to users within MySegment</data>
      <data key="d6">62ae6b676bb61efbc2ce17791b2ac999</data>
    </edge>
    <edge source="TRACKER" target="DEVICE POSITION">
      <data key="d4">1.0</data>
      <data key="d5">A Tracker is used to update and retrieve the Device Position in the Amazon Location Service</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="TRACKER" target="BATCH UPDATE DEVICE POSITION COMMAND">
      <data key="d4">8.0</data>
      <data key="d5">The Batch Update Device Position Command is executed in the context of a Tracker to update device positions</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="TRACKER" target="GET DEVICE POSITION COMMAND">
      <data key="d4">1.0</data>
      <data key="d5">The Get Device Position Command is executed in relation to a Tracker to retrieve the position of a device</data>
      <data key="d6">df84fd0c2737b715a0714932e9cfa24e</data>
    </edge>
    <edge source="AWS SDK" target="BEDROCKRUNTIMECLIENT">
      <data key="d4">1.0</data>
      <data key="d5">The BedrockRuntimeClient is part of the AWS SDK, enabling interaction with the Bedrock service</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="GOOGLE MAPS" target="AMPLIFY GEO">
      <data key="d4">7.0</data>
      <data key="d5">The tutorial explains how to migrate from Google Maps to Amplify Geo, indicating a transition from one mapping service to another</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="GOOGLE MAPS" target="GOOGLE CLOUD CONSOLE">
      <data key="d4">5.0</data>
      <data key="d5">Google Cloud Console is used to set up APIs for Google Maps, indicating a functional relationship</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8</data>
    </edge>
    <edge source="AMPLIFY GEO" target="MAPLIBRE">
      <data key="d4">12.0</data>
      <data key="d5">Amplify Geo is designed to work with MapLibre, indicating a collaborative relationship between the two services
MapLibre can be used in conjunction with Amplify Geo to create interactive maps</data>
      <data key="d6">08a1975a88b44b2b7444141367047ba8,60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="AMPLIFY GEO" target="GEOCODER COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">The geocoder component is utilized within Amplify Geo to enable location searching capabilities</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="AMPLIFY GEO" target="GET AVAILABLE MAPS">
      <data key="d4">6.0</data>
      <data key="d5">Get Available Maps is a function provided by Amplify Geo to manage map resources</data>
      <data key="d6">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </edge>
    <edge source="AMPLIFY GEO" target="GET DEFAULT MAP">
      <data key="d4">6.0</data>
      <data key="d5">Get Default Map is a function provided by Amplify Geo to retrieve the default map settings</data>
      <data key="d6">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </edge>
    <edge source="AMPLIFY GEO" target="LOCATION SEARCH">
      <data key="d4">2.0</data>
      <data key="d5">Amplify Geo provides location search capabilities as part of its service offerings
Amplify Geo enables location search functionalities to find places within applications</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a,a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="AMPLIFY GEO" target="LOCATION SEARCH UI COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The location search UI component is part of the features provided by Amplify Geo for user interaction</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="AMPLIFY GEO" target="GEOCODING">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Geo provides geocoding capabilities to convert addresses into geographic coordinates</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a</data>
    </edge>
    <edge source="AMPLIFY GEO" target="GEOFENCE">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Geo allows the creation and management of geofences for location-based applications</data>
      <data key="d6">53995557ff9014f83cedfd38268f5f7a</data>
    </edge>
    <edge source="MAPLIBRE" target="GOLDEN GATE BRIDGE">
      <data key="d4">5.0</data>
      <data key="d5">The Golden Gate Bridge can be displayed on maps created using MapLibre</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="MAPLIBRE" target="GEOCODER">
      <data key="d4">6.0</data>
      <data key="d5">The geocoder component can be integrated into MapLibre to enhance map functionality</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="MAPLIBRE" target="MAPLIBREGL">
      <data key="d4">1.0</data>
      <data key="d5">MapLibre GL is a library that enables the creation of interactive maps using MapLibre</data>
      <data key="d6">60d9151920f9b881f34c958c0c5d770b</data>
    </edge>
    <edge source="GOLDEN GATE BRIDGE" target="MAPLIBRE GL">
      <data key="d4">6.0</data>
      <data key="d5">The Golden Gate Bridge can be displayed on maps rendered using MapLibre GL</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="GEOCODER" target="LOCATION SEARCH">
      <data key="d4">8.0</data>
      <data key="d5">Geocoder is a key component of location search functionality, enabling address translation</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="MARKER" target="POPUP">
      <data key="d4">16.0</data>
      <data key="d5">Popups are associated with markers to provide more information when a marker is clicked
Popup provides additional information about a location when a marker is clicked
Popups are associated with markers to provide additional information when a marker is clicked</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816,480e2412619ad09a750dc16a3f8ceab3,b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="MARKER" target="MAPVIEW">
      <data key="d4">15.0</data>
      <data key="d5">Marker is used within the MapView component to indicate specific locations on the map
Markers are used within the MapView to represent specific locations on the map</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3,b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="SEARCH COMPONENT" target="GEOCODER CONTROL">
      <data key="d4">1.0</data>
      <data key="d5">The geocoder control is a type of search component that helps users find locations on the map</data>
      <data key="d6">25014b83cc85c29d210c21fb3ab4b816</data>
    </edge>
    <edge source="GEOCODER COMPONENT" target="GEOFENCE COLLECTION">
      <data key="d4">1.0</data>
      <data key="d5">The geocoder component can be used to manage geofences by searching for locations within a geofence collection</data>
      <data key="d6">de818dec85e98671fc18154ccd8eaf7d</data>
    </edge>
    <edge source="GEOFENCE" target="GEOSPATIAL DATA">
      <data key="d4">9.0</data>
      <data key="d5">Geospatial data is used to define the boundaries and characteristics of a geofence.</data>
      <data key="d6">1a7480fec8557ce9c8b1f2d342f6ec9b</data>
    </edge>
    <edge source="CREATETIME" target="GEOFENCEID">
      <data key="d4">5.0</data>
      <data key="d5">The geofenceId is created at the same time as the CreateTime when a geofence is saved</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="UPDATETIME" target="GEOFENCEID">
      <data key="d4">5.0</data>
      <data key="d5">The geofenceId is updated at the same time as the UpdateTime when a geofence is modified</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="CODE" target="GEOFENCEID">
      <data key="d4">4.0</data>
      <data key="d5">The error code is linked to the geofenceId when an error occurs during operations</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="GEOSAVEGEOFENCES" target="GEOFENCEID">
      <data key="d4">6.0</data>
      <data key="d5">Geo.saveGeofences function is used to save a geofence identified by the geofenceId</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="GEOLISTGEOFENCES" target="GEOFENCEID">
      <data key="d4">6.0</data>
      <data key="d5">Geo.listGeofences retrieves geofences identified by their geofenceId</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="GEODELETEGEOFENCES" target="GEOFENCEID">
      <data key="d4">6.0</data>
      <data key="d5">Geo.deleteGeofences function can delete geofences identified by their geofenceId</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="GETGEOFENCE" target="GEOFENCEID">
      <data key="d4">1.0</data>
      <data key="d5">Geo.getGeofence retrieves a specific geofence using its geofenceId</data>
      <data key="d6">5dced807ee929bcba98d82ba0000fe33</data>
    </edge>
    <edge source="MAPLIBRE GL" target="MAPLIBRE-GL-JS-AMPLIFY">
      <data key="d4">8.0</data>
      <data key="d5">maplibre-gl-js-amplify is designed to work with MapLibre GL to enhance its capabilities in web applications</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="MAPLIBRE GL" target="HTML ELEMENT">
      <data key="d4">1.0</data>
      <data key="d5">HTML elements are used to create the structure for displaying maps rendered by MapLibre GL</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="COORDINATE DATA" target="MARKERS">
      <data key="d4">9.0</data>
      <data key="d5">Coordinate data is used to position markers accurately on a map</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="MARKERS" target="SOURCE NAME">
      <data key="d4">5.0</data>
      <data key="d5">Source names are used to manage and identify layers where markers are rendered on the map</data>
      <data key="d6">6450bdd7941ff60e85c4d4acc9a73b25</data>
    </edge>
    <edge source="DOM" target="INPUT ELEMENT">
      <data key="d4">1.0</data>
      <data key="d5">The input element interacts with the DOM, allowing for user input to be processed and manipulated</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="GEOGRAPHIC COORDINATES" target="MAP API">
      <data key="d4">1.0</data>
      <data key="d5">Geographic coordinates are used within the Map API to define locations on the map</data>
      <data key="d6">cf54383d0ee2ab32d2ea7410ca6c6418</data>
    </edge>
    <edge source="LOCATION SEARCH" target="SEARCH INDEX">
      <data key="d4">8.0</data>
      <data key="d5">Search indexes are crucial for optimizing the performance of location searches, allowing for faster query responses</data>
      <data key="d6">a651cbb3e4a31fb9c592893b86f2d855</data>
    </edge>
    <edge source="AMAZON GO" target="SEATTLE">
      <data key="d4">16.0</data>
      <data key="d5">Amazon Go stores are located in Seattle, contributing to the city's retail landscape
Amazon Go operates stores in Seattle, contributing to the local economy and retail landscape</data>
      <data key="d6">7f72914ddb8c7f39dd16b79005d4c30a,f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="AMAZON GO" target="USA">
      <data key="d4">1.0</data>
      <data key="d5">Amazon Go operates within the USA, providing services to customers across the country</data>
      <data key="d6">7f72914ddb8c7f39dd16b79005d4c30a</data>
    </edge>
    <edge source="SEATTLE" target="AMAZON 4-STAR">
      <data key="d4">8.0</data>
      <data key="d5">Amazon 4-Star has retail locations in Seattle, showcasing popular and highly rated products</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="SEATTLE" target="WASHINGTON">
      <data key="d4">9.0</data>
      <data key="d5">Seattle is a major city located within the state of Washington</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="SEATTLE" target="USA">
      <data key="d4">18.0</data>
      <data key="d5">Seattle is a prominent city in the United States
Seattle is a city located in the USA</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba,f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="LONGITUDE" target="LATITUDE">
      <data key="d4">1.0</data>
      <data key="d5">Latitude and Longitude are both geographic coordinates used to specify locations on a map</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="GEOSEARCH" target="PLACEID">
      <data key="d4">1.0</data>
      <data key="d5">PlaceId is utilized in GeoSearch to identify specific locations during searches</data>
      <data key="d6">f54cf521a7080b38d9c0fe773d50ade8</data>
    </edge>
    <edge source="GEO STACK" target="MYMAP">
      <data key="d4">7.0</data>
      <data key="d5">Geo Stack is the backend component that manages the MyMap resource</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="MYMAP" target="VECTORESRINAVIGATION">
      <data key="d4">7.0</data>
      <data key="d5">MyMap is configured to use the VectorEsriNavigation style</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="MYMAP" target="REQUESTBASEDUSAGE">
      <data key="d4">1.0</data>
      <data key="d5">MyMap is set to the RequestBasedUsage pricing plan</data>
      <data key="d6">cdb9cece1cdfc7e4c7f3d3e429e564b5</data>
    </edge>
    <edge source="AMAZON PERSONALIZE" target="AWS IDENTITY AND ACCESS MANAGEMENT">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Personalize requires IAM permissions to allow users to track events and manage datasets</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="AMAZON PERSONALIZE" target="EVENT TRACKER">
      <data key="d4">9.0</data>
      <data key="d5">The event tracker is a component of Amazon Personalize that records user interactions for personalized recommendations</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="AMAZON PERSONALIZE" target="FLUSH EVENTS">
      <data key="d4">8.0</data>
      <data key="d5">Flush events is an operation used in Amazon Personalize to clear and send recorded events to the server</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="EVENT TRACKER" target="TRACKING ID">
      <data key="d4">9.0</data>
      <data key="d5">The tracking ID is essential for the event tracker to link user actions to their profiles in Amazon Personalize</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="EVENT TRACKER" target="MEDIAAUTOTRACK">
      <data key="d4">6.0</data>
      <data key="d5">MediaAutoTrack is an event type that the event tracker can utilize to monitor media interactions</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="EVENT TRACKER" target="USER ID">
      <data key="d4">8.0</data>
      <data key="d5">The user ID is utilized by the event tracker to connect user actions to their profiles in Amazon Personalize</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="EVENT TRACKER" target="PROPERTIES">
      <data key="d4">7.0</data>
      <data key="d5">Properties provide additional context for events recorded by the event tracker in Amazon Personalize</data>
      <data key="d6">01286fdfa2468eb81e86d6a4c1fe2926</data>
    </edge>
    <edge source="KINESIS FIREHOSE" target="FIREHOSE">
      <data key="d4">8.0</data>
      <data key="d5">Kinesis Firehose is the service that handles the Firehose event for streaming data</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="KINESIS FIREHOSE" target="KINESIS STREAM">
      <data key="d4">7.0</data>
      <data key="d5">Kinesis Firehose can deliver data to Kinesis Streams for further processing</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="KINESIS STREAM" target="KINESIS FUNCTION">
      <data key="d4">7.0</data>
      <data key="d5">Kinesis Function is designed to process records from a Kinesis Stream</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="FIREHOSE ROLE" target="FIREHOSE POLICY">
      <data key="d4">7.0</data>
      <data key="d5">The Firehose Policy is attached to the Firehose Role to allow it to perform actions on the Kinesis Firehose delivery stream</data>
      <data key="d6">344b01eb184403f029e31d4621f1ea1f</data>
    </edge>
    <edge source="KINESIS" target="STREAM">
      <data key="d4">1.0</data>
      <data key="d5">Kinesis allows the creation and management of streams for real-time data processing</data>
      <data key="d6">9435f5063dc16afb92c8c68706b77d2b</data>
    </edge>
    <edge source="SESSION TRACKING" target="PAGE VIEW TRACKING">
      <data key="d4">1.0</data>
      <data key="d5">Session tracking and page view tracking are both methods used to monitor user interactions in web applications</data>
      <data key="d6">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </edge>
    <edge source="PAGE VIEW TRACKING" target="PAGE EVENT TRACKING">
      <data key="d4">1.0</data>
      <data key="d5">Page event tracking is a specific type of tracking that complements page view tracking by monitoring interactions with page elements</data>
      <data key="d6">6d2eda5548d1401141ba1fcc7bcbbdba</data>
    </edge>
    <edge source="AMPLIFY ANALYTICS" target="RECORD EVENTS">
      <data key="d4">1.0</data>
      <data key="d5">Record Events is a functionality within Amplify Analytics to log user interactions</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="AMPLIFY ANALYTICS" target="ALBUM VISIT">
      <data key="d4">7.0</data>
      <data key="d5">The albumVisit event is recorded using Amplify Analytics to track user interactions with albums</data>
      <data key="d6">d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="AMPLIFY ANALYTICS" target="FLUSHEVENTS API">
      <data key="d4">6.0</data>
      <data key="d5">The flushEvents API is used within Amplify Analytics to manage event data</data>
      <data key="d6">d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="AMPLIFY ANALYTICS" target="ENGAGEMENT METRICS">
      <data key="d4">1.0</data>
      <data key="d5">Engagement metrics are recorded and analyzed through Amplify Analytics</data>
      <data key="d6">d5671c2494c6418a266da35fff705101</data>
    </edge>
    <edge source="USERPROFILE" target="CUSTOM PROPERTIES">
      <data key="d4">1.0</data>
      <data key="d5">Custom Properties are part of the UserProfile that allows for additional user data to be sent</data>
      <data key="d6">bcb8bed3236fce81cd5b966a435370ba</data>
    </edge>
    <edge source="TODO" target="CLIENTSCHEMA">
      <data key="d4">1.0</data>
      <data key="d5">The Todo model is part of the ClientSchema defined in Amplify</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="TODO" target="AMPLIFY API">
      <data key="d4">1.0</data>
      <data key="d5">The Todo event is managed through the Amplify API, which allows for the creation, updating, and deletion of Todo items.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="TODO" target="OPENSEARCH">
      <data key="d4">1.0</data>
      <data key="d5">The Todo event can be indexed and searched using OpenSearch capabilities</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="TODO" target="SCHEMA">
      <data key="d4">15.0</data>
      <data key="d5">The schema defines the structure of the Todo model, including its attributes
A schema defines the structure of a Todo model in a database
The schema defines the structure and rules for Todo items in the application
The Todo model is defined within a schema that outlines its structure and relationships</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86,8c8075430684b38bdd1c6ce9fc9f7205,a525cbfc03ba1b986f30ce2280067dda,c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="TODO" target="DYNAMO DB">
      <data key="d4">6.0</data>
      <data key="d5">DynamoDB can be used as a backend database to store Todo items in applications</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86</data>
    </edge>
    <edge source="TODO" target="CRUD OPERATIONS">
      <data key="d4">17.0</data>
      <data key="d5">CRUD operations are performed on Todo items in applications to manage tasks
CRUD operations can be performed on Todo items, allowing users to manage their tasks</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e,8c8075430684b38bdd1c6ce9fc9f7205</data>
    </edge>
    <edge source="TODO" target="USERPOOL">
      <data key="d4">7.0</data>
      <data key="d5">User Pool manages the authorization for creating and managing Todo items in AWS Amplify</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="TODO" target="IDENTITYPOOL">
      <data key="d4">6.0</data>
      <data key="d5">Identity Pool allows users to access Todo items with temporary AWS credentials</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="TODO" target="AUTHENTICATED">
      <data key="d4">7.0</data>
      <data key="d5">Authenticated users can perform CRUD operations on Todo items</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="TODO" target="GLOBAL AUTHORIZATION RULE">
      <data key="d4">6.0</data>
      <data key="d5">The Todo model will use the global authorization rule since no specific model-level rule is present</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="TODO" target="LOCATION">
      <data key="d4">1.0</data>
      <data key="d5">The Todo model can include a location field that references the custom Location type</data>
      <data key="d6">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </edge>
    <edge source="TODO" target="PRIVACYSETTING">
      <data key="d4">5.0</data>
      <data key="d5">The Todo model can utilize the PrivacySetting enum to define the privacy level of a task</data>
      <data key="d6">55e07f6f599d31bd6bca8ce0ea6a1072</data>
    </edge>
    <edge source="TODO" target="MY COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">My Component manages and displays a list of Todo items, subscribing to real-time updates for them</data>
      <data key="d6">a525cbfc03ba1b986f30ce2280067dda</data>
    </edge>
    <edge source="TODO" target="REAL-TIME EVENTS">
      <data key="d4">7.0</data>
      <data key="d5">Real-time events are utilized in the Todo model to provide immediate updates on task status changes</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="TODO" target="DATA CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">The Data client is responsible for creating, updating, and deleting Todo items in the AWS Amplify application</data>
      <data key="d6">92bcd3df485df362e04da4f60878ff3b</data>
    </edge>
    <edge source="TODO" target="PAGINATION">
      <data key="d4">5.0</data>
      <data key="d5">Pagination is used to manage the display of todos in a user-friendly manner</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="TODO" target="FILTERS">
      <data key="d4">6.0</data>
      <data key="d5">Filters can be applied to todos to narrow down the displayed tasks based on specific criteria</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="TODO" target="DELETE FUNCTIONALITY">
      <data key="d4">8.0</data>
      <data key="d5">The delete functionality is directly related to managing individual Todo items</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="TODO" target="CREATE TODO">
      <data key="d4">8.0</data>
      <data key="d5">The createTodo function is responsible for adding new Todo items to the list</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="RESOURCE" target="DEFINEFUNCTION">
      <data key="d4">1.0</data>
      <data key="d5">DefineFunction is used to configure resources for serverless functions in AWS Amplify</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="AUTHORIZATION RULES" target="RESOURCE FILE">
      <data key="d4">7.0</data>
      <data key="d5">Authorization rules are defined within resource files to manage user permissions</data>
      <data key="d6">e4054144736985db7777f6f19790e2af</data>
    </edge>
    <edge source="AUTHORIZATION RULES" target="DYNAMIC GROUP AUTHORIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Authorization rules can be influenced by dynamic group authorization settings in AWS Amplify</data>
      <data key="d6">61cf173fbdd2221f3bcf1bc2a4df1840</data>
    </edge>
    <edge source="VERIFICATION EMAIL" target="EMAIL CUSTOMIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Verification emails can be customized to reflect the application's branding and messaging</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="LOGOUT" target="AUTHUSER">
      <data key="d4">8.0</data>
      <data key="d5">The Logout event is related to the AuthUser as it signifies the end of the user's session</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="LOGOUT" target="LOGOUTCOMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">The Logout component is directly related to the Logout event as it handles the user sign-out process</data>
      <data key="d6">f5ab02ebcf782ede1b25fdb016628a44</data>
    </edge>
    <edge source="AUTHUSER" target="FETCHUSERATTRIBUTES">
      <data key="d4">8.0</data>
      <data key="d5">fetchUserAttributes retrieves user attributes, which are part of the AuthUser interface in AWS Amplify.</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68</data>
    </edge>
    <edge source="CREDENTIALS" target="SESSION TOKEN">
      <data key="d4">8.0</data>
      <data key="d5">The session token is part of the credentials returned after successful authentication through the custom credentials provider</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="CREDENTIALS" target="EXPIRATION">
      <data key="d4">7.0</data>
      <data key="d5">Credentials have an expiration time after which they are no longer valid</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="CREDENTIALS" target="IDENTITY ID">
      <data key="d4">6.0</data>
      <data key="d5">The identity ID is associated with the credentials obtained from AWS Cognito</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="RUNWITHAMPLIFYSERVERCONTEXT" target="AMPLIFY NEXT.JS ADAPTER">
      <data key="d4">8.0</data>
      <data key="d5">runWithAmplifyServerContext is a function provided by the Amplify Next.js adapter for server-side usage</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="RUNWITHAMPLIFYSERVERCONTEXT" target="AMPLIFY SERVER CONTEXT">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Server Context is utilized by the runWithAmplifyServerContext function to manage server-side requests</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="FETCHAUTHSESSION" target="SIGN-IN ROUTE">
      <data key="d4">1.0</data>
      <data key="d5">The fetchAuthSession API checks user authentication before allowing access to the sign-in route</data>
      <data key="d6">2089dc10de2cb83a2c70a5f87b8d2dc2</data>
    </edge>
    <edge source="GET CURRENT USER" target="JON DOE">
      <data key="d4">7.0</data>
      <data key="d5">Jon Doe can retrieve his user information through the get current user event in AWS Amplify.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="GET URL" target="SRC/APP.TSX">
      <data key="d4">7.0</data>
      <data key="d5">Get URL is called within src/App.tsx to retrieve a signed URL for a file</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="GET URL" target="PHOTO ALBUM">
      <data key="d4">8.0</data>
      <data key="d5">Get URL retrieves the signed URLs for images associated with the Photo Album</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="GET URL" target="GET IMAGE FOR CURRENT SONG">
      <data key="d4">6.0</data>
      <data key="d5">Get Image For Current Song function retrieves a signed URL for the image associated with the current song</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="AMPLIFY STORAGE API" target="S3 UPLOAD CONFIRMATION">
      <data key="d4">1.0</data>
      <data key="d5">The S3 Upload confirmation is an event that is managed through the Amplify Storage API when a file is uploaded to S3.</data>
      <data key="d6">5c179d6063f8fca2e1ae95779d7f3ffc</data>
    </edge>
    <edge source="TODO TABLE" target="DATA MANAGER">
      <data key="d4">8.0</data>
      <data key="d5">The Data Manager allows users to create, update, and delete records in the Todo table within the Amplify Console.</data>
      <data key="d6">e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="TODO TABLE" target="OPENSEARCH INTEGRATION PIPELINE">
      <data key="d4">1.0</data>
      <data key="d5">The Todo table's data is ingested into OpenSearch through the OpenSearch Integration Pipeline for search functionality.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </edge>
    <edge source="ON UPLOAD HANDLER" target="ON UPLOAD TRIGGER">
      <data key="d4">1.0</data>
      <data key="d5">The onUpload trigger invokes the onUpload handler function when a file is uploaded to the S3 bucket</data>
      <data key="d6">1bafd8792486c2e570d8aa0cb40189b9</data>
    </edge>
    <edge source="ON UPLOAD HANDLER" target="STORAGE EVENTS">
      <data key="d4">9.0</data>
      <data key="d5">The on-upload handler is triggered by storage events when a file is uploaded</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="CUSTOM MESSAGE" target="CUSTOM MESSAGE TRIGGER">
      <data key="d4">9.0</data>
      <data key="d5">The custom message trigger is responsible for sending custom messages during the authentication process</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="GOOGLE RECAPTCHA" target="DEFINE AUTH CHALLENGE">
      <data key="d4">6.0</data>
      <data key="d5">Google reCAPTCHA is used in the define auth challenge process to verify user identity</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="GOOGLE RECAPTCHA" target="CREATE AUTH CHALLENGE">
      <data key="d4">7.0</data>
      <data key="d5">Create auth challenge utilizes Google reCAPTCHA to ensure the user is human</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="GOOGLE RECAPTCHA" target="VERIFY AUTH CHALLENGE RESPONSE TRIGGER">
      <data key="d4">1.0</data>
      <data key="d5">Google reCAPTCHA is used in the Verify Auth Challenge Response Trigger to validate user responses to challenges.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="CREATE AUTH CHALLENGE" target="DEFINE AUTH CHALLENGE">
      <data key="d4">1.0</data>
      <data key="d5">Create auth challenge is part of the authentication flow defined by the define auth challenge trigger</data>
      <data key="d6">d55e7e869df5fbcfa36109914fcb2499</data>
    </edge>
    <edge source="DEFINE AUTH CHALLENGE TRIGGER" target="CREATE AUTH CHALLENGE TRIGGER">
      <data key="d4">5.0</data>
      <data key="d5">The Define Auth Challenge Trigger is related to the Create Auth Challenge Trigger as it defines the challenge created by the latter.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="DEFINE AUTH CHALLENGE TRIGGER" target="VERIFY AUTH CHALLENGE RESPONSE TRIGGER">
      <data key="d4">5.0</data>
      <data key="d5">The Verify Auth Challenge Response Trigger is related to the Define Auth Challenge Trigger as it verifies the response to the challenge defined by the latter.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="DEFINE AUTH CHALLENGE TRIGGER" target="CAPTCHA CHALLENGE">
      <data key="d4">1.0</data>
      <data key="d5">The CAPTCHA Challenge is defined within the Define Auth Challenge Trigger as a type of authentication challenge.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="VERIFY AUTH CHALLENGE RESPONSE TRIGGER" target="GOOGLE RECAPTCHA SECRET KEY">
      <data key="d4">8.0</data>
      <data key="d5">The Google reCAPTCHA secret key is used in the Verify Auth Challenge Response Trigger to validate reCAPTCHA responses.</data>
      <data key="d6">9eb555df7127fa0fdbcf9a8ef6d80287</data>
    </edge>
    <edge source="KINESIS FUNCTION" target="KINESIS STREAM HANDLER">
      <data key="d4">1.0</data>
      <data key="d5">Kinesis Stream Handler is the function that processes the Kinesis Function</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="KINESIS FUNCTION" target="AWS LAMBDA POWERTOOLS LOGGER">
      <data key="d4">6.0</data>
      <data key="d5">Kinesis Function utilizes AWS Lambda Powertools Logger for structured logging</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="KINESIS FUNCTION" target="KINESIS STREAM RECORD PAYLOAD">
      <data key="d4">7.0</data>
      <data key="d5">Kinesis Function processes Kinesis Stream Record Payloads to handle incoming data</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="KINESIS STREAM RECORD PAYLOAD" target="BUFFER">
      <data key="d4">8.0</data>
      <data key="d5">Buffer is used to decode the data from the Kinesis Stream Record Payload</data>
      <data key="d6">60aaa13e30275fbe0d56cac47de824c2</data>
    </edge>
    <edge source="PRE SIGN-UP" target="BIRTHDATE">
      <data key="d4">1.0</data>
      <data key="d5">The birthdate attribute is validated during the pre-sign-up event to ensure users meet age requirements</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="PRE SIGN-UP" target="PRE SIGN-UP TRIGGER">
      <data key="d4">7.0</data>
      <data key="d5">The pre-sign-up trigger is an implementation of the pre-sign-up event that allows for custom validation logic</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="PRE TOKEN GENERATION" target="PRE TOKEN GENERATION TRIGGER">
      <data key="d4">7.0</data>
      <data key="d5">The pre-token generation trigger is an implementation of the pre-token generation event that allows for modifications to the ID token</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="USER PROFILE RECORD" target="POST CONFIRMATION TRIGGER">
      <data key="d4">6.0</data>
      <data key="d5">The post confirmation trigger is used to create a user profile record after a user confirms their account</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="BIRTHDATE" target="USER ATTRIBUTES">
      <data key="d4">1.0</data>
      <data key="d5">User attributes include the birthdate, which is used to determine age during the sign-up process</data>
      <data key="d6">758d7b22f173e12c1857a365834df542</data>
    </edge>
    <edge source="BIRTHDATE" target="SIGN UP">
      <data key="d4">9.0</data>
      <data key="d5">Birthdate is a required field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="POST CONFIRMATION TRIGGER" target="POST CONFIRMATION">
      <data key="d4">9.0</data>
      <data key="d5">The post confirmation event is a specific type of trigger that executes after user confirmation</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="USER PROFILE" target="AUTHORIZATION RULE">
      <data key="d4">6.0</data>
      <data key="d5">Authorization rules define how user profiles can be accessed and modified</data>
      <data key="d6">0cd205bf5fe0ebe4aec3529e4d44191c</data>
    </edge>
    <edge source="USER PROFILE" target="TRIGGERS">
      <data key="d4">7.0</data>
      <data key="d5">The UserProfile model can be created as a result of a trigger during the account confirmation process</data>
      <data key="d6">dcf0763f48070d41b43f528c6ac2928a</data>
    </edge>
    <edge source="AUTHORIZATION RULE" target="SCHEMA">
      <data key="d4">15.0</data>
      <data key="d5">Authorization rules are applied to the schema to control access to models and fields
Authorization rules are applied to schemas to control access to data models defined within them</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47,287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="AUTHORIZATION RULE" target="DATA CLIENT">
      <data key="d4">1.0</data>
      <data key="d5">Authorization Rules are applied to the Data Client to ensure secure access to queries and mutations</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="POST-CONFIRMATION" target="EVERYONE">
      <data key="d4">8.0</data>
      <data key="d5">The post-confirmation event automatically adds users to the Everyone group after they confirm their account</data>
      <data key="d6">328c2850836c2ef976fb8009ef3c5dd9</data>
    </edge>
    <edge source="PRE-SIGN-UP" target="AMAZON.COM">
      <data key="d4">7.0</data>
      <data key="d5">The pre-sign-up event filters user signups based on the email domain, allowing only amazon.com addresses</data>
      <data key="d6">328c2850836c2ef976fb8009ef3c5dd9</data>
    </edge>
    <edge source="EVERYONE" target="POST-CONFIRMATION TRIGGER">
      <data key="d4">8.0</data>
      <data key="d5">The post-confirmation trigger adds users to the Everyone group upon successful account confirmation</data>
      <data key="d6">328c2850836c2ef976fb8009ef3c5dd9</data>
    </edge>
    <edge source="EVERYONE" target="ADMIN ADD USER TO GROUP COMMAND">
      <data key="d4">1.0</data>
      <data key="d5">The AdminAddUserToGroupCommand is used to add users to the Everyone group in AWS Cognito</data>
      <data key="d6">328c2850836c2ef976fb8009ef3c5dd9</data>
    </edge>
    <edge source="AMAZON.COM" target="PRE-SIGN-UP TRIGGER">
      <data key="d4">7.0</data>
      <data key="d5">The pre-sign-up trigger checks if the user's email domain matches amazon.com before allowing sign-up</data>
      <data key="d6">328c2850836c2ef976fb8009ef3c5dd9</data>
    </edge>
    <edge source="SNS" target="WEEKLY DIGEST">
      <data key="d4">6.0</data>
      <data key="d5">The Weekly Digest event can publish notifications to an SNS topic to inform subscribers about the digest</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="GENERATE MONTHLY REPORTS" target="ENV">
      <data key="d4">7.0</data>
      <data key="d5">The Generate Monthly Reports function accesses environment variables defined in the env object to configure its behavior</data>
      <data key="d6">08e6487bb4d09a90bdb8439d2afb618d</data>
    </edge>
    <edge source="ENV" target="CREDENTIALS PROVIDER">
      <data key="d4">7.0</data>
      <data key="d5">Environment variables are often used to store configuration details for credentials providers</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555</data>
    </edge>
    <edge source="SANDWICH" target="CHRIS">
      <data key="d4">1.0</data>
      <data key="d5">Chris is likely involved in the process of creating and managing the sandbox environment for AWS Amplify.</data>
      <data key="d6">fc6e2a28447409d2b0f12296647c9470</data>
    </edge>
    <edge source="AMPLIFY_OUTPUTS.JSON" target="PAGES/INDEX.TSX">
      <data key="d4">6.0</data>
      <data key="d5">The pages/index.tsx file utilizes the amplify_outputs.json file for backend configuration</data>
      <data key="d6">3cdd6c81baa65bbde6eabfc399eb25b6</data>
    </edge>
    <edge source="AMAZON EVENTBRIDGE" target="ORDERSTATUSCHANGE">
      <data key="d4">1.0</data>
      <data key="d5">OrderStatusChange events can be sent to Amazon EventBridge to trigger workflows</data>
      <data key="d6">290d8b37bd253372b8a78b79be1eca98</data>
    </edge>
    <edge source="AMAZON EVENTBRIDGE" target="AMPLIFY API">
      <data key="d4">7.0</data>
      <data key="d5">Amazon EventBridge can be used to send events that trigger actions in the Amplify API, facilitating communication between services.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="DRINK SOME WATER" target="DEFINEFUNCTION">
      <data key="d4">9.0</data>
      <data key="d5">Drink Some Water is defined using the DefineFunction method in AWS Amplify</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="FUNCTIONS" target="SCHEDULING FUNCTIONS">
      <data key="d4">7.0</data>
      <data key="d5">Scheduling functions are a specific type of function that can be defined in AWS Amplify</data>
      <data key="d6">41deb762c8966a1fa15f960e2fa31753</data>
    </edge>
    <edge source="DEFINEFUNCTION" target="SCHEDULE">
      <data key="d4">7.0</data>
      <data key="d5">DefineFunction allows developers to set schedules for function execution in AWS Amplify</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="DEFINEFUNCTION" target="REMIND ME TO TAKE THE TRASH OUT">
      <data key="d4">9.0</data>
      <data key="d5">Remind Me To Take The Trash Out is defined using the DefineFunction method in AWS Amplify</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="DEFINEFUNCTION" target="FUNCTION CONFIGURATION">
      <data key="d4">1.0</data>
      <data key="d5">Function Configuration is part of the setup process when using DefineFunction in AWS Amplify</data>
      <data key="d6">b817095066fd625d69ee8fbf3cb0804d</data>
    </edge>
    <edge source="SAY-HELLO" target="SECRET ACCESS">
      <data key="d4">5.0</data>
      <data key="d5">The 'say-hello' function can use secret access to securely handle sensitive information like API keys.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="SAY-HELLO" target="API_ENDPOINT">
      <data key="d4">7.0</data>
      <data key="d5">The 'say-hello' function can utilize the API_ENDPOINT variable to determine the correct API endpoint to use during execution.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="SAY-HELLO" target="BRANCH-SPECIFIC ENVIRONMENT VARIABLE">
      <data key="d4">5.0</data>
      <data key="d5">The 'say-hello' function can be configured with branch-specific environment variables to adapt its behavior based on the deployment branch.</data>
      <data key="d6">8aece6e31757222174fd611077ca4f6d</data>
    </edge>
    <edge source="SCHEMA" target="AMPLIFY DATA API">
      <data key="d4">1.0</data>
      <data key="d5">Schema is used by the Amplify Data API to define the structure of data models</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="SCHEMA" target="MYSQL">
      <data key="d4">7.0</data>
      <data key="d5">The schema represents the structure of the MySQL database</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="SCHEMA" target="POSTGRESQL">
      <data key="d4">1.0</data>
      <data key="d5">The schema represents the structure of the PostgreSQL database</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="SCHEMA" target="SCHEMA.SQL.TS">
      <data key="d4">8.0</data>
      <data key="d5">The schema.sql.ts file is generated based on the database schema, reflecting its structure and types</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="SCHEMA" target="PHOTOALBUM">
      <data key="d4">1.0</data>
      <data key="d5">The PhotoAlbum model is defined within the schema of AWS Amplify</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="SCHEMA" target="SONG">
      <data key="d4">1.0</data>
      <data key="d5">The Song is defined within the Schema, which outlines the structure of the data models</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="SCHEMA" target="CLIENTSCHEMA">
      <data key="d4">12.0</data>
      <data key="d5">ClientSchema is defined based on the Schema to ensure data consistency and type safety
ClientSchema is based on the defined schema for organizing data in the application</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd,7040175c91fe86a908046a9b485b0410</data>
    </edge>
    <edge source="SCHEMA" target="CLIENT SCHEMA">
      <data key="d4">12.0</data>
      <data key="d5">The client schema is generated based on the backend schema, allowing client applications to understand the data structure
A schema defines the structure of data models, which is reflected in the client schema for type-safe interactions</data>
      <data key="d6">c3958c03e7b6908e78ca65d6563b3555,d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="SCHEMA" target="CRUD OPERATIONS">
      <data key="d4">1.0</data>
      <data key="d5">CRUD operations are performed on data defined by the schema in an application</data>
      <data key="d6">d7f9d6d81c47c8666bdbe05c89629447</data>
    </edge>
    <edge source="SCHEMA" target="DATA MODELING">
      <data key="d4">7.0</data>
      <data key="d5">Data modeling is a key aspect of defining the schema for data organization and relationships in AWS Amplify.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="SCHEMA" target="PERSON">
      <data key="d4">7.0</data>
      <data key="d5">Persons are defined within the schema, which outlines their attributes and relationships to posts.</data>
      <data key="d6">5acf474a9e428eea738206bbcbd17f29</data>
    </edge>
    <edge source="SCHEMA" target="CUSTOMER">
      <data key="d4">5.0</data>
      <data key="d5">The Customer model is defined within a schema that outlines its attributes and relationships</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="SCHEMA" target="DATA CLIENT">
      <data key="d4">9.0</data>
      <data key="d5">The Data client uses the Schema to define how data is structured and managed in AWS Amplify</data>
      <data key="d6">92bcd3df485df362e04da4f60878ff3b</data>
    </edge>
    <edge source="AMPLIFY STORAGE" target="PICTURE SUBMISSIONS">
      <data key="d4">1.0</data>
      <data key="d5">Picture submissions are managed through the Amplify Storage service</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="AMPLIFY STORAGE" target="FILE PATH ACCESS">
      <data key="d4">7.0</data>
      <data key="d5">File path access rules are defined within the Amplify Storage service to manage permissions</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="ACTIONS DROPDOWN" target="COPY FILE">
      <data key="d4">7.0</data>
      <data key="d5">The copy file action is available in the actions dropdown for file management</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="ACTIONS DROPDOWN" target="MOVE FILE">
      <data key="d4">7.0</data>
      <data key="d5">The move file action is available in the actions dropdown for file management</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="COPY FILE" target="COPY TO">
      <data key="d4">6.0</data>
      <data key="d5">The Copy File action requires a destination specified by the Copy To action</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="MOVE FILE" target="MOVE TO">
      <data key="d4">6.0</data>
      <data key="d5">The Move File action requires a destination specified by the Move To action</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="PERMISSIONS" target="BUCKET POLICY">
      <data key="d4">8.0</data>
      <data key="d5">Bucket policies define the permissions for accessing S3 buckets</data>
      <data key="d6">5f39324ac9e2fb1bb8b139c9b114f332</data>
    </edge>
    <edge source="CORS POLICY" target="CROSS-ORIGIN RESOURCE SHARING">
      <data key="d4">7.0</data>
      <data key="d5">CORS Policy is a specific implementation of Cross-Origin Resource Sharing for managing access to resources</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="STORAGE EVENTS" target="ON DELETE HANDLER">
      <data key="d4">9.0</data>
      <data key="d5">The on-delete handler is triggered by storage events when a file is deleted</data>
      <data key="d6">0ec7a9a4173bab4434075d5564d2a4c2</data>
    </edge>
    <edge source="LIST API" target="SUBPATH STRATEGY">
      <data key="d4">6.0</data>
      <data key="d5">Subpath strategy is an option that modifies the behavior of the List API in the Storage service</data>
      <data key="d6">6c6ccd5699a21bd365fb1e2dc13bd5da</data>
    </edge>
    <edge source="ALBUM" target="PHOTOS">
      <data key="d4">8.0</data>
      <data key="d5">An album contains multiple photos stored in the AWS Amplify storage service.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="PHOTOS" target="LIST">
      <data key="d4">7.0</data>
      <data key="d5">The list function retrieves photos stored in the AWS Amplify storage service.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="PHOTOS" target="GET PROPERTIES">
      <data key="d4">8.0</data>
      <data key="d5">Get Properties can be used to view the metadata of individual photos stored in AWS Amplify.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="PHOTOS" target="DOWNLOAD FILES">
      <data key="d4">8.0</data>
      <data key="d5">Download Files allows users to retrieve photos from the AWS Amplify storage service.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="PHOTOS" target="STORAGE IMAGE REACT UI COMPONENT">
      <data key="d4">9.0</data>
      <data key="d5">The Storage Image React UI Component is used to display photos stored in AWS Amplify.</data>
      <data key="d6">960cd708b2617651d0d7b1a22712d9fa</data>
    </edge>
    <edge source="IDENTITY ID" target="FILES">
      <data key="d4">5.0</data>
      <data key="d5">The identity ID is associated with the files being uploaded, linking user identities to their respective files.</data>
      <data key="d6">5c7c1b8a3cde0fc5a186b912ceba73bb</data>
    </edge>
    <edge source="DOWNLOAD DATA API" target="PROGRESS CALLBACK">
      <data key="d4">6.0</data>
      <data key="d5">The progress callback function is utilized within the Download Data API to provide updates on file transfer progress</data>
      <data key="d6">63bae3a149e50b7452962f7bdd8724ea</data>
    </edge>
    <edge source="UPLOAD DATA" target="FILE READER">
      <data key="d4">7.0</data>
      <data key="d5">FileReader is used to read the contents of the file before it is uploaded</data>
      <data key="d6">2299dbfce715caaaef2102de232e50aa</data>
    </edge>
    <edge source="UPLOAD DATA" target="SRC/APP.TSX">
      <data key="d4">7.0</data>
      <data key="d5">Upload Data is utilized in src/App.tsx to upload files to AWS storage</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="UPLOAD DATA" target="PHOTO ALBUM">
      <data key="d4">7.0</data>
      <data key="d5">Upload Data is used to add images to the Photo Album</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="UPLOAD DATA" target="CREATE SONG WITH IMAGE">
      <data key="d4">7.0</data>
      <data key="d5">Create Song With Image function uploads a file and creates a new song record</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="UPLOAD DATA" target="ADD NEW IMAGE TO SONG">
      <data key="d4">7.0</data>
      <data key="d5">Add New Image To Song function uploads a new image file for an existing song</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="PICTURE SUBMISSIONS" target="AUTHENTICATED USERS">
      <data key="d4">1.0</data>
      <data key="d5">Authenticated users can upload pictures to the picture submissions path in Amplify Storage</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="AMAZON S3 BUCKET" target="AMPLIFY TEAM DRIVE">
      <data key="d4">8.0</data>
      <data key="d5">Amplify Team Drive utilizes an Amazon S3 bucket for file storage</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="FILE PATH ACCESS" target="PROFILE PICTURES">
      <data key="d4">6.0</data>
      <data key="d5">Profile pictures have specific access rules defined for viewing and managing</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="PROFILE PICTURES" target="GUESTS">
      <data key="d4">5.0</data>
      <data key="d5">Guests have access to view profile pictures stored in the Amplify Storage system</data>
      <data key="d6">22362693d17a745c23fe5e9a2beecbd9</data>
    </edge>
    <edge source="TANSTACK QUERY" target="QUERY CLIENT">
      <data key="d4">10.0</data>
      <data key="d5">The Query Client is a core part of TanStack Query, managing the state and caching of queries</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="TANSTACK QUERY" target="REACT QUERY DEVTOOLS">
      <data key="d4">1.0</data>
      <data key="d5">React Query Devtools is used alongside TanStack Query to provide debugging capabilities</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="AMPLIFY DATA API" target="REAL ESTATE PROPERTIES">
      <data key="d4">7.0</data>
      <data key="d5">Real Estate Properties are managed and retrieved through the Amplify Data API</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="REAL ESTATE PROPERTIES" target="REAL ESTATE PROPERTY">
      <data key="d4">1.0</data>
      <data key="d5">Real Estate Property is an individual item within the list of Real Estate Properties managed by the Amplify Data API</data>
      <data key="d6">e80ffe46586bd824e28fa24a230442db</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="TANSTACK">
      <data key="d4">1.0</data>
      <data key="d5">TanStack's useQuery and useMutation hooks are utilized to fetch and update real estate property records in the application.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="REAL ESTATE PROPERTY ID">
      <data key="d4">1.0</data>
      <data key="d5">The Real Estate Property ID is used to uniquely identify and access specific real estate property records in the application.</data>
      <data key="d6">6cbd446a7960622a6472bb28c61d77e7</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="REAL ESTATE PROPERTY DETAIL VIEW">
      <data key="d4">32.0</data>
      <data key="d5">The Real Estate Property Detail View displays information about a specific real estate property.
Real Estate Property Detail View displays the details of a specific Real Estate Property
The Real Estate Property Detail View displays detailed information about a selected Real Estate Property.</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e,b79fdaa9cac2c2fbf9ccc392ed341f6e,e8d59516a524ae342a9c7507d5bac243</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="MUTATION">
      <data key="d4">9.0</data>
      <data key="d5">Mutations are performed on real estate properties to create, update, or delete them.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="QUERY CLIENT">
      <data key="d4">16.0</data>
      <data key="d5">Query Client manages the state and cache of Real Estate Property data in the application</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="UPDATE MUTATION">
      <data key="d4">14.0</data>
      <data key="d5">Update Mutation modifies the attributes of a Real Estate Property</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="DELETE MUTATION">
      <data key="d4">8.0</data>
      <data key="d5">Delete Mutation removes a Real Estate Property from the application</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </edge>
    <edge source="REAL ESTATE PROPERTY" target="NEW REAL ESTATE PROPERTY">
      <data key="d4">1.0</data>
      <data key="d5">New Real Estate Property refers to the creation of a new entry in the Real Estate Property list</data>
      <data key="d6">1d8a8421d5e948b0b12a0f554b2ac95e</data>
    </edge>
    <edge source="QUERY CLIENT" target="USE QUERY CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">Use Query Client accesses the Query Client instance for managing server state</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="QUERY CLIENT" target="MUTATION">
      <data key="d4">1.0</data>
      <data key="d5">The Query Client manages the execution of mutations for real estate properties.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="MUTATION" target="REAL ESTATE PROPERTY DETAILS">
      <data key="d4">9.0</data>
      <data key="d5">The mutation operation is performed on Real Estate Property Details to update or delete them</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="MUTATION" target="USE MUTATION">
      <data key="d4">9.0</data>
      <data key="d5">Use Mutation is a hook that facilitates performing mutations on server data</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="MUTATION" target="ON MUTATE">
      <data key="d4">6.0</data>
      <data key="d5">On Mutate is a callback that is triggered during the mutation process for optimistic updates</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="MUTATION" target="ON ERROR">
      <data key="d4">7.0</data>
      <data key="d5">On Error is a callback that handles errors that occur during a mutation</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="MUTATION" target="ON SETTLED">
      <data key="d4">1.0</data>
      <data key="d5">On Settled is a callback that executes after a mutation is completed, regardless of success or failure</data>
      <data key="d6">453096a495a2eae0cd2491664604b080</data>
    </edge>
    <edge source="MUTATION" target="PUBLISH">
      <data key="d4">6.0</data>
      <data key="d5">Mutation allows clients to publish messages through the publish event</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="MUTATION" target="SUBSCRIPTION">
      <data key="d4">1.0</data>
      <data key="d5">Mutations trigger subscriptions to update clients with the latest data changes</data>
      <data key="d6">a525cbfc03ba1b986f30ce2280067dda</data>
    </edge>
    <edge source="USE QUERY" target="IS LOADING">
      <data key="d4">7.0</data>
      <data key="d5">The Use Query hook sets the Is Loading state while fetching data from the API.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="USE QUERY" target="IS SUCCESS">
      <data key="d4">7.0</data>
      <data key="d5">The Use Query hook sets the Is Success state when data is successfully fetched from the API.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="USE QUERY" target="IS ERROR">
      <data key="d4">1.0</data>
      <data key="d5">The Use Query hook sets the Is Error state if there is an error during data fetching.</data>
      <data key="d6">b79fdaa9cac2c2fbf9ccc392ed341f6e</data>
    </edge>
    <edge source="MYSQL" target="SQL_CONNECTION_STRING">
      <data key="d4">8.0</data>
      <data key="d5">The SQL connection string is used to connect to MySQL databases</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="MYSQL" target="POSTGRESQL">
      <data key="d4">5.0</data>
      <data key="d5">MySQL and PostgreSQL are both relational database management systems, but they differ in their support for time zone offsets in date time fields.</data>
      <data key="d6">e8bb64825eb8da944e09e46a90be853c</data>
    </edge>
    <edge source="MYSQL" target="GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">MySQL is supported in Gen 2, allowing for relational database management</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="POSTGRESQL" target="SQL_CONNECTION_STRING">
      <data key="d4">8.0</data>
      <data key="d5">The SQL connection string is used to connect to PostgreSQL databases</data>
      <data key="d6">1950a5e06a03170ed4dc66a00668ea47</data>
    </edge>
    <edge source="POSTGRESQL" target="GEN 2">
      <data key="d4">1.0</data>
      <data key="d5">PostgreSQL is supported in Gen 2, allowing for relational database management</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="SQL LAMBDA" target="UPDATER LAMBDA">
      <data key="d4">6.0</data>
      <data key="d5">Updater Lambda automatically updates SQL Lambda with the latest Layer</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </edge>
    <edge source="COMMENT" target="NOTE">
      <data key="d4">9.0</data>
      <data key="d5">A Note can have many Comments associated with it, indicating a one-to-many relationshipA Comment belongs to a specific Note, indicating a many-to-one relationship</data>
      <data key="d6">3538ba83bb1b1b6801c4b0e5bc962812</data>
    </edge>
    <edge source="DEBUG MODE" target="SQL LAMBDA FUNCTION">
      <data key="d4">6.0</data>
      <data key="d5">Debug Mode can be enabled on the SQL Lambda Function to provide more detailed error messages during SQL operations.</data>
      <data key="d6">e8bb64825eb8da944e09e46a90be853c</data>
    </edge>
    <edge source="TEXT" target="CONVERTTEXTTOSPEECH">
      <data key="d4">9.0</data>
      <data key="d5">The ConvertTextToSpeech function processes the Text input to generate audio</data>
      <data key="d6">6980c90f0a7a58894d9518accd2ab5dd</data>
    </edge>
    <edge source="TEXT" target="TYPOGRAPHY STYLING EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">Typography Styling Example demonstrates the use of the Text component with typography styles</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="TEXT" target="TYPOGRAPHY THEME TOKEN EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">Typography Theme Token Example shows how to apply theme-based typography styles to a Text component</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="TEXT" target="TYPOGRAPHY TOKEN NAME EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Typography Token Name Example demonstrates the use of a design token name to style a Text component</data>
      <data key="d6">9939e974ca8f24b6b7f34bbf89addb7e</data>
    </edge>
    <edge source="TEXT" target="FLEX">
      <data key="d4">13.0</data>
      <data key="d5">Text components can be used within Flex components to display text in a flexible layout
Flex layout can also be used to position text elements effectively within a user interface
Flex can contain Text components to display content in a structured layout</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8,6264f18714899ee18445e9c4535f5ff2,6edc6c7e13a23d971e48b75724b50d5f</data>
    </edge>
    <edge source="TEXT" target="PHONE NUMBER FIELD">
      <data key="d4">5.0</data>
      <data key="d5">Text provides descriptive information for the Phone Number Field to guide users</data>
      <data key="d6">b13ba75bb69bab84cc548bc3c7fdf65d</data>
    </edge>
    <edge source="TEXT" target="PASSWORD FIELD">
      <data key="d4">6.0</data>
      <data key="d5">The Text component is used to provide descriptive information about the PasswordField, enhancing user understanding</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="TEXT" target="LABEL">
      <data key="d4">1.0</data>
      <data key="d5">Text can be used within a Label to provide descriptive information about the associated Input field.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="TEXT" target="FIELDSET">
      <data key="d4">11.0</data>
      <data key="d5">Fieldset can contain Text components to provide labels or descriptions for the grouped inputs
Text components are often used within Fieldset to provide context or instructions for the grouped elements</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7,72f7bd8a9eb9039eabf2d7d1ff4c9601</data>
    </edge>
    <edge source="SONG" target="CRUD">
      <data key="d4">1.0</data>
      <data key="d5">CRUD operations can be performed on songs using the Amplify Data client</data>
      <data key="d6">502c34bc5ff7e00594c0a0d9df58834d</data>
    </edge>
    <edge source="SRC/APP.TSX" target="CURRENTSONG">
      <data key="d4">7.0</data>
      <data key="d5">CurrentSong is a variable used within the src/App.tsx file to reference the song being processed</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="SRC/APP.TSX" target="SIGNED URL">
      <data key="d4">6.0</data>
      <data key="d5">The signed URL is generated in src/App.tsx to provide secure access to a file</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="SRC/APP.TSX" target="PHOTOALBUM">
      <data key="d4">7.0</data>
      <data key="d5">The PhotoAlbum model is created and manipulated within the src/App.tsx file</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="SRC/APP.TSX" target="REMOVE">
      <data key="d4">7.0</data>
      <data key="d5">Remove is used in src/App.tsx to delete files from storage</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="SRC/APP.TSX" target="GENERATE CLIENT">
      <data key="d4">8.0</data>
      <data key="d5">Generate Client is invoked in src/App.tsx to create a client for API interactions</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="REMOVE" target="PHOTO ALBUM">
      <data key="d4">8.0</data>
      <data key="d5">Remove is used to delete files associated with the Photo Album from storage</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="REMOVE" target="REMOVE IMAGE FROM SONG">
      <data key="d4">5.0</data>
      <data key="d5">Remove Image From Song function removes the image association from the song record</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="REMOVE" target="DELETE IMAGE FOR CURRENT SONG">
      <data key="d4">1.0</data>
      <data key="d5">Delete Image For Current Song function deletes the image file and its association from the song record</data>
      <data key="d6">d8d35bb9ab00c5657d67d2362a6bbd10</data>
    </edge>
    <edge source="GENERATE CLIENT" target="AUTH MODE">
      <data key="d4">6.0</data>
      <data key="d5">Auth Mode is a parameter used in the Generate Client function to define the authentication method</data>
      <data key="d6">d2da95c5361020f00b8857bfa61b4378</data>
    </edge>
    <edge source="PHOTO ALBUM" target="IMAGE PATHS">
      <data key="d4">8.0</data>
      <data key="d5">The Photo Album contains multiple Image Paths that point to the images associated with it</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="PHOTO ALBUM" target="CURRENT PHOTO ALBUM">
      <data key="d4">9.0</data>
      <data key="d5">The Current Photo Album is the specific instance of a Photo Album being accessed or modified</data>
      <data key="d6">ffefc5d1a6af5c09544184c9c18a3567</data>
    </edge>
    <edge source="COVER ART" target="CURRENT SONG">
      <data key="d4">7.0</data>
      <data key="d5">The current song can have an associated cover art image that can be added or removed</data>
      <data key="d6">f0c17549b011af117faf3f7556948996</data>
    </edge>
    <edge source="PUBLISH" target="PUBLISH.JS">
      <data key="d4">8.0</data>
      <data key="d5">Publish.js handles the logic for the publish event in Amplify</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="RECEIVE" target="RECEIVE.JS">
      <data key="d4">8.0</data>
      <data key="d5">Receive.js handles the logic for the receive event in Amplify</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="RECEIVE" target="SUBSCRIPTION">
      <data key="d4">6.0</data>
      <data key="d5">Subscription allows clients to receive messages through the receive event</data>
      <data key="d6">07423380fe232270f2991cb99f038a6e</data>
    </edge>
    <edge source="SUBSCRIPTION" target="OBSERVEQUERY">
      <data key="d4">6.0</data>
      <data key="d5">ObserveQuery is a method that utilizes subscriptions to provide real-time data updates</data>
      <data key="d6">a525cbfc03ba1b986f30ce2280067dda</data>
    </edge>
    <edge source="AMAZON TRANSLATE" target="TRANSLATE API">
      <data key="d4">9.0</data>
      <data key="d5">The Translate API is a service offered by Amazon Translate for performing language translations</data>
      <data key="d6">58b2fdfd363cfa9a202cc5a6c3b3d77e</data>
    </edge>
    <edge source="AMAZON REKOGNITION" target="REKOGNITION DATA SOURCE">
      <data key="d4">7.0</data>
      <data key="d5">The Rekognition Data Source is configured to interact with the Amazon Rekognition service for image analysis</data>
      <data key="d6">9bfb7d7a715bed7eec92b32f7a175bf5</data>
    </edge>
    <edge source="AMAZON REKOGNITION" target="REKOGNITION SERVICE">
      <data key="d4">8.0</data>
      <data key="d5">Amazon Rekognition provides the underlying technology for the Rekognition Service to analyze images and detect text</data>
      <data key="d6">b0e5a5345f8f86afeb8b60d97f953436</data>
    </edge>
    <edge source="AMAZON REKOGNITION" target="FACE LIVENESS DETECTOR">
      <data key="d4">9.0</data>
      <data key="d5">Face Liveness Detector utilizes Amazon Rekognition technology to verify user authenticity.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="CUSTOM QUERY" target="CUSTOM MUTATION">
      <data key="d4">5.0</data>
      <data key="d5">Custom Queries and Custom Mutations are both part of the data interaction model in AWS Amplify, allowing for flexible data operations</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="CUSTOM QUERY" target="DATA CLIENT">
      <data key="d4">7.0</data>
      <data key="d5">The Data Client is used to execute Custom Queries to retrieve data from the backend</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="LIFELIKE SPEECH" target="TEXT-TO-SPEECH">
      <data key="d4">9.0</data>
      <data key="d5">Lifelike speech is a result of the text-to-speech technology provided by Amazon Polly, enhancing user experience.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AUDIO CONTENT" target="VISUALLY IMPAIRED">
      <data key="d4">10.0</data>
      <data key="d5">Audio content is crucial for visually impaired individuals, providing them with access to information through speech.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AUDIO CONTENT" target="E-LEARNING EXPERIENCES">
      <data key="d4">1.0</data>
      <data key="d5">Audio content enhances e-learning experiences by providing interactive and engaging educational material.</data>
      <data key="d6">3c34af088a28c5276b514cfdf986b3d6</data>
    </edge>
    <edge source="AMAZON BEDROCK" target="ANTHROPIC">
      <data key="d4">7.0</data>
      <data key="d5">Amazon Bedrock provides access to Anthropic's AI models, including Claude 3 Haiku</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="CLAUDE 3 HAIKU" target="GENERATE HAIKU FUNCTION">
      <data key="d4">8.0</data>
      <data key="d5">The Generate Haiku Function uses Claude 3 Haiku to generate haikus based on user prompts</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="CLAUDE 3 HAIKU" target="BEDROCKRUNTIMECLIENT">
      <data key="d4">1.0</data>
      <data key="d5">BedrockRuntimeClient is used to invoke the Claude 3 Haiku model within the Generate Haiku Function</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="GENERATE HAIKU FUNCTION" target="MODEL ID">
      <data key="d4">6.0</data>
      <data key="d5">The Generate Haiku Function uses the MODEL ID to identify which AI model to invoke for generating haikus</data>
      <data key="d6">405cec78205a77ac97466698654060ca</data>
    </edge>
    <edge source="ORDERSTATUSCHANGE" target="ORDERSTATUS">
      <data key="d4">8.0</data>
      <data key="d5">OrderStatusChange event type uses the OrderStatus enum to define the status of an order</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="ORDERSTATUSCHANGE" target="ORDERID">
      <data key="d4">9.0</data>
      <data key="d5">OrderStatusChange requires an OrderId to identify which order's status is changing</data>
      <data key="d6">61659c64fca58284b65ddb212f319f91</data>
    </edge>
    <edge source="ORDERSTATUSCHANGE" target="PUBLISHORDERFROMEVENTBRIDGE">
      <data key="d4">6.0</data>
      <data key="d5">The publishOrderFromEventBridge mutation returns an OrderStatusChange type when invoked by EventBridge.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="ORDERSTATUSCHANGE" target="PUBLISHORDERTOEVENTBRIDGE">
      <data key="d4">6.0</data>
      <data key="d5">The publishOrderToEventBridge mutation returns an OrderStatusChange type when invoked.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="ORDERSTATUSCHANGE" target="ONORDERSTATUSCHANGE">
      <data key="d4">1.0</data>
      <data key="d5">The onOrderStatusChange subscription is triggered by changes in the OrderStatusChange type.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="EVENTBRIDGE" target="CFNRULE">
      <data key="d4">8.0</data>
      <data key="d5">The CfnRule construct is used to create an EventBridge rule that routes events to the AppSync API.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="EVENTBRIDGE" target="PUBLISHORDERFROMEVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">The publishOrderFromEventBridge mutation is invoked by the EventBridge rule when an event is received.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="EVENTBRIDGE" target="PUBLISHORDERTOEVENTBRIDGE">
      <data key="d4">7.0</data>
      <data key="d5">The publishOrderToEventBridge mutation uses an EventBridge data source to publish events.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="EVENTBRIDGE" target="ONORDERSTATUSCHANGE">
      <data key="d4">6.0</data>
      <data key="d5">The onOrderStatusChange subscription can be triggered by EventBridge invoking the publishOrderFromEventBridge mutation.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="APPSYNC API" target="MYLIBRARY">
      <data key="d4">1.0</data>
      <data key="d5">MyLibrary is a defined data source schema that interacts with the AppSync API for managing order statuses.</data>
      <data key="d6">31c31b4a395fff86f3ced612876d11dc</data>
    </edge>
    <edge source="AMPLIFY API" target="CUSTOM BUSINESS LOGIC">
      <data key="d4">8.0</data>
      <data key="d5">Custom business logic can be implemented in the Amplify API to handle specific application requirements and data processing.</data>
      <data key="d6">df66d576a32835aae9d3957800932b5f</data>
    </edge>
    <edge source="OPENSEARCH" target="OPENSEARCH INTEGRATION PIPELINE">
      <data key="d4">9.0</data>
      <data key="d5">The OpenSearch Integration Pipeline is designed to facilitate the ingestion of data into OpenSearch.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="OPENSEARCH" target="OPENSEARCH DOMAIN">
      <data key="d4">16.0</data>
      <data key="d5">OpenSearch operates within the OpenSearch Domain, which provides the infrastructure for its deployment.
The OpenSearch Domain hosts the OpenSearch service, providing the infrastructure needed for search and analytics.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185,f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="OPENSEARCH INTEGRATION PIPELINE" target="EVENTS">
      <data key="d4">1.0</data>
      <data key="d5">Events are processed through the OpenSearch Integration Pipeline for indexing and analysis.</data>
      <data key="d6">f97e5b8c2fc931d61f9fd11ee9fbca57</data>
    </edge>
    <edge source="OPENSEARCH DOMAIN" target="OPENSEARCH INGESTION SERVICE">
      <data key="d4">9.0</data>
      <data key="d5">The OpenSearch Ingestion Service interacts with the OpenSearch Domain to ingest and manage data</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="OPENSEARCH DOMAIN" target="OPENSEARCH PIPELINE">
      <data key="d4">8.0</data>
      <data key="d5">The OpenSearch Pipeline processes data that is indexed in the OpenSearch Domain</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="OPENSEARCH DOMAIN" target="INDEX MAPPING">
      <data key="d4">8.0</data>
      <data key="d5">Index Mapping is applied to the OpenSearch Domain to define how data is structured and queried</data>
      <data key="d6">ad25e8455b3a65969a17cb69a66a58ac</data>
    </edge>
    <edge source="OPENSEARCH DOMAIN" target="OPENSEARCH INTEGRATION PIPELINE ROLE">
      <data key="d4">8.0</data>
      <data key="d5">The OpenSearch Domain utilizes the OpenSearch Integration Pipeline Role to perform actions on the data ingested from DynamoDB.</data>
      <data key="d6">57f05fa9d96242d8c2cb2869e13f9e1c</data>
    </edge>
    <edge source="OPENSEARCH DOMAIN" target="REMOVAL POLICY">
      <data key="d4">1.0</data>
      <data key="d5">The Removal Policy determines how the OpenSearch Domain is handled when the stack is deleted</data>
      <data key="d6">3e8319ba39b8ba21d17ce5e988924ff2</data>
    </edge>
    <edge source="REGION" target="FACE LIVENESS DETECTOR">
      <data key="d4">12.0</data>
      <data key="d5">The region specifies the deployment area for the Face Liveness Detector service, affecting latency and performance
The region setting determines where the Face Liveness Detector processes the user's data</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="CLOUDWATCH" target="LOG GROUP">
      <data key="d4">6.0</data>
      <data key="d5">CloudWatch logs are stored in log groups, which help in monitoring and troubleshooting AWS services.</data>
      <data key="d6">7f29cbfbdd4aea2867cf6f65ba567185</data>
    </edge>
    <edge source="ECHO HANDLER" target="CLIENT SCHEMA">
      <data key="d4">8.0</data>
      <data key="d5">The Echo Handler is defined within the Client Schema to process specific queries and mutations</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="CUSTOM MUTATION" target="DATA CLIENT">
      <data key="d4">7.0</data>
      <data key="d5">The Data Client is used to execute Custom Mutations to modify data in the backend</data>
      <data key="d6">0dfb84288d523f687fe010cdbeb5603e</data>
    </edge>
    <edge source="CRUD OPERATIONS" target="SALARY">
      <data key="d4">1.0</data>
      <data key="d5">CRUD operations can be performed on salary records in the application</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86</data>
    </edge>
    <edge source="OPENID CONNECT" target="CLIENT ID">
      <data key="d4">7.0</data>
      <data key="d5">Client ID is used in OpenID Connect to identify the application requesting authentication</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="OPENID CONNECT" target="TOKEN EXPIRY">
      <data key="d4">1.0</data>
      <data key="d5">Token expiry is a critical aspect of OpenID Connect, determining how long a token remains valid</data>
      <data key="d6">d479485461737c6760b5fb421f0541ea</data>
    </edge>
    <edge source="LEADERSHIP" target="SALARY">
      <data key="d4">5.0</data>
      <data key="d5">The Leadership group can have specific access to salary records in the application</data>
      <data key="d6">2e537c711e153c043f8d08b926e4ba86</data>
    </edge>
    <edge source="USERPOOL" target="GROUP">
      <data key="d4">1.0</data>
      <data key="d5">Groups are managed within User Pools to define access permissions for specific user sets</data>
      <data key="d6">287574c9a7234d49dcc89de08710c55e</data>
    </edge>
    <edge source="PUBLIC API KEY" target="GLOBAL AUTHORIZATION RULE">
      <data key="d4">6.0</data>
      <data key="d5">The global authorization rule allows access to the API using the public API key</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="USERPOOLS" target="OIDC AUTHORIZATION MODES">
      <data key="d4">7.0</data>
      <data key="d5">UserPools utilizes OIDC authorization modes to authenticate users securely</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="MODEL-LEVEL AUTHORIZATION RULE" target="FIELD-LEVEL AUTHORIZATION RULE">
      <data key="d4">8.0</data>
      <data key="d5">Model-level authorization rules can be overridden by field-level authorization rules</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="FIELD-LEVEL AUTHORIZATION RULE" target="EMPLOYEE">
      <data key="d4">1.0</data>
      <data key="d5">The Employee model has a field-level authorization rule for the ssn field, which is protected by owner permissions</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="NON-MODEL AUTHORIZATION RULES" target="DYNAMIC AUTHORIZATION RULES">
      <data key="d4">5.0</data>
      <data key="d5">Dynamic authorization rules are not supported for non-model types, which include custom queries and mutations</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="TS WARNINGS" target="SANDWICH DEPLOYMENT">
      <data key="d4">1.0</data>
      <data key="d5">TS warnings can cause a sandwich deployment to fail if unsupported auth rules are defined</data>
      <data key="d6">b2d8cdaec278d34da4fff33772135cfc</data>
    </edge>
    <edge source="PUBLIC DATA ACCESS" target="AUTHORIZATION STRATEGY">
      <data key="d4">5.0</data>
      <data key="d5">Public data access is a type of authorization strategy that grants everyone access to the API</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="OWNER AUTHORIZATION STRATEGY" target="AUTHORIZATION STRATEGY">
      <data key="d4">6.0</data>
      <data key="d5">The owner authorization strategy is a specific implementation of an authorization strategy that restricts access to the record's owner</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="MULTI-USER DATA ACCESS" target="AUTHORIZATION STRATEGY">
      <data key="d4">6.0</data>
      <data key="d5">Multi-user data access is another form of authorization strategy that allows a defined set of users to access records</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="SIGNED-IN USER DATA ACCESS" target="AUTHORIZATION STRATEGY">
      <data key="d4">6.0</data>
      <data key="d5">Signed-in user data access is a type of authorization strategy that restricts access to authenticated users</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="CUSTOM DATA ACCESS" target="AUTHORIZATION STRATEGY">
      <data key="d4">6.0</data>
      <data key="d5">Custom data access is a flexible approach to defining authorization strategies using Lambda functions</data>
      <data key="d6">fa4079c109c67561ad52ce2f338d0fa0</data>
    </edge>
    <edge source="RELATIONAL FIELD" target="ONE-TO-MANY">
      <data key="d4">8.0</data>
      <data key="d5">Relational fields are used to establish one-to-many relationships between models in a data schema.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="RELATIONAL FIELD" target="MANY-TO-MANY">
      <data key="d4">8.0</data>
      <data key="d5">Relational fields can also be used to establish many-to-many relationships between models in a data schema.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="RELATIONAL FIELD" target="ONE-TO-ONE">
      <data key="d4">1.0</data>
      <data key="d5">Relational fields can be used to establish one-to-one relationships between models in a data schema.</data>
      <data key="d6">33e451e77f5bd710301d6408bbd2825d</data>
    </edge>
    <edge source="CART" target="CUSTOMER">
      <data key="d4">28.0</data>
      <data key="d5">The Customer can create a Cart, indicating a relationship where a Customer is linked to a Cart they own.The Customer has an active Cart, indicating a one-to-one relationship where each Customer can have one active Cart.The Cart is associated with a Customer, indicating a one-to-one relationship where each Cart belongs to a single Customer.The Cart belongs to a Customer, indicating a one-to-one relationship where each Cart is associated with a single Customer.</data>
      <data key="d6">06d355f57266e139e2c21ab1cbe5f8e6</data>
    </edge>
    <edge source="CUSTOMER" target="ACCOUNT REPRESENTATIVE">
      <data key="d4">6.0</data>
      <data key="d5">The Customer model includes an account representative ID that links to a specific account representative</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="CUSTOMER" target="PHONE NUMBER">
      <data key="d4">6.0</data>
      <data key="d5">The Customer model includes a phone number attribute for storing customer contact details</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="CUSTOMER" target="NAME">
      <data key="d4">6.0</data>
      <data key="d5">The Customer model includes a name attribute to identify the customer</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="CUSTOMER" target="ID">
      <data key="d4">7.0</data>
      <data key="d5">The Customer model uses an ID attribute to uniquely identify each customer</data>
      <data key="d6">a3d633e1c801de300a4724738b7290c3</data>
    </edge>
    <edge source="CUSTOMER" target="COLLECTION">
      <data key="d4">16.0</data>
      <data key="d5">A Customer belongs to a Collection, establishing a relationship where multiple Customers can be associated with a single CollectionA Collection can have many Customers associated with it, indicating a one-to-many relationship</data>
      <data key="d6">92bcd3df485df362e04da4f60878ff3b</data>
    </edge>
    <edge source="NAME" target="SWITCHFIELD">
      <data key="d4">6.0</data>
      <data key="d5">name property is used to identify the SwitchField in form submissions</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="PHONE NUMBER" target="CONFIRMSIGNUP API">
      <data key="d4">8.0</data>
      <data key="d5">The phone number is used in the confirmSignUp API to send a one-time password for user verification</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="PHONE NUMBER" target="SIGN UP">
      <data key="d4">7.0</data>
      <data key="d5">Phone Number is an optional field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="PHONE NUMBER" target="PHONENUMBERFIELD">
      <data key="d4">9.0</data>
      <data key="d5">Phone Number is an input field within the PhoneNumberField component for entering phone numbers
The PhoneNumberField is designed to handle input for phone numbers, making them directly related</data>
      <data key="d6">0108c0e942cd9aa8c65a9711baef8140,6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="PHONE NUMBER" target="DIAL CODE SELECTOR">
      <data key="d4">6.0</data>
      <data key="d5">The Phone Number is entered using the dial code selector to choose the appropriate country code</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="PHONE NUMBER" target="PHONE NUMBER FIELD">
      <data key="d4">9.0</data>
      <data key="d5">The Phone Number Field is designed to input and validate phone numbers
The Phone Number Field is designed to collect the user's phone number</data>
      <data key="d6">b13ba75bb69bab84cc548bc3c7fdf65d,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="PHONE NUMBER" target="COUNTRY CODE">
      <data key="d4">20.0</data>
      <data key="d5">A phone number is associated with a specific country code that indicates its geographical origin
The Phone Number input requires a Country Code to be valid and functional
A phone number often includes a country code to specify the country of the line being called.</data>
      <data key="d6">0108c0e942cd9aa8c65a9711baef8140,582ef60010150eb5b063d4e027797a77,a405b9f832ed918dd2c0ed33bb2b5808</data>
    </edge>
    <edge source="PHONE NUMBER" target="CSS STYLING">
      <data key="d4">7.0</data>
      <data key="d5">CSS Styling is applied to the Phone Number field to enhance its appearance</data>
      <data key="d6">0108c0e942cd9aa8c65a9711baef8140</data>
    </edge>
    <edge source="PHONE NUMBER" target="THEME">
      <data key="d4">1.0</data>
      <data key="d5">The Theme affects the styling and presentation of the Phone Number input field</data>
      <data key="d6">0108c0e942cd9aa8c65a9711baef8140</data>
    </edge>
    <edge source="PHONE NUMBER" target="DIAL CODE">
      <data key="d4">1.0</data>
      <data key="d5">A dial code is part of the phone number format, indicating the region or country for the call.</data>
      <data key="d6">a405b9f832ed918dd2c0ed33bb2b5808</data>
    </edge>
    <edge source="PAGINATION" target="NEXTTOKEN">
      <data key="d4">7.0</data>
      <data key="d5">NextToken is used in pagination to fetch the next set of results in a query</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="PAGINATION" target="LIMIT">
      <data key="d4">6.0</data>
      <data key="d5">Limit is a parameter that works with pagination to control the number of results returned</data>
      <data key="d6">f60714d5063669648e44d7d6036396c3</data>
    </edge>
    <edge source="PAGINATION" target="CURRENT PAGE">
      <data key="d4">8.0</data>
      <data key="d5">Current Page is a property of the Pagination component that indicates which page is currently displayed</data>
      <data key="d6">70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="PAGINATION" target="TOTAL PAGES">
      <data key="d4">8.0</data>
      <data key="d5">Total Pages is a property of the Pagination component that indicates the total number of pages available</data>
      <data key="d6">70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="PAGINATION" target="SIBLING COUNT">
      <data key="d4">8.0</data>
      <data key="d5">Sibling Count is a property of the Pagination component that controls the number of adjacent page numbers displayed
Sibling Count is a property of the Pagination component that affects its display</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13,70306783d146ca14e7ca1a0332337b3c</data>
    </edge>
    <edge source="PAGINATION" target="THEME">
      <data key="d4">6.0</data>
      <data key="d5">The appearance of the Pagination component can be customized using a Theme</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="PAGINATION" target="CSS VARIABLES">
      <data key="d4">5.0</data>
      <data key="d5">CSS Variables can be used to style the Pagination component globally or locally</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="PAGINATION" target="USE PAGINATION">
      <data key="d4">8.0</data>
      <data key="d5">Use Pagination is a method to implement the Pagination component in applications</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="PAGINATION" target="ACCESSIBILITY">
      <data key="d4">7.0</data>
      <data key="d5">The Pagination component includes features to enhance accessibility for users</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="PAGINATION" target="ARIA LABEL">
      <data key="d4">6.0</data>
      <data key="d5">ARIA labels are used to improve the accessibility of the Pagination buttons</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="PAGINATION" target="NAV">
      <data key="d4">5.0</data>
      <data key="d5">The Pagination component is wrapped in a nav element to provide semantic meaning for navigation</data>
      <data key="d6">12ed2a0e7657f4c4359e7bea38b9bc13</data>
    </edge>
    <edge source="AMAZON" target="GEN 1">
      <data key="d4">7.0</data>
      <data key="d5">Amazon is one of the authentication options available for users in Gen 1</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="AMAZON" target="GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Amazon is one of the authentication options available for users in Gen 2</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="AMAZON" target="PAINTINGS">
      <data key="d4">1.0</data>
      <data key="d5">Amazon sells artworks from the PAINTINGS collection.</data>
      <data key="d6">721fd770afdaa7d57e5db2f788e375b2</data>
    </edge>
    <edge source="CUSTOM CREDENTIALS PROVIDER" target="AWS COGNITO">
      <data key="d4">8.0</data>
      <data key="d5">The custom credentials provider is designed to work with AWS Cognito for managing user authentication and credentials</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="CUSTOM CREDENTIALS PROVIDER" target="FACEBOOK">
      <data key="d4">7.0</data>
      <data key="d5">The custom credentials provider allows users to sign in using their Facebook accounts</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="CUSTOM CREDENTIALS PROVIDER" target="FACEBOOK APP ID">
      <data key="d4">5.0</data>
      <data key="d5">The Facebook App ID is used by the custom credentials provider to authenticate users via Facebook</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="CUSTOM CREDENTIALS PROVIDER" target="GOOGLE CLIENT ID">
      <data key="d4">1.0</data>
      <data key="d5">The Google Client ID is used by the custom credentials provider to authenticate users via Google</data>
      <data key="d6">964a73cbdb955691a9e116071187750f</data>
    </edge>
    <edge source="FACEBOOK" target="DEVELOPER ACCOUNT">
      <data key="d4">7.0</data>
      <data key="d5">A developer account is required to create and manage applications on Facebook for authentication purposes.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="FACEBOOK" target="GEN 1">
      <data key="d4">7.0</data>
      <data key="d5">Facebook is one of the authentication options available for users in Gen 1</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="FACEBOOK" target="GEN 2">
      <data key="d4">7.0</data>
      <data key="d5">Facebook is one of the authentication options available for users in Gen 2</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="LAMBDA TRIGGERS" target="SIGNIN">
      <data key="d4">6.0</data>
      <data key="d5">SignIn can invoke Lambda Triggers for additional validation during the authentication process</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="LAMBDA TRIGGERS" target="CLIENTMETADATA">
      <data key="d4">1.0</data>
      <data key="d5">ClientMetadata can be passed to Lambda Triggers for additional validation during authentication</data>
      <data key="d6">5b2747800197a072e6dc22c54876eb35</data>
    </edge>
    <edge source="AMAZON SIMPLE EMAIL SERVICE" target="PRODUCTION ACCESS">
      <data key="d4">6.0</data>
      <data key="d5">Production access is required to send emails using Amazon SES without restrictions</data>
      <data key="d6">7925e036e2025ccae5e0f72fe8f556ac</data>
    </edge>
    <edge source="SMS" target="MULTI-FACTOR AUTHENTICATION">
      <data key="d4">2.0</data>
      <data key="d5">SMS is commonly used to send verification codes as part of the multi-factor authentication process
SMS is another method supported for multi-factor authentication in AWS Amplify</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="DEVICE" target="USER AUTHENTICATION">
      <data key="d4">1.0</data>
      <data key="d5">Devices are tracked and managed during the user authentication process in AWS Amplify</data>
      <data key="d6">bc4893f2f489d14f0975fa64ffca1df8</data>
    </edge>
    <edge source="MFA" target="GEN 1">
      <data key="d4">6.0</data>
      <data key="d5">MFA is supported in Gen 1, providing an additional layer of security for user authentication</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="MFA" target="GEN 2">
      <data key="d4">6.0</data>
      <data key="d5">MFA is supported in Gen 2, providing an additional layer of security for user authentication</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="PASSWORD" target="RESET PASSWORD">
      <data key="d4">5.0</data>
      <data key="d5">Resetting a password involves changing the current password to a new one</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="PASSWORD" target="UPDATE PASSWORD">
      <data key="d4">1.0</data>
      <data key="d5">Updating a password involves changing the existing password to a new one</data>
      <data key="d6">aba5b97fa8a2f6114a40b1d94fc276b2</data>
    </edge>
    <edge source="PASSWORD" target="SIGN UP">
      <data key="d4">9.0</data>
      <data key="d5">Password is a required field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="PASSWORD" target="SIGN IN">
      <data key="d4">9.0</data>
      <data key="d5">Password is a required field in the Sign In process for user authentication.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="PASSWORD" target="PASSWORD FIELD">
      <data key="d4">8.0</data>
      <data key="d5">Password is a specific type of input used within the Password Field component</data>
      <data key="d6">e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="AUTH EVENTS" target="AMPLIFY HUB">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Hub listens for auth events to manage user authentication processes effectively</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="AUTH EVENTS" target="HUB.LISTEN">
      <data key="d4">7.0</data>
      <data key="d5">The Hub.listen function is used to respond to auth events, allowing developers to handle user authentication in real-time</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="AUTH EVENTS" target="TOKEN REFRESH">
      <data key="d4">8.0</data>
      <data key="d5">Token refresh is a specific type of auth event that indicates the successful refresh of authentication tokens</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="AUTH EVENTS" target="TOKEN REFRESH FAILURE">
      <data key="d4">1.0</data>
      <data key="d5">Token refresh failure is a specific type of auth event that indicates an error during the token refresh process</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="JANE DOE" target="SIGN-UP API">
      <data key="d4">8.0</data>
      <data key="d5">Jane Doe is used as an example to demonstrate how to pass user attributes during the sign-up process using the sign-up API</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="JANE DOE" target="FETCH USER ATTRIBUTES API">
      <data key="d4">7.0</data>
      <data key="d5">Jane Doe's attributes can be retrieved using the fetch user attributes API to personalize her experience</data>
      <data key="d6">3188b79ca82feb7410b45f4162ba4317</data>
    </edge>
    <edge source="JON DOE" target="USER ATTRIBUTE VERIFICATION CODE">
      <data key="d4">5.0</data>
      <data key="d5">Jon Doe is involved in the process of confirming user attributes which requires a verification code.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="JON DOE" target="FETCH AUTH SESSION">
      <data key="d4">7.0</data>
      <data key="d5">Jon Doe can fetch his authentication session details using the fetch auth session event in AWS Amplify.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="JON DOE" target="SIGN OUT">
      <data key="d4">1.0</data>
      <data key="d5">Jon Doe can sign out of his session using the sign out event in AWS Amplify.</data>
      <data key="d6">ddb5fb3e8db548d41829f366a360c2b7</data>
    </edge>
    <edge source="SIGN IN" target="CONFIRM SIGN IN">
      <data key="d4">5.0</data>
      <data key="d5">Confirm sign in is a follow-up event that may occur after the initial sign in attempt</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e</data>
    </edge>
    <edge source="MULTI-FACTOR AUTHENTICATION" target="TOTP">
      <data key="d4">15.0</data>
      <data key="d5">TOTP is often used as a method for multi-factor authentication
TOTP is one of the methods supported for multi-factor authentication in AWS Amplify</data>
      <data key="d6">9bcc9002428492e349dade67bf61476e,eb0ab8a0b2738dcfb761cbfe242d18c4</data>
    </edge>
    <edge source="MULTI-FACTOR AUTHENTICATION" target="AWS MANAGEMENT CONSOLE">
      <data key="d4">7.0</data>
      <data key="d5">MFA is often required when accessing the AWS Management Console to enhance security during the login process.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="TOTP" target="GOOGLE AUTHENTICATOR">
      <data key="d4">9.0</data>
      <data key="d5">Google Authenticator generates TOTP codes for secure sign-in</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="TOTP" target="MICROSOFT AUTHENTICATOR">
      <data key="d4">1.0</data>
      <data key="d5">Microsoft Authenticator generates TOTP codes for secure sign-in</data>
      <data key="d6">4f10f73a5698de38e9d0cd15643d69c1</data>
    </edge>
    <edge source="TOTP" target="AUTHENTICATOR APP">
      <data key="d4">8.0</data>
      <data key="d5">TOTP codes are generated by the Authenticator app for user verification</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="SIGN_UP" target="VERIFICATION CODE">
      <data key="d4">7.0</data>
      <data key="d5">VERIFICATION CODE is used during the SIGN_UP process to confirm a user's account</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="SIGN_UP" target="VERIFICATION LINK">
      <data key="d4">7.0</data>
      <data key="d5">VERIFICATION LINK is used during the SIGN_UP process to confirm a user's account</data>
      <data key="d6">710de2c1f4693d893bae10139553994d</data>
    </edge>
    <edge source="SIGN-UP" target="CONFIRM SIGN-UP">
      <data key="d4">8.0</data>
      <data key="d5">The confirm sign-up process follows the sign-up event, requiring users to verify their account</data>
      <data key="d6">9d1ecd9e6b4e4bc832178b9ae1a06e8d</data>
    </edge>
    <edge source="ACCESS TOKEN" target="JWT">
      <data key="d4">7.0</data>
      <data key="d5">JWTs are often used as access tokens to verify user identity and permissions</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="ACCESS TOKEN" target="CREDENTIAL">
      <data key="d4">6.0</data>
      <data key="d5">Access tokens are a type of credential used to authorize user actions</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="ID TOKEN" target="NICKNAME">
      <data key="d4">1.0</data>
      <data key="d5">Nicknames can be included in ID tokens as user attributes</data>
      <data key="d6">3bedaf75477c620e5f8469d8d96cfae3</data>
    </edge>
    <edge source="LOGIN WITH AMAZON" target="DEVELOPER ACCOUNT">
      <data key="d4">7.0</data>
      <data key="d5">A developer account is required to create and manage applications on Amazon for authentication purposes.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="SIGN IN WITH APPLE" target="DEVELOPER ACCOUNT">
      <data key="d4">7.0</data>
      <data key="d5">A developer account is required to create and manage applications on Apple for authentication purposes.</data>
      <data key="d6">5b9454881a44ee34d198e3403f5388af</data>
    </edge>
    <edge source="MICROSOFT ENTRAID" target="SIGNINWITHREDIRECT">
      <data key="d4">8.0</data>
      <data key="d5">SignInWithRedirect is used to authenticate users with Microsoft EntraID as an external provider</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="MICROSOFT ENTRAIDSAML" target="SIGNINWITHREDIRECT">
      <data key="d4">8.0</data>
      <data key="d5">SignInWithRedirect is used to authenticate users with Microsoft EntraIDSAML as an external provider</data>
      <data key="d6">162dda357807004bc0720c9422f45783</data>
    </edge>
    <edge source="SAML" target="GEN 2">
      <data key="d4">8.0</data>
      <data key="d5">SAML is supported in Gen 2, allowing for single sign-on capabilities</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="OIDC" target="GEN 2">
      <data key="d4">8.0</data>
      <data key="d5">OIDC is supported in Gen 2, allowing for secure authentication using OpenID Connect</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610</data>
    </edge>
    <edge source="AUTHENTICATOR APP" target="SETUP URI">
      <data key="d4">1.0</data>
      <data key="d5">The Setup URI is used to configure the Authenticator app for generating TOTP codes</data>
      <data key="d6">d4d0ea2c5ed830460edee88a18f0b2b2</data>
    </edge>
    <edge source="CUSTOM ATTRIBUTES" target="TENANT ID">
      <data key="d4">5.0</data>
      <data key="d5">Tenant ID is a type of custom attribute that can be configured for user sign-up in AWS Amplify</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="CUSTOM ATTRIBUTES" target="DISPLAY NAME">
      <data key="d4">5.0</data>
      <data key="d5">Display name is a type of custom attribute that can be configured for user sign-up in AWS Amplify</data>
      <data key="d6">0bc7a3343cc71a51f8039854d57f5778</data>
    </edge>
    <edge source="GEN 1" target="GEN 2">
      <data key="d4">14.0</data>
      <data key="d5">Gen 2 is the successor to Gen 1, providing enhanced capabilities for AWS Amplify users
Gen 2 is the successor to Gen 1, providing enhanced capabilities and features for users transitioning from Gen 1
Gen 2 is an evolution of Gen 1, improving upon its features and capabilities</data>
      <data key="d6">4b1835219f538ab9f3ba5712dcb54610,8e6f8a08e3cdc9d85f1015001bcf93dc,a45591637d0b47a7bce4ac92c8eb5ea6</data>
    </edge>
    <edge source="IAM IDENTITY CENTER" target="AMPLIFY ADMIN">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Admin is a user role that is managed through IAM Identity Center for access to AWS resources</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="IAM IDENTITY CENTER" target="PERMISSION SET">
      <data key="d4">1.0</data>
      <data key="d5">IAM Identity Center manages permission sets for users to define their access to AWS resources</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="IAM IDENTITY CENTER" target="TEMPORARY CREDENTIALS">
      <data key="d4">7.0</data>
      <data key="d5">Temporary credentials are managed through IAM Identity Center for secure access</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="IAM IDENTITY CENTER" target="SINGLE SIGN-ON (SSO)">
      <data key="d4">8.0</data>
      <data key="d5">IAM Identity Center enables Single Sign-On (SSO) for users accessing AWS resources</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="IAM IDENTITY CENTER" target="MANAGED POLICY">
      <data key="d4">7.0</data>
      <data key="d5">Managed policies are used within IAM Identity Center to define user permissions</data>
      <data key="d6">c58075426e62c1f9da00343d6b1599a7</data>
    </edge>
    <edge source="SINGLE SIGN-ON (SSO)" target="AWS MANAGEMENT CONSOLE">
      <data key="d4">8.0</data>
      <data key="d5">SSO is used to authenticate users when they access the AWS Management Console, simplifying the login process.</data>
      <data key="d6">db7dfb25749de8f86ac15552fec549ec</data>
    </edge>
    <edge source="STYLE PROPS" target="ALERT">
      <data key="d4">13.0</data>
      <data key="d5">Style Props can be applied to the Alert component to modify its appearanceThe Alert component can utilize Style Props for styling adjustments</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="STYLE PROPS" target="FLEX">
      <data key="d4">13.0</data>
      <data key="d5">The Flex component can utilize Style Props for styling adjustmentsStyle Props can be applied to the Flex component to modify its layout</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="STYLE PROPS" target="GRID">
      <data key="d4">8.0</data>
      <data key="d5">Style Props can be applied to the Grid component to modify its layoutThe Grid component can utilize Style Props for styling adjustments</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="ALERT" target="THEME">
      <data key="d4">7.0</data>
      <data key="d5">The theme allows customization of the appearance of alert components, affecting their styles and colors</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ALERT" target="ALERT COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Alert component is used to create various types of alerts in applications, providing a standardized way to display notifications</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ALERT" target="ALERT HEADING">
      <data key="d4">6.0</data>
      <data key="d5">The alert heading provides a title for the alert, enhancing the clarity of the message being conveyed</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ALERT" target="ALERT VARIATION">
      <data key="d4">7.0</data>
      <data key="d5">Different alert variations allow developers to customize the appearance and purpose of alerts in their applications</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ALERT" target="DISMISSIBLE ALERT">
      <data key="d4">6.0</data>
      <data key="d5">A dismissible alert allows users to close the alert, improving user experience by reducing clutter</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="ALERT" target="VIEW">
      <data key="d4">1.0</data>
      <data key="d5">Alerts can be contained within a View component for layout purposes in Amplify UI</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="ALERT" target="WARNING">
      <data key="d4">8.0</data>
      <data key="d5">The Warning alert is a specific type of Alert component in Amplify UI that conveys potential issues</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="ALERT" target="SUCCESS">
      <data key="d4">8.0</data>
      <data key="d5">The Success alert is a specific type of Alert component in Amplify UI that conveys successful operations</data>
      <data key="d6">c7af2749681510be539a408772ae1755</data>
    </edge>
    <edge source="FLEX" target="VIEW">
      <data key="d4">13.0</data>
      <data key="d5">Flex and View are components in Amplify UI that work together to create responsive layouts
The Flex component can be used within a View to create responsive layouts
View components can be arranged within Flex components to create responsive designs</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8,868b364b65a596f02a214b12ca0cbb6a,b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="FLEX" target="CUSTOM ERROR VIEW">
      <data key="d4">1.0</data>
      <data key="d5">Flex is used in the custom error view to create a responsive layout for displaying error messages</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="FLEX" target="SEARCHFIELD">
      <data key="d4">7.0</data>
      <data key="d5">Flex is used to arrange the SearchField component in a column layout, enhancing the user interface</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="FLEX" target="PHONE NUMBER FIELD">
      <data key="d4">28.0</data>
      <data key="d5">The Flex component is used to arrange the Phone Number Field in a column layout.
Flex is used to structure the layout of the Phone Number Field component in the user interface
The Phone Number Field is used within the Flex component to arrange UI elements in a structured layout
The Phone Number Field is contained within the Flex component, which organizes its layout</data>
      <data key="d6">27665866f8a25b886ee05eef06c3054c,582ef60010150eb5b063d4e027797a77,d449796d977ece5e8fa1202c70599e55,ddc8b27b83cca7d4613a25a5e5a519c9</data>
    </edge>
    <edge source="FLEX" target="PASSWORD FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The PasswordField is contained within the Flex component, which manages its layout and positioning</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="FLEX" target="FIELDSET">
      <data key="d4">12.0</data>
      <data key="d5">Fieldset uses the Flex component for layout, allowing for control over the direction and alignment of its content
Fieldset can be used within a Flex component to create a responsive layout for grouped form elements</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7,72f7bd8a9eb9039eabf2d7d1ff4c9601</data>
    </edge>
    <edge source="FLEX" target="DROPZONE">
      <data key="d4">5.0</data>
      <data key="d5">The DropZone component uses Flex to arrange its child components</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="FLEX" target="TABS COMPONENT">
      <data key="d4">5.0</data>
      <data key="d5">Flex is often used in conjunction with the Tabs component to create responsive layouts</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="FLEX" target="MENU">
      <data key="d4">7.0</data>
      <data key="d5">Flex is used to arrange the Menu component and its items in a flexible layout</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="FLEX" target="DIVIDER">
      <data key="d4">6.0</data>
      <data key="d5">Flex can be used to arrange Divider components between other components</data>
      <data key="d6">6264f18714899ee18445e9c4535f5ff2</data>
    </edge>
    <edge source="FLEX" target="HEADING">
      <data key="d4">1.0</data>
      <data key="d5">Flex can contain Heading components to organize content hierarchically</data>
      <data key="d6">6264f18714899ee18445e9c4535f5ff2</data>
    </edge>
    <edge source="GRID" target="VIEW">
      <data key="d4">1.0</data>
      <data key="d5">Views can be used to create grid layouts for organizing multiple components</data>
      <data key="d6">e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="THEME OBJECT" target="DESIGN TOKEN">
      <data key="d4">8.0</data>
      <data key="d5">The Theme object contains design tokens that can be used for consistent styling in Amplify UI</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="THEME OBJECT" target="DYNAMIC UPDATES">
      <data key="d4">1.0</data>
      <data key="d5">Dynamic updates can be applied to the Theme object to change the appearance of components in real-time</data>
      <data key="d6">155e5b639ff1fbe14e9b7c7375cf5e03</data>
    </edge>
    <edge source="VIEW" target="SIZE STYLES">
      <data key="d4">6.0</data>
      <data key="d5">Size styles are applied to views to control their dimensions in the UI</data>
      <data key="d6">e7727282a239fcb7a1e69d029f0709ba</data>
    </edge>
    <edge source="VIEW" target="TIME">
      <data key="d4">1.0</data>
      <data key="d5">View components can change styles based on time, specifically when the viewport is resized</data>
      <data key="d6">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="VIEW" target="USEBREAKPOINTVALUE">
      <data key="d4">1.0</data>
      <data key="d5">The useBreakpointValue hook can be used within View components to change styles responsively</data>
      <data key="d6">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="VIEW" target="AUTOCOMPLETE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete component is structured using View to manage layout and styling</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="VIEW" target="MENU">
      <data key="d4">8.0</data>
      <data key="d5">View components can be used to contain Menu components, providing layout and styling
View serves as a container for the Menu component, allowing for layout and styling</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1,c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="VIEW" target="SECTION">
      <data key="d4">7.0</data>
      <data key="d5">View can render a section element, which is used to group related content</data>
      <data key="d6">56553341236a20419cc336c60c2bed04</data>
    </edge>
    <edge source="VIEW" target="PROGRESS">
      <data key="d4">7.0</data>
      <data key="d5">View can render a progress element, which indicates the progress of a task</data>
      <data key="d6">56553341236a20419cc336c60c2bed04</data>
    </edge>
    <edge source="CSS VARIABLES" target="THEMING">
      <data key="d4">1.0</data>
      <data key="d5">CSS Variables are utilized in theming to create customizable styles for the UI components</data>
      <data key="d6">d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="CSS VARIABLES" target="THEME">
      <data key="d4">8.0</data>
      <data key="d5">CSS Variables can be used to customize the theme of the application, providing a consistent styling approach
CSS variables are used to define and manage the styling aspects of a Theme in a more flexible way</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </edge>
    <edge source="CSS VARIABLES" target="FIELDSET">
      <data key="d4">4.0</data>
      <data key="d5">CSS Variables can be used to style Fieldset components globally, ensuring a consistent design</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="CSS VARIABLES" target="DROPZONE">
      <data key="d4">1.0</data>
      <data key="d5">CSS variables can be used to style the DropZone component</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="CSS VARIABLES" target="GLOBAL STYLING">
      <data key="d4">6.0</data>
      <data key="d5">CSS Variables are utilized in Global Styling to customize the appearance of Tabs components</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="CSS VARIABLES" target="MENU">
      <data key="d4">5.0</data>
      <data key="d5">CSS Variables are used to define styles for the Menu component</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="BREADCRUMBS" target="CUSTOM SEPARATOR">
      <data key="d4">5.0</data>
      <data key="d5">Custom Separator is a feature that enhances the Breadcrumbs component by allowing users to define how links are separated</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="BREADCRUMBS" target="COMPOSABLE BREADCRUMBS">
      <data key="d4">1.0</data>
      <data key="d5">Composable Breadcrumbs allows for advanced customization of the Breadcrumbs component by exposing its sub-components</data>
      <data key="d6">88cf0bb9f01e55013ddfc8434b5c4f40</data>
    </edge>
    <edge source="BREADCRUMBS" target="BREADCRUMBS CONTAINER">
      <data key="d4">8.0</data>
      <data key="d5">The Breadcrumbs Container holds the Breadcrumbs component, providing a layout for the navigation links</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="BREADCRUMBS" target="DROPDOWN">
      <data key="d4">1.0</data>
      <data key="d5">Dropdowns can be integrated with Breadcrumbs to provide additional navigation options for users</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="AMPLIFY COMPONENTS">
      <data key="d4">2.0</data>
      <data key="d5">Amplify Components is a self-referential entity as it encompasses various components and styles within its own framework.
Amplify Components is a design system that includes various components and styles for UI development</data>
      <data key="d6">b70fb65718552c87abf647b6a6ff79e7,c1a6031416f64c80a84765d33eb17be4</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="COLOR">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components utilize various color schemes to enhance user interface design</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="BACKGROUND">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components allow customization of background styles for visual appeal</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="BORDER">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components provide options for border styles to define element boundaries</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="SHADOW">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components can apply shadow effects to create depth in the user interface</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="RADIUS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components support border radius styles for rounded corners</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="SPACE">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components use spacing utilities to maintain layout consistency</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="SUCCESS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Components provide success message styles to indicate positive outcomes</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="AMPLIFY COMPONENTS" target="WARNING">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Components include warning message styles to alert users</data>
      <data key="d6">37ea4ea73ecb3370ad928dc71b30f77f</data>
    </edge>
    <edge source="SUCCESS" target="DELETE USER">
      <data key="d4">9.0</data>
      <data key="d5">A Success event occurs when the account deletion is completed successfully</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="LABEL" target="SWITCHFIELD">
      <data key="d4">7.0</data>
      <data key="d5">label property provides context for the SwitchField, enhancing user experience</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="LABEL" target="STEPPERFIELD">
      <data key="d4">6.0</data>
      <data key="d5">The label provides context for the StepperField component, indicating its purpose</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="LABEL" target="PHONE NUMBER FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The Phone Number Field is associated with a Label that describes its purpose</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="LABEL" target="UX TIP">
      <data key="d4">1.0</data>
      <data key="d5">The UX Tip advises on the importance of keeping labels visible for user understanding</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="LABEL" target="PASSWORD FIELD">
      <data key="d4">18.0</data>
      <data key="d5">The Label component is used to provide a caption for the Password Field, improving accessibility and user experience.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="LABEL" target="FIELDSET">
      <data key="d4">6.0</data>
      <data key="d5">Fieldset can contain Label components to group related form controls, enhancing organization and accessibility.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="LABEL" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">The Input component is often paired with a Label to provide context for the data being entered, improving usability.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="LEGEND" target="FIELDSET">
      <data key="d4">8.0</data>
      <data key="d5">Legend is a key part of the Fieldset, providing a label for the grouped elements</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="RATING" target="RATING THEME EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">RatingThemeExample demonstrates the use of the Rating component with a custom theme</data>
      <data key="d6">52fc958abba47a16871f909ed3cc2d5a</data>
    </edge>
    <edge source="RATING" target="RATING STYLE COLOR EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">RatingStyleColorExample shows how to customize the color of the Rating component</data>
      <data key="d6">52fc958abba47a16871f909ed3cc2d5a</data>
    </edge>
    <edge source="RATING" target="RATING STYLE SIZE EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">RatingStyleSizeExample demonstrates how to customize the size of the Rating component</data>
      <data key="d6">52fc958abba47a16871f909ed3cc2d5a</data>
    </edge>
    <edge source="DISABLED" target="STEPPERFIELD">
      <data key="d4">6.0</data>
      <data key="d5">The disabled state indicates that the StepperField cannot be interacted with</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="DISABLED" target="CHECKBOXFIELD">
      <data key="d4">7.0</data>
      <data key="d5">A CheckboxField can be set to disabled, preventing user interaction</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="SECONDARY" target="AMPLIFY COLORS">
      <data key="d4">7.0</data>
      <data key="d5">Secondary is a color palette offered by Amplify Colors, used to complement primary colors in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="FIELDSET" target="INPUT">
      <data key="d4">6.0</data>
      <data key="d5">Fieldset can contain multiple Input components, grouping them together for better organization in forms.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="FIELDSET" target="CHECKBOXFIELD">
      <data key="d4">7.0</data>
      <data key="d5">Fieldset groups related CheckboxField components, providing a structured layout for form inputs</data>
      <data key="d6">72f7bd8a9eb9039eabf2d7d1ff4c9601</data>
    </edge>
    <edge source="FIELDSET" target="NAME ATTRIBUTE">
      <data key="d4">5.0</data>
      <data key="d5">The Name attribute is a property of the Fieldset that helps in identifying the grouped form controls</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="FIELDSET" target="LOCAL STYLING">
      <data key="d4">5.0</data>
      <data key="d5">Local styling can be applied to Fieldset components to customize their appearance individually</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="FIELDSET" target="GLOBAL STYLING">
      <data key="d4">4.0</data>
      <data key="d5">Global styling affects all Fieldset components, allowing for uniformity in design across the application</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="FIELDSET" target="ACCESSIBILITY">
      <data key="d4">7.0</data>
      <data key="d5">Fieldset components are designed with accessibility in mind, ensuring they are usable by all individuals</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="FIELDSET" target="FORM CONTROLS">
      <data key="d4">1.0</data>
      <data key="d5">Fieldset groups related form controls together, enhancing organization and usability</data>
      <data key="d6">5b0d50411f54d1ef65278d02161d11d7</data>
    </edge>
    <edge source="DROPDOWN" target="AMPLIFY CSS VARIABLES">
      <data key="d4">1.0</data>
      <data key="d5">Amplify CSS Variables can be used to customize the styling of the Dropdown component.</data>
      <data key="d6">e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="DROPZONE" target="FILE PICKER">
      <data key="d4">6.0</data>
      <data key="d5">The DropZone component can trigger a file picker event for users to select files</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="DROPZONE" target="ACCEPTED FILE TYPES">
      <data key="d4">5.0</data>
      <data key="d5">The DropZone component specifies accepted file types for uploads</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="DROPZONE" target="HIDDEN INPUT">
      <data key="d4">1.0</data>
      <data key="d5">The hidden input is used in the DropZone to facilitate file selection</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="DROPZONE" target="VISUALLY HIDDEN">
      <data key="d4">4.0</data>
      <data key="d5">The DropZone component includes a visually hidden input for file selection</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="DROPZONE" target="THEME">
      <data key="d4">5.0</data>
      <data key="d5">The appearance of the DropZone can be customized using a theme</data>
      <data key="d6">7668a790c01b22add1e76afc928004db</data>
    </edge>
    <edge source="DROPZONE" target="AMPLIFY CSS VARIABLES">
      <data key="d4">6.0</data>
      <data key="d5">Amplify CSS Variables can be used to customize the styling of the DropZone component.</data>
      <data key="d6">e6f9ca43dfb29c7478264e5ebadfca37</data>
    </edge>
    <edge source="ICON PROVIDER" target="REACT ICONS">
      <data key="d4">1.0</data>
      <data key="d5">An Icon Provider can include libraries like React Icons to offer a variety of icons for developers</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7</data>
    </edge>
    <edge source="PASSWORDFIELD" target="DEFAULTPASSWORDFIELD">
      <data key="d4">7.0</data>
      <data key="d5">DefaultPasswordFieldExample demonstrates the usage of the PasswordField component</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORDFIELD" target="HIDEPASSWORDFIELD">
      <data key="d4">7.0</data>
      <data key="d5">HidePasswordFieldExample shows how to implement the PasswordField with a hide/show feature</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORDFIELD" target="SIGNUPFORMEXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">SignUpFormExample uses the PasswordField component for user password input during registration</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORDFIELD" target="LOGINFORMEXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">LoginFormExample utilizes the PasswordField component for user password input during login</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORDFIELD" target="CHANGEPASSWORDFORMEXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">ChangePasswordFormExample employs multiple PasswordField components for changing passwords</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="SEARCHFIELD" target="STYLER">
      <data key="d4">7.0</data>
      <data key="d5">Styler is used to customize the appearance of the SearchField component in Amplify UI</data>
      <data key="d6">a8cc34c06c7b64595006afc28abc0ae2</data>
    </edge>
    <edge source="SEARCHFIELD" target="INPUT STYLES">
      <data key="d4">6.0</data>
      <data key="d5">Input styles are applied to the SearchField component to enhance its appearance and usability</data>
      <data key="d6">b48f64ddd27370c0d0a93447e796c6b3</data>
    </edge>
    <edge source="TOGGLE BUTTON" target="TOGGLE BUTTON GROUP">
      <data key="d4">8.0</data>
      <data key="d5">Toggle Buttons are part of a Toggle Button Group, allowing users to select a single option among multiple choices.</data>
      <data key="d6">717f3b1fb6a6ce86c291aca158771f33</data>
    </edge>
    <edge source="HEADING" target="HEADING LEVEL">
      <data key="d4">6.0</data>
      <data key="d5">The Heading component can render different heading levels, which are defined as h1 to h6.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe</data>
    </edge>
    <edge source="HEADING" target="TRUNCATE">
      <data key="d4">5.0</data>
      <data key="d5">The truncate feature is a property of the Heading component that manages text overflow.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="NEUTRAL">
      <data key="d4">7.0</data>
      <data key="d5">Neutral is a color palette provided by Amplify Colors, used to balance vibrant colors in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="RED">
      <data key="d4">7.0</data>
      <data key="d5">Red is a color palette available through Amplify Colors, used to attract attention in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="ORANGE">
      <data key="d4">7.0</data>
      <data key="d5">Orange is a color palette offered by Amplify Colors, used to convey warmth in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="YELLOW">
      <data key="d4">7.0</data>
      <data key="d5">Yellow is a color palette provided by Amplify Colors, often used to evoke happiness in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="GREEN">
      <data key="d4">7.0</data>
      <data key="d5">Green is a color palette available through Amplify Colors, representing nature in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="TEAL">
      <data key="d4">1.0</data>
      <data key="d5">Teal is a color palette offered by Amplify Colors, used for a calming effect in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS PURPLE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Purple is a color palette offered by Amplify Colors, used to represent creativity in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS NEUTRAL">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Neutral is a color palette provided by Amplify Colors, used to create balance in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS RED">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Red is a color palette available through Amplify Colors, used to create emphasis in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS ORANGE">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Orange is a color palette offered by Amplify Colors, used to convey warmth in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS YELLOW">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Yellow is a color palette provided by Amplify Colors, often used to evoke happiness in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS GREEN">
      <data key="d4">7.0</data>
      <data key="d5">Amplify Colors Green is a color palette available through Amplify Colors, representing nature in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="AMPLIFY COLORS" target="AMPLIFY COLORS TEAL">
      <data key="d4">1.0</data>
      <data key="d5">Amplify Colors Teal is a color palette offered by Amplify Colors, used for a calming effect in design.</data>
      <data key="d6">0da6e011044a4da218e7ece5a6f2460c</data>
    </edge>
    <edge source="ORANGE" target="FRUITS">
      <data key="d4">7.0</data>
      <data key="d5">Orange is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="ORANGE" target="AUTOCOMPLETE">
      <data key="d4">7.0</data>
      <data key="d5">Orange is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="HEADING TEXT" target="FONT WEIGHTS">
      <data key="d4">6.0</data>
      <data key="d5">Heading Text can be styled using various font weights defined in the Amplify UI typography tokens.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="HEADING TEXT" target="FONT SIZES">
      <data key="d4">1.0</data>
      <data key="d5">Heading Text can be styled using various font sizes defined in the Amplify UI typography tokens.</data>
      <data key="d6">f2b0e5018ea1044f912de4effd351e65</data>
    </edge>
    <edge source="FONT WEIGHTS" target="DEFAULT THEME">
      <data key="d4">8.0</data>
      <data key="d5">Font Weights are defined as part of the Default Theme in Amplify UI</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="FONT SIZES" target="DEFAULT THEME">
      <data key="d4">8.0</data>
      <data key="d5">Font Sizes are defined as part of the Default Theme in Amplify UI</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="DEFAULT THEME" target="BASE TOKENS">
      <data key="d4">7.0</data>
      <data key="d5">Base Tokens are referenced within the Default Theme to define design properties</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="DEFAULT THEME" target="LINE HEIGHTS">
      <data key="d4">8.0</data>
      <data key="d5">Line Heights are defined as part of the Default Theme in Amplify UI</data>
      <data key="d6">18256f324d7f8fc0edac5bbf717bf76d</data>
    </edge>
    <edge source="DEFAULT THEME" target="MY THEME">
      <data key="d4">6.0</data>
      <data key="d5">My Theme is built upon the Default Theme, allowing for customization and extension of the base theme</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="BASE TOKENS" target="DESIGN TOKENS">
      <data key="d4">8.0</data>
      <data key="d5">Base Tokens are a part of the Design Tokens system used to store design decisions in Amplify UI</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="BASE TOKENS" target="TOKEN DEFINITIONS">
      <data key="d4">7.0</data>
      <data key="d5">Token Definitions follow a consistent pattern when defining the structure of Base Tokens in Amplify UI</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="RESPONSIVE DESIGN" target="BREAKPOINTS">
      <data key="d4">7.0</data>
      <data key="d5">Responsive design utilizes breakpoints to determine how layouts should adapt at different screen sizes</data>
      <data key="d6">b0fc4cd8b01ddce0c70025c48b34ca98</data>
    </edge>
    <edge source="BREAKPOINTS" target="MY THEME">
      <data key="d4">7.0</data>
      <data key="d5">Breakpoints are defined within My Theme to manage responsive design effectively</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="BREAKPOINTS" target="CSS MEDIA QUERIES">
      <data key="d4">1.0</data>
      <data key="d5">CSS Media Queries are used in conjunction with Breakpoints to apply specific styles based on screen size</data>
      <data key="d6">877a7ccbdb63a00477117db13eba1534</data>
    </edge>
    <edge source="THEME" target="STEPPERFIELD">
      <data key="d4">7.0</data>
      <data key="d5">The theme customizes the visual appearance of the StepperField component</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="THEME" target="SLIDERFIELD">
      <data key="d4">7.0</data>
      <data key="d5">SliderField can be customized using a Theme to change its appearance</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="THEME" target="MESSAGE COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The Message component can be customized using different themes to change its appearance.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="THEME" target="HEADING THEME SOURCE">
      <data key="d4">1.0</data>
      <data key="d5">The heading theme source is part of the theme configuration that defines styles for the Heading component.</data>
      <data key="d6">0f0c3a1733d9928c7207a0931e147afe</data>
    </edge>
    <edge source="FILELIST" target="FILELISTHEADER">
      <data key="d4">5.0</data>
      <data key="d5">The FileListHeader is displayed above the FileList to provide context for the files being uploaded</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="FILELIST" target="FILELISTFOOTER">
      <data key="d4">5.0</data>
      <data key="d5">The FileListFooter is displayed below the FileList to provide additional information about the upload process</data>
      <data key="d6">ed2556eb80070ec113486cef81f33019</data>
    </edge>
    <edge source="DICTIONARY" target="FACELIVENESSDETECTOR">
      <data key="d4">8.0</data>
      <data key="d5">The dictionary provides the necessary translations for the FaceLivenessDetector's user interface</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="DIVIDER" target="AUTOCOMPLETE">
      <data key="d4">1.0</data>
      <data key="d5">The Autocomplete menu can include Dividers to separate different sections of options</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="DIVIDER" target="MENU">
      <data key="d4">7.0</data>
      <data key="d5">Divider components are used within a Menu to visually separate MenuItem components</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1</data>
    </edge>
    <edge source="DIVIDER" target="DASHED">
      <data key="d4">6.0</data>
      <data key="d5">Dashed is a border style that can be applied to the Divider component in Amplify UI</data>
      <data key="d6">e3c4629b893f38a9c103147f3ea608f3</data>
    </edge>
    <edge source="CLEAR FILES" target="STORAGE MANAGER COMPONENT">
      <data key="d4">7.0</data>
      <data key="d5">The Clear Files event is triggered by the Button within the Storage Manager Component</data>
      <data key="d6">d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="CUSTOM REF HANDLE" target="STORAGE MANAGER COMPONENT">
      <data key="d4">6.0</data>
      <data key="d5">The Custom Ref Handle is a feature of the Storage Manager Component that allows for clearing files</data>
      <data key="d6">d700fb2336ddc0a563736b65003c9d4f</data>
    </edge>
    <edge source="MYTHEME" target="FONT TOKENS">
      <data key="d4">6.0</data>
      <data key="d5">Font Tokens are included in MyTheme to specify the font styles used in Amplify UI components</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="DESIGN TOKENS" target="BUTTON COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">Design Tokens are used to define the styling properties for the Button Component in Amplify UI</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="FONT TOKENS" target="PRIMARY FONT STACK">
      <data key="d4">1.0</data>
      <data key="d5">Primary Font Stack is defined within Font Tokens to provide a default font style for components</data>
      <data key="d6">f6421de6d362747d50f273057f0bcb55</data>
    </edge>
    <edge source="INAPPMSGPROVIDER" target="USE IN-APP MESSAGING">
      <data key="d4">7.0</data>
      <data key="d5">useInAppMessaging is utilized within InAppMessagingProvider to access messaging context</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="MESSAGE COMPONENTS" target="BANNER MESSAGE">
      <data key="d4">6.0</data>
      <data key="d5">Banner Message is a specific type of Message Component used in in-app messaging</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="MESSAGE COMPONENTS" target="FULLSCREEN MESSAGE">
      <data key="d4">6.0</data>
      <data key="d5">FullScreen Message is another type of Message Component used in in-app messaging</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="MESSAGE COMPONENTS" target="MODAL MESSAGE">
      <data key="d4">6.0</data>
      <data key="d5">Modal Message is a type of Message Component that displays messages in a modal format</data>
      <data key="d6">3a9b26a380534d4aa1f17290c51aea24</data>
    </edge>
    <edge source="STORAGE IMAGE" target="FALLBACK IMAGE">
      <data key="d4">6.0</data>
      <data key="d5">Fallback Image is used in the Storage Image component to provide an alternative when the main image fails to load</data>
      <data key="d6">515a9fba2517051a51ebb09f8a2c2b06</data>
    </edge>
    <edge source="AMPLIFY UI GEO" target="MAPVIEW">
      <data key="d4">9.0</data>
      <data key="d5">MapView is a key component of Amplify UI Geo that provides interactive mapping capabilities</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="MAPVIEW" target="INITIAL VIEWPORT">
      <data key="d4">8.0</data>
      <data key="d5">Initial Viewport is a property of the MapView component that determines the map's starting view</data>
      <data key="d6">b453ff9e225c4008acb26b7c1bf321dd</data>
    </edge>
    <edge source="MAPVIEW" target="LOCATIONSEARCH">
      <data key="d4">15.0</data>
      <data key="d5">LocationSearch is a child component of MapView, providing location search capabilities within the map interface
MapView and LocationSearch are both components from the @aws-amplify/ui-react-geo library used for displaying maps and searching locations</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3,e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="MAPVIEW" target="MAPLIBRE-GL">
      <data key="d4">1.0</data>
      <data key="d5">Maplibre-gl provides the mapping capabilities that the MapView component relies on</data>
      <data key="d6">480e2412619ad09a750dc16a3f8ceab3</data>
    </edge>
    <edge source="MAPVIEW" target="UI REACT">
      <data key="d4">6.0</data>
      <data key="d5">The UI React library includes the MapView component for rendering maps</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="LOCATIONSEARCH" target="UI REACT">
      <data key="d4">6.0</data>
      <data key="d5">The UI React library includes the LocationSearch component for searching locations</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="FACE LIVENESS TROUBLESHOOTING">
      <data key="d4">6.0</data>
      <data key="d5">Face Liveness Troubleshooting provides solutions for issues encountered with the Face Liveness Detector component.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="FACE LIVENESS CHECK">
      <data key="d4">8.0</data>
      <data key="d5">Face Liveness Check is performed using the Face Liveness Detector component to ensure user authenticity.</data>
      <data key="d6">995b90fa5ccd54a921a730cc91487965</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="CUSTOM ERROR VIEW">
      <data key="d4">7.0</data>
      <data key="d5">The custom error view is a feature within the Face Liveness Detector that allows for personalized error handling</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="SYSTEM CLOCK OFFSET">
      <data key="d4">6.0</data>
      <data key="d5">System Clock Offset is a configuration option that can be used within the Face Liveness Detector to ensure accurate timing</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="TENSORFLOW">
      <data key="d4">25.0</data>
      <data key="d5">Face Liveness Detector utilizes TensorFlow for its machine learning capabilities to analyze facial data
TensorFlow is used to build and train the models that power the Face Liveness Detector
The Face Liveness Detector uses TensorFlow for its machine learning capabilities</data>
      <data key="d6">45bc04c1106dd47dcfb887084a04fd7b,95c47d77c6b1c1b930bbbff2c9d1facf,c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="CHANGE PASSWORD">
      <data key="d4">7.0</data>
      <data key="d5">Face Liveness Detector is used in the context of secure password changes to ensure the user is present and not using a static image</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="BINARY PATH">
      <data key="d4">7.0</data>
      <data key="d5">The binary path is required for the Face Liveness Detector to locate the necessary .wasm files for execution</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="FACE MODEL URL">
      <data key="d4">8.0</data>
      <data key="d5">The face model URL is essential for the Face Liveness Detector to access the model.json file for face detection</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="FACE LIVENESS DETECTOR" target="BLAZEFACE">
      <data key="d4">7.0</data>
      <data key="d5">The Face Liveness Detector utilizes Blazeface for efficient face detection</data>
      <data key="d6">95c47d77c6b1c1b930bbbff2c9d1facf</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="REKOGNITION">
      <data key="d4">9.0</data>
      <data key="d5">FaceLivenessDetector relies on Rekognition for performing face liveness checks</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="LIVENESSSTACK">
      <data key="d4">5.0</data>
      <data key="d5">LivenessStack is created to manage the processes involved in FaceLivenessDetector</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="US-EAST-1">
      <data key="d4">5.0</data>
      <data key="d5">FaceLivenessDetector can be deployed in the US-East-1 region of AWS for hosting services</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="DARK THEME">
      <data key="d4">6.0</data>
      <data key="d5">The dark theme can be applied to the FaceLivenessDetector to enhance its visual presentation</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="CUSTOMIZATION">
      <data key="d4">1.0</data>
      <data key="d5">Customization allows users to modify the FaceLivenessDetector's settings and appearance</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="TOGGLEBUTTONGROUP">
      <data key="d4">7.0</data>
      <data key="d5">ToggleButtonGroup is used within the FaceLivenessDetector to allow users to select their language preference</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="LANGUAGE">
      <data key="d4">5.0</data>
      <data key="d5">Language selection affects the display text of the FaceLivenessDetector</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="PHOTOSENSITIVITY WARNING">
      <data key="d4">6.0</data>
      <data key="d5">Photosensitivity Warning is an important notification that is part of the FaceLivenessDetector's user interface</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="FACELIVENESSDETECTOR" target="ERROR VIEW">
      <data key="d4">1.0</data>
      <data key="d5">Error View is a component that handles error messages within the FaceLivenessDetector</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="BACKEND.TS" target="LIVENESS POLICY">
      <data key="d4">5.0</data>
      <data key="d5">Backend.ts file is used to create and manage the Liveness Policy for user access</data>
      <data key="d6">cb9405c9d1ffc30f045effa85b1e9e09</data>
    </edge>
    <edge source="DELETE USER" target="DELETE USER COMPONENTS">
      <data key="d4">6.0</data>
      <data key="d5">Delete User Components are used to customize the Delete User event interface</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="DELETE USER" target="DELETE BUTTON">
      <data key="d4">8.0</data>
      <data key="d5">The Delete Button is a component that triggers the Delete User event when clicked</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="DELETE USER" target="ERROR MESSAGE">
      <data key="d4">7.0</data>
      <data key="d5">Error Message displays when there is an issue during the Delete User event</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="DELETE USER" target="WARNING VIEW">
      <data key="d4">1.0</data>
      <data key="d5">Warning View prompts the user for confirmation before proceeding with the Delete User event</data>
      <data key="d6">530b644b2b2dcf37b1cde4a8c015083a</data>
    </edge>
    <edge source="ERROR MESSAGE" target="CHANGE PASSWORD COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Error Message component is utilized within the Change Password component to display errors</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37</data>
    </edge>
    <edge source="ERROR MESSAGE" target="STEPPERFIELD">
      <data key="d4">1.0</data>
      <data key="d5">An error message is associated with the StepperField to indicate validation issues</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="ERROR MESSAGE" target="VALIDATION ERROR">
      <data key="d4">2.0</data>
      <data key="d5">Error Message is displayed when a Validation Error occurs, informing the user of the issue
Error message is displayed when there is a validation error in the form</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e,e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="TOGGLEBUTTON" target="TOGGLEBUTTONGROUP">
      <data key="d4">6.0</data>
      <data key="d5">ToggleButton is a part of the ToggleButtonGroup, enabling users to switch between language options</data>
      <data key="d6">7562010f59ffaae90af6b15498cde84b</data>
    </edge>
    <edge source="TENSORFLOW" target="MODEL.JSON">
      <data key="d4">9.0</data>
      <data key="d5">Model.json is a key component in TensorFlow models, defining the structure of the machine learning model</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="TENSORFLOW" target="TENSORFLOW JS">
      <data key="d4">8.0</data>
      <data key="d5">TensorFlow.js is a library built on top of TensorFlow, enabling machine learning in JavaScript environments</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="MODEL.JSON" target="GROUP1-SHARD1OF1.BIN">
      <data key="d4">1.0</data>
      <data key="d5">Group1-shard1of1.bin is used alongside model.json to provide the necessary data for the machine learning model</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="MODEL.JSON" target="TAR FILE">
      <data key="d4">1.0</data>
      <data key="d5">The tar file contains the model.json file and other necessary components for deploying machine learning models</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="TFJS-BACKEND-WASM" target="TENSORFLOW JS">
      <data key="d4">8.0</data>
      <data key="d5">TFJS Backend WASM is a backend specifically designed for TensorFlow.js to enhance performance</data>
      <data key="d6">c760e7dac2a9e84cc56dd76bcd9dd97c</data>
    </edge>
    <edge source="CHANGE PASSWORD COMPONENT" target="PASSWORD FIELD">
      <data key="d4">9.0</data>
      <data key="d5">The Password Field is used within the Change Password component for user input</data>
      <data key="d6">a5e50f469dd57f00c706f3dcd5894c37</data>
    </edge>
    <edge source="PASSWORD FIELD" target="DEFAULT">
      <data key="d4">6.0</data>
      <data key="d5">Default is a standard variation of the PasswordField component</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORD FIELD" target="SMALL">
      <data key="d4">6.0</data>
      <data key="d5">Small is a size variation of the PasswordField component</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORD FIELD" target="LARGE">
      <data key="d4">6.0</data>
      <data key="d5">Large is a size variation of the PasswordField component</data>
      <data key="d6">3357299f904d0dd5b40c967c28b75149</data>
    </edge>
    <edge source="PASSWORD FIELD" target="CURRENT PASSWORD">
      <data key="d4">8.0</data>
      <data key="d5">The Current Password field is part of the password change process, requiring user input for verification</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="PASSWORD FIELD" target="NEW PASSWORD">
      <data key="d4">8.0</data>
      <data key="d5">The New Password field is essential for users to set a new password, directly related to the password change functionality</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="PASSWORD FIELD" target="CONFIRM PASSWORD">
      <data key="d4">8.0</data>
      <data key="d5">The Confirm Password field ensures that the new password is entered correctly by requiring a second input</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="PASSWORD FIELD" target="SHOW PASSWORD BUTTON">
      <data key="d4">1.0</data>
      <data key="d5">The Show Password Button interacts with the PasswordField to toggle the visibility of the password input</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="PASSWORD FIELD" target="VALIDATION ERROR">
      <data key="d4">7.0</data>
      <data key="d5">Validation Error is triggered when the input in the Password Field does not meet the required criteria</data>
      <data key="d6">e9839e578f896e0d269ce78abd50bae3</data>
    </edge>
    <edge source="PASSWORD FIELD" target="PASSWORD FIELD THEME EXAMPLE">
      <data key="d4">12.0</data>
      <data key="d5">The Password Field Theme Example demonstrates the usage of the Password Field component in a themed context.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="PASSWORD FIELD" target="PASSWORD FIELD ICON EXAMPLE">
      <data key="d4">12.0</data>
      <data key="d5">The Password Field Icon Example showcases the Password Field component with custom icons for enhanced functionality.</data>
      <data key="d6">5c2098e04771d356430a7ff2887e471b</data>
    </edge>
    <edge source="SIGN UP" target="FAMILY NAME">
      <data key="d4">9.0</data>
      <data key="d5">Family Name is a required field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="SIGN UP" target="PREFERRED USERNAME">
      <data key="d4">9.0</data>
      <data key="d5">Preferred Username is a required field in the Sign Up process for user registration.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="SIGN UP" target="CONFIRM PASSWORD">
      <data key="d4">9.0</data>
      <data key="d5">Confirm Password is a required field in the Sign Up process to verify the user's password.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="SIGN UP" target="DIAL CODE">
      <data key="d4">8.0</data>
      <data key="d5">Dial Code is used in the Sign Up process to specify the user's country code for their phone number.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="SIGN UP" target="DIAL CODE LIST">
      <data key="d4">1.0</data>
      <data key="d5">Dial Code List provides users with options for selecting their country code during the Sign Up process.</data>
      <data key="d6">a31ec7e4bd06590a0d36f19c433d4801</data>
    </edge>
    <edge source="TERMS AND CONDITIONS" target="CHECKBOXFIELD">
      <data key="d4">1.0</data>
      <data key="d5">CheckboxField is used to confirm agreement to the terms and conditions</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="DEFAULT VALUES" target="SIGN UP PAGE">
      <data key="d4">1.0</data>
      <data key="d5">Default Values are used in the Sign Up Page to provide pre-set labels for user input fields</data>
      <data key="d6">353184f9ee9fe27f7425aaec76c8a30a</data>
    </edge>
    <edge source="FORMFIELDS" target="DIAL CODE LIST">
      <data key="d4">6.0</data>
      <data key="d5">Dial Code List is part of the FormFields configuration for user authentication</data>
      <data key="d6">7d1946ff469243c820fe74fd26b68cbd</data>
    </edge>
    <edge source="DIAL CODE" target="COUNTRY CODE">
      <data key="d4">9.0</data>
      <data key="d5">Dial codes are associated with country codes for phone number formatting
A DIAL CODE corresponds to a specific COUNTRY CODE, allowing users to select the appropriate code for their location.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6,62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="DIAL CODE" target="DEFAULT DIAL CODE">
      <data key="d4">7.0</data>
      <data key="d5">The DEFAULT DIAL CODE is a specific instance of a DIAL CODE that is automatically selected in the Phone Number Field.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="DIAL CODE" target="PHONE NUMBER FIELD">
      <data key="d4">6.0</data>
      <data key="d5">The Phone Number Field includes a Dial Code feature for selecting country codes</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="DIAL CODE LIST" target="DIAL CODE SELECTOR">
      <data key="d4">9.0</data>
      <data key="d5">The Dial Code Selector uses the Dial Code List to present users with options for selecting their country dialing code.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="RATING COMPONENT" target="SVG ICON">
      <data key="d4">6.0</data>
      <data key="d5">The Rating component can utilize SVG icons to visually represent ratings, enhancing user interaction.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="CUSTOM ICON">
      <data key="d4">6.0</data>
      <data key="d5">The Rating component allows the use of custom icons to replace default icons, providing flexibility in design.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="CUSTOM EMPTY ICON">
      <data key="d4">1.0</data>
      <data key="d5">The Rating component can use a custom empty icon to visually differentiate between filled and empty states.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="FILL COLOR">
      <data key="d4">7.0</data>
      <data key="d5">The Rating component can utilize the fill color property to visually represent the filled ratings, enhancing user experience.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="EMPTY COLOR">
      <data key="d4">7.0</data>
      <data key="d5">The Rating component can utilize the empty color property to visually represent the unfilled ratings, providing clarity to users.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="RATING COLOR EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Rating Color Example illustrates the application of fill and empty colors in the Rating component, demonstrating customization options.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="RATING ICON EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Rating Icon Example shows how the Rating component can be customized with different icons, enhancing its visual appeal.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="RATING SVG EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Rating SVG Example demonstrates how to integrate custom SVG icons into the Rating component, allowing for unique designs.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="RATING COMPONENT" target="RATING EMPTY EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">The Rating Empty Example shows how to customize the Rating component with a different empty icon, providing design flexibility.</data>
      <data key="d6">45b6a1301b66ba89019d5c3ffc7ad54f</data>
    </edge>
    <edge source="CUSTOM ICON" target="PATH DATA">
      <data key="d4">7.0</data>
      <data key="d5">Custom icons are created using path data to define their shapes in SVG format</data>
      <data key="d6">05d21cc14ac859e5fc2002038fa7f6f7</data>
    </edge>
    <edge source="HIGHLIGHTMATCH" target="AUTOCOMPLETE">
      <data key="d4">7.0</data>
      <data key="d5">The Autocomplete feature uses HighlightMatch to emphasize user input in the suggestions</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="STRAWBERRY" target="FRUITS">
      <data key="d4">1.0</data>
      <data key="d5">Strawberry is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="STRAWBERRY" target="AUTOCOMPLETE">
      <data key="d4">1.0</data>
      <data key="d5">Strawberry is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="TABLECELL" target="TABLEHEAD">
      <data key="d4">9.0</data>
      <data key="d5">TableCell components are used within TableHead to define the headers for each column</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7</data>
    </edge>
    <edge source="TABLECELL" target="TABLEROW">
      <data key="d4">2.0</data>
      <data key="d5">TableCell components are used within TableRow to represent individual data points
TableCell is contained within the TableRow to represent individual cells of data</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </edge>
    <edge source="TABLEROW" target="TABLEBODY">
      <data key="d4">18.0</data>
      <data key="d5">TableRow components are contained within the TableBody, representing individual rows of data
TableRow is contained within the TableBody to represent individual rows</data>
      <data key="d6">887a21d9d2a5307a38fd1a7f57ebffa7,a016f0f03b4482ba0b2bdfb5ed16bd77</data>
    </edge>
    <edge source="TABLE BODY" target="TABLE ROW">
      <data key="d4">8.0</data>
      <data key="d5">Table Row is a part of the Table Body, representing individual data entries</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="TABLE ROW" target="TABLE CELL">
      <data key="d4">8.0</data>
      <data key="d5">Table Cell is contained within a Table Row, holding specific data for that row</data>
      <data key="d6">0e5a9687dbee50e7916d42244a756478</data>
    </edge>
    <edge source="ACCESSIBILITY" target="ARIA">
      <data key="d4">7.0</data>
      <data key="d5">Accessibility standards are often enhanced by using ARIA attributes in web applications.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="ACCESSIBILITY" target="VISUALLY HIDDEN">
      <data key="d4">1.0</data>
      <data key="d5">Visually hidden elements are used to improve accessibility for users with disabilities.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="FIORDLAND NATIONAL PARK" target="QUEENSTOWN">
      <data key="d4">8.0</data>
      <data key="d5">Fiordland National Park is located in proximity to Queenstown, making it a popular destination for adventure seekers visiting the area.
Fiordland National Park is located in proximity to Queenstown, making it a popular destination for adventure seekers visiting the area.</data>
      <data key="d6">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </edge>
    <edge source="FIORDLAND NATIONAL PARK" target="BAY OF ISLANDS">
      <data key="d4">6.0</data>
      <data key="d5">Both Fiordland National Park and Bay of Islands are notable tourist destinations in New Zealand, attracting visitors for their natural beauty.
Both Fiordland National Park and Bay of Islands are notable tourist destinations in New Zealand, attracting visitors for their natural beauty.</data>
      <data key="d6">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </edge>
    <edge source="BAY OF ISLANDS" target="QUEENSTOWN">
      <data key="d4">2.0</data>
      <data key="d5">Queenstown and Bay of Islands are both popular travel destinations in New Zealand, appealing to tourists for different types of experiences.
Queenstown and Bay of Islands are both popular travel destinations in New Zealand, known for their unique attractions and activities.</data>
      <data key="d6">9407846944c6c240683d183bb2ec7006,989f44e5f2ebd1d0e5bef1dca4500316</data>
    </edge>
    <edge source="BAY OF ISLANDS" target="AUCKLAND">
      <data key="d4">1.0</data>
      <data key="d5">Bay of Islands is located three hours north of Auckland, making Auckland a common starting point for visitors to the region.</data>
      <data key="d6">989f44e5f2ebd1d0e5bef1dca4500316</data>
    </edge>
    <edge source="ANDORRA" target="UNITED ARAB EMIRATES">
      <data key="d4">4.0</data>
      <data key="d5">Both Andorra and the United Arab Emirates are recognized sovereign states, contributing to global diversity
Both are recognized sovereign states, contributing to global diversity</data>
      <data key="d6">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ANDORRA" target="VIETNAM">
      <data key="d4">1.0</data>
      <data key="d5">Both are recognized nations with unique cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="AFGHANISTAN" target="ANTIGUA AND BARBUDA">
      <data key="d4">5.0</data>
      <data key="d5">Both Afghanistan and Antigua and Barbuda are countries, but they differ significantly in geography and culture
Both are countries with distinct cultural identities</data>
      <data key="d6">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="AFGHANISTAN" target="ANTARCTICA">
      <data key="d4">2.0</data>
      <data key="d5">Antarctica and Afghanistan are both significant in their own right, one as a continent and the other as a country</data>
      <data key="d6">3f96e4b8707eec081921835e3a3340e3</data>
    </edge>
    <edge source="AFGHANISTAN" target="ALBANIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ANGUILLA" target="ALBANIA">
      <data key="d4">5.0</data>
      <data key="d5">Anguilla and Albania are both recognized as territories or countries, but they are located in different parts of the world
Both are recognized territories with unique geographical features</data>
      <data key="d6">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ANGUILLA" target="ARMENIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized territories with unique geographical features</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ARMENIA" target="ANGOLA">
      <data key="d4">5.0</data>
      <data key="d5">Armenia and Angola are both countries, each with unique cultural and historical backgrounds
Both are countries with rich histories and cultural significance</data>
      <data key="d6">3f96e4b8707eec081921835e3a3340e3,845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ANGOLA" target="ANTARCTICA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with significant geographical importance</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ANTARCTICA" target="AUSTRALIA">
      <data key="d4">4.0</data>
      <data key="d5">Antarctica is geographically close to Australia, influencing its climate</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="AUSTRALIA" target="AUSTRIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries known for their unique cultural heritages</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="AUSTRIA" target="BAHAMAS">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with unique cultural heritages</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="BAHAMAS" target="BANGLADESH">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="BANGLADESH" target="BELGIUM">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct political systems</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="BELGIUM" target="BOLIVIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with unique cultural heritages</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="BOLIVIA" target="BRAZIL">
      <data key="d4">5.0</data>
      <data key="d5">Both are countries in South America sharing a border</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="BRAZIL" target="CANADA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with diverse landscapes and cultures</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="CANADA" target="CHILE">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with diverse landscapes and cultures</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="CHILE" target="CHINA">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with significant global influence</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="CHINA" target="COLOMBIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with significant global influence</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="COLOMBIA" target="COSTA RICA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries known for their biodiversity</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="COSTA RICA" target="CROATIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries known for their tourism industries</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="CROATIA" target="CUBA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with rich cultural histories</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="CUBA" target="DENMARK">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with unique cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="DENMARK" target="EGYPT">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct cultural heritages</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="EGYPT" target="FINLAND">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct cultural heritages</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="FINLAND" target="FRANCE">
      <data key="d4">5.0</data>
      <data key="d5">Both are countries in Europe with significant historical ties</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="FRANCE" target="GERMANY">
      <data key="d4">5.0</data>
      <data key="d5">Both are countries in Europe with significant historical ties</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="GERMANY" target="GREECE">
      <data key="d4">5.0</data>
      <data key="d5">Both are countries in Europe with significant historical ties</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="GREECE" target="HONDURAS">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with rich cultural histories</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="HONDURAS" target="INDIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with rich cultural histories</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="INDIA" target="INDONESIA">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries with large populations and diverse cultures</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="INDONESIA" target="IRELAND">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with unique cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="IRELAND" target="ISRAEL">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with unique cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ISRAEL" target="ITALY">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries known for their rich cultural heritage</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ITALY" target="JAPAN">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries known for their rich cultural heritage</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="JAPAN" target="MEXICO">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with significant cultural diversity</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="MEXICO" target="NIGERIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with significant cultural diversity</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="NIGERIA" target="NORWAY">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct geographical features</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="NORWAY" target="PAKISTAN">
      <data key="d4">3.0</data>
      <data key="d5">Both are recognized nations with distinct geographical features</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="PAKISTAN" target="PERU">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries known for their biodiversity</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="PERU" target="PHILIPPINES">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries known for their biodiversity</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="PHILIPPINES" target="PORTUGAL">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with rich histories and cultural significance</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="PORTUGAL" target="RUSSIA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with rich histories and cultural significance</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="RUSSIA" target="SOUTH AFRICA">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with diverse cultures and histories</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="SOUTH AFRICA" target="SPAIN">
      <data key="d4">3.0</data>
      <data key="d5">Both are countries with diverse cultures and histories</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="SPAIN" target="SWEDEN">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries in Europe known for their high quality of life</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="SWEDEN" target="SWITZERLAND">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries in Europe known for their high quality of life</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="SWITZERLAND" target="TURKEY">
      <data key="d4">5.0</data>
      <data key="d5">Both are recognized nations with significant historical ties</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="TURKEY" target="UNITED KINGDOM">
      <data key="d4">5.0</data>
      <data key="d5">Both are recognized nations with significant historical ties</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="UNITED KINGDOM" target="UNITED STATES">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries with significant global influence</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="UNITED STATES" target="VENEZUELA">
      <data key="d4">4.0</data>
      <data key="d5">Both are countries with significant global influence</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="VENEZUELA" target="VIETNAM">
      <data key="d4">1.0</data>
      <data key="d5">Both are recognized nations with unique cultural identities</data>
      <data key="d6">845e480750923a225e51bd70c09cf5e5</data>
    </edge>
    <edge source="ACCORDION" target="SECTION 1 TITLE">
      <data key="d4">5.0</data>
      <data key="d5">Section 1 title is part of the Accordion component, serving as a header for its content</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="ACCORDION" target="SECTION 2 TITLE">
      <data key="d4">5.0</data>
      <data key="d5">Section 2 title is part of the Accordion component, serving as a header for its content</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="ACCORDION" target="SECTION 3 TITLE">
      <data key="d4">1.0</data>
      <data key="d5">Section 3 title is part of the Accordion component, serving as a header for its content</data>
      <data key="d6">4c20122de1ca69ecf45662867d268049</data>
    </edge>
    <edge source="ACCORDION" target="EXPANDER">
      <data key="d4">11.0</data>
      <data key="d5">The Expander component has been replaced by the Accordion component in AWS Amplify UI v6, indicating a direct evolution in the UI framework.
Accordion and Expander are both UI components that manage the display of content, but with different default behaviors regarding item expansion</data>
      <data key="d6">94a4bc63d08f1f8dd8fa4630608aee68,f840bfd5a371f4a008e95cb3caeb95d6</data>
    </edge>
    <edge source="ACCORDION" target="TABS">
      <data key="d4">1.0</data>
      <data key="d5">Both Tabs and Accordion are UI components used for organizing content in a user-friendly manner</data>
      <data key="d6">f840bfd5a371f4a008e95cb3caeb95d6</data>
    </edge>
    <edge source="CSS STYLING" target="TEXTAREA FIELD">
      <data key="d4">6.0</data>
      <data key="d5">TextAreaField can be styled using CSS to enhance its appearance</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="CSS STYLING" target="SLIDERFIELD">
      <data key="d4">6.0</data>
      <data key="d5">CSS styling can be applied to the SliderField component to customize its appearance</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="TEXTAREAFIELD" target="LOREM IPSUM">
      <data key="d4">1.0</data>
      <data key="d5">Lorem Ipsum is often used as default text in TextAreaField examples</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="ROWS" target="TEXTAREA">
      <data key="d4">7.0</data>
      <data key="d5">The Rows property defines how many lines of text are visible in the TextAreaField</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="MAXLENGTH" target="TEXTAREA">
      <data key="d4">7.0</data>
      <data key="d5">The MaxLength property limits the number of characters that can be entered in the TextAreaField</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="DESCRIPTIVETEXT" target="TEXTAREA">
      <data key="d4">5.0</data>
      <data key="d5">DescriptiveText provides additional context for the TextAreaField</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="ISDISABLED" target="TEXTAREA">
      <data key="d4">4.0</data>
      <data key="d5">IsDisabled property determines if the TextAreaField is interactive</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="ISDISABLED" target="SWITCHFIELD">
      <data key="d4">6.0</data>
      <data key="d5">isDisabled property determines if the SwitchField can be toggled, affecting its usability</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="ISREADONLY" target="TEXTAREA">
      <data key="d4">4.0</data>
      <data key="d5">IsReadOnly property indicates if the TextAreaField can be edited</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="ISREQUIRED" target="TEXTAREA">
      <data key="d4">1.0</data>
      <data key="d5">IsRequired property specifies if the TextAreaField is mandatory</data>
      <data key="d6">229e08ddbc773881c8e1ca68ba06dea8</data>
    </edge>
    <edge source="TEXTAREA FIELD" target="VALIDATION ERROR">
      <data key="d4">7.0</data>
      <data key="d5">TextAreaField can display a validation error message if user input is invalid</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="VALIDATION ERROR" target="STEPPERFIELD">
      <data key="d4">5.0</data>
      <data key="d5">Validation errors are associated with the StepperField to indicate when user input is invalid</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="VALIDATION ERROR" target="SLIDERFIELD">
      <data key="d4">1.0</data>
      <data key="d5">SliderField can trigger a validation error if the input does not meet the specified criteria</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="VALIDATION ERROR" target="PHONE NUMBER FIELD">
      <data key="d4">1.0</data>
      <data key="d5">A validation error is triggered when the input in the Phone Number Field is incorrect</data>
      <data key="d6">f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="TEXT AREA FIELD THEME EXAMPLE" target="TEXT AREA FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The Text Area Field Theme Example shows how to customize the appearance of the TextAreaField component</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXT AREA FIELD STYLE PROPS EXAMPLE" target="TEXT AREA FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The Text Area Field Style Props Example illustrates how to apply styles to the TextAreaField component</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="TEXT AREA FIELD VALIDATION ERROR EXAMPLE" target="TEXT AREA FIELD">
      <data key="d4">7.0</data>
      <data key="d5">The Text Area Field Validation Error Example demonstrates the validation capabilities of the TextAreaField component</data>
      <data key="d6">98fcf483b563a8d8b54ee85b2f6fa533</data>
    </edge>
    <edge source="ONSELECT" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">The onSelect event handler is used with the Input component to manage text selection actions</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ONINPUT" target="INPUT">
      <data key="d4">9.0</data>
      <data key="d5">The onInput event handler is used with the Input component to provide immediate feedback during user input</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ONCOPY" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">The onCopy event handler is used with the Input component to track when text is copied</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ONPASTE" target="INPUT">
      <data key="d4">8.0</data>
      <data key="d5">The onPaste event handler is used with the Input component to manage pasted content</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="ONCUT" target="INPUT">
      <data key="d4">1.0</data>
      <data key="d5">The onCut event handler is used with the Input component to track when text is cut</data>
      <data key="d6">d862c0095587db23ca9388fe047e5de4</data>
    </edge>
    <edge source="SWITCHFIELD" target="SIZE">
      <data key="d4">5.0</data>
      <data key="d5">size property allows customization of the SwitchField's appearance based on user preference</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="SWITCHFIELD" target="LABELPOSITION">
      <data key="d4">5.0</data>
      <data key="d5">labelPosition property affects the layout of the SwitchField and its label, impacting design</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="SWITCHFIELD" target="ISLABELHIDDEN">
      <data key="d4">4.0</data>
      <data key="d5">isLabelHidden property allows for accessibility while keeping the UI clean</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="SWITCHFIELD" target="ERRORSTATE">
      <data key="d4">1.0</data>
      <data key="d5">Error state is linked to the SwitchField's validation, determining if the form can be submitted</data>
      <data key="d6">0d99e36510e5c37bedf99c81e8533dd1</data>
    </edge>
    <edge source="SIZE" target="LIQUID">
      <data key="d4">1.0</data>
      <data key="d5">The size of the painting 'Liquid' can be selected by the customer, influencing their purchase decision.</data>
      <data key="d6">572dad4fd5ef0bd88476a9904b6de46d</data>
    </edge>
    <edge source="STEPPERFIELD" target="STEP">
      <data key="d4">13.0</data>
      <data key="d5">Steps are actions that can be performed on the StepperField component to change its value
Step is an action that can be performed within the StepperField component</data>
      <data key="d6">40ccefaf714c8eadcebd508c051c9190,9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="STEPPERFIELD" target="READ-ONLY">
      <data key="d4">6.0</data>
      <data key="d5">The read-only state allows users to see the value but not change it</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="STEPPERFIELD" target="ICONS PROVIDER">
      <data key="d4">1.0</data>
      <data key="d5">Icons Provider customizes the icons used in the StepperField component</data>
      <data key="d6">9939322ca44e243575243bddd27bc126</data>
    </edge>
    <edge source="LOCAL STYLING" target="TABS COMPONENT">
      <data key="d4">1.0</data>
      <data key="d5">Local Styling can be applied to a specific Tabs Component to customize its appearance without affecting others</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="ICONS PROVIDER" target="MENU">
      <data key="d4">6.0</data>
      <data key="d5">IconsProvider allows for the customization of icons within the Menu component</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="FRUIT" target="BANANA">
      <data key="d4">9.0</data>
      <data key="d5">Banana is one of the options available for selection in the Fruit category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="FRUIT" target="CARROT">
      <data key="d4">9.0</data>
      <data key="d5">Carrot is one of the options available for selection in the Fruit category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="SLIDERFIELD" target="ACCESSIBILITY DEMO">
      <data key="d4">7.0</data>
      <data key="d5">The Accessibility Demo showcases the SliderField component while emphasizing accessibility features</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD ARIA EXAMPLE">
      <data key="d4">8.0</data>
      <data key="d5">The SliderField Aria Example uses the SliderField component to demonstrate the ariaValuetext attribute</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD FORM EXAMPLE">
      <data key="d4">9.0</data>
      <data key="d5">The SliderField Form Example incorporates the SliderField component within a form structure</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD ORIENTATION EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The SliderField Orientation Example modifies the SliderField component's orientation</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD ICONS EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">The SliderField Icons Example enhances the SliderField component by adding icons</data>
      <data key="d6">93e4ae7768c14468bccb3caa2eb8fb2b</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD FORMAT VALUE EXAMPLE">
      <data key="d4">5.0</data>
      <data key="d5">The SliderField Format Value Example demonstrates the use of the SliderField component</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="SLIDERFIELD" target="SLIDERFIELD VALIDATION EXAMPLE">
      <data key="d4">5.0</data>
      <data key="d5">The SliderField Validation Example illustrates how to implement validation for the SliderField component</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="SLIDERFIELD" target="TARGET CLASSES">
      <data key="d4">1.0</data>
      <data key="d5">Target classes are used to apply specific styles to the SliderField component elements</data>
      <data key="d6">395cfdedbdcedba18201a608511b9cc3</data>
    </edge>
    <edge source="SLIDERFIELD" target="STYLER">
      <data key="d4">7.0</data>
      <data key="d5">Styler is used to customize the appearance of the SliderField component in Amplify UI</data>
      <data key="d6">a8cc34c06c7b64595006afc28abc0ae2</data>
    </edge>
    <edge source="ANIMAL" target="DOG">
      <data key="d4">9.0</data>
      <data key="d5">Dog is one of the options available for selection in the Animal category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="ANIMAL" target="CAT">
      <data key="d4">9.0</data>
      <data key="d5">Cat is one of the options available for selection in the Animal category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="ANIMAL" target="BIRD">
      <data key="d4">9.0</data>
      <data key="d5">Bird is one of the options available for selection in the Animal category of the RadioGroupField</data>
      <data key="d6">bf223ba92c40347202f7dcf0e841b2ed</data>
    </edge>
    <edge source="BANANA" target="FRUITS">
      <data key="d4">7.0</data>
      <data key="d5">Banana is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="BANANA" target="AUTOCOMPLETE">
      <data key="d4">7.0</data>
      <data key="d5">Banana is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="DEFAULT" target="COUNTRY CODE">
      <data key="d4">7.0</data>
      <data key="d5">Country codes are often set as default settings in telecommunications systems</data>
      <data key="d6">8a15ba0e9c228225918d6207fc8b6a8d</data>
    </edge>
    <edge source="DEFAULT" target="LARGE">
      <data key="d4">5.0</data>
      <data key="d5">Default settings can be applied to large systems or databases</data>
      <data key="d6">8a15ba0e9c228225918d6207fc8b6a8d</data>
    </edge>
    <edge source="DEFAULT" target="SMALL">
      <data key="d4">5.0</data>
      <data key="d5">Default settings can also be applied to small systems or databases</data>
      <data key="d6">8a15ba0e9c228225918d6207fc8b6a8d</data>
    </edge>
    <edge source="DEFAULT" target="PHONE NUMBER FIELD">
      <data key="d4">1.0</data>
      <data key="d5">The Default setting of the Phone Number Field specifies the initial configuration for user input</data>
      <data key="d6">d449796d977ece5e8fa1202c70599e55</data>
    </edge>
    <edge source="PHONENUMBERFIELD" target="COUNTRY CODE">
      <data key="d4">8.0</data>
      <data key="d5">Country Code is a part of the PhoneNumberField component that allows users to select their country code</data>
      <data key="d6">6f822244ad945944fb292c514cfddc13</data>
    </edge>
    <edge source="PHONENUMBERFIELD" target="DEFAULTPHONENUMBERFIELD">
      <data key="d4">7.0</data>
      <data key="d5">The DefaultPhoneNumberFieldExample demonstrates how to use the PhoneNumberField component</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="PHONENUMBERFIELD" target="DIAL CODE SELECTOR">
      <data key="d4">6.0</data>
      <data key="d5">The dial code selector is a feature of the PhoneNumberField component</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="COUNTRY CODE" target="PHONE NUMBER FIELD">
      <data key="d4">24.0</data>
      <data key="d5">Country codes are utilized within the Phone Number Field to format phone numbers correctly
Country codes are utilized within the Phone Number Field to allow users to select their dialing code
The Country Code is associated with the Phone Number Field to ensure proper formatting</data>
      <data key="d6">b13ba75bb69bab84cc548bc3c7fdf65d,d449796d977ece5e8fa1202c70599e55,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="COUNTRY CODE" target="DIAL CODE SELECT">
      <data key="d4">2.0</data>
      <data key="d5">Country codes are the options available in the Dial Code Select for users to choose from.
The DIAL CODE SELECT allows users to choose from a list of COUNTRY CODES</data>
      <data key="d6">3c1da97b232e76bcfabe7b7c980f2a33,a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="DIAL CODE SELECTOR" target="COUNTRY CODE LIST">
      <data key="d4">5.0</data>
      <data key="d5">The country code list provides options for the dial code selector in the PhoneNumberField component</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="DIAL CODE SELECTOR" target="DIAL CODE NAME">
      <data key="d4">4.0</data>
      <data key="d5">The dial code name is used in form submissions related to the dial code selector</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="DIAL CODE SELECTOR" target="DIAL CODE LABEL">
      <data key="d4">4.0</data>
      <data key="d5">The dial code label is associated with the accessibility features of the dial code selector</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="DIAL CODE SELECTOR" target="ON DIAL CODE CHANGE">
      <data key="d4">1.0</data>
      <data key="d5">The on dial code change handler is linked to the functionality of the dial code selector</data>
      <data key="d6">62d6f0f965da0c44ef157072fc13a2ef</data>
    </edge>
    <edge source="DIAL CODE SELECTOR" target="PHONE NUMBER FIELD">
      <data key="d4">8.0</data>
      <data key="d5">The Phone Number Field includes a Dial Code Selector to allow users to choose their dialing code when entering a phone number.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="AUTO COMPLETE">
      <data key="d4">6.0</data>
      <data key="d5">The Auto Complete feature can be applied to the Phone Number Field to enhance user experience by suggesting previously entered phone numbers.</data>
      <data key="d6">079ee4d85f6e400435d903fa9074f9e6</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="ACCESSIBILITY EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Accessibility Example showcases the Phone Number Field component and its features</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="LABEL HIDDEN PROP">
      <data key="d4">5.0</data>
      <data key="d5">The Phone Number Field can utilize the Label Hidden Prop to enhance accessibility</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="FORM CONTROL ELEMENTS">
      <data key="d4">8.0</data>
      <data key="d5">The Phone Number Field is a type of Form Control Element used for user input</data>
      <data key="d6">e98b8a475f381672c863e04f0c9164d4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="DISABLED STATE">
      <data key="d4">12.0</data>
      <data key="d5">The disabled state is a property of the Phone Number Field that affects its usability</data>
      <data key="d6">b13ba75bb69bab84cc548bc3c7fdf65d</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="READONLY STATE">
      <data key="d4">7.0</data>
      <data key="d5">The readonly state is a property of the Phone Number Field that restricts user editing</data>
      <data key="d6">b13ba75bb69bab84cc548bc3c7fdf65d</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="IS REQUIRED PROP">
      <data key="d4">7.0</data>
      <data key="d5">The isRequired prop is applied to the Phone Number Field to enforce mandatory input</data>
      <data key="d6">582ef60010150eb5b063d4e027797a77</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="DISABLED FIELD">
      <data key="d4">5.0</data>
      <data key="d5">The disabled field state indicates that the Phone Number Field cannot be submitted</data>
      <data key="d6">582ef60010150eb5b063d4e027797a77</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="READONLY FIELD">
      <data key="d4">1.0</data>
      <data key="d5">The readonly field state indicates that the Phone Number Field can be viewed but not edited</data>
      <data key="d6">582ef60010150eb5b063d4e027797a77</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="PRIMARY PHONE NUMBER">
      <data key="d4">16.0</data>
      <data key="d5">The Primary Phone Number field is a specific instance of the Phone Number Field component, requiring user input
The primary phone number is collected through the Phone Number Field component</data>
      <data key="d6">ddc8b27b83cca7d4613a25a5e5a519c9,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="SECONDARY PHONE NUMBER">
      <data key="d4">9.0</data>
      <data key="d5">The Secondary Phone Number field is another instance of the Phone Number Field component, also requiring user input
The secondary phone number is collected through the Phone Number Field component</data>
      <data key="d6">ddc8b27b83cca7d4613a25a5e5a519c9,f40486f74b21c76bdd626978117ceeaf</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="VALIDATION ERROR EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Validation Error Example uses the Phone Number Field to demonstrate error handling</data>
      <data key="d6">52087f54ba341fa48453f206aca85fa0</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="REFS EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Refs Example utilizes the Phone Number Field to show how refs can be used in React components</data>
      <data key="d6">52087f54ba341fa48453f206aca85fa0</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="INPUT REF">
      <data key="d4">6.0</data>
      <data key="d5">Input Ref is used to manage the input value in the Phone Number Field component</data>
      <data key="d6">52087f54ba341fa48453f206aca85fa0</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="DIAL CODE REF">
      <data key="d4">1.0</data>
      <data key="d5">Dial Code Ref is used to manage the dial code selection in the Phone Number Field component</data>
      <data key="d6">52087f54ba341fa48453f206aca85fa0</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="DIAL CODE SELECT">
      <data key="d4">17.0</data>
      <data key="d5">The Dial Code Select is part of the Phone Number Field, allowing users to select their country code.
The PhoneNumberField includes a DIAL CODE SELECT component for choosing the country code</data>
      <data key="d6">3c1da97b232e76bcfabe7b7c980f2a33,a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="CUSTOM PHONENUMBERFIELD CLASS">
      <data key="d4">7.0</data>
      <data key="d5">The PhoneNumberField can be styled using the CUSTOM PHONENUMBERFIELD CLASS for specific visual modifications</data>
      <data key="d6">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="PHONE NUMBER INPUT">
      <data key="d4">8.0</data>
      <data key="d5">The PhoneNumberField includes a PHONE NUMBER INPUT for users to enter their phone numbers</data>
      <data key="d6">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="PHONE NUMBER FIELD CLASS">
      <data key="d4">7.0</data>
      <data key="d5">The PHONE NUMBER FIELD CLASS is used to apply specific styles to the PhoneNumberField component</data>
      <data key="d6">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="PHONE NUMBER FIELD" target="PHONE NUMBER FIELD STYLES">
      <data key="d4">1.0</data>
      <data key="d5">The visual appearance of the PhoneNumberField is determined by the PHONE NUMBER FIELD STYLES</data>
      <data key="d6">a81c0d0aaddd7802d779f9b4e516b6a4</data>
    </edge>
    <edge source="SIZE EXAMPLE" target="AWS AMPLIFY UI">
      <data key="d4">9.0</data>
      <data key="d5">The Size Example demonstrates the various components available in the AWS Amplify UI library.</data>
      <data key="d6">27665866f8a25b886ee05eef06c3054c</data>
    </edge>
    <edge source="NEW PASSWORD" target="DESCRIPTIVE TEXT">
      <data key="d4">6.0</data>
      <data key="d5">Descriptive Text provides guidance on the requirements for the New Password field, enhancing user understanding</data>
      <data key="d6">26dcbf3b494b9d9117cffa213b39f7cf</data>
    </edge>
    <edge source="CHECKBOXFIELD" target="INDETERMINATE">
      <data key="d4">6.0</data>
      <data key="d5">A CheckboxField can be in an indeterminate state, indicating mixed selections</data>
      <data key="d6">21ba26eef933ca84de0597d8f7c58f7e</data>
    </edge>
    <edge source="CHECKBOXFIELD" target="FORM INPUTS">
      <data key="d4">8.0</data>
      <data key="d5">CheckboxField is another type of form input that allows users to make selections</data>
      <data key="d6">b9eb6db49e67c5d8dd0f95139d465c50</data>
    </edge>
    <edge source="INPUT COMPONENT" target="FIRST NAME">
      <data key="d4">7.0</data>
      <data key="d5">The First Name label is associated with the Input component for collecting user input in forms.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="DEFAULT INPUT EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Default Input Example utilizes the Input component to demonstrate its usage in a form.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="INPUT SIZE EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Input Size Example showcases different sizes of the Input component in a React application.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="INPUT VARIATION EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Input Variation Example demonstrates the use of different styles for the Input component.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="INPUT STATES EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Input States Example illustrates how to manage the states of the Input component, such as disabled and readonly.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="DEFAULT REQUIRED INPUT EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Default Required Input Example shows how to implement a required field using the Input component.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="REQUIRED INPUT EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Required Input Example demonstrates how to indicate required fields using the Input component.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="INPUT COMPONENT" target="INPUT VALIDATION ERROR EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">The Input Validation Error Example shows how to handle validation errors with the Input component.</data>
      <data key="d6">da8a5f647964e74661f5f6b0ad4f6a74</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="AUTOCOMPLETE SIZE EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete Size Example utilizes the Autocomplete component to demonstrate size variations</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="AUTOCOMPLETE VARIATION EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete Variation Example utilizes the Autocomplete component to demonstrate different styles</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="AUTOCOMPLETE LOADING STATE EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete Loading State Example utilizes the Autocomplete component to show its loading behavior</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="AUTOCOMPLETE CUSTOM FILTERING EXAMPLE">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete Custom Filtering Example utilizes the Autocomplete component to demonstrate custom filtering</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="AUTOCOMPLETE WITH CUSTOM OPTIONS">
      <data key="d4">1.0</data>
      <data key="d5">The Autocomplete with Custom Options example utilizes the Autocomplete component to create custom options</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="CUSTOM OPTION">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete feature allows for custom options to be created by users</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="CUSTOM MENU">
      <data key="d4">6.0</data>
      <data key="d5">The Autocomplete feature can be customized with a custom menu for better user experience</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="CUSTOM EMPTY">
      <data key="d4">5.0</data>
      <data key="d5">The Autocomplete feature includes a custom empty state to inform users when no results are found</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="CUSTOM LOADING">
      <data key="d4">1.0</data>
      <data key="d5">The Autocomplete feature has a custom loading state to indicate when more results are being fetched</data>
      <data key="d6">d9a272b23f1d5cf3e9a9c6a2c79923b8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="CHERRY">
      <data key="d4">7.0</data>
      <data key="d5">Cherry is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="GRAPE">
      <data key="d4">7.0</data>
      <data key="d5">Grape is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="KIWIS">
      <data key="d4">7.0</data>
      <data key="d5">Kiwis is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="LEMON">
      <data key="d4">7.0</data>
      <data key="d5">Lemon is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="AUTOCOMPLETE" target="MANGO">
      <data key="d4">7.0</data>
      <data key="d5">Mango is one of the options available in the Autocomplete component</data>
      <data key="d6">4bc06a4de4b3d3bcc2e2a060955740c8</data>
    </edge>
    <edge source="FRUITS" target="CHERRY">
      <data key="d4">7.0</data>
      <data key="d5">Cherry is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="FRUITS" target="GRAPE">
      <data key="d4">7.0</data>
      <data key="d5">Grape is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="FRUITS" target="KIWIS">
      <data key="d4">7.0</data>
      <data key="d5">Kiwis is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="FRUITS" target="LEMON">
      <data key="d4">7.0</data>
      <data key="d5">Lemon is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="FRUITS" target="MANGO">
      <data key="d4">7.0</data>
      <data key="d5">Mango is a type of fruit that falls under the category of fruits</data>
      <data key="d6">dc6390225fe3f0ac45fe499769223228</data>
    </edge>
    <edge source="TABS" target="TAB 1">
      <data key="d4">8.0</data>
      <data key="d5">Tab 1 is part of the Tabs component and displays content when selected.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS" target="TAB 2">
      <data key="d4">8.0</data>
      <data key="d5">Tab 2 is part of the Tabs component and displays content when selected.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS" target="TAB 3">
      <data key="d4">1.0</data>
      <data key="d5">Tab 3 is part of the Tabs component and displays content when selected.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS" target="TABS THEME">
      <data key="d4">7.0</data>
      <data key="d5">Tabs can be customized using a Tabs Theme to change their appearance and styling</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="TABS" target="TABS COMPONENT">
      <data key="d4">8.0</data>
      <data key="d5">The Tabs Component is a specific implementation of the Tabs UI element that allows for content switching</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="TABS" target="TABS.CONTAINER">
      <data key="d4">8.0</data>
      <data key="d5">Tabs are contained within the Tabs.Container component, which manages their state and accessibility</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1</data>
    </edge>
    <edge source="TABS" target="TABS.LIST">
      <data key="d4">8.0</data>
      <data key="d5">Tabs are represented as items within the Tabs.List component</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1</data>
    </edge>
    <edge source="TABS" target="TABS.PANEL">
      <data key="d4">8.0</data>
      <data key="d5">Tabs correspond to specific content displayed in the Tabs.Panel component</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1</data>
    </edge>
    <edge source="TABS" target="MENU">
      <data key="d4">1.0</data>
      <data key="d5">Menu and Tabs are both components used for organizing content and actions in a user interface</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1</data>
    </edge>
    <edge source="TABS" target="RADIX">
      <data key="d4">6.0</data>
      <data key="d5">Tabs component is now fully composable and more lightweight after removing the Radix dependency</data>
      <data key="d6">f840bfd5a371f4a008e95cb3caeb95d6</data>
    </edge>
    <edge source="TABS COMPONENT" target="CONTROLLED TABS">
      <data key="d4">7.0</data>
      <data key="d5">Controlled Tabs is a specific implementation of the Tabs component that allows for programmatic control over tab selection</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="TABS COMPONENT" target="LAZY LOADING TABS">
      <data key="d4">7.0</data>
      <data key="d5">Lazy loading tabs is a feature of the Tabs component that optimizes content loading</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="TAB 2" target="CONTENT OF THE SECOND TAB">
      <data key="d4">8.0</data>
      <data key="d5">Tab 2 displays its corresponding content when selected in the Tabs component</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="TAB 3" target="CONTENT OF THE THIRD TAB">
      <data key="d4">1.0</data>
      <data key="d5">Tab 3 displays its corresponding content when selected in the Tabs component</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="CONTENT OF THE FIRST TAB" target="TAB 1">
      <data key="d4">8.0</data>
      <data key="d5">Tab 1 displays its corresponding content when selected in the Tabs component</data>
      <data key="d6">4ef2269a1b7af8535395e8de5c20722d</data>
    </edge>
    <edge source="TABS.LIST" target="TABS.CONTAINER">
      <data key="d4">9.0</data>
      <data key="d5">Tabs.List is contained within Tabs.Container, organizing the tabs for user interaction.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS.LIST" target="TABS.ITEM">
      <data key="d4">8.0</data>
      <data key="d5">Tabs.Item is part of Tabs.List, representing individual tabs that users can select.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS.LIST" target="INDICATOR POSITION">
      <data key="d4">6.0</data>
      <data key="d5">The indicator position prop is applied to Tabs.List to control the position of the tab border and current tab indicator.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS.ITEM" target="TABS.PANEL">
      <data key="d4">9.0</data>
      <data key="d5">Each Tabs.Item corresponds to a Tabs.Panel, displaying specific content when the tab is selected.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS.ITEM" target="DISABLED TABS">
      <data key="d4">1.0</data>
      <data key="d5">The isDisabled prop can be applied to Tabs.Item to make it non-clickable, as seen in Disabled Tabs example.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS.PANEL" target="TABS.CONTAINER">
      <data key="d4">8.0</data>
      <data key="d5">Tabs.Panel is part of the Tabs.Container, providing content for the selected tab.</data>
      <data key="d6">2730827c3a62362c95c2900ff92e0e93</data>
    </edge>
    <edge source="TABS CONTAINER" target="TABS LIST">
      <data key="d4">8.0</data>
      <data key="d5">Tabs List is contained within the Tabs Container, managing the tab items</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="TABS LIST" target="TABS ITEM">
      <data key="d4">9.0</data>
      <data key="d5">Tabs Item elements are part of the Tabs List, allowing users to select different tabs</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="TABS ITEM" target="TABS PANEL">
      <data key="d4">1.0</data>
      <data key="d5">Each Tabs Item corresponds to a Tabs Panel that displays the relevant content</data>
      <data key="d6">aef551a2d82854ae79259d42c965502f</data>
    </edge>
    <edge source="MENU" target="MENUITEM">
      <data key="d4">10.0</data>
      <data key="d5">MenuItem components are used within a Menu to represent selectable actions
Menu contains multiple MenuItems that represent different actions available to the user</data>
      <data key="d6">b4caad819b3245d1c7c01c198437baa1,c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="MENU" target="GLOBAL STYLING EXAMPLE">
      <data key="d4">4.0</data>
      <data key="d5">Global Styling Example demonstrates how to apply styles to the Menu component</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="MENU" target="LOCAL STYLING EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">Local Styling Example shows how to apply specific styles to the Menu component</data>
      <data key="d6">c6562553adf4b52a1a6eec1a462e147f</data>
    </edge>
    <edge source="MENU" target="MENU ITEM">
      <data key="d4">8.0</data>
      <data key="d5">Menu contains multiple MenuItems, each representing an action or navigation option for the user</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="MENU ITEM" target="MY DEMO LINK">
      <data key="d4">5.0</data>
      <data key="d5">My Demo Link is an example of a link that can be included as a MenuItem for user interaction</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="MENU ITEM" target="COPY">
      <data key="d4">6.0</data>
      <data key="d5">The Copy menu item allows users to duplicate content, showcasing an action available within the Menu</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="MENU ITEM" target="MARK AS DRAFT">
      <data key="d4">1.0</data>
      <data key="d5">Mark as Draft is another action available as a MenuItem, allowing users to save their work</data>
      <data key="d6">6f492ac78ca89b7028399a30a24b9dc6</data>
    </edge>
    <edge source="BREADCRUMBS ITEM" target="BREADCRUMBS CONTAINER">
      <data key="d4">7.0</data>
      <data key="d5">The Breadcrumbs Container contains multiple Breadcrumbs Items, each representing a different navigation link</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="BREADCRUMBS ITEM" target="BREADCRUMBS LINK">
      <data key="d4">9.0</data>
      <data key="d5">Each Breadcrumbs Item includes a Breadcrumbs Link that users can click to navigate to a specific page</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="BREADCRUMBS ITEM" target="BREADCRUMBS SEPARATOR">
      <data key="d4">6.0</data>
      <data key="d5">Breadcrumbs Items are separated by Breadcrumbs Separators to improve navigation clarity</data>
      <data key="d6">393aa2365a84cbbbeaa882f89f100b89</data>
    </edge>
    <edge source="MESSAGE COMPONENT" target="DISMISSIBLE MESSAGE">
      <data key="d4">8.0</data>
      <data key="d5">A dismissible message is a specific type of Message component that allows users to close it.</data>
      <data key="d6">6e82a6e0427e12aef8dafce9907f3835</data>
    </edge>
    <edge source="DEFAULT ALERT" target="INFO ALERT">
      <data key="d4">5.0</data>
      <data key="d5">The default alert can be customized to become an info alert by changing its variation</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="DEFAULT ALERT" target="ERROR ALERT">
      <data key="d4">5.0</data>
      <data key="d5">The default alert can be customized to become an error alert by changing its variation</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="DEFAULT ALERT" target="WARNING ALERT">
      <data key="d4">5.0</data>
      <data key="d5">The default alert can be customized to become a warning alert by changing its variation</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="DEFAULT ALERT" target="SUCCESS ALERT">
      <data key="d4">5.0</data>
      <data key="d5">The default alert can be customized to become a success alert by changing its variation</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="DISMISSIBLE ALERT" target="ON DISMISS">
      <data key="d4">1.0</data>
      <data key="d5">The onDismiss function is triggered when a dismissible alert is closed, allowing for tracking or other actions</data>
      <data key="d6">3bcd47a467bca8030037be27b1ae1b3e</data>
    </edge>
    <edge source="LINCOLN'S INN HALL" target="LORD CHANCELLOR">
      <data key="d4">8.0</data>
      <data key="d5">The Lord Chancellor sits in Lincoln's Inn Hall, which is a venue for legal proceedings and events.</data>
      <data key="d6">6dcdf6dcf7b1c6d0a0969f9399986850</data>
    </edge>
    <edge source="DEFAULT IMAGE EXAMPLE" target="MILFORD SOUND">
      <data key="d4">7.0</data>
      <data key="d5">The Default Image Example features an image of Milford Sound, showcasing its natural beauty</data>
      <data key="d6">6634963e5bc3eae8755d15393e4c9b71</data>
    </edge>
    <edge source="MILFORD SOUND" target="IMAGE OPTIMIZATION EXAMPLE">
      <data key="d4">7.0</data>
      <data key="d5">The Image Optimization Example uses an image of Milford Sound to demonstrate responsive image loading</data>
      <data key="d6">6634963e5bc3eae8755d15393e4c9b71</data>
    </edge>
    <edge source="MILFORD SOUND" target="IMAGE OBJECT FIT AND POSITION EXAMPLE">
      <data key="d4">1.0</data>
      <data key="d5">The Image Object Fit and Position Example includes an image of Milford Sound to illustrate image fitting techniques</data>
      <data key="d6">6634963e5bc3eae8755d15393e4c9b71</data>
    </edge>
    <edge source="PROCESS" target="GLOBAL">
      <data key="d4">4.0</data>
      <data key="d5">The global variable is used to define properties and methods that can be accessed throughout the Node.js process.</data>
      <data key="d6">64488fb4232e09664566b2ee3c00394a</data>
    </edge>
    <edge source="UI REACT" target="AMPLIFY NOTIFICATIONS">
      <data key="d4">6.0</data>
      <data key="d5">Amplify Notifications is a separate package that works alongside the UI React library to provide in-app messaging capabilities</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="INAPP MESSAGING PROVIDER" target="INAPP MESSAGE DISPLAY">
      <data key="d4">1.0</data>
      <data key="d5">InAppMessagingProvider provides the context for the InAppMessageDisplay component to function properly</data>
      <data key="d6">e99506740df57dd0a465425dd334652b</data>
    </edge>
    <edge source="AMPLIFY STUDIO" target="EVENT HANDLING">
      <data key="d4">7.0</data>
      <data key="d5">Event handling is a feature of Amplify Studio that allows developers to create interactive components</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="AMPLIFY STUDIO" target="DATA BINDING">
      <data key="d4">1.0</data>
      <data key="d5">Data binding is a capability in Amplify Studio that connects UI components to backend data</data>
      <data key="d6">7eb4739e8bed8bf13646d7e252c1ae14</data>
    </edge>
    <edge source="EFE KURNAZ" target="HALLWAY">
      <data key="d4">33.0</data>
      <data key="d5">Efe Kurnaz is the artist who created the painting 'Hallway'.
Efe Kurnaz is the artist who created the painting 'Hallway', which is a bestseller
Efe Kurnaz is the artist who created the painting 'Hallway'.
Efe Kurnaz's artwork is featured in the Hallway event, showcasing his artistic work.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf,aca6ad21122c65a602020d055257d45c,b394b4eeaf1a9df4b16937daeed33e3a,f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="PAWEL CZERWINSKI" target="FIRE AND ICE">
      <data key="d4">18.0</data>
      <data key="d5">Pawel Czerwinski is the artist who created the painting 'Fire and Ice'.
Pawel Czerwinski is the artist who created the painting 'Fire and Ice'.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf,f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="KSENIYA LAPTEVA" target="ORANGE, PINK, YELLOW">
      <data key="d4">26.0</data>
      <data key="d5">Kseniya Lapteva is the artist who created the painting 'Orange, pink, yellow'.
Kseniya Lapteva is the creator of the artwork 'Orange, pink, yellow'.
Kseniya Lapteva is the artist who created the painting 'Orange, pink, yellow'.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf,b63082a4254056f0cfd31b0b76d5e8cc,f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="KSENIYA LAPTEVA" target="ARTWORK">
      <data key="d4">7.0</data>
      <data key="d5">Kseniya Lapteva's artwork 'Orange, pink, yellow' is part of the collection of artworks.</data>
      <data key="d6">b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="HALLWAY" target="ABSTRACT ART">
      <data key="d4">6.0</data>
      <data key="d5">The painting 'Hallway' is an example of abstract art created by Efe Kurnaz.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf</data>
    </edge>
    <edge source="HALLWAY" target="BESTSELLER">
      <data key="d4">9.0</data>
      <data key="d5">The painting 'Hallway' has been designated as a bestseller due to its high sales volume</data>
      <data key="d6">b394b4eeaf1a9df4b16937daeed33e3a</data>
    </edge>
    <edge source="HALLWAY" target="PICKUP">
      <data key="d4">8.0</data>
      <data key="d5">The painting 'Hallway' is available for pickup within 2 hours after purchase</data>
      <data key="d6">b394b4eeaf1a9df4b16937daeed33e3a</data>
    </edge>
    <edge source="FIRE AND ICE" target="ABSTRACT ART">
      <data key="d4">6.0</data>
      <data key="d5">The painting 'Fire and Ice' is an example of abstract art created by Pawel Czerwinski.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf</data>
    </edge>
    <edge source="ORANGE, PINK, YELLOW" target="ABSTRACT ART">
      <data key="d4">1.0</data>
      <data key="d5">The painting 'Orange, pink, yellow' is an example of abstract art created by Kseniya Lapteva.</data>
      <data key="d6">3012140364ff4dc93ce2fc057a65a7bf</data>
    </edge>
    <edge source="SHOPPING CART" target="AMPLIFY UI REACT">
      <data key="d4">1.0</data>
      <data key="d5">The shopping cart component can be implemented using Amplify UI React for e-commerce applications.</data>
      <data key="d6">f638e8457654aac7a4dfb0263d5f8275</data>
    </edge>
    <edge source="MARIA ORLOVA" target="ARTWORK">
      <data key="d4">7.0</data>
      <data key="d5">Maria Orlova's artwork 'Melted Purple' is part of the collection of artworks.</data>
      <data key="d6">b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="MARIA ORLOVA" target="MELTED PURPLE">
      <data key="d4">16.0</data>
      <data key="d5">Maria Orlova is the creator of the artwork 'Melted Purple'.
Maria Orlova created the artwork titled 'Melted Purple'.</data>
      <data key="d6">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="BRUNO THETHE" target="ARTWORK">
      <data key="d4">7.0</data>
      <data key="d5">Bruno Thethe's artwork 'Experimental' is part of the collection of artworks.</data>
      <data key="d6">b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="FELIX SPISKE" target="ARTWORK">
      <data key="d4">7.0</data>
      <data key="d5">Felix Spiske's artwork 'Rainbow' is part of the collection of artworks.</data>
      <data key="d6">b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="FELIX SPISKE" target="RAINBOW">
      <data key="d4">16.0</data>
      <data key="d5">Felix Spiske is the creator of the artwork 'Rainbow'.
Felix Spiske created the artwork titled 'Rainbow'.</data>
      <data key="d6">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="RADIENTA" target="ARTWORK">
      <data key="d4">1.0</data>
      <data key="d5">Radienta's artwork 'Fearless Hue' is part of the collection of artworks.</data>
      <data key="d6">b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="RADIENTA" target="FEARLESS HUE">
      <data key="d4">9.0</data>
      <data key="d5">Radienta is the creator of the artwork 'Fearless Hue'.
Radienta created the artwork titled 'Fearless Hue'.</data>
      <data key="d6">21d3894179bf01562acf48f6a21c4d38,b63082a4254056f0cfd31b0b76d5e8cc</data>
    </edge>
    <edge source="JOEL FILIPE" target="LIQUID">
      <data key="d4">25.0</data>
      <data key="d5">Joel Filipe is the creator of the painting 'Liquid'.
Joel Filipe created the artwork titled 'Liquid'.
Joel Filipe is the creator of the painting 'Liquid'.</data>
      <data key="d6">21d3894179bf01562acf48f6a21c4d38,572dad4fd5ef0bd88476a9904b6de46d,721fd770afdaa7d57e5db2f788e375b2</data>
    </edge>
    <edge source="LIQUID" target="PAINTINGS">
      <data key="d4">9.0</data>
      <data key="d5">The painting 'Liquid' is part of the PAINTINGS collection available for sale.
The painting 'Liquid' is part of the PAINTINGS collection.</data>
      <data key="d6">572dad4fd5ef0bd88476a9904b6de46d,721fd770afdaa7d57e5db2f788e375b2</data>
    </edge>
    <edge source="LIQUID" target="FRAME">
      <data key="d4">6.0</data>
      <data key="d5">The painting 'Liquid' can be purchased with or without a frame, affecting its final presentation.</data>
      <data key="d6">572dad4fd5ef0bd88476a9904b6de46d</data>
    </edge>
    <edge source="LIQUID" target="QUANTITY">
      <data key="d4">5.0</data>
      <data key="d5">The quantity of the painting 'Liquid' can be specified by the customer during the purchase process.</data>
      <data key="d6">572dad4fd5ef0bd88476a9904b6de46d</data>
    </edge>
  </graph>
</graphml>